<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (1,188 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.17%)</title><rect x="10.0" y="883.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.17%)</title><rect x="10.0" y="867.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.17%)</title><rect x="10.0" y="851.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="10.0" y="835.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="11.0" y="835.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="11.0" y="819.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.08%)</title><rect x="11.0" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 1.68%)</title><rect x="12.0" y="883.0" width="19.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 1.60%)</title><rect x="12.0" y="867.0" width="18.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="14.0" y="851.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.59%)</title><rect x="15.0" y="851.0" width="6.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.25%)</title><rect x="16.0" y="835.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.0" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.08%)</title><rect x="18.9" y="835.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="18.9" y="819.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="18.9" y="803.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="21.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.17%)</title><rect x="19.9" y="835.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.76%)</title><rect x="21.9" y="851.0" width="9.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="24.9" y="862.0"></text>
</g>
<g>
<title>jfr_has_stacktrace_enabled(JfrEventId) (1 samples, 0.08%)</title><rect x="30.9" y="867.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="33.9" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.17%)</title><rect x="31.9" y="883.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.9" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.08%)</title><rect x="31.9" y="867.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="34.9" y="878.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.08%)</title><rect x="31.9" y="851.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="34.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="32.8" y="867.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="35.8" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="32.8" y="851.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.8" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.59%)</title><rect x="33.8" y="883.0" width="7.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="36.8" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="39.8" y="867.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="42.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.25%)</title><rect x="40.8" y="883.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="43.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="867.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="44.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="851.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="835.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="44.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="819.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="44.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="803.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="44.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="41.8" y="787.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="42.8" y="771.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="45.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="42.8" y="755.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="45.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="42.8" y="739.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="45.8" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.08%)</title><rect x="43.8" y="883.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (733 samples, 61.70%)</title><rect x="44.8" y="883.0" width="728.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.8" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (733 samples, 61.70%)</title><rect x="44.8" y="867.0" width="728.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.8" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (733 samples, 61.70%)</title><rect x="44.8" y="851.0" width="728.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.8" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.08%)</title><rect x="48.7" y="835.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.08%)</title><rect x="48.7" y="819.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.08%)</title><rect x="48.7" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.08%)</title><rect x="48.7" y="787.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.08%)</title><rect x="48.7" y="771.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.08%)</title><rect x="48.7" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (198 samples, 16.67%)</title><rect x="49.7" y="835.0" width="196.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.7" y="846.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (197 samples, 16.58%)</title><rect x="50.7" y="819.0" width="195.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.7" y="830.0">java/util/concurrent/Link..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (154 samples, 12.96%)</title><rect x="50.7" y="803.0" width="153.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.7" y="814.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.93%)</title><rect x="55.7" y="787.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.08%)</title><rect x="65.6" y="771.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.08%)</title><rect x="65.6" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.08%)</title><rect x="65.6" y="739.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.67%)</title><rect x="66.6" y="787.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.08%)</title><rect x="68.6" y="771.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.08%)</title><rect x="68.6" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.08%)</title><rect x="68.6" y="739.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="68.6" y="723.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="71.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="68.6" y="707.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="71.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.08%)</title><rect x="69.6" y="771.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.34%)</title><rect x="70.6" y="771.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.34%)</title><rect x="70.6" y="755.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (1 samples, 0.08%)</title><rect x="72.6" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.08%)</title><rect x="73.6" y="739.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.08%)</title><rect x="73.6" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.08%)</title><rect x="73.6" y="707.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (10 samples, 0.84%)</title><rect x="74.6" y="787.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.84%)</title><rect x="74.6" y="771.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.84%)</title><rect x="74.6" y="755.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.76%)</title><rect x="75.6" y="739.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.76%)</title><rect x="75.6" y="723.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.08%)</title><rect x="77.5" y="707.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="80.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.08%)</title><rect x="77.5" y="691.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="80.5" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.51%)</title><rect x="78.5" y="707.0" width="6.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="81.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.51%)</title><rect x="78.5" y="691.0" width="6.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="81.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.51%)</title><rect x="78.5" y="675.0" width="6.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.42%)</title><rect x="79.5" y="659.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="82.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.42%)</title><rect x="79.5" y="643.0" width="5.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="82.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.42%)</title><rect x="79.5" y="627.0" width="5.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="82.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.42%)</title><rect x="79.5" y="611.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="82.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.34%)</title><rect x="80.5" y="595.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="83.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="81.5" y="579.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="84.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (120 samples, 10.10%)</title><rect x="84.5" y="787.0" width="119.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.5" y="798.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (120 samples, 10.10%)</title><rect x="84.5" y="771.0" width="119.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.5" y="782.0">jdk/internal/mi..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.17%)</title><rect x="84.5" y="755.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="87.5" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.25%)</title><rect x="86.5" y="755.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="89.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (62 samples, 5.22%)</title><rect x="89.5" y="755.0" width="61.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="92.5" y="766.0">Unsafe..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="91.4" y="739.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="94.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.17%)</title><rect x="92.4" y="739.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="95.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.17%)</title><rect x="94.4" y="739.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (18 samples, 1.52%)</title><rect x="96.4" y="739.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.25%)</title><rect x="107.3" y="723.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="110.3" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.25%)</title><rect x="107.3" y="707.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.3" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.08%)</title><rect x="110.3" y="723.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="113.3" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.25%)</title><rect x="111.3" y="723.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="114.3" y="734.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="114.3" y="739.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.3" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.17%)</title><rect x="115.3" y="739.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="118.3" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.25%)</title><rect x="117.3" y="739.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="120.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="723.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="122.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="707.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="122.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="691.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="122.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="675.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="122.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="659.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="122.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="643.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="122.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="119.3" y="627.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="122.3" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 1.77%)</title><rect x="120.3" y="739.0" width="20.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="123.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.52%)</title><rect x="123.2" y="723.0" width="17.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="126.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.52%)</title><rect x="123.2" y="707.0" width="17.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.93%)</title><rect x="130.2" y="691.0" width="10.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="133.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.93%)</title><rect x="130.2" y="675.0" width="10.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="133.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.67%)</title><rect x="133.2" y="659.0" width="7.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="138.1" y="643.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="141.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="138.1" y="627.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="141.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.17%)</title><rect x="141.1" y="739.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="144.1" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.17%)</title><rect x="143.1" y="739.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="146.1" y="750.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="145.1" y="739.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="148.1" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="146.1" y="739.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="149.1" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.34%)</title><rect x="147.1" y="739.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="150.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 4.46%)</title><rect x="151.0" y="755.0" width="52.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="154.0" y="766.0">[unkn..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="151.0" y="739.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="154.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.17%)</title><rect x="152.0" y="739.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="155.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (42 samples, 3.54%)</title><rect x="154.0" y="739.0" width="41.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="157.0" y="750.0">__p..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.44%)</title><rect x="166.9" y="723.0" width="28.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="169.9" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.44%)</title><rect x="166.9" y="707.0" width="28.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="169.9" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.19%)</title><rect x="169.9" y="691.0" width="25.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="172.9" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.19%)</title><rect x="169.9" y="675.0" width="25.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="172.9" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.02%)</title><rect x="171.9" y="659.0" width="23.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="174.9" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.85%)</title><rect x="173.9" y="643.0" width="21.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.9" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (16 samples, 1.35%)</title><rect x="179.8" y="627.0" width="15.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="182.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.84%)</title><rect x="185.8" y="611.0" width="9.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="188.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.59%)</title><rect x="188.8" y="595.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="191.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="193.8" y="579.0" width="1.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="196.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="193.8" y="563.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="196.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="194.7" y="547.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="197.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="194.7" y="531.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="197.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="194.7" y="515.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="197.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="194.7" y="499.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="197.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="194.7" y="483.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="197.7" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.17%)</title><rect x="195.7" y="739.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="198.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.25%)</title><rect x="197.7" y="739.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="200.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.08%)</title><rect x="200.7" y="739.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="203.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.17%)</title><rect x="201.7" y="739.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="204.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.59%)</title><rect x="203.7" y="803.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.59%)</title><rect x="203.7" y="787.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.25%)</title><rect x="204.7" y="771.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.17%)</title><rect x="205.7" y="755.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.08%)</title><rect x="205.7" y="739.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.08%)</title><rect x="206.7" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="206.7" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.25%)</title><rect x="207.7" y="771.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.25%)</title><rect x="207.7" y="755.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.17%)</title><rect x="208.7" y="739.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.08%)</title><rect x="209.6" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 3.03%)</title><rect x="210.6" y="803.0" width="35.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.6" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 3.03%)</title><rect x="210.6" y="787.0" width="35.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 3.03%)</title><rect x="210.6" y="771.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.6" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 3.03%)</title><rect x="210.6" y="755.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.6" y="766.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 3.03%)</title><rect x="210.6" y="739.0" width="35.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.6" y="750.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="210.6" y="723.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="213.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.59%)</title><rect x="211.6" y="723.0" width="7.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="214.6" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.08%)</title><rect x="213.6" y="707.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="216.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="214.6" y="707.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="217.6" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.25%)</title><rect x="215.6" y="707.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="218.6" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 2.36%)</title><rect x="218.6" y="723.0" width="27.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="221.6" y="734.0">p..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.27%)</title><rect x="219.6" y="707.0" width="26.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="222.6" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.27%)</title><rect x="219.6" y="691.0" width="26.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="222.6" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.19%)</title><rect x="220.6" y="675.0" width="25.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="223.6" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.10%)</title><rect x="221.6" y="659.0" width="24.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="224.6" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.10%)</title><rect x="221.6" y="643.0" width="24.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="224.6" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.10%)</title><rect x="221.6" y="627.0" width="24.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="224.6" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.85%)</title><rect x="224.5" y="611.0" width="21.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="227.5" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.85%)</title><rect x="224.5" y="595.0" width="21.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="227.5" y="606.0">[..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$63/32239911.run (530 samples, 44.61%)</title><rect x="246.4" y="835.0" width="526.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.4" y="846.0">ru/mail/polis/service/igorlo/AsyncService$$Lambda$63/32239911.run</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (530 samples, 44.61%)</title><rect x="246.4" y="819.0" width="526.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.4" y="830.0">ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (470 samples, 39.56%)</title><rect x="246.4" y="803.0" width="466.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.4" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.17%)</title><rect x="247.4" y="787.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.17%)</title><rect x="247.4" y="771.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="250.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.08%)</title><rect x="247.4" y="755.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="250.4" y="766.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.08%)</title><rect x="248.4" y="755.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="251.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (458 samples, 38.55%)</title><rect x="249.4" y="787.0" width="454.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.4" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.84%)</title><rect x="249.4" y="771.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.4" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="250.4" y="755.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="253.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.67%)</title><rect x="251.4" y="755.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.17%)</title><rect x="251.4" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.08%)</title><rect x="252.4" y="723.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.08%)</title><rect x="252.4" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.51%)</title><rect x="253.4" y="739.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.51%)</title><rect x="253.4" y="723.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.17%)</title><rect x="256.3" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.17%)</title><rect x="256.3" y="691.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.3" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.08%)</title><rect x="258.3" y="707.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (448 samples, 37.71%)</title><rect x="259.3" y="771.0" width="445.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.3" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (448 samples, 37.71%)</title><rect x="259.3" y="755.0" width="445.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.3" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (448 samples, 37.71%)</title><rect x="259.3" y="739.0" width="445.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.3" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (448 samples, 37.71%)</title><rect x="259.3" y="723.0" width="445.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.3" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.17%)</title><rect x="264.3" y="707.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="267.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.60%)</title><rect x="266.3" y="707.0" width="18.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="269.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.60%)</title><rect x="266.3" y="691.0" width="18.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="269.3" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 1.18%)</title><rect x="266.3" y="675.0" width="13.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="269.3" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="269.2" y="659.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="272.2" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="270.2" y="659.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="273.2" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.25%)</title><rect x="271.2" y="659.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="274.2" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.51%)</title><rect x="274.2" y="659.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="277.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.08%)</title><rect x="274.2" y="643.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="277.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.08%)</title><rect x="275.2" y="643.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="278.2" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.34%)</title><rect x="276.2" y="643.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="279.2" y="654.0"></text>
</g>
<g>
<title>__send (3 samples, 0.25%)</title><rect x="280.2" y="675.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="283.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.17%)</title><rect x="283.1" y="675.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="286.1" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="285.1" y="707.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="288.1" y="718.0"></text>
</g>
<g>
<title>__send (421 samples, 35.44%)</title><rect x="286.1" y="707.0" width="418.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="289.1" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (414 samples, 34.85%)</title><rect x="293.1" y="691.0" width="411.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="296.1" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (414 samples, 34.85%)</title><rect x="293.1" y="675.0" width="411.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="296.1" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (404 samples, 34.01%)</title><rect x="303.0" y="659.0" width="401.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="306.0" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (404 samples, 34.01%)</title><rect x="303.0" y="643.0" width="401.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="306.0" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (402 samples, 33.84%)</title><rect x="305.0" y="627.0" width="399.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.0" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (398 samples, 33.50%)</title><rect x="309.0" y="611.0" width="395.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="312.0" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (394 samples, 33.16%)</title><rect x="312.9" y="595.0" width="391.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="315.9" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (394 samples, 33.16%)</title><rect x="312.9" y="579.0" width="391.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="315.9" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (373 samples, 31.40%)</title><rect x="333.8" y="563.0" width="370.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="336.8" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (357 samples, 30.05%)</title><rect x="349.7" y="547.0" width="354.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="352.7" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (335 samples, 28.20%)</title><rect x="371.5" y="531.0" width="332.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="374.5" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (316 samples, 26.60%)</title><rect x="390.4" y="515.0" width="313.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="393.4" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (288 samples, 24.24%)</title><rect x="418.2" y="499.0" width="286.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="421.2" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (284 samples, 23.91%)</title><rect x="422.2" y="483.0" width="282.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="425.2" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (275 samples, 23.15%)</title><rect x="431.1" y="467.0" width="273.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="434.1" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (268 samples, 22.56%)</title><rect x="438.1" y="451.0" width="266.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="441.1" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (263 samples, 22.14%)</title><rect x="443.1" y="435.0" width="261.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="446.1" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (246 samples, 20.71%)</title><rect x="459.9" y="419.0" width="244.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="462.9" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (234 samples, 19.70%)</title><rect x="471.9" y="403.0" width="232.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="474.9" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (220 samples, 18.52%)</title><rect x="485.8" y="387.0" width="218.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="488.8" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (189 samples, 15.91%)</title><rect x="516.6" y="371.0" width="187.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="519.6" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (179 samples, 15.07%)</title><rect x="526.5" y="355.0" width="177.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="529.5" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (171 samples, 14.39%)</title><rect x="534.4" y="339.0" width="169.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="537.4" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (168 samples, 14.14%)</title><rect x="537.4" y="323.0" width="166.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="540.4" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (161 samples, 13.55%)</title><rect x="544.4" y="307.0" width="159.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="547.4" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (158 samples, 13.30%)</title><rect x="547.4" y="291.0" width="156.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="550.4" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (158 samples, 13.30%)</title><rect x="547.4" y="275.0" width="156.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="550.4" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (152 samples, 12.79%)</title><rect x="553.3" y="259.0" width="151.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="556.3" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (144 samples, 12.12%)</title><rect x="561.3" y="243.0" width="143.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="564.3" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (142 samples, 11.95%)</title><rect x="563.2" y="227.0" width="141.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="566.2" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (141 samples, 11.87%)</title><rect x="564.2" y="211.0" width="140.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="567.2" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (138 samples, 11.62%)</title><rect x="567.2" y="195.0" width="137.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="570.2" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (130 samples, 10.94%)</title><rect x="575.2" y="179.0" width="129.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="578.2" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (123 samples, 10.35%)</title><rect x="582.1" y="163.0" width="122.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="585.1" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (116 samples, 9.76%)</title><rect x="589.1" y="147.0" width="115.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="592.1" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (100 samples, 8.42%)</title><rect x="605.0" y="131.0" width="99.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="608.0" y="142.0">[unknown]</text>
</g>
<g>
<title>[unknown] (82 samples, 6.90%)</title><rect x="622.8" y="115.0" width="81.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="625.8" y="126.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 6.65%)</title><rect x="625.8" y="99.0" width="78.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="628.8" y="110.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 6.65%)</title><rect x="625.8" y="83.0" width="78.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="628.8" y="94.0">[unknown]</text>
</g>
<g>
<title>[unknown] (6 samples, 0.51%)</title><rect x="698.3" y="67.0" width="6.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="701.3" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.42%)</title><rect x="699.3" y="51.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="702.3" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="702.3" y="35.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="705.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.76%)</title><rect x="704.3" y="787.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.76%)</title><rect x="704.3" y="771.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.76%)</title><rect x="704.3" y="755.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.17%)</title><rect x="706.3" y="739.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="723.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="709.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="707.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="709.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="691.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="709.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="675.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="709.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="659.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="709.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="643.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="709.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="706.3" y="627.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="709.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.08%)</title><rect x="707.3" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.3" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.08%)</title><rect x="707.3" y="707.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.3" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.08%)</title><rect x="707.3" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.34%)</title><rect x="708.3" y="739.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.34%)</title><rect x="708.3" y="723.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.3" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.34%)</title><rect x="708.3" y="707.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.3" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.17%)</title><rect x="710.3" y="691.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (2 samples, 0.17%)</title><rect x="710.3" y="675.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="712.2" y="739.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="715.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/130504574.action (60 samples, 5.05%)</title><rect x="713.2" y="803.0" width="59.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.2" y="814.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$entity$0 (60 samples, 5.05%)</title><rect x="713.2" y="787.0" width="59.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.2" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.get (60 samples, 5.05%)</title><rect x="713.2" y="771.0" width="59.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.2" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.17%)</title><rect x="715.2" y="755.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (56 samples, 4.71%)</title><rect x="717.2" y="755.0" width="55.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.2" y="766.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 1.01%)</title><rect x="717.2" y="739.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 1.01%)</title><rect x="717.2" y="723.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 1.01%)</title><rect x="717.2" y="707.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.42%)</title><rect x="718.2" y="691.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.endOfData (5 samples, 0.42%)</title><rect x="718.2" y="675.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.08%)</title><rect x="720.2" y="659.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="721.2" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (1 samples, 0.08%)</title><rect x="722.2" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.2" y="670.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="723.2" y="691.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="726.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="724.2" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.2" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.34%)</title><rect x="725.2" y="691.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="728.2" y="702.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.34%)</title><rect x="725.2" y="675.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="728.2" y="686.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.34%)</title><rect x="725.2" y="659.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="728.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (2 samples, 0.17%)</title><rect x="729.1" y="739.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.1" y="750.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.17%)</title><rect x="729.1" y="723.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.1" y="734.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.17%)</title><rect x="729.1" y="707.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.17%)</title><rect x="729.1" y="691.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.1" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.17%)</title><rect x="729.1" y="675.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (42 samples, 3.54%)</title><rect x="731.1" y="739.0" width="41.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.1" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowsIterator (42 samples, 3.54%)</title><rect x="731.1" y="723.0" width="41.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.1" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (25 samples, 2.10%)</title><rect x="731.1" y="707.0" width="24.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.1" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (12 samples, 1.01%)</title><rect x="731.1" y="691.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.08%)</title><rect x="731.1" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.59%)</title><rect x="732.1" y="675.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.59%)</title><rect x="732.1" y="659.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.59%)</title><rect x="732.1" y="643.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.34%)</title><rect x="739.1" y="675.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.34%)</title><rect x="739.1" y="659.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.25%)</title><rect x="740.1" y="643.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (3 samples, 0.25%)</title><rect x="740.1" y="627.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (13 samples, 1.09%)</title><rect x="743.0" y="691.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.34%)</title><rect x="744.0" y="675.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.34%)</title><rect x="744.0" y="659.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.34%)</title><rect x="744.0" y="643.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.08%)</title><rect x="746.0" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.08%)</title><rect x="746.0" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.08%)</title><rect x="747.0" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (6 samples, 0.51%)</title><rect x="748.0" y="675.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (4 samples, 0.34%)</title><rect x="748.0" y="659.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.34%)</title><rect x="748.0" y="643.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.34%)</title><rect x="748.0" y="627.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (4 samples, 0.34%)</title><rect x="748.0" y="611.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (4 samples, 0.34%)</title><rect x="748.0" y="595.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.08%)</title><rect x="752.0" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (1 samples, 0.08%)</title><rect x="752.0" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.08%)</title><rect x="752.0" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="752.0" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.08%)</title><rect x="753.0" y="659.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.08%)</title><rect x="753.0" y="643.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.08%)</title><rect x="753.0" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (2 samples, 0.17%)</title><rect x="754.0" y="675.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.17%)</title><rect x="754.0" y="659.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.17%)</title><rect x="754.0" y="643.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.08%)</title><rect x="754.9" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (17 samples, 1.43%)</title><rect x="755.9" y="707.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.34%)</title><rect x="755.9" y="691.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.08%)</title><rect x="755.9" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.08%)</title><rect x="755.9" y="659.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.25%)</title><rect x="756.9" y="675.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.08%)</title><rect x="757.9" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.08%)</title><rect x="757.9" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.08%)</title><rect x="758.9" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.25%)</title><rect x="759.9" y="691.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990451863.invoke (2 samples, 0.17%)</title><rect x="760.9" y="675.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.84%)</title><rect x="762.9" y="691.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.84%)</title><rect x="762.9" y="675.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="770.8" y="659.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="773.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="770.8" y="643.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="773.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="770.8" y="627.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="773.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="771.8" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.8" y="670.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.08%)</title><rect x="771.8" y="643.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="774.8" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (417 samples, 35.10%)</title><rect x="772.8" y="883.0" width="414.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.8" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.08%)</title><rect x="773.8" y="867.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="776.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (96 samples, 8.08%)</title><rect x="774.8" y="867.0" width="95.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.8" y="878.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.25%)</title><rect x="776.8" y="851.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (91 samples, 7.66%)</title><rect x="779.8" y="851.0" width="90.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.8" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="782.8" y="835.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="785.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 7.15%)</title><rect x="783.8" y="835.0" width="84.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="786.8" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="783.8" y="819.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="786.8" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.17%)</title><rect x="783.8" y="803.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="786.8" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.08%)</title><rect x="785.7" y="819.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="788.7" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="786.7" y="819.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="789.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (81 samples, 6.82%)</title><rect x="787.7" y="819.0" width="80.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="790.7" y="830.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (73 samples, 6.14%)</title><rect x="795.7" y="803.0" width="72.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="798.7" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (73 samples, 6.14%)</title><rect x="795.7" y="787.0" width="72.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="798.7" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (67 samples, 5.64%)</title><rect x="801.6" y="771.0" width="66.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="804.6" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (66 samples, 5.56%)</title><rect x="802.6" y="755.0" width="65.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="805.6" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (64 samples, 5.39%)</title><rect x="804.6" y="739.0" width="63.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="807.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (56 samples, 4.71%)</title><rect x="812.6" y="723.0" width="55.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="815.6" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.62%)</title><rect x="825.5" y="707.0" width="42.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="828.5" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.61%)</title><rect x="837.4" y="691.0" width="30.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="840.4" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.44%)</title><rect x="839.4" y="675.0" width="28.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="842.4" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (20 samples, 1.68%)</title><rect x="848.3" y="659.0" width="19.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="851.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="643.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="870.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="627.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="870.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="611.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="870.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="595.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="579.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="870.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="563.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="870.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="867.2" y="547.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="870.2" y="558.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.17%)</title><rect x="868.2" y="835.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="871.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (319 samples, 26.85%)</title><rect x="870.2" y="867.0" width="316.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.2" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="873.1" y="851.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="876.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (311 samples, 26.18%)</title><rect x="874.1" y="851.0" width="308.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.1" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (200 samples, 16.84%)</title><rect x="875.1" y="835.0" width="198.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.1" y="846.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="819.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="881.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="803.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="881.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="787.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="881.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="771.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="881.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="755.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="881.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="739.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="881.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.17%)</title><rect x="878.1" y="723.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="881.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (162 samples, 13.64%)</title><rect x="880.1" y="819.0" width="160.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.1" y="830.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (160 samples, 13.47%)</title><rect x="882.1" y="803.0" width="158.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.1" y="814.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (150 samples, 12.63%)</title><rect x="882.1" y="787.0" width="149.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.1" y="798.0">RequestHandler1_ent..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.76%)</title><rect x="882.1" y="771.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.42%)</title><rect x="882.1" y="755.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.42%)</title><rect x="882.1" y="739.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.17%)</title><rect x="885.1" y="723.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="888.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.08%)</title><rect x="887.1" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="887.1" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.25%)</title><rect x="888.0" y="755.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (141 samples, 11.87%)</title><rect x="891.0" y="771.0" width="140.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.0" y="782.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.42%)</title><rect x="891.0" y="755.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.25%)</title><rect x="893.0" y="739.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.08%)</title><rect x="895.0" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.0" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="895.0" y="707.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 1.26%)</title><rect x="896.0" y="755.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 1.26%)</title><rect x="896.0" y="739.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/130504574.get$Lambda (15 samples, 1.26%)</title><rect x="896.0" y="723.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/130504574.&lt;init&gt; (15 samples, 1.26%)</title><rect x="896.0" y="707.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.59%)</title><rect x="903.9" y="691.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.08%)</title><rect x="909.9" y="675.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.34%)</title><rect x="910.9" y="755.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.25%)</title><rect x="911.9" y="739.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.25%)</title><rect x="911.9" y="723.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.25%)</title><rect x="911.9" y="707.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.25%)</title><rect x="911.9" y="691.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="913.9" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.executeAsync (117 samples, 9.85%)</title><rect x="914.9" y="755.0" width="116.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.9" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.34%)</title><rect x="914.9" y="739.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.34%)</title><rect x="914.9" y="723.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$63/32239911.get$Lambda (4 samples, 0.34%)</title><rect x="914.9" y="707.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$63/32239911.&lt;init&gt; (3 samples, 0.25%)</title><rect x="915.9" y="691.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (113 samples, 9.51%)</title><rect x="918.8" y="739.0" width="112.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.8" y="750.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (112 samples, 9.43%)</title><rect x="919.8" y="723.0" width="111.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.8" y="734.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (108 samples, 9.09%)</title><rect x="920.8" y="707.0" width="107.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.8" y="718.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (11 samples, 0.93%)</title><rect x="920.8" y="691.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (11 samples, 0.93%)</title><rect x="920.8" y="675.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (11 samples, 0.93%)</title><rect x="920.8" y="659.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (11 samples, 0.93%)</title><rect x="920.8" y="643.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (11 samples, 0.93%)</title><rect x="920.8" y="627.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="929.8" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.08%)</title><rect x="929.8" y="595.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.08%)</title><rect x="930.8" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.17%)</title><rect x="931.8" y="691.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.17%)</title><rect x="931.8" y="675.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.17%)</title><rect x="931.8" y="659.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.17%)</title><rect x="931.8" y="643.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.17%)</title><rect x="931.8" y="627.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.17%)</title><rect x="931.8" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.8" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.08%)</title><rect x="931.8" y="595.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="934.8" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.08%)</title><rect x="931.8" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="934.8" y="590.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="931.8" y="563.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="934.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="932.7" y="595.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="935.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.08%)</title><rect x="932.7" y="579.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="935.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="932.7" y="563.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="935.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="932.7" y="547.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="935.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (95 samples, 8.00%)</title><rect x="933.7" y="691.0" width="94.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.7" y="702.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (95 samples, 8.00%)</title><rect x="933.7" y="675.0" width="94.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.7" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (95 samples, 8.00%)</title><rect x="933.7" y="659.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.7" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (95 samples, 8.00%)</title><rect x="933.7" y="643.0" width="94.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.7" y="654.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (95 samples, 8.00%)</title><rect x="933.7" y="627.0" width="94.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.7" y="638.0">jdk/interna..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.17%)</title><rect x="935.7" y="611.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="938.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="937.7" y="611.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="940.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 1.26%)</title><rect x="938.7" y="611.0" width="14.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="941.7" y="622.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.17%)</title><rect x="939.7" y="595.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="942.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.25%)</title><rect x="941.7" y="595.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="944.7" y="595.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="947.7" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.25%)</title><rect x="945.7" y="595.0" width="2.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="948.7" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.08%)</title><rect x="948.6" y="595.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="951.6" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.17%)</title><rect x="949.6" y="595.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.6" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.17%)</title><rect x="951.6" y="595.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="954.6" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.08%)</title><rect x="953.6" y="611.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="956.6" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (74 samples, 6.23%)</title><rect x="954.6" y="611.0" width="73.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="957.6" y="622.0">pthread_..</text>
</g>
<g>
<title>[unknown] (67 samples, 5.64%)</title><rect x="961.5" y="595.0" width="66.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="964.5" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (67 samples, 5.64%)</title><rect x="961.5" y="579.0" width="66.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.5" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (59 samples, 4.97%)</title><rect x="969.5" y="563.0" width="58.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="972.5" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (57 samples, 4.80%)</title><rect x="971.5" y="547.0" width="56.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="974.5" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.71%)</title><rect x="972.5" y="531.0" width="55.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="975.5" y="542.0">[unkn..</text>
</g>
<g>
<title>[unknown] (52 samples, 4.38%)</title><rect x="976.4" y="515.0" width="51.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="979.4" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (46 samples, 3.87%)</title><rect x="982.4" y="499.0" width="45.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="985.4" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (44 samples, 3.70%)</title><rect x="984.4" y="483.0" width="43.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="987.4" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="467.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1030.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="451.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1030.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="435.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1030.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="419.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1030.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="403.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1030.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="387.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1030.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1027.1" y="371.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1030.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.25%)</title><rect x="1028.1" y="707.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.25%)</title><rect x="1028.1" y="691.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.25%)</title><rect x="1028.1" y="675.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.17%)</title><rect x="1029.1" y="659.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.17%)</title><rect x="1029.1" y="643.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.17%)</title><rect x="1029.1" y="627.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.1" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.17%)</title><rect x="1029.1" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.1" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.17%)</title><rect x="1029.1" y="595.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.08%)</title><rect x="1031.1" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.34%)</title><rect x="1032.1" y="787.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.25%)</title><rect x="1033.1" y="771.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.25%)</title><rect x="1033.1" y="755.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.17%)</title><rect x="1034.1" y="739.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.42%)</title><rect x="1036.0" y="787.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.42%)</title><rect x="1036.0" y="771.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.42%)</title><rect x="1036.0" y="755.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.17%)</title><rect x="1039.0" y="739.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1042.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 1.94%)</title><rect x="1041.0" y="819.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.0" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 1.01%)</title><rect x="1044.0" y="803.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 1.01%)</title><rect x="1044.0" y="787.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 1.01%)</title><rect x="1044.0" y="771.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.93%)</title><rect x="1045.0" y="755.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.0" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.17%)</title><rect x="1052.9" y="739.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.08%)</title><rect x="1054.9" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1055.9" y="803.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1058.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="1056.9" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.51%)</title><rect x="1057.9" y="803.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.25%)</title><rect x="1063.9" y="819.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1066.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.42%)</title><rect x="1066.8" y="819.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.42%)</title><rect x="1066.8" y="803.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.42%)</title><rect x="1066.8" y="787.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="1070.8" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1071.8" y="819.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.17%)</title><rect x="1071.8" y="803.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.17%)</title><rect x="1071.8" y="787.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.17%)</title><rect x="1071.8" y="771.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (110 samples, 9.26%)</title><rect x="1073.8" y="835.0" width="109.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.8" y="846.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (109 samples, 9.18%)</title><rect x="1073.8" y="819.0" width="108.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.8" y="830.0">one/nio/net/N..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.44%)</title><rect x="1078.8" y="803.0" width="28.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1081.8" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.44%)</title><rect x="1078.8" y="787.0" width="28.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1081.8" y="798.0">[u..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (24 samples, 2.02%)</title><rect x="1078.8" y="771.0" width="23.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1081.8" y="782.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.17%)</title><rect x="1080.7" y="755.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1083.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="739.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1084.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="723.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1084.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="707.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1084.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="691.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1084.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="675.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1084.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="659.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1084.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1081.7" y="643.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1084.7" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="1082.7" y="755.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.7" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.08%)</title><rect x="1083.7" y="755.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1086.7" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.59%)</title><rect x="1084.7" y="755.0" width="7.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1087.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="739.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1093.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="723.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1093.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="707.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1093.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="691.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1093.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="675.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1093.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="659.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1093.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1090.7" y="643.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1093.7" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="1091.7" y="755.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.84%)</title><rect x="1092.7" y="755.0" width="9.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1095.7" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (5 samples, 0.42%)</title><rect x="1094.6" y="739.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.08%)</title><rect x="1099.6" y="739.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.08%)</title><rect x="1100.6" y="739.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.6" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="1101.6" y="739.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1104.6" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.08%)</title><rect x="1102.6" y="771.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1105.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="1103.6" y="771.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1106.6" y="782.0"></text>
</g>
<g>
<title>recv (3 samples, 0.25%)</title><rect x="1104.6" y="771.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1107.6" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="1107.6" y="803.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1110.6" y="814.0"></text>
</g>
<g>
<title>recv (74 samples, 6.23%)</title><rect x="1108.6" y="803.0" width="73.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1111.6" y="814.0">recv</text>
</g>
<g>
<title>[unknown] (72 samples, 6.06%)</title><rect x="1110.5" y="787.0" width="71.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1113.5" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (72 samples, 6.06%)</title><rect x="1110.5" y="771.0" width="71.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1113.5" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (69 samples, 5.81%)</title><rect x="1113.5" y="755.0" width="68.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1116.5" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 5.72%)</title><rect x="1114.5" y="739.0" width="67.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1117.5" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (66 samples, 5.56%)</title><rect x="1116.5" y="723.0" width="65.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1119.5" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (66 samples, 5.56%)</title><rect x="1116.5" y="707.0" width="65.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1119.5" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (63 samples, 5.30%)</title><rect x="1119.5" y="691.0" width="62.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1122.5" y="702.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.71%)</title><rect x="1126.4" y="675.0" width="55.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1129.4" y="686.0">[unkn..</text>
</g>
<g>
<title>[unknown] (44 samples, 3.70%)</title><rect x="1138.4" y="659.0" width="43.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1141.4" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.95%)</title><rect x="1147.3" y="643.0" width="34.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1150.3" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.10%)</title><rect x="1157.2" y="627.0" width="24.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1160.2" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.93%)</title><rect x="1171.1" y="611.0" width="11.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1174.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.08%)</title><rect x="1182.1" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.1" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.34%)</title><rect x="1183.0" y="851.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="1183.0" y="835.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1186.0" y="846.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.25%)</title><rect x="1184.0" y="835.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1187.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.17%)</title><rect x="1185.0" y="819.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.0" y="830.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.25%)</title><rect x="1187.0" y="883.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1190.0" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.25%)</title><rect x="1187.0" y="867.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.25%)</title><rect x="1187.0" y="851.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.08%)</title><rect x="1187.0" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.08%)</title><rect x="1187.0" y="819.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.08%)</title><rect x="1187.0" y="803.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.08%)</title><rect x="1187.0" y="787.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.17%)</title><rect x="1188.0" y="835.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.17%)</title><rect x="1188.0" y="819.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.08%)</title><rect x="1188.0" y="803.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.08%)</title><rect x="1188.0" y="787.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="798.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.08%)</title><rect x="1188.0" y="771.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.08%)</title><rect x="1189.0" y="803.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
</g>
</svg>
