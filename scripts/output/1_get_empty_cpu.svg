<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (3,460 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="10.3" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="10.3" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.7" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.7" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="10.7" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="10.7" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="10.7" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.7" y="814.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="10.7" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="11.0" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.0" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="11.0" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="11.0" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="11.0" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.0" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.0" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.0" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="814.0"></text>
</g>
<g>
<title>G1ContiguousSpace::free() const (1 samples, 0.03%)</title><rect x="11.0" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.09%)</title><rect x="11.4" y="883.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.09%)</title><rect x="11.4" y="867.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.09%)</title><rect x="11.4" y="851.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.09%)</title><rect x="11.4" y="835.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="11.4" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.4" y="830.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="11.7" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="11.7" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="12.0" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.0" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="12.0" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.0" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="12.0" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.0" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (46 samples, 1.33%)</title><rect x="12.4" y="883.0" width="15.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (40 samples, 1.16%)</title><rect x="12.4" y="867.0" width="13.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="13.4" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (18 samples, 0.52%)</title><rect x="13.8" y="851.0" width="6.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.26%)</title><rect x="14.8" y="835.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="17.8" y="835.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.8" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.12%)</title><rect x="18.2" y="835.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="18.2" y="819.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="18.2" y="803.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="787.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="771.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="22.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="739.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="22.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="723.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="22.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="707.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="22.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="691.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="675.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="22.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="659.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="19.2" y="643.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="22.2" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="19.5" y="835.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.5" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (17 samples, 0.49%)</title><rect x="19.9" y="851.0" width="5.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.9" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="25.7" y="851.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="28.7" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.09%)</title><rect x="26.0" y="867.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.0" y="878.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="26.0" y="851.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.0" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (2 samples, 0.06%)</title><rect x="26.4" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.4" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="27.1" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.1" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="27.4" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.4" y="878.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.03%)</title><rect x="27.7" y="867.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="30.7" y="878.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.09%)</title><rect x="28.1" y="883.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="31.1" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.14%)</title><rect x="29.1" y="883.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.1" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="29.1" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="29.4" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.4" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="29.8" y="867.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.06%)</title><rect x="29.8" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.8" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="29.8" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.8" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="30.1" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.1" y="846.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="30.1" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="33.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="30.5" y="867.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="33.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="30.5" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="33.5" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="30.5" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="30.8" y="883.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="33.8" y="894.0"></text>
</g>
<g>
<title>WatcherThread::~WatcherThread() (1 samples, 0.03%)</title><rect x="30.8" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="30.8" y="851.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="33.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="30.8" y="835.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="33.8" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="30.8" y="819.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="33.8" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (31 samples, 0.90%)</title><rect x="31.1" y="883.0" width="10.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="34.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="33.9" y="867.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="36.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="33.9" y="851.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="36.9" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="33.9" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="36.9" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="34.2" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.6" y="835.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.6" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.12%)</title><rect x="34.9" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="37.9" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.46%)</title><rect x="36.3" y="867.0" width="5.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="39.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="37.3" y="851.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="40.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="37.3" y="835.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="40.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="37.6" y="819.0" width="4.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="40.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="38.0" y="803.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="41.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="38.0" y="787.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="41.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="38.0" y="771.0" width="3.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="41.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="38.6" y="755.0" width="3.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="41.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="38.6" y="739.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="41.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.4" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="44.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.4" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="44.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.4" y="691.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.4" y="675.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="44.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.4" y="659.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="44.4" y="670.0"></text>
</g>
<g>
<title>__condvar_cancel_waiting (1 samples, 0.03%)</title><rect x="41.7" y="883.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.7" y="894.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.03%)</title><rect x="42.1" y="883.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="45.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (24 samples, 0.69%)</title><rect x="42.4" y="883.0" width="8.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="45.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="43.8" y="867.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="46.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="43.8" y="851.0" width="6.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="46.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="43.8" y="835.0" width="6.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="46.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="43.8" y="819.0" width="6.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="46.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.55%)</title><rect x="44.1" y="803.0" width="6.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="47.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.40%)</title><rect x="45.8" y="787.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="48.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="47.2" y="771.0" width="3.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="50.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.14%)</title><rect x="48.9" y="755.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="51.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="49.2" y="739.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="52.2" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="50.6" y="883.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="53.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,136 samples, 61.73%)</title><rect x="51.3" y="883.0" width="728.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.3" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,136 samples, 61.73%)</title><rect x="51.3" y="867.0" width="728.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.3" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,136 samples, 61.73%)</title><rect x="51.3" y="851.0" width="728.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.3" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="52.6" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.06%)</title><rect x="53.0" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="53.0" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.06%)</title><rect x="53.0" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.06%)</title><rect x="53.0" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.06%)</title><rect x="53.0" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.06%)</title><rect x="53.0" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.14%)</title><rect x="53.7" y="835.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.14%)</title><rect x="53.7" y="819.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.06%)</title><rect x="54.7" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.06%)</title><rect x="54.7" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="58.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="755.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="58.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="739.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="723.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="58.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="707.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="58.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="691.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="58.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.0" y="675.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (548 samples, 15.84%)</title><rect x="55.4" y="835.0" width="186.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.4" y="846.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (537 samples, 15.52%)</title><rect x="58.8" y="819.0" width="183.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.8" y="830.0">java/util/concurrent/Lin..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="62.2" y="803.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="65.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="62.2" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="65.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="62.2" y="771.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="65.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (392 samples, 11.33%)</title><rect x="62.5" y="803.0" width="133.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.5" y="814.0">java/util/concurr..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.17%)</title><rect x="63.5" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="65.2" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="65.6" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.55%)</title><rect x="65.9" y="787.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.06%)</title><rect x="66.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.06%)</title><rect x="66.3" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.06%)</title><rect x="66.3" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="66.3" y="723.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="69.3" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="66.3" y="707.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="69.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.3" y="691.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="69.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.3" y="675.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="69.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="69.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="66.6" y="707.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="69.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="69.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="675.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="69.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="659.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="69.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="643.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="69.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="627.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="69.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="611.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="69.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="66.6" y="595.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="69.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="67.0" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (15 samples, 0.43%)</title><rect x="67.3" y="771.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (15 samples, 0.43%)</title><rect x="67.3" y="755.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (4 samples, 0.12%)</title><rect x="70.0" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.09%)</title><rect x="71.4" y="739.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.09%)</title><rect x="71.4" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.09%)</title><rect x="71.4" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (25 samples, 0.72%)</title><rect x="72.4" y="787.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.72%)</title><rect x="72.4" y="771.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.61%)</title><rect x="72.8" y="755.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.58%)</title><rect x="73.1" y="739.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.58%)</title><rect x="73.1" y="723.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.1" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="73.1" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="76.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="73.4" y="707.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="76.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="73.8" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="76.8" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.49%)</title><rect x="74.1" y="707.0" width="5.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="77.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="75.5" y="691.0" width="4.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="78.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="75.5" y="675.0" width="4.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="78.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="76.2" y="659.0" width="3.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="79.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="76.2" y="643.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="79.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="76.2" y="627.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="79.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="77.5" y="611.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="80.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="77.5" y="595.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="80.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="77.5" y="579.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="80.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.09%)</title><rect x="79.9" y="755.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.06%)</title><rect x="80.9" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.06%)</title><rect x="80.9" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (336 samples, 9.71%)</title><rect x="81.6" y="787.0" width="114.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.6" y="798.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (336 samples, 9.71%)</title><rect x="81.6" y="771.0" width="114.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.6" y="782.0">jdk/internal/m..</text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.09%)</title><rect x="85.0" y="755.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="88.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="86.1" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="89.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (159 samples, 4.60%)</title><rect x="86.4" y="755.0" width="54.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="89.4" y="766.0">Unsaf..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="89.8" y="739.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="92.8" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.06%)</title><rect x="90.8" y="739.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="91.5" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.12%)</title><rect x="92.2" y="739.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="95.2" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (47 samples, 1.36%)</title><rect x="93.6" y="739.0" width="16.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="96.6" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.06%)</title><rect x="101.4" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="104.4" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="102.1" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="105.1" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.14%)</title><rect x="102.4" y="723.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.4" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.06%)</title><rect x="103.4" y="707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="106.4" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="104.1" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="107.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (14 samples, 0.40%)</title><rect x="104.5" y="723.0" width="4.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="107.5" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="109.2" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="112.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (4 samples, 0.12%)</title><rect x="109.6" y="739.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.06%)</title><rect x="110.9" y="739.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="113.9" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (51 samples, 1.47%)</title><rect x="111.6" y="739.0" width="17.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="114.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.10%)</title><rect x="116.1" y="723.0" width="12.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="119.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.10%)</title><rect x="116.1" y="707.0" width="12.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="119.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="124.6" y="691.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="127.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="124.9" y="675.0" width="4.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="127.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="125.3" y="659.0" width="3.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="128.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="127.7" y="643.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="130.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="128.3" y="627.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="131.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="128.7" y="611.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="131.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="128.7" y="595.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="131.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="128.7" y="579.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="131.7" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.09%)</title><rect x="129.0" y="739.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="132.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.17%)</title><rect x="130.0" y="739.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="133.0" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.14%)</title><rect x="132.1" y="739.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="135.1" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.09%)</title><rect x="133.8" y="739.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="136.8" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="134.8" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="137.8" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (16 samples, 0.46%)</title><rect x="135.2" y="739.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="138.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (158 samples, 4.57%)</title><rect x="140.6" y="755.0" width="53.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="143.6" y="766.0">[unkn..</text>
</g>
<g>
<title>__pthread_cleanup_pop (2 samples, 0.06%)</title><rect x="140.6" y="739.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="143.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (7 samples, 0.20%)</title><rect x="141.3" y="739.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="144.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (119 samples, 3.44%)</title><rect x="143.7" y="739.0" width="40.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="146.7" y="750.0">__p..</text>
</g>
<g>
<title>[unknown] (74 samples, 2.14%)</title><rect x="159.0" y="723.0" width="25.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="162.0" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (74 samples, 2.14%)</title><rect x="159.0" y="707.0" width="25.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="162.0" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (55 samples, 1.59%)</title><rect x="165.5" y="691.0" width="18.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="168.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.50%)</title><rect x="166.5" y="675.0" width="17.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="169.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.45%)</title><rect x="167.2" y="659.0" width="17.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="170.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.36%)</title><rect x="168.2" y="643.0" width="16.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="171.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.81%)</title><rect x="174.7" y="627.0" width="9.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="177.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.61%)</title><rect x="177.1" y="611.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="180.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.52%)</title><rect x="178.1" y="595.0" width="6.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="181.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="579.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="185.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="563.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="185.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="547.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="185.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="531.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="185.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="515.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="185.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="499.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="185.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="182.9" y="483.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="185.9" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (15 samples, 0.43%)</title><rect x="184.3" y="739.0" width="5.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="187.3" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (12 samples, 0.35%)</title><rect x="189.4" y="739.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="192.4" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.09%)</title><rect x="193.5" y="739.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="196.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.06%)</title><rect x="194.5" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="197.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.09%)</title><rect x="195.2" y="755.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="198.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (45 samples, 1.30%)</title><rect x="196.2" y="803.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (45 samples, 1.30%)</title><rect x="196.2" y="787.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="196.9" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.09%)</title><rect x="197.2" y="771.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (33 samples, 0.95%)</title><rect x="198.3" y="771.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.03%)</title><rect x="199.3" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="199.6" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.03%)</title><rect x="199.6" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="199.6" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="199.6" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="718.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.03%)</title><rect x="199.6" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.20%)</title><rect x="200.0" y="755.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.20%)</title><rect x="200.0" y="739.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.12%)</title><rect x="200.0" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.09%)</title><rect x="201.3" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.06%)</title><rect x="201.3" y="707.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="204.3" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="201.3" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="204.3" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="201.7" y="691.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="204.7" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="202.0" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="205.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (18 samples, 0.52%)</title><rect x="202.3" y="755.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.06%)</title><rect x="207.8" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.09%)</title><rect x="208.5" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.17%)</title><rect x="209.5" y="771.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.17%)</title><rect x="209.5" y="755.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="209.5" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.12%)</title><rect x="209.8" y="739.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="211.2" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="211.2" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="211.2" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (88 samples, 2.54%)</title><rect x="211.6" y="803.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.6" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (88 samples, 2.54%)</title><rect x="211.6" y="787.0" width="30.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.6" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (88 samples, 2.54%)</title><rect x="211.6" y="771.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.6" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (88 samples, 2.54%)</title><rect x="211.6" y="755.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.6" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 2.54%)</title><rect x="211.6" y="739.0" width="30.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.6" y="750.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="212.9" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.9" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="213.3" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="216.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.43%)</title><rect x="213.6" y="723.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="216.6" y="734.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="214.6" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="217.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="215.0" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="218.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="215.3" y="707.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.3" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="216.0" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="219.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="216.3" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="219.3" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.06%)</title><rect x="216.7" y="707.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="219.7" y="718.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="217.4" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="220.4" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.09%)</title><rect x="217.7" y="707.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="220.7" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="218.7" y="723.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="221.7" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="219.1" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="222.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (65 samples, 1.88%)</title><rect x="219.4" y="723.0" width="22.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="222.4" y="734.0">p..</text>
</g>
<g>
<title>[unknown] (56 samples, 1.62%)</title><rect x="222.5" y="707.0" width="19.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.62%)</title><rect x="222.5" y="691.0" width="19.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="225.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.50%)</title><rect x="223.8" y="675.0" width="17.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="226.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.50%)</title><rect x="223.8" y="659.0" width="17.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="226.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.47%)</title><rect x="224.2" y="643.0" width="17.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="227.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.33%)</title><rect x="225.9" y="627.0" width="15.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="228.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.21%)</title><rect x="227.2" y="611.0" width="14.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="230.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.18%)</title><rect x="227.6" y="595.0" width="14.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="230.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="241.6" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="241.9" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/1479440256.run (1,576 samples, 45.55%)</title><rect x="242.2" y="835.0" width="537.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.2" y="846.0">ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/1479440256.run</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (1,574 samples, 45.49%)</title><rect x="242.9" y="819.0" width="536.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.9" y="830.0">ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,373 samples, 39.68%)</title><rect x="242.9" y="803.0" width="468.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.9" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,341 samples, 38.76%)</title><rect x="245.3" y="787.0" width="457.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.3" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (39 samples, 1.13%)</title><rect x="245.3" y="771.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="247.0" y="755.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="250.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.09%)</title><rect x="247.4" y="755.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (30 samples, 0.87%)</title><rect x="248.4" y="755.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.06%)</title><rect x="248.4" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.49%)</title><rect x="249.1" y="739.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.20%)</title><rect x="252.1" y="723.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.09%)</title><rect x="253.5" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="254.5" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="254.5" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.32%)</title><rect x="254.9" y="739.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.29%)</title><rect x="255.2" y="723.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="257.3" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="257.6" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.6" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.06%)</title><rect x="257.9" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,302 samples, 37.63%)</title><rect x="258.6" y="771.0" width="444.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.6" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,302 samples, 37.63%)</title><rect x="258.6" y="755.0" width="444.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.6" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,302 samples, 37.63%)</title><rect x="258.6" y="739.0" width="444.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.6" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,302 samples, 37.63%)</title><rect x="258.6" y="723.0" width="444.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.6" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.09%)</title><rect x="262.4" y="707.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="265.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.68%)</title><rect x="263.4" y="707.0" width="19.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="266.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.68%)</title><rect x="263.4" y="691.0" width="19.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="266.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (47 samples, 1.36%)</title><rect x="263.4" y="675.0" width="16.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="266.4" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.09%)</title><rect x="266.8" y="659.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="269.8" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="267.8" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="270.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.06%)</title><rect x="268.5" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="271.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="269.2" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="659.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="272.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="643.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="272.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="627.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="272.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="611.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="272.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="595.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="272.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="579.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="272.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="269.5" y="563.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="272.5" y="574.0"></text>
</g>
<g>
<title>__memmove_ssse3 (10 samples, 0.29%)</title><rect x="269.9" y="659.0" width="3.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="272.9" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.40%)</title><rect x="273.3" y="659.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="276.3" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="274.0" y="643.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="277.0" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.09%)</title><rect x="275.0" y="643.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="278.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.09%)</title><rect x="276.0" y="643.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="279.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="277.0" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="280.0" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="277.4" y="643.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="280.4" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.12%)</title><rect x="278.1" y="659.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="281.1" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="279.4" y="675.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="282.4" y="686.0"></text>
</g>
<g>
<title>__send (7 samples, 0.20%)</title><rect x="279.8" y="675.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="282.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.09%)</title><rect x="282.2" y="675.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="285.2" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.12%)</title><rect x="283.2" y="707.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="286.2" y="718.0"></text>
</g>
<g>
<title>__send (1,226 samples, 35.43%)</title><rect x="284.5" y="707.0" width="418.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="287.5" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (1,215 samples, 35.12%)</title><rect x="288.3" y="691.0" width="414.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="291.3" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,215 samples, 35.12%)</title><rect x="288.3" y="675.0" width="414.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="291.3" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,192 samples, 34.45%)</title><rect x="296.1" y="659.0" width="406.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="299.1" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,191 samples, 34.42%)</title><rect x="296.5" y="643.0" width="406.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="299.5" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,180 samples, 34.10%)</title><rect x="300.2" y="627.0" width="402.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="303.2" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,171 samples, 33.84%)</title><rect x="303.3" y="611.0" width="399.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="306.3" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,161 samples, 33.55%)</title><rect x="306.7" y="595.0" width="396.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="309.7" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,149 samples, 33.21%)</title><rect x="310.8" y="579.0" width="391.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="313.8" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,087 samples, 31.42%)</title><rect x="331.9" y="563.0" width="370.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="334.9" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,026 samples, 29.65%)</title><rect x="352.7" y="547.0" width="350.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="355.7" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (982 samples, 28.38%)</title><rect x="367.8" y="531.0" width="334.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="370.8" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (925 samples, 26.73%)</title><rect x="387.2" y="515.0" width="315.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="390.2" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (824 samples, 23.82%)</title><rect x="421.6" y="499.0" width="281.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="424.6" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (805 samples, 23.27%)</title><rect x="428.1" y="483.0" width="274.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="431.1" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (781 samples, 22.57%)</title><rect x="436.3" y="467.0" width="266.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="439.3" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (771 samples, 22.28%)</title><rect x="439.7" y="451.0" width="263.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="442.7" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (749 samples, 21.65%)</title><rect x="447.2" y="435.0" width="255.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="450.2" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (707 samples, 20.43%)</title><rect x="461.5" y="419.0" width="241.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="464.5" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (676 samples, 19.54%)</title><rect x="472.1" y="403.0" width="230.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="475.1" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (617 samples, 17.83%)</title><rect x="492.2" y="387.0" width="210.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="495.2" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (530 samples, 15.32%)</title><rect x="521.9" y="371.0" width="180.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="524.9" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (498 samples, 14.39%)</title><rect x="532.8" y="355.0" width="169.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="535.8" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (468 samples, 13.53%)</title><rect x="543.0" y="339.0" width="159.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="546.0" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (454 samples, 13.12%)</title><rect x="547.8" y="323.0" width="154.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="550.8" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (445 samples, 12.86%)</title><rect x="550.9" y="307.0" width="151.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="553.9" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (436 samples, 12.60%)</title><rect x="554.0" y="291.0" width="148.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="557.0" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (432 samples, 12.49%)</title><rect x="555.3" y="275.0" width="147.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="558.3" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (417 samples, 12.05%)</title><rect x="560.4" y="259.0" width="142.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="563.4" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (395 samples, 11.42%)</title><rect x="567.9" y="243.0" width="134.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="570.9" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (392 samples, 11.33%)</title><rect x="569.0" y="227.0" width="133.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="572.0" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (390 samples, 11.27%)</title><rect x="569.6" y="211.0" width="133.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="572.6" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (384 samples, 11.10%)</title><rect x="571.7" y="195.0" width="131.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="574.7" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (361 samples, 10.43%)</title><rect x="579.5" y="179.0" width="123.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="582.5" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (319 samples, 9.22%)</title><rect x="593.9" y="163.0" width="108.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="596.9" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (300 samples, 8.67%)</title><rect x="600.3" y="147.0" width="102.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="603.3" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (255 samples, 7.37%)</title><rect x="615.7" y="131.0" width="87.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="618.7" y="142.0">[unknown]</text>
</g>
<g>
<title>[unknown] (210 samples, 6.07%)</title><rect x="631.0" y="115.0" width="71.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="634.0" y="126.0">[unknown]</text>
</g>
<g>
<title>[unknown] (198 samples, 5.72%)</title><rect x="635.1" y="99.0" width="67.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="638.1" y="110.0">[unknown]</text>
</g>
<g>
<title>[unknown] (186 samples, 5.38%)</title><rect x="639.2" y="83.0" width="63.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="642.2" y="94.0">[unknown]</text>
</g>
<g>
<title>[unknown] (23 samples, 0.66%)</title><rect x="694.8" y="67.0" width="7.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="697.8" y="78.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.46%)</title><rect x="697.2" y="51.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="700.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="698.6" y="35.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="701.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.72%)</title><rect x="702.7" y="787.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.72%)</title><rect x="702.7" y="771.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="703.0" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (23 samples, 0.66%)</title><rect x="703.3" y="755.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.09%)</title><rect x="704.7" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="705.0" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.0" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.06%)</title><rect x="705.0" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.0" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="705.4" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (11 samples, 0.32%)</title><rect x="705.7" y="739.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (10 samples, 0.29%)</title><rect x="706.1" y="723.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.1" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (10 samples, 0.29%)</title><rect x="706.1" y="707.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.09%)</title><rect x="708.5" y="691.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (3 samples, 0.09%)</title><rect x="708.5" y="675.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.5" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.14%)</title><rect x="709.5" y="739.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="712.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/489482817.action (201 samples, 5.81%)</title><rect x="711.2" y="803.0" width="68.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.2" y="814.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$entity$0 (201 samples, 5.81%)</title><rect x="711.2" y="787.0" width="68.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="798.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.get (201 samples, 5.81%)</title><rect x="711.2" y="771.0" width="68.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.2" y="782.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.14%)</title><rect x="711.9" y="755.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (194 samples, 5.61%)</title><rect x="713.6" y="755.0" width="66.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.6" y="766.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 1.01%)</title><rect x="713.6" y="739.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.95%)</title><rect x="714.2" y="723.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.95%)</title><rect x="714.2" y="707.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.43%)</title><rect x="715.3" y="691.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.endOfData (13 samples, 0.38%)</title><rect x="716.0" y="675.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (4 samples, 0.12%)</title><rect x="717.3" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="718.7" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (4 samples, 0.12%)</title><rect x="719.0" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.0" y="670.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.23%)</title><rect x="720.4" y="691.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="723.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="723.1" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.1" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.17%)</title><rect x="723.5" y="691.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="726.5" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="723.5" y="675.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="726.5" y="686.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.14%)</title><rect x="723.8" y="675.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="726.8" y="686.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.12%)</title><rect x="724.1" y="659.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="727.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (3 samples, 0.09%)</title><rect x="725.5" y="739.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.5" y="750.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (3 samples, 0.09%)</title><rect x="725.5" y="723.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.5" y="734.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.09%)</title><rect x="725.5" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.09%)</title><rect x="725.5" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.09%)</title><rect x="725.5" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (156 samples, 4.51%)</title><rect x="726.5" y="739.0" width="53.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.5" y="750.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.17%)</title><rect x="726.5" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (6 samples, 0.17%)</title><rect x="726.5" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (6 samples, 0.17%)</title><rect x="726.5" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowsIterator (150 samples, 4.34%)</title><rect x="728.6" y="723.0" width="51.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.6" y="734.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (106 samples, 3.06%)</title><rect x="728.6" y="707.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.6" y="718.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (106 samples, 3.06%)</title><rect x="728.6" y="691.0" width="36.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.6" y="702.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (21 samples, 0.61%)</title><rect x="730.3" y="675.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (20 samples, 0.58%)</title><rect x="730.6" y="659.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (20 samples, 0.58%)</title><rect x="730.6" y="643.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="736.8" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="736.8" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="737.1" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.1" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="737.1" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="737.1" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.1" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="737.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.09%)</title><rect x="737.4" y="675.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.06%)</title><rect x="737.8" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.06%)</title><rect x="737.8" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (60 samples, 1.73%)</title><rect x="738.5" y="675.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="659.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="742.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="643.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="742.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="627.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="742.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="611.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="742.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="595.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="579.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="742.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.1" y="563.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="742.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="739.5" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.5" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="739.5" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="739.5" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.23%)</title><rect x="739.8" y="659.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.23%)</title><rect x="739.8" y="643.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="741.9" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="741.9" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.12%)</title><rect x="742.6" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.09%)</title><rect x="743.9" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="744.3" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.06%)</title><rect x="744.3" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (41 samples, 1.18%)</title><rect x="744.9" y="659.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (18 samples, 0.52%)</title><rect x="745.6" y="643.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="750.7" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (1 samples, 0.03%)</title><rect x="751.4" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (17 samples, 0.49%)</title><rect x="751.8" y="643.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="752.8" y="627.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="755.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="752.8" y="611.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="755.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="752.8" y="595.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="755.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (13 samples, 0.38%)</title><rect x="753.1" y="627.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (13 samples, 0.38%)</title><rect x="753.1" y="611.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.09%)</title><rect x="756.5" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.12%)</title><rect x="757.6" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.09%)</title><rect x="757.9" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.09%)</title><rect x="757.9" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (17 samples, 0.49%)</title><rect x="758.9" y="675.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.09%)</title><rect x="760.3" y="659.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.03%)</title><rect x="760.6" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (1 samples, 0.03%)</title><rect x="761.0" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="761.0" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.26%)</title><rect x="761.3" y="659.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.26%)</title><rect x="761.3" y="643.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.06%)</title><rect x="762.3" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (1 samples, 0.03%)</title><rect x="762.7" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="763.0" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.09%)</title><rect x="763.4" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.03%)</title><rect x="764.4" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="764.4" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="764.4" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (44 samples, 1.27%)</title><rect x="764.7" y="707.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.12%)</title><rect x="764.7" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.03%)</title><rect x="765.4" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (1 samples, 0.03%)</title><rect x="765.7" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="765.7" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.23%)</title><rect x="766.1" y="691.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.20%)</title><rect x="766.4" y="675.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="766.8" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="766.8" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.03%)</title><rect x="766.8" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.03%)</title><rect x="767.1" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.12%)</title><rect x="767.5" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.26%)</title><rect x="768.8" y="691.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990451863.invoke (6 samples, 0.17%)</title><rect x="769.8" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (23 samples, 0.66%)</title><rect x="771.9" y="691.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.61%)</title><rect x="772.6" y="675.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="778.0" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.03%)</title><rect x="778.0" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.size (1 samples, 0.03%)</title><rect x="778.0" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.06%)</title><rect x="778.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.4" y="670.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.06%)</title><rect x="778.4" y="643.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="781.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.06%)</title><rect x="779.0" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.0" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,176 samples, 33.99%)</title><rect x="779.7" y="883.0" width="401.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.7" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.03%)</title><rect x="780.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="783.4" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="780.8" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="783.8" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.20%)</title><rect x="781.1" y="867.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="784.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.06%)</title><rect x="781.1" y="851.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="784.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.03%)</title><rect x="781.8" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="784.8" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="782.1" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="785.1" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="782.1" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="785.1" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="782.5" y="851.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="785.5" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="782.8" y="851.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="785.8" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="783.1" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.29%)</title><rect x="783.5" y="867.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.29%)</title><rect x="783.5" y="851.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="835.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="789.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="819.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="789.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="803.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="789.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="787.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="789.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="789.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="755.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="789.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="786.2" y="739.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="789.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="786.5" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (286 samples, 8.27%)</title><rect x="786.9" y="867.0" width="97.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.9" y="878.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.17%)</title><rect x="788.9" y="851.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.09%)</title><rect x="790.0" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (274 samples, 7.92%)</title><rect x="791.0" y="851.0" width="93.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.0" y="862.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.09%)</title><rect x="796.1" y="835.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="799.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="799.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="803.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="799.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="787.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="771.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="799.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="755.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="799.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="799.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="796.8" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="799.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (248 samples, 7.17%)</title><rect x="797.1" y="835.0" width="84.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="800.1" y="846.0">[unknown]</text>
</g>
<g>
<title>Klass::is_klass() const volatile (11 samples, 0.32%)</title><rect x="797.1" y="819.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="800.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="797.1" y="803.0" width="3.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="800.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="797.1" y="787.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="800.1" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="797.1" y="771.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="800.1" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="797.5" y="771.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="800.5" y="782.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.26%)</title><rect x="797.8" y="771.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="800.8" y="782.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.17%)</title><rect x="798.5" y="755.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="801.5" y="766.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="800.5" y="755.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="803.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="819.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="803.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="803.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="803.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="787.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="803.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="771.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="803.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="755.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="803.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="800.9" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="803.9" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.14%)</title><rect x="801.2" y="819.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.2" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.14%)</title><rect x="802.9" y="819.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="805.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (226 samples, 6.53%)</title><rect x="804.6" y="819.0" width="77.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="807.6" y="830.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (210 samples, 6.07%)</title><rect x="810.1" y="803.0" width="71.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="813.1" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (210 samples, 6.07%)</title><rect x="810.1" y="787.0" width="71.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="813.1" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (192 samples, 5.55%)</title><rect x="816.2" y="771.0" width="65.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="819.2" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (191 samples, 5.52%)</title><rect x="816.6" y="755.0" width="65.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="819.6" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (189 samples, 5.46%)</title><rect x="817.2" y="739.0" width="64.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="820.2" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (168 samples, 4.86%)</title><rect x="824.4" y="723.0" width="57.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="827.4" y="734.0">[unkno..</text>
</g>
<g>
<title>[unknown] (133 samples, 3.84%)</title><rect x="836.3" y="707.0" width="45.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="839.3" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (97 samples, 2.80%)</title><rect x="848.6" y="691.0" width="33.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="851.6" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (80 samples, 2.31%)</title><rect x="854.4" y="675.0" width="27.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="857.4" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 1.56%)</title><rect x="863.3" y="659.0" width="18.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="866.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="879.3" y="643.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="882.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.17%)</title><rect x="879.7" y="627.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="882.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.17%)</title><rect x="879.7" y="611.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="882.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.14%)</title><rect x="880.0" y="595.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="883.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="880.3" y="579.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="883.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="880.3" y="563.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="883.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="880.3" y="547.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="883.3" y="558.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="881.7" y="835.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="884.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.20%)</title><rect x="882.0" y="835.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="885.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (869 samples, 25.12%)</title><rect x="884.4" y="867.0" width="296.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="887.8" y="851.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="890.8" y="862.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="888.2" y="851.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="891.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (851 samples, 24.60%)</title><rect x="888.9" y="851.0" width="290.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.9" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (558 samples, 16.13%)</title><rect x="889.2" y="835.0" width="190.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.2" y="846.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5 samples, 0.14%)</title><rect x="892.6" y="819.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (436 samples, 12.60%)</title><rect x="894.3" y="819.0" width="148.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.3" y="830.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (430 samples, 12.43%)</title><rect x="896.4" y="803.0" width="146.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.4" y="814.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (403 samples, 11.65%)</title><rect x="897.7" y="787.0" width="137.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.7" y="798.0">RequestHandler0_e..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="900.8" y="771.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="903.8" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="901.1" y="771.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="904.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.55%)</title><rect x="901.5" y="771.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="902.8" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.14%)</title><rect x="903.2" y="755.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.09%)</title><rect x="903.9" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.26%)</title><rect x="904.9" y="755.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.20%)</title><rect x="905.6" y="739.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.20%)</title><rect x="905.6" y="723.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.20%)</title><rect x="905.6" y="707.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (373 samples, 10.78%)</title><rect x="908.0" y="771.0" width="127.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.0" y="782.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.12%)</title><rect x="909.0" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.12%)</title><rect x="909.0" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/489482817.get$Lambda (4 samples, 0.12%)</title><rect x="909.0" y="723.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/489482817.&lt;init&gt; (3 samples, 0.09%)</title><rect x="909.3" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.49%)</title><rect x="910.3" y="755.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.46%)</title><rect x="910.7" y="739.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.46%)</title><rect x="910.7" y="723.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.46%)</title><rect x="910.7" y="707.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="913.4" y="691.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="915.8" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="915.8" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.executeAsync (349 samples, 10.09%)</title><rect x="916.1" y="755.0" width="119.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.1" y="766.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="916.1" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="916.1" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/1479440256.get$Lambda (1 samples, 0.03%)</title><rect x="916.1" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/1479440256.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.1" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (348 samples, 10.06%)</title><rect x="916.5" y="739.0" width="118.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.5" y="750.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (348 samples, 10.06%)</title><rect x="916.5" y="723.0" width="118.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.5" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.06%)</title><rect x="916.8" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (338 samples, 9.77%)</title><rect x="917.5" y="707.0" width="115.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.5" y="718.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (40 samples, 1.16%)</title><rect x="917.5" y="691.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (40 samples, 1.16%)</title><rect x="917.5" y="675.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (40 samples, 1.16%)</title><rect x="917.5" y="659.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (40 samples, 1.16%)</title><rect x="917.5" y="643.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (40 samples, 1.16%)</title><rect x="917.5" y="627.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.06%)</title><rect x="929.8" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="930.5" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="931.2" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="931.2" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="934.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.06%)</title><rect x="931.2" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="931.2" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="934.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="931.2" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="931.2" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="931.2" y="595.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="934.2" y="606.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="931.2" y="579.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="934.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="931.5" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="931.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (296 samples, 8.55%)</title><rect x="931.8" y="691.0" width="101.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.8" y="702.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (296 samples, 8.55%)</title><rect x="931.8" y="675.0" width="101.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="934.8" y="686.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (296 samples, 8.55%)</title><rect x="931.8" y="659.0" width="101.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.8" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (296 samples, 8.55%)</title><rect x="931.8" y="643.0" width="101.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.8" y="654.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (296 samples, 8.55%)</title><rect x="931.8" y="627.0" width="101.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.8" y="638.0">jdk/internal..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="933.5" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="936.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.06%)</title><rect x="933.9" y="611.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="936.9" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="934.6" y="611.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="937.6" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="935.2" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="938.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.09%)</title><rect x="935.6" y="611.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (40 samples, 1.16%)</title><rect x="936.6" y="611.0" width="13.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="939.6" y="622.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="939.0" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.0" y="606.0"></text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.12%)</title><rect x="939.7" y="595.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="942.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.06%)</title><rect x="941.0" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="944.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="941.7" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="942.1" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="945.1" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="942.7" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="945.7" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (10 samples, 0.29%)</title><rect x="943.4" y="595.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="946.4" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="946.8" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="949.8" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.17%)</title><rect x="947.2" y="595.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="950.2" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="949.2" y="595.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="952.2" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="949.9" y="595.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="952.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="611.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="953.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="595.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="953.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="953.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="563.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="953.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="547.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="953.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="950.2" y="531.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="953.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.09%)</title><rect x="950.6" y="611.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="953.6" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="951.6" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="954.6" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (237 samples, 6.85%)</title><rect x="952.0" y="611.0" width="80.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="955.0" y="622.0">pthread_c..</text>
</g>
<g>
<title>[unknown] (224 samples, 6.47%)</title><rect x="956.4" y="595.0" width="76.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="959.4" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (224 samples, 6.47%)</title><rect x="956.4" y="579.0" width="76.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="959.4" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (207 samples, 5.98%)</title><rect x="962.2" y="563.0" width="70.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="965.2" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (203 samples, 5.87%)</title><rect x="963.5" y="547.0" width="69.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="966.5" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (200 samples, 5.78%)</title><rect x="964.6" y="531.0" width="68.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="967.6" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (188 samples, 5.43%)</title><rect x="968.7" y="515.0" width="64.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="971.7" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (178 samples, 5.14%)</title><rect x="972.1" y="499.0" width="60.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="975.1" y="510.0">[unkno..</text>
</g>
<g>
<title>[unknown] (163 samples, 4.71%)</title><rect x="977.2" y="483.0" width="55.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="980.2" y="494.0">[unkn..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="467.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1035.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="451.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1035.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="435.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1035.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="419.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1035.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="403.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1035.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="387.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1035.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1032.1" y="371.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1035.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.09%)</title><rect x="1032.8" y="707.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.09%)</title><rect x="1033.8" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.09%)</title><rect x="1033.8" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.09%)</title><rect x="1033.8" y="675.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1033.8" y="659.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.09%)</title><rect x="1033.8" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="1034.8" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="1034.8" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="1034.8" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="1034.8" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1034.8" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.8" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="1034.8" y="627.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1037.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.12%)</title><rect x="1035.2" y="787.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.32%)</title><rect x="1036.5" y="787.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.29%)</title><rect x="1036.9" y="771.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.17%)</title><rect x="1037.6" y="755.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="1039.6" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="1039.9" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1039.9" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.23%)</title><rect x="1040.3" y="787.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.23%)</title><rect x="1040.3" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.03%)</title><rect x="1040.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.20%)</title><rect x="1040.6" y="755.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.20%)</title><rect x="1040.6" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (53 samples, 1.53%)</title><rect x="1043.0" y="819.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.46%)</title><rect x="1044.4" y="803.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.20%)</title><rect x="1047.4" y="787.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.20%)</title><rect x="1047.4" y="771.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.14%)</title><rect x="1048.1" y="755.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.87%)</title><rect x="1049.8" y="803.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.72%)</title><rect x="1051.5" y="787.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.64%)</title><rect x="1052.6" y="771.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.55%)</title><rect x="1052.6" y="755.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (10 samples, 0.29%)</title><rect x="1055.3" y="739.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="1058.7" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (3 samples, 0.09%)</title><rect x="1059.0" y="755.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.03%)</title><rect x="1059.7" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.09%)</title><rect x="1060.1" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="1061.1" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.46%)</title><rect x="1061.4" y="819.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.46%)</title><rect x="1061.4" y="803.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.40%)</title><rect x="1062.1" y="787.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.14%)</title><rect x="1065.2" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.14%)</title><rect x="1065.2" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.09%)</title><rect x="1065.9" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 1.07%)</title><rect x="1066.9" y="819.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.01%)</title><rect x="1067.6" y="803.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="787.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1073.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1073.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="755.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1073.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1073.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="723.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1073.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="707.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1073.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1070.3" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1073.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.75%)</title><rect x="1070.6" y="787.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.75%)</title><rect x="1070.6" y="771.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.09%)</title><rect x="1078.5" y="755.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.5" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="1078.5" y="739.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1081.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (292 samples, 8.44%)</title><rect x="1079.5" y="835.0" width="99.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.5" y="846.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (288 samples, 8.32%)</title><rect x="1080.2" y="819.0" width="98.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.2" y="830.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.06%)</title><rect x="1085.0" y="803.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1088.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.99%)</title><rect x="1085.6" y="803.0" width="23.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1088.6" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (69 samples, 1.99%)</title><rect x="1085.6" y="787.0" width="23.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1088.6" y="798.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (51 samples, 1.47%)</title><rect x="1085.6" y="771.0" width="17.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1088.6" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.09%)</title><rect x="1087.3" y="755.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.3" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="1088.4" y="755.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.4" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (5 samples, 0.14%)</title><rect x="1089.4" y="755.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1092.4" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (10 samples, 0.29%)</title><rect x="1091.1" y="755.0" width="3.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1094.1" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (22 samples, 0.64%)</title><rect x="1094.5" y="755.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1097.5" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.14%)</title><rect x="1096.2" y="739.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1099.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (5 samples, 0.14%)</title><rect x="1097.9" y="739.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1100.9" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.06%)</title><rect x="1099.6" y="739.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1102.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="739.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1103.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="723.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1103.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1103.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="691.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1103.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="675.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1103.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="659.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1103.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1100.3" y="643.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1103.3" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.12%)</title><rect x="1100.6" y="739.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1103.6" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.09%)</title><rect x="1102.0" y="755.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1103.0" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1106.0" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.09%)</title><rect x="1103.4" y="771.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1106.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.26%)</title><rect x="1104.4" y="771.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1107.4" y="782.0"></text>
</g>
<g>
<title>recv (5 samples, 0.14%)</title><rect x="1107.5" y="771.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1110.5" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1109.2" y="803.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1112.2" y="814.0"></text>
</g>
<g>
<title>recv (202 samples, 5.84%)</title><rect x="1109.5" y="803.0" width="68.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1112.5" y="814.0">recv</text>
</g>
<g>
<title>[unknown] (183 samples, 5.29%)</title><rect x="1116.0" y="787.0" width="62.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1119.0" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (183 samples, 5.29%)</title><rect x="1116.0" y="771.0" width="62.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1119.0" y="782.0">[unkno..</text>
</g>
<g>
<title>[unknown] (165 samples, 4.77%)</title><rect x="1122.1" y="755.0" width="56.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1125.1" y="766.0">[unkno..</text>
</g>
<g>
<title>[unknown] (165 samples, 4.77%)</title><rect x="1122.1" y="739.0" width="56.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1125.1" y="750.0">[unkno..</text>
</g>
<g>
<title>[unknown] (156 samples, 4.51%)</title><rect x="1125.2" y="723.0" width="53.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1128.2" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (150 samples, 4.34%)</title><rect x="1127.2" y="707.0" width="51.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1130.2" y="718.0">[unkn..</text>
</g>
<g>
<title>[unknown] (146 samples, 4.22%)</title><rect x="1128.6" y="691.0" width="49.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1131.6" y="702.0">[unkn..</text>
</g>
<g>
<title>[unknown] (119 samples, 3.44%)</title><rect x="1137.8" y="675.0" width="40.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1140.8" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (94 samples, 2.72%)</title><rect x="1146.3" y="659.0" width="32.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1149.3" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (61 samples, 1.76%)</title><rect x="1157.6" y="643.0" width="20.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1160.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.24%)</title><rect x="1163.7" y="627.0" width="14.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1166.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.66%)</title><rect x="1170.6" y="611.0" width="7.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1173.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1177.7" y="595.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1180.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1177.7" y="579.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1180.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1177.7" y="563.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1180.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1177.7" y="547.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1180.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1177.7" y="531.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1180.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1178.1" y="515.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1181.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1178.1" y="499.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1181.1" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.06%)</title><rect x="1178.4" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.4" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.14%)</title><rect x="1179.1" y="851.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.1" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1179.4" y="835.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1182.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="1179.8" y="835.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1182.8" y="846.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.09%)</title><rect x="1179.8" y="819.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>start_thread (27 samples, 0.78%)</title><rect x="1180.8" y="883.0" width="9.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1183.8" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (27 samples, 0.78%)</title><rect x="1180.8" y="867.0" width="9.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1183.8" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (27 samples, 0.78%)</title><rect x="1180.8" y="851.0" width="9.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.06%)</title><rect x="1180.8" y="835.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.8" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.06%)</title><rect x="1180.8" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.06%)</title><rect x="1180.8" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.06%)</title><rect x="1180.8" y="787.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1180.8" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="1180.8" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.03%)</title><rect x="1181.1" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (16 samples, 0.46%)</title><rect x="1181.5" y="835.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (16 samples, 0.46%)</title><rect x="1181.5" y="819.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (16 samples, 0.46%)</title><rect x="1181.5" y="803.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.46%)</title><rect x="1181.5" y="787.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.5" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.46%)</title><rect x="1181.5" y="771.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (16 samples, 0.46%)</title><rect x="1181.5" y="755.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (10 samples, 0.29%)</title><rect x="1181.5" y="739.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.03%)</title><rect x="1181.5" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="734.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.03%)</title><rect x="1181.5" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.5" y="718.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.03%)</title><rect x="1181.8" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.03%)</title><rect x="1181.8" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.03%)</title><rect x="1181.8" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1181.8" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.06%)</title><rect x="1182.2" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.2" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.06%)</title><rect x="1182.2" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.2" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1182.2" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.2" y="702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.03%)</title><rect x="1182.5" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.5" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 0.17%)</title><rect x="1182.8" y="723.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.8" y="734.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.03%)</title><rect x="1182.8" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.06%)</title><rect x="1183.2" y="707.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="718.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="1183.2" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.03%)</title><rect x="1183.5" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.5" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (1 samples, 0.03%)</title><rect x="1183.9" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.9" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1183.9" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.9" y="702.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.03%)</title><rect x="1184.2" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.03%)</title><rect x="1184.2" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="702.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1184.2" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.2" y="686.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.03%)</title><rect x="1184.5" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.5" y="718.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1184.5" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="702.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.06%)</title><rect x="1184.9" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1184.9" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1184.9" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.9" y="718.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.03%)</title><rect x="1184.9" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="702.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1185.2" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1185.2" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1185.2" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 0.03%)</title><rect x="1185.2" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="686.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.03%)</title><rect x="1185.6" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.03%)</title><rect x="1185.6" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.03%)</title><rect x="1185.6" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1185.9" y="739.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1185.9" y="723.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1185.9" y="707.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.09%)</title><rect x="1185.9" y="691.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.09%)</title><rect x="1185.9" y="675.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="595.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="579.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="547.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="499.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="483.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="467.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="451.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="435.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="419.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="403.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="387.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.9" y="371.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="382.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.9" y="355.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="366.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.03%)</title><rect x="1185.9" y="339.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="350.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_access(bool, BasicType, LibraryCallKit::AccessKind, bool) (1 samples, 0.03%)</title><rect x="1185.9" y="323.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="334.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1185.9" y="307.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="318.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1185.9" y="291.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="302.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1185.9" y="275.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="286.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.03%)</title><rect x="1185.9" y="259.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="270.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1185.9" y="243.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="254.0"></text>
</g>
<g>
<title>AddLNode::bottom_type() const (1 samples, 0.03%)</title><rect x="1185.9" y="227.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1186.2" y="371.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="382.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1186.2" y="355.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="366.0"></text>
</g>
<g>
<title>IfTrueNode::always_taken(TypeTuple const*) const (1 samples, 0.03%)</title><rect x="1186.2" y="339.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1186.6" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.03%)</title><rect x="1186.6" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.03%)</title><rect x="1186.6" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>GraphKit::replace_in_map(Node*, Node*) (1 samples, 0.03%)</title><rect x="1186.6" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="622.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.03%)</title><rect x="1186.6" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.03%)</title><rect x="1186.9" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.23%)</title><rect x="1187.3" y="835.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.06%)</title><rect x="1187.3" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1187.3" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.03%)</title><rect x="1187.6" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.03%)</title><rect x="1188.0" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.14%)</title><rect x="1188.3" y="819.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.12%)</title><rect x="1188.6" y="803.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.12%)</title><rect x="1188.6" y="787.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1188.6" y="771.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1188.6" y="755.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1188.6" y="739.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.09%)</title><rect x="1189.0" y="771.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
</g>
</svg>
