<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (1,054 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=6009] (1 samples, 0.09%)</title><rect x="10.0" y="451.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.09%)</title><rect x="10.0" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (1 samples, 0.09%)</title><rect x="10.0" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (1 samples, 0.09%)</title><rect x="10.0" y="403.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (1 samples, 0.09%)</title><rect x="10.0" y="387.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6005] (6 samples, 0.57%)</title><rect x="11.1" y="451.0" width="6.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="14.1" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6 samples, 0.57%)</title><rect x="11.1" y="435.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.09%)</title><rect x="11.1" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.1" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.09%)</title><rect x="11.1" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="14.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 0.47%)</title><rect x="12.2" y="419.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.47%)</title><rect x="12.2" y="403.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.47%)</title><rect x="12.2" y="387.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.28%)</title><rect x="12.2" y="371.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.28%)</title><rect x="12.2" y="355.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.2" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.28%)</title><rect x="12.2" y="339.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="12.2" y="323.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="12.2" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="12.2" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="12.2" y="275.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2 samples, 0.19%)</title><rect x="13.4" y="323.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="13.4" y="307.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="13.4" y="291.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.19%)</title><rect x="13.4" y="275.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="16.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.09%)</title><rect x="15.6" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="15.6" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.09%)</title><rect x="15.6" y="339.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="16.7" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="16.7" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.7" y="366.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="16.7" y="339.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="19.7" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6023] (23 samples, 2.18%)</title><rect x="17.8" y="451.0" width="25.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="20.8" y="462.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (23 samples, 2.18%)</title><rect x="17.8" y="435.0" width="25.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (23 samples, 2.18%)</title><rect x="17.8" y="419.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (23 samples, 2.18%)</title><rect x="17.8" y="403.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 2.18%)</title><rect x="17.8" y="387.0" width="25.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.8" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.66%)</title><rect x="17.8" y="371.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.66%)</title><rect x="17.8" y="355.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.8" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (7 samples, 0.66%)</title><rect x="17.8" y="339.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (7 samples, 0.66%)</title><rect x="17.8" y="323.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="17.8" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="17.8" y="291.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="17.8" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="17.8" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.8" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="17.8" y="243.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="20.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="19.0" y="307.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="19.0" y="291.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.19%)</title><rect x="19.0" y="275.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="22.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1 samples, 0.09%)</title><rect x="21.2" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="21.2" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="21.2" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.get$Lambda (1 samples, 0.09%)</title><rect x="21.2" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.2" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$72 (1 samples, 0.09%)</title><rect x="21.2" y="243.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="24.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.28%)</title><rect x="22.3" y="307.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.28%)</title><rect x="22.3" y="291.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.28%)</title><rect x="22.3" y="275.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.28%)</title><rect x="22.3" y="259.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.28%)</title><rect x="22.3" y="243.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.76%)</title><rect x="25.7" y="371.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.7" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.19%)</title><rect x="25.7" y="355.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="27.9" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.09%)</title><rect x="27.9" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="30.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.47%)</title><rect x="29.0" y="355.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.47%)</title><rect x="29.0" y="339.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.0" y="350.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.19%)</title><rect x="29.0" y="323.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="32.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="31.3" y="323.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="34.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="33.5" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="33.5" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="33.5" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.5" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="33.5" y="275.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="36.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="34.6" y="371.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="34.6" y="355.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="366.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="34.6" y="339.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="37.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.47%)</title><rect x="35.7" y="339.0" width="5.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="38.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="41.3" y="339.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="41.3" y="323.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.19%)</title><rect x="41.3" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.3" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="41.3" y="291.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.3" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6013] (10 samples, 0.95%)</title><rect x="43.6" y="451.0" width="11.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="46.6" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 0.95%)</title><rect x="43.6" y="435.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 0.95%)</title><rect x="43.6" y="419.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 0.95%)</title><rect x="43.6" y="403.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 0.95%)</title><rect x="43.6" y="387.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.19%)</title><rect x="43.6" y="371.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.19%)</title><rect x="43.6" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.19%)</title><rect x="43.6" y="339.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="45.8" y="371.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="45.8" y="355.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.76%)</title><rect x="45.8" y="339.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.76%)</title><rect x="45.8" y="323.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.76%)</title><rect x="45.8" y="307.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.76%)</title><rect x="45.8" y="291.0" width="9.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="48.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6024] (38 samples, 3.61%)</title><rect x="54.8" y="451.0" width="42.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="57.8" y="462.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 3.61%)</title><rect x="54.8" y="435.0" width="42.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.19%)</title><rect x="54.8" y="419.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.8" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.19%)</title><rect x="54.8" y="403.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="57.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 3.42%)</title><rect x="57.0" y="419.0" width="40.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.0" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 3.42%)</title><rect x="57.0" y="403.0" width="40.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.0" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 3.42%)</title><rect x="57.0" y="387.0" width="40.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.0" y="398.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 1.42%)</title><rect x="57.0" y="371.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 1.42%)</title><rect x="57.0" y="355.0" width="16.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.0" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (11 samples, 1.04%)</title><rect x="57.0" y="339.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.38%)</title><rect x="57.0" y="323.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.38%)</title><rect x="57.0" y="307.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.38%)</title><rect x="57.0" y="291.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.38%)</title><rect x="57.0" y="275.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="60.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (7 samples, 0.66%)</title><rect x="61.5" y="323.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="61.5" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="61.5" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="61.5" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="61.5" y="259.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.5" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="61.5" y="243.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="62.6" y="307.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="62.6" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.19%)</title><rect x="62.6" y="275.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="65.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (3 samples, 0.28%)</title><rect x="64.9" y="307.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (3 samples, 0.28%)</title><rect x="64.9" y="291.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="64.9" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="64.9" y="259.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.get$Lambda (1 samples, 0.09%)</title><rect x="64.9" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$73 (1 samples, 0.09%)</title><rect x="64.9" y="227.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="67.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.19%)</title><rect x="66.0" y="275.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.19%)</title><rect x="66.0" y="259.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.19%)</title><rect x="66.0" y="243.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (1 samples, 0.09%)</title><rect x="68.2" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="68.2" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="68.2" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="68.2" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="68.2" y="243.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="71.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.38%)</title><rect x="69.3" y="339.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.38%)</title><rect x="69.3" y="323.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.38%)</title><rect x="69.3" y="307.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.38%)</title><rect x="69.3" y="291.0" width="4.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="72.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 1.14%)</title><rect x="73.8" y="371.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.09%)</title><rect x="73.8" y="355.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="76.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.28%)</title><rect x="74.9" y="355.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.28%)</title><rect x="74.9" y="339.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="78.3" y="355.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.76%)</title><rect x="78.3" y="339.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.3" y="350.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.38%)</title><rect x="78.3" y="323.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.38%)</title><rect x="82.8" y="323.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.38%)</title><rect x="82.8" y="307.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.38%)</title><rect x="82.8" y="291.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.38%)</title><rect x="82.8" y="275.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="85.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.85%)</title><rect x="87.2" y="371.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.85%)</title><rect x="87.2" y="355.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="366.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.38%)</title><rect x="87.2" y="339.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="90.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.38%)</title><rect x="91.7" y="339.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="94.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="96.2" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="96.2" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="96.2" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.2" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="96.2" y="291.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6007] (2 samples, 0.19%)</title><rect x="97.3" y="451.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="100.3" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2 samples, 0.19%)</title><rect x="97.3" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2 samples, 0.19%)</title><rect x="97.3" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2 samples, 0.19%)</title><rect x="97.3" y="403.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.19%)</title><rect x="97.3" y="387.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.09%)</title><rect x="97.3" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.09%)</title><rect x="97.3" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.09%)</title><rect x="97.3" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (1 samples, 0.09%)</title><rect x="97.3" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="97.3" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="97.3" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.09%)</title><rect x="97.3" y="275.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="100.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="98.4" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="98.4" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="98.4" y="339.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="98.4" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="98.4" y="307.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.4" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="98.4" y="291.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="101.4" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6017] (32 samples, 3.04%)</title><rect x="99.6" y="451.0" width="35.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="102.6" y="462.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 3.04%)</title><rect x="99.6" y="435.0" width="35.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.6" y="446.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.09%)</title><rect x="99.6" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.09%)</title><rect x="99.6" y="403.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="102.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 2.94%)</title><rect x="100.7" y="419.0" width="34.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.7" y="430.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 2.94%)</title><rect x="100.7" y="403.0" width="34.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.7" y="414.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 2.94%)</title><rect x="100.7" y="387.0" width="34.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.7" y="398.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 1.71%)</title><rect x="100.7" y="371.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 1.71%)</title><rect x="100.7" y="355.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.7" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (10 samples, 0.95%)</title><rect x="100.7" y="339.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="100.7" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="100.7" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="100.7" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="100.7" y="275.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="103.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (9 samples, 0.85%)</title><rect x="101.8" y="323.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="101.8" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="101.8" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.09%)</title><rect x="101.8" y="275.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="104.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (8 samples, 0.76%)</title><rect x="102.9" y="307.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="102.9" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="102.9" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.get$Lambda (1 samples, 0.09%)</title><rect x="102.9" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$72 (1 samples, 0.09%)</title><rect x="102.9" y="243.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="105.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (7 samples, 0.66%)</title><rect x="104.0" y="291.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.66%)</title><rect x="104.0" y="275.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.66%)</title><rect x="104.0" y="259.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.get$Lambda (7 samples, 0.66%)</title><rect x="104.0" y="243.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$73 (7 samples, 0.66%)</title><rect x="104.0" y="227.0" width="7.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="107.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.76%)</title><rect x="111.9" y="339.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.76%)</title><rect x="111.9" y="323.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.76%)</title><rect x="111.9" y="307.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.76%)</title><rect x="111.9" y="291.0" width="8.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="114.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 1.04%)</title><rect x="120.8" y="371.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.19%)</title><rect x="120.8" y="355.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="123.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.76%)</title><rect x="123.1" y="355.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.76%)</title><rect x="123.1" y="339.0" width="8.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="126.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="132.0" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="132.0" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.0" y="350.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="132.0" y="323.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="135.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="133.1" y="371.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="133.1" y="355.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.1" y="366.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.19%)</title><rect x="133.1" y="339.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.1" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6025] (32 samples, 3.04%)</title><rect x="135.4" y="451.0" width="35.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="138.4" y="462.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 3.04%)</title><rect x="135.4" y="435.0" width="35.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.4" y="446.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (32 samples, 3.04%)</title><rect x="135.4" y="419.0" width="35.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.4" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32 samples, 3.04%)</title><rect x="135.4" y="403.0" width="35.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.4" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (32 samples, 3.04%)</title><rect x="135.4" y="387.0" width="35.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.4" y="398.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 1.71%)</title><rect x="135.4" y="371.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 1.71%)</title><rect x="135.4" y="355.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (13 samples, 1.23%)</title><rect x="135.4" y="339.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.47%)</title><rect x="135.4" y="323.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.47%)</title><rect x="135.4" y="307.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.47%)</title><rect x="135.4" y="291.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.28%)</title><rect x="135.4" y="275.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="138.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.19%)</title><rect x="138.7" y="275.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.7" y="286.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="138.7" y="259.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="141.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (8 samples, 0.76%)</title><rect x="141.0" y="323.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.28%)</title><rect x="141.0" y="307.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.28%)</title><rect x="141.0" y="291.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.28%)</title><rect x="141.0" y="275.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.28%)</title><rect x="141.0" y="259.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.0" y="270.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="141.0" y="243.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="144.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="144.3" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="144.3" y="291.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.09%)</title><rect x="144.3" y="275.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="147.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (2 samples, 0.19%)</title><rect x="145.5" y="307.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.19%)</title><rect x="145.5" y="291.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.19%)</title><rect x="145.5" y="275.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.get$Lambda (2 samples, 0.19%)</title><rect x="145.5" y="259.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$72 (2 samples, 0.19%)</title><rect x="145.5" y="243.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="148.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.19%)</title><rect x="147.7" y="307.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.19%)</title><rect x="147.7" y="291.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.19%)</title><rect x="147.7" y="275.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.19%)</title><rect x="147.7" y="259.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="147.7" y="243.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="150.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title><rect x="148.8" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.8" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="148.8" y="227.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="151.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.47%)</title><rect x="149.9" y="339.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.47%)</title><rect x="149.9" y="323.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.47%)</title><rect x="149.9" y="307.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="149.9" y="291.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="152.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.28%)</title><rect x="152.2" y="291.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.2" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="152.2" y="275.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="155.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.76%)</title><rect x="155.5" y="371.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.19%)</title><rect x="155.5" y="355.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="158.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.19%)</title><rect x="157.8" y="355.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.19%)</title><rect x="157.8" y="339.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="160.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.38%)</title><rect x="160.0" y="355.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.38%)</title><rect x="160.0" y="339.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.0" y="350.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="160.0" y="323.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="163.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="161.1" y="323.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="164.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="162.3" y="323.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="162.3" y="307.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.19%)</title><rect x="162.3" y="291.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.3" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="162.3" y="275.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="165.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.57%)</title><rect x="164.5" y="371.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.57%)</title><rect x="164.5" y="355.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.5" y="366.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.28%)</title><rect x="164.5" y="339.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="167.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="167.9" y="339.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="170.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="169.0" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="169.0" y="323.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.19%)</title><rect x="169.0" y="307.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.0" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="169.0" y="291.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="172.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6008] (12 samples, 1.14%)</title><rect x="171.2" y="451.0" width="13.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="174.2" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12 samples, 1.14%)</title><rect x="171.2" y="435.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 1.14%)</title><rect x="171.2" y="419.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 1.14%)</title><rect x="171.2" y="403.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (12 samples, 1.14%)</title><rect x="171.2" y="387.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.38%)</title><rect x="171.2" y="371.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.38%)</title><rect x="171.2" y="355.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 0.38%)</title><rect x="171.2" y="339.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (4 samples, 0.38%)</title><rect x="171.2" y="323.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="171.2" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="171.2" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="171.2" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="171.2" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="171.2" y="243.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="174.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="172.3" y="307.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.19%)</title><rect x="172.3" y="291.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.19%)</title><rect x="172.3" y="275.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="175.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1 samples, 0.09%)</title><rect x="174.6" y="307.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="174.6" y="291.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="174.6" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.09%)</title><rect x="174.6" y="259.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.38%)</title><rect x="175.7" y="371.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="175.7" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.09%)</title><rect x="175.7" y="339.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="178.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.28%)</title><rect x="176.8" y="355.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.28%)</title><rect x="176.8" y="339.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.8" y="350.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="176.8" y="323.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="179.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="177.9" y="323.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="179.1" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="179.1" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="179.1" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.1" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="179.1" y="275.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="182.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.38%)</title><rect x="180.2" y="371.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.38%)</title><rect x="180.2" y="355.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.2" y="366.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.19%)</title><rect x="180.2" y="339.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="183.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="182.4" y="339.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="185.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="183.5" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="183.5" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="183.5" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.5" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="183.5" y="291.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="186.5" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6019] (41 samples, 3.89%)</title><rect x="184.6" y="451.0" width="46.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="187.6" y="462.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41 samples, 3.89%)</title><rect x="184.6" y="435.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.6" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.47%)</title><rect x="184.6" y="419.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.47%)</title><rect x="184.6" y="403.0" width="5.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 3.42%)</title><rect x="190.2" y="419.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.2" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 3.42%)</title><rect x="190.2" y="403.0" width="40.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.2" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 3.42%)</title><rect x="190.2" y="387.0" width="40.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.2" y="398.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 1.33%)</title><rect x="190.2" y="371.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 1.33%)</title><rect x="190.2" y="355.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.2" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (12 samples, 1.14%)</title><rect x="190.2" y="339.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="190.2" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="190.2" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="190.2" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="190.2" y="275.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="193.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (11 samples, 1.04%)</title><rect x="191.4" y="323.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="191.4" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="191.4" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="191.4" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="191.4" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.4" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="191.4" y="243.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="194.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.57%)</title><rect x="192.5" y="307.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.57%)</title><rect x="192.5" y="291.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.57%)</title><rect x="192.5" y="275.0" width="6.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="195.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (3 samples, 0.28%)</title><rect x="199.2" y="307.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="199.2" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="199.2" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.get$Lambda (1 samples, 0.09%)</title><rect x="199.2" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.2" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$72 (1 samples, 0.09%)</title><rect x="199.2" y="243.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="202.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (2 samples, 0.19%)</title><rect x="200.3" y="291.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="200.3" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="200.3" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.get$Lambda (1 samples, 0.09%)</title><rect x="200.3" y="243.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$73 (1 samples, 0.09%)</title><rect x="200.3" y="227.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="201.4" y="275.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="201.4" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.09%)</title><rect x="201.4" y="243.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (1 samples, 0.09%)</title><rect x="202.6" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="202.6" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="202.6" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="202.6" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="202.6" y="243.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="205.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.19%)</title><rect x="203.7" y="339.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.19%)</title><rect x="203.7" y="323.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.19%)</title><rect x="203.7" y="307.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.19%)</title><rect x="203.7" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.7" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="203.7" y="275.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="206.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.66%)</title><rect x="205.9" y="371.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.9" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.09%)</title><rect x="205.9" y="355.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="208.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.38%)</title><rect x="207.0" y="355.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.38%)</title><rect x="207.0" y="339.0" width="4.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="210.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="211.5" y="355.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="211.5" y="339.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="211.5" y="323.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="214.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="212.6" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="212.6" y="307.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="212.6" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.6" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="212.6" y="275.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="215.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 1.42%)</title><rect x="213.8" y="371.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 1.42%)</title><rect x="213.8" y="355.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.8" y="366.0"></text>
</g>
<g>
<title>char[] (12 samples, 1.14%)</title><rect x="213.8" y="339.0" width="13.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="216.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="227.2" y="339.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="230.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="228.3" y="339.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.19%)</title><rect x="228.3" y="323.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.19%)</title><rect x="228.3" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.3" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="228.3" y="291.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="231.3" y="302.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6088] (96 samples, 9.11%)</title><rect x="230.6" y="451.0" width="107.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="233.6" y="462.0">[asyncWorker-..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 9.11%)</title><rect x="230.6" y="435.0" width="107.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.6" y="446.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 9.11%)</title><rect x="230.6" y="419.0" width="107.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.6" y="430.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 9.11%)</title><rect x="230.6" y="403.0" width="107.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.6" y="414.0">java/util/con..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (96 samples, 9.11%)</title><rect x="230.6" y="387.0" width="107.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.6" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (96 samples, 9.11%)</title><rect x="230.6" y="371.0" width="107.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.6" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (96 samples, 9.11%)</title><rect x="230.6" y="355.0" width="107.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.6" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (2 samples, 0.19%)</title><rect x="230.6" y="339.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (2 samples, 0.19%)</title><rect x="230.6" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.19%)</title><rect x="230.6" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (2 samples, 0.19%)</title><rect x="230.6" y="291.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.6" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="230.6" y="275.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="233.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.09%)</title><rect x="231.7" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="231.7" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="231.7" y="243.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="234.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (93 samples, 8.82%)</title><rect x="232.8" y="339.0" width="104.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.8" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (93 samples, 8.82%)</title><rect x="232.8" y="323.0" width="104.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.8" y="334.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (93 samples, 8.82%)</title><rect x="232.8" y="307.0" width="104.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.8" y="318.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (86 samples, 8.16%)</title><rect x="232.8" y="291.0" width="96.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.8" y="302.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (39 samples, 3.70%)</title><rect x="232.8" y="275.0" width="43.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="235.8" y="286.0">byte[]</text>
</g>
<g>
<title>byte[] (47 samples, 4.46%)</title><rect x="276.5" y="275.0" width="52.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="279.5" y="286.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.57%)</title><rect x="329.1" y="291.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.1" y="302.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.09%)</title><rect x="329.1" y="275.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="332.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.47%)</title><rect x="330.2" y="275.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.47%)</title><rect x="330.2" y="259.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.47%)</title><rect x="330.2" y="243.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="254.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.28%)</title><rect x="330.2" y="227.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="333.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="333.5" y="227.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="336.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.09%)</title><rect x="335.8" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="335.8" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.8" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="335.8" y="259.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="338.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (1 samples, 0.09%)</title><rect x="336.9" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.09%)</title><rect x="336.9" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.9" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.09%)</title><rect x="336.9" y="307.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="339.9" y="318.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6089] (56 samples, 5.31%)</title><rect x="338.0" y="451.0" width="62.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="341.0" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (56 samples, 5.31%)</title><rect x="338.0" y="435.0" width="62.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.0" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (56 samples, 5.31%)</title><rect x="338.0" y="419.0" width="62.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.0" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (56 samples, 5.31%)</title><rect x="338.0" y="403.0" width="62.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.0" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.09%)</title><rect x="338.0" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.09%)</title><rect x="338.0" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.09%)</title><rect x="338.0" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="338.0" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.09%)</title><rect x="338.0" y="323.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="341.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (55 samples, 5.22%)</title><rect x="339.1" y="387.0" width="61.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.1" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (55 samples, 5.22%)</title><rect x="339.1" y="371.0" width="61.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.1" y="382.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.85%)</title><rect x="339.1" y="355.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.85%)</title><rect x="339.1" y="339.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.66%)</title><rect x="339.1" y="323.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.66%)</title><rect x="339.1" y="307.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.1" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.66%)</title><rect x="339.1" y="291.0" width="7.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="342.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.19%)</title><rect x="347.0" y="323.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.0" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.19%)</title><rect x="347.0" y="307.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="350.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (46 samples, 4.36%)</title><rect x="349.2" y="355.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.2" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (46 samples, 4.36%)</title><rect x="349.2" y="339.0" width="51.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.2" y="350.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (46 samples, 4.36%)</title><rect x="349.2" y="323.0" width="51.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.2" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (38 samples, 3.61%)</title><rect x="349.2" y="307.0" width="42.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.2" y="318.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (38 samples, 3.61%)</title><rect x="349.2" y="291.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.2" y="302.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.66%)</title><rect x="349.2" y="275.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.19%)</title><rect x="349.2" y="259.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.19%)</title><rect x="349.2" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.19%)</title><rect x="349.2" y="227.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (2 samples, 0.19%)</title><rect x="349.2" y="211.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.19%)</title><rect x="349.2" y="195.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.19%)</title><rect x="349.2" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.19%)</title><rect x="349.2" y="163.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="352.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (5 samples, 0.47%)</title><rect x="351.5" y="259.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.47%)</title><rect x="351.5" y="243.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.47%)</title><rect x="351.5" y="227.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.47%)</title><rect x="351.5" y="211.0" width="5.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="354.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (29 samples, 2.75%)</title><rect x="357.1" y="275.0" width="32.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (13 samples, 1.23%)</title><rect x="357.1" y="259.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="357.1" y="243.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.1" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.19%)</title><rect x="357.1" y="227.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="360.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="359.3" y="227.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.3" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="359.3" y="211.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="362.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="360.4" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="360.4" y="195.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="363.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.85%)</title><rect x="361.5" y="243.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.19%)</title><rect x="361.5" y="227.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="364.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.66%)</title><rect x="363.8" y="227.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.66%)</title><rect x="363.8" y="211.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.66%)</title><rect x="363.8" y="195.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.66%)</title><rect x="363.8" y="179.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (7 samples, 0.66%)</title><rect x="363.8" y="163.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (7 samples, 0.66%)</title><rect x="363.8" y="147.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.66%)</title><rect x="363.8" y="131.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.66%)</title><rect x="363.8" y="115.0" width="7.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="366.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (16 samples, 1.52%)</title><rect x="371.6" y="259.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="371.6" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="371.6" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="371.6" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="371.6" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.6" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="371.6" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="371.6" y="163.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="374.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (15 samples, 1.42%)</title><rect x="372.7" y="243.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (6 samples, 0.57%)</title><rect x="372.7" y="227.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.47%)</title><rect x="372.7" y="211.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.47%)</title><rect x="372.7" y="195.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.7" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="372.7" y="179.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="375.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.19%)</title><rect x="373.9" y="179.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.9" y="190.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.19%)</title><rect x="373.9" y="163.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="376.9" y="174.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.19%)</title><rect x="376.1" y="179.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="379.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="378.3" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.3" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="378.3" y="195.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="381.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9 samples, 0.85%)</title><rect x="379.4" y="227.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="379.4" y="211.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="379.4" y="195.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="382.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (8 samples, 0.76%)</title><rect x="380.6" y="211.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.38%)</title><rect x="380.6" y="195.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (4 samples, 0.38%)</title><rect x="380.6" y="179.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="383.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.19%)</title><rect x="385.0" y="195.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.19%)</title><rect x="385.0" y="179.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="388.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="387.3" y="195.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="387.3" y="179.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="387.3" y="163.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.19%)</title><rect x="387.3" y="147.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="390.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.19%)</title><rect x="389.5" y="275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.19%)</title><rect x="389.5" y="259.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.19%)</title><rect x="389.5" y="243.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="392.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (8 samples, 0.76%)</title><rect x="391.8" y="307.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (1 samples, 0.09%)</title><rect x="391.8" y="291.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (1 samples, 0.09%)</title><rect x="391.8" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="391.8" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.09%)</title><rect x="391.8" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.09%)</title><rect x="391.8" y="227.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="391.8" y="211.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="394.8" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.19%)</title><rect x="392.9" y="291.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="395.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.47%)</title><rect x="395.1" y="291.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.1" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="395.1" y="275.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="398.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.09%)</title><rect x="396.2" y="275.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="399.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.28%)</title><rect x="397.4" y="275.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="400.4" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6093] (51 samples, 4.84%)</title><rect x="400.7" y="451.0" width="57.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="403.7" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (51 samples, 4.84%)</title><rect x="400.7" y="435.0" width="57.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.7" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (51 samples, 4.84%)</title><rect x="400.7" y="419.0" width="57.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.7" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (51 samples, 4.84%)</title><rect x="400.7" y="403.0" width="57.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.7" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.09%)</title><rect x="400.7" y="387.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.09%)</title><rect x="400.7" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.09%)</title><rect x="400.7" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="400.7" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.09%)</title><rect x="400.7" y="323.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="403.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (50 samples, 4.74%)</title><rect x="401.8" y="387.0" width="56.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.8" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (50 samples, 4.74%)</title><rect x="401.8" y="371.0" width="56.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.8" y="382.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.47%)</title><rect x="401.8" y="355.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.47%)</title><rect x="401.8" y="339.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.47%)</title><rect x="401.8" y="323.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.47%)</title><rect x="401.8" y="307.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.8" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.47%)</title><rect x="401.8" y="291.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="404.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (45 samples, 4.27%)</title><rect x="407.4" y="355.0" width="50.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.4" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (45 samples, 4.27%)</title><rect x="407.4" y="339.0" width="50.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.4" y="350.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (45 samples, 4.27%)</title><rect x="407.4" y="323.0" width="50.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.4" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (39 samples, 3.70%)</title><rect x="407.4" y="307.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.4" y="318.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (39 samples, 3.70%)</title><rect x="407.4" y="291.0" width="43.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.4" y="302.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.95%)</title><rect x="407.4" y="275.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.57%)</title><rect x="407.4" y="259.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.57%)</title><rect x="407.4" y="243.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.57%)</title><rect x="407.4" y="227.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (6 samples, 0.57%)</title><rect x="407.4" y="211.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.57%)</title><rect x="407.4" y="195.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.57%)</title><rect x="407.4" y="179.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.57%)</title><rect x="407.4" y="163.0" width="6.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="410.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (4 samples, 0.38%)</title><rect x="414.2" y="259.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.38%)</title><rect x="414.2" y="243.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.38%)</title><rect x="414.2" y="227.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.38%)</title><rect x="414.2" y="211.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="417.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (28 samples, 2.66%)</title><rect x="418.6" y="275.0" width="31.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.6" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (10 samples, 0.95%)</title><rect x="418.6" y="259.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="418.6" y="243.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.6" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="418.6" y="227.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="421.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.28%)</title><rect x="419.8" y="227.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.8" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="419.8" y="211.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="422.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.19%)</title><rect x="420.9" y="211.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.9" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.19%)</title><rect x="420.9" y="195.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="423.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.57%)</title><rect x="423.1" y="243.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.57%)</title><rect x="423.1" y="227.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.57%)</title><rect x="423.1" y="211.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.57%)</title><rect x="423.1" y="195.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.57%)</title><rect x="423.1" y="179.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (6 samples, 0.57%)</title><rect x="423.1" y="163.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.57%)</title><rect x="423.1" y="147.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.57%)</title><rect x="423.1" y="131.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.57%)</title><rect x="423.1" y="115.0" width="6.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="426.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (18 samples, 1.71%)</title><rect x="429.8" y="259.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (18 samples, 1.71%)</title><rect x="429.8" y="243.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (10 samples, 0.95%)</title><rect x="429.8" y="227.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.85%)</title><rect x="429.8" y="211.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.8" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.19%)</title><rect x="429.8" y="195.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="432.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.66%)</title><rect x="432.1" y="195.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.1" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.28%)</title><rect x="432.1" y="179.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="435.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.19%)</title><rect x="435.4" y="179.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.4" y="190.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.19%)</title><rect x="435.4" y="163.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="438.4" y="174.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="437.7" y="179.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="440.7" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="438.8" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="438.8" y="163.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="441.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="439.9" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.9" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="439.9" y="195.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="442.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (8 samples, 0.76%)</title><rect x="441.0" y="227.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.0" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.19%)</title><rect x="441.0" y="211.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="444.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.38%)</title><rect x="443.3" y="211.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.38%)</title><rect x="443.3" y="195.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.38%)</title><rect x="443.3" y="179.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.38%)</title><rect x="443.3" y="163.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.38%)</title><rect x="443.3" y="147.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.38%)</title><rect x="443.3" y="131.0" width="4.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="446.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (2 samples, 0.19%)</title><rect x="447.7" y="211.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="447.7" y="195.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="447.7" y="179.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="447.7" y="163.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.19%)</title><rect x="447.7" y="147.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="450.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="450.0" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="450.0" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="450.0" y="243.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="453.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (6 samples, 0.57%)</title><rect x="451.1" y="307.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.1" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="451.1" y="291.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="454.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (3 samples, 0.28%)</title><rect x="452.2" y="291.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (3 samples, 0.28%)</title><rect x="452.2" y="275.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.28%)</title><rect x="452.2" y="259.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.09%)</title><rect x="452.2" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="452.2" y="227.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="455.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.19%)</title><rect x="453.3" y="243.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.19%)</title><rect x="453.3" y="227.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.3" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="453.3" y="211.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="456.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.19%)</title><rect x="455.6" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.09%)</title><rect x="455.6" y="275.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="458.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="456.7" y="275.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="459.7" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6085] (120 samples, 11.39%)</title><rect x="457.8" y="451.0" width="134.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="460.8" y="462.0">[asyncWorker-1 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (120 samples, 11.39%)</title><rect x="457.8" y="435.0" width="134.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.8" y="446.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (120 samples, 11.39%)</title><rect x="457.8" y="419.0" width="134.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.8" y="430.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (120 samples, 11.39%)</title><rect x="457.8" y="403.0" width="134.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.8" y="414.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (120 samples, 11.39%)</title><rect x="457.8" y="387.0" width="134.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.8" y="398.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (120 samples, 11.39%)</title><rect x="457.8" y="371.0" width="134.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.8" y="382.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.09%)</title><rect x="457.8" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (1 samples, 0.09%)</title><rect x="457.8" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.8" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (1 samples, 0.09%)</title><rect x="457.8" y="323.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="460.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.19%)</title><rect x="458.9" y="355.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.19%)</title><rect x="458.9" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.19%)</title><rect x="458.9" y="323.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.09%)</title><rect x="458.9" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.09%)</title><rect x="458.9" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.09%)</title><rect x="458.9" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.09%)</title><rect x="458.9" y="259.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/1121454968.accept (1 samples, 0.09%)</title><rect x="458.9" y="243.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (1 samples, 0.09%)</title><rect x="458.9" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.9" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (1 samples, 0.09%)</title><rect x="458.9" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.9" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.09%)</title><rect x="458.9" y="195.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.9" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.09%)</title><rect x="458.9" y="179.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="461.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.09%)</title><rect x="460.1" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.09%)</title><rect x="460.1" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (1 samples, 0.09%)</title><rect x="460.1" y="275.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="463.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (117 samples, 11.10%)</title><rect x="461.2" y="355.0" width="131.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.2" y="366.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (1 samples, 0.09%)</title><rect x="461.2" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (1 samples, 0.09%)</title><rect x="461.2" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (1 samples, 0.09%)</title><rect x="461.2" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.09%)</title><rect x="461.2" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.09%)</title><rect x="461.2" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.09%)</title><rect x="461.2" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.09%)</title><rect x="461.2" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="461.2" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.2" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="461.2" y="211.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="464.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (115 samples, 10.91%)</title><rect x="462.3" y="339.0" width="128.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.3" y="350.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (115 samples, 10.91%)</title><rect x="462.3" y="323.0" width="128.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.3" y="334.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (115 samples, 10.91%)</title><rect x="462.3" y="307.0" width="128.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.3" y="318.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (111 samples, 10.53%)</title><rect x="462.3" y="291.0" width="124.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.3" y="302.0">one/nio/http/Ht..</text>
</g>
<g>
<title>byte[] (41 samples, 3.89%)</title><rect x="462.3" y="275.0" width="45.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="465.3" y="286.0">byte[]</text>
</g>
<g>
<title>byte[] (70 samples, 6.64%)</title><rect x="508.2" y="275.0" width="78.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.2" y="286.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.28%)</title><rect x="586.6" y="291.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="586.6" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="586.6" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="586.6" y="243.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="589.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.19%)</title><rect x="587.7" y="275.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="587.7" y="259.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="587.7" y="243.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="254.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="587.7" y="227.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="590.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="588.8" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="588.8" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="588.8" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.8" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="588.8" y="179.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="591.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.09%)</title><rect x="589.9" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="589.9" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.9" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="589.9" y="259.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="592.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (1 samples, 0.09%)</title><rect x="591.0" y="339.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.09%)</title><rect x="591.0" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.09%)</title><rect x="591.0" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.09%)</title><rect x="591.0" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.09%)</title><rect x="591.0" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.0" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.09%)</title><rect x="591.0" y="259.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.0" y="270.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6090] (54 samples, 5.12%)</title><rect x="592.2" y="451.0" width="60.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="595.2" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (54 samples, 5.12%)</title><rect x="592.2" y="435.0" width="60.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.2" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (54 samples, 5.12%)</title><rect x="592.2" y="419.0" width="60.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.2" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (54 samples, 5.12%)</title><rect x="592.2" y="403.0" width="60.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.2" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.09%)</title><rect x="592.2" y="387.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.09%)</title><rect x="592.2" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.09%)</title><rect x="592.2" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="592.2" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.09%)</title><rect x="592.2" y="323.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="595.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (53 samples, 5.03%)</title><rect x="593.3" y="387.0" width="59.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.3" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (53 samples, 5.03%)</title><rect x="593.3" y="371.0" width="59.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.3" y="382.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.38%)</title><rect x="593.3" y="355.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.38%)</title><rect x="593.3" y="339.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="593.3" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="593.3" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.3" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="593.3" y="291.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="596.3" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.28%)</title><rect x="594.4" y="323.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.28%)</title><rect x="594.4" y="307.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (49 samples, 4.65%)</title><rect x="597.8" y="355.0" width="54.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.8" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (49 samples, 4.65%)</title><rect x="597.8" y="339.0" width="54.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.8" y="350.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (49 samples, 4.65%)</title><rect x="597.8" y="323.0" width="54.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.8" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (39 samples, 3.70%)</title><rect x="597.8" y="307.0" width="43.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.8" y="318.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (39 samples, 3.70%)</title><rect x="597.8" y="291.0" width="43.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.8" y="302.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.95%)</title><rect x="597.8" y="275.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.38%)</title><rect x="597.8" y="259.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.38%)</title><rect x="597.8" y="243.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.38%)</title><rect x="597.8" y="227.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (4 samples, 0.38%)</title><rect x="597.8" y="211.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.38%)</title><rect x="597.8" y="195.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.38%)</title><rect x="597.8" y="179.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.38%)</title><rect x="597.8" y="163.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (6 samples, 0.57%)</title><rect x="602.2" y="259.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.57%)</title><rect x="602.2" y="243.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.57%)</title><rect x="602.2" y="227.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.57%)</title><rect x="602.2" y="211.0" width="6.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="605.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (28 samples, 2.66%)</title><rect x="609.0" y="275.0" width="31.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.0" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (16 samples, 1.52%)</title><rect x="609.0" y="259.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (12 samples, 1.14%)</title><rect x="609.0" y="243.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.0" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.19%)</title><rect x="609.0" y="227.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="612.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.95%)</title><rect x="611.2" y="227.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.2" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.19%)</title><rect x="611.2" y="211.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="614.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.09%)</title><rect x="613.4" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.4" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.09%)</title><rect x="613.4" y="195.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="616.4" y="206.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.19%)</title><rect x="614.6" y="211.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="617.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.47%)</title><rect x="616.8" y="211.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.47%)</title><rect x="616.8" y="195.0" width="5.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="619.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.38%)</title><rect x="622.4" y="243.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.38%)</title><rect x="622.4" y="227.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.38%)</title><rect x="622.4" y="211.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.38%)</title><rect x="622.4" y="195.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.38%)</title><rect x="622.4" y="179.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (4 samples, 0.38%)</title><rect x="622.4" y="163.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.38%)</title><rect x="622.4" y="147.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.38%)</title><rect x="622.4" y="131.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.38%)</title><rect x="622.4" y="115.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="625.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (12 samples, 1.14%)</title><rect x="626.9" y="259.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="626.9" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="626.9" y="227.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="629.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (11 samples, 1.04%)</title><rect x="628.0" y="243.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="628.0" y="227.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="628.0" y="211.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.0" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="628.0" y="195.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="631.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.28%)</title><rect x="629.1" y="195.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.19%)</title><rect x="629.1" y="179.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.1" y="190.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.19%)</title><rect x="629.1" y="163.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="632.1" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="631.3" y="179.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.3" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="631.3" y="163.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="634.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (7 samples, 0.66%)</title><rect x="632.5" y="227.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.5" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.09%)</title><rect x="632.5" y="211.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="635.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="633.6" y="211.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="633.6" y="195.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="633.6" y="179.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="633.6" y="163.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.19%)</title><rect x="633.6" y="147.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.19%)</title><rect x="633.6" y="131.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="636.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="635.8" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="635.8" y="195.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="638.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (3 samples, 0.28%)</title><rect x="636.9" y="211.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.09%)</title><rect x="636.9" y="195.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (1 samples, 0.09%)</title><rect x="636.9" y="179.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="638.1" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="638.1" y="179.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="641.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.09%)</title><rect x="639.2" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.09%)</title><rect x="639.2" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.09%)</title><rect x="639.2" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1 samples, 0.09%)</title><rect x="639.2" y="147.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="642.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="640.3" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="640.3" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="640.3" y="243.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="643.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (10 samples, 0.95%)</title><rect x="641.4" y="307.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (7 samples, 0.66%)</title><rect x="641.4" y="291.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (7 samples, 0.66%)</title><rect x="641.4" y="275.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.66%)</title><rect x="641.4" y="259.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.19%)</title><rect x="641.4" y="243.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="641.4" y="227.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="644.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.47%)</title><rect x="643.7" y="243.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.47%)</title><rect x="643.7" y="227.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.7" y="238.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.47%)</title><rect x="643.7" y="211.0" width="5.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="646.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.28%)</title><rect x="649.3" y="291.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.28%)</title><rect x="649.3" y="275.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="652.3" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6094] (55 samples, 5.22%)</title><rect x="652.6" y="451.0" width="61.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="655.6" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (55 samples, 5.22%)</title><rect x="652.6" y="435.0" width="61.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.6" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (55 samples, 5.22%)</title><rect x="652.6" y="419.0" width="61.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (55 samples, 5.22%)</title><rect x="652.6" y="403.0" width="61.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.6" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.19%)</title><rect x="652.6" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.19%)</title><rect x="652.6" y="371.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.19%)</title><rect x="652.6" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.19%)</title><rect x="652.6" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.19%)</title><rect x="652.6" y="323.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="655.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (53 samples, 5.03%)</title><rect x="654.9" y="387.0" width="59.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.9" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (53 samples, 5.03%)</title><rect x="654.9" y="371.0" width="59.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.9" y="382.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.57%)</title><rect x="654.9" y="355.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.57%)</title><rect x="654.9" y="339.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.47%)</title><rect x="654.9" y="323.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.47%)</title><rect x="654.9" y="307.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.9" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.47%)</title><rect x="654.9" y="291.0" width="5.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="657.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.09%)</title><rect x="660.5" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.5" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.09%)</title><rect x="660.5" y="307.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="663.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (47 samples, 4.46%)</title><rect x="661.6" y="355.0" width="52.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.6" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (47 samples, 4.46%)</title><rect x="661.6" y="339.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.6" y="350.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (47 samples, 4.46%)</title><rect x="661.6" y="323.0" width="52.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.6" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (41 samples, 3.89%)</title><rect x="661.6" y="307.0" width="45.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.6" y="318.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (41 samples, 3.89%)</title><rect x="661.6" y="291.0" width="45.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.6" y="302.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 1.33%)</title><rect x="661.6" y="275.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.66%)</title><rect x="661.6" y="259.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.66%)</title><rect x="661.6" y="243.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.66%)</title><rect x="661.6" y="227.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (7 samples, 0.66%)</title><rect x="661.6" y="211.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (7 samples, 0.66%)</title><rect x="661.6" y="195.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.66%)</title><rect x="661.6" y="179.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.66%)</title><rect x="661.6" y="163.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="664.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (7 samples, 0.66%)</title><rect x="669.4" y="259.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (7 samples, 0.66%)</title><rect x="669.4" y="243.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.66%)</title><rect x="669.4" y="227.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.66%)</title><rect x="669.4" y="211.0" width="7.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="672.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (26 samples, 2.47%)</title><rect x="677.2" y="275.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.2" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (7 samples, 0.66%)</title><rect x="677.2" y="259.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.47%)</title><rect x="677.2" y="243.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.47%)</title><rect x="677.2" y="227.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.2" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="677.2" y="211.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="680.2" y="222.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="678.4" y="211.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="681.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.28%)</title><rect x="679.5" y="211.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.28%)</title><rect x="679.5" y="195.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="682.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.19%)</title><rect x="682.8" y="243.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="682.8" y="227.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="685.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.09%)</title><rect x="684.0" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.09%)</title><rect x="684.0" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.09%)</title><rect x="684.0" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.09%)</title><rect x="684.0" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (1 samples, 0.09%)</title><rect x="684.0" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="684.0" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="684.0" y="131.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="684.0" y="115.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="687.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (19 samples, 1.80%)</title><rect x="685.1" y="259.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.1" y="270.0">r..</text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.47%)</title><rect x="685.1" y="243.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.47%)</title><rect x="685.1" y="227.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.47%)</title><rect x="685.1" y="211.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.47%)</title><rect x="685.1" y="195.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.47%)</title><rect x="685.1" y="179.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.47%)</title><rect x="685.1" y="163.0" width="5.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="688.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="690.7" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="690.7" y="227.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="693.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (13 samples, 1.23%)</title><rect x="691.8" y="243.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="691.8" y="227.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.28%)</title><rect x="691.8" y="211.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.28%)</title><rect x="691.8" y="195.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.8" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="691.8" y="179.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="694.8" y="190.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="692.9" y="179.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="695.9" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="694.0" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="694.0" y="163.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="697.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="695.2" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.2" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="695.2" y="195.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="698.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9 samples, 0.85%)</title><rect x="696.3" y="227.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="696.3" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="696.3" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="696.3" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="696.3" y="163.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="696.3" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="696.3" y="131.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="699.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.38%)</title><rect x="697.4" y="211.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.38%)</title><rect x="697.4" y="195.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="700.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (4 samples, 0.38%)</title><rect x="701.9" y="211.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.19%)</title><rect x="701.9" y="195.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.19%)</title><rect x="701.9" y="179.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="704.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="704.1" y="195.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="704.1" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="704.1" y="163.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.19%)</title><rect x="704.1" y="147.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="707.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="706.4" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="706.4" y="259.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="706.4" y="243.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="709.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (6 samples, 0.57%)</title><rect x="707.5" y="307.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (3 samples, 0.28%)</title><rect x="707.5" y="291.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (3 samples, 0.28%)</title><rect x="707.5" y="275.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.28%)</title><rect x="707.5" y="259.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.28%)</title><rect x="707.5" y="243.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.28%)</title><rect x="707.5" y="227.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.5" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="707.5" y="211.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="710.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.28%)</title><rect x="710.8" y="291.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.8" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="710.8" y="275.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="713.8" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6086] (106 samples, 10.06%)</title><rect x="714.2" y="451.0" width="118.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="717.2" y="462.0">[asyncWorker-2..</text>
</g>
<g>
<title>java/lang/Thread.run (106 samples, 10.06%)</title><rect x="714.2" y="435.0" width="118.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.2" y="446.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106 samples, 10.06%)</title><rect x="714.2" y="419.0" width="118.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.2" y="430.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106 samples, 10.06%)</title><rect x="714.2" y="403.0" width="118.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.2" y="414.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (106 samples, 10.06%)</title><rect x="714.2" y="387.0" width="118.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.2" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (106 samples, 10.06%)</title><rect x="714.2" y="371.0" width="118.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.2" y="382.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.09%)</title><rect x="714.2" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.09%)</title><rect x="714.2" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.09%)</title><rect x="714.2" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.09%)</title><rect x="714.2" y="307.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.09%)</title><rect x="714.2" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.09%)</title><rect x="714.2" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.09%)</title><rect x="714.2" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.09%)</title><rect x="714.2" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$78/823321958.accept (1 samples, 0.09%)</title><rect x="714.2" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="714.2" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="714.2" y="195.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="714.2" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="714.2" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="714.2" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="714.2" y="131.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="717.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.09%)</title><rect x="715.3" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.09%)</title><rect x="715.3" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.09%)</title><rect x="715.3" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.09%)</title><rect x="715.3" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.09%)</title><rect x="715.3" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.09%)</title><rect x="715.3" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (1 samples, 0.09%)</title><rect x="715.3" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.09%)</title><rect x="715.3" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.3" y="254.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$101/112769521.apply (1 samples, 0.09%)</title><rect x="715.3" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.3" y="238.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.09%)</title><rect x="715.3" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$98/512492279.compare (1 samples, 0.09%)</title><rect x="715.3" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.09%)</title><rect x="715.3" y="179.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$94/207480707.compare (1 samples, 0.09%)</title><rect x="715.3" y="163.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.09%)</title><rect x="715.3" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$93/311991135.applyAsLong (1 samples, 0.09%)</title><rect x="715.3" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (1 samples, 0.09%)</title><rect x="715.3" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (1 samples, 0.09%)</title><rect x="715.3" y="99.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.09%)</title><rect x="715.3" y="83.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="715.3" y="67.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="715.3" y="51.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.3" y="62.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="715.3" y="35.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="718.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (104 samples, 9.87%)</title><rect x="716.4" y="355.0" width="116.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.4" y="366.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (4 samples, 0.38%)</title><rect x="716.4" y="339.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (4 samples, 0.38%)</title><rect x="716.4" y="323.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (4 samples, 0.38%)</title><rect x="716.4" y="307.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.19%)</title><rect x="716.4" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.19%)</title><rect x="716.4" y="275.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.19%)</title><rect x="716.4" y="259.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.19%)</title><rect x="716.4" y="243.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (2 samples, 0.19%)</title><rect x="716.4" y="227.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.19%)</title><rect x="716.4" y="211.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="716.4" y="195.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="716.4" y="179.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="716.4" y="163.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="716.4" y="147.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.19%)</title><rect x="716.4" y="131.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.19%)</title><rect x="716.4" y="115.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="719.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (2 samples, 0.19%)</title><rect x="718.7" y="291.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.19%)</title><rect x="718.7" y="275.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.7" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="718.7" y="259.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="721.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="719.8" y="259.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="722.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (100 samples, 9.49%)</title><rect x="720.9" y="339.0" width="112.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.9" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (100 samples, 9.49%)</title><rect x="720.9" y="323.0" width="112.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.9" y="334.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (100 samples, 9.49%)</title><rect x="720.9" y="307.0" width="112.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.9" y="318.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (97 samples, 9.20%)</title><rect x="720.9" y="291.0" width="108.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.9" y="302.0">one/nio/http/..</text>
</g>
<g>
<title>byte[] (39 samples, 3.70%)</title><rect x="720.9" y="275.0" width="43.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="723.9" y="286.0">byte[]</text>
</g>
<g>
<title>byte[] (58 samples, 5.50%)</title><rect x="764.6" y="275.0" width="64.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="767.6" y="286.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.28%)</title><rect x="829.5" y="291.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="829.5" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="829.5" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title><rect x="829.5" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.5" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="829.5" y="227.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="832.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.19%)</title><rect x="830.6" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="830.6" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="830.6" y="243.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.6" y="254.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.09%)</title><rect x="830.6" y="227.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="833.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="831.7" y="227.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="834.7" y="238.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6091] (52 samples, 4.93%)</title><rect x="832.9" y="451.0" width="58.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="835.9" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (52 samples, 4.93%)</title><rect x="832.9" y="435.0" width="58.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.9" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (52 samples, 4.93%)</title><rect x="832.9" y="419.0" width="58.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.9" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (52 samples, 4.93%)</title><rect x="832.9" y="403.0" width="58.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.9" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.57%)</title><rect x="832.9" y="387.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.57%)</title><rect x="832.9" y="371.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.57%)</title><rect x="832.9" y="355.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.57%)</title><rect x="832.9" y="339.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.57%)</title><rect x="832.9" y="323.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="835.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (46 samples, 4.36%)</title><rect x="839.6" y="387.0" width="51.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.6" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (46 samples, 4.36%)</title><rect x="839.6" y="371.0" width="51.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.6" y="382.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.95%)</title><rect x="839.6" y="355.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.95%)</title><rect x="839.6" y="339.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.38%)</title><rect x="839.6" y="323.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.38%)</title><rect x="839.6" y="307.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.6" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.38%)</title><rect x="839.6" y="291.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="842.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.57%)</title><rect x="844.1" y="323.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.57%)</title><rect x="844.1" y="307.0" width="6.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="847.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (36 samples, 3.42%)</title><rect x="850.8" y="355.0" width="40.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.8" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (36 samples, 3.42%)</title><rect x="850.8" y="339.0" width="40.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.8" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (36 samples, 3.42%)</title><rect x="850.8" y="323.0" width="40.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="334.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (33 samples, 3.13%)</title><rect x="850.8" y="307.0" width="36.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.8" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (33 samples, 3.13%)</title><rect x="850.8" y="291.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.8" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.85%)</title><rect x="850.8" y="275.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.47%)</title><rect x="850.8" y="259.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.47%)</title><rect x="850.8" y="243.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.47%)</title><rect x="850.8" y="227.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (5 samples, 0.47%)</title><rect x="850.8" y="211.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.47%)</title><rect x="850.8" y="195.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.47%)</title><rect x="850.8" y="179.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.47%)</title><rect x="850.8" y="163.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="853.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (4 samples, 0.38%)</title><rect x="856.4" y="259.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.38%)</title><rect x="856.4" y="243.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.38%)</title><rect x="856.4" y="227.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.38%)</title><rect x="856.4" y="211.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="859.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (23 samples, 2.18%)</title><rect x="860.9" y="275.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.9" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="860.9" y="259.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.28%)</title><rect x="860.9" y="243.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.9" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="860.9" y="227.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="863.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="862.0" y="227.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.0" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="862.0" y="211.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="865.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="863.1" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="863.1" y="195.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="866.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="864.2" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.09%)</title><rect x="864.2" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.09%)</title><rect x="864.2" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.09%)</title><rect x="864.2" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.09%)</title><rect x="864.2" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (1 samples, 0.09%)</title><rect x="864.2" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="864.2" y="147.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="864.2" y="131.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="864.2" y="115.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="867.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (19 samples, 1.80%)</title><rect x="865.3" y="259.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.3" y="270.0">r..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.19%)</title><rect x="865.3" y="243.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="868.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.28%)</title><rect x="867.6" y="243.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.28%)</title><rect x="867.6" y="227.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.28%)</title><rect x="867.6" y="211.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.28%)</title><rect x="867.6" y="195.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.6" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.28%)</title><rect x="867.6" y="179.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.28%)</title><rect x="867.6" y="163.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="870.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.38%)</title><rect x="870.9" y="243.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.38%)</title><rect x="870.9" y="227.0" width="4.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="873.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (10 samples, 0.95%)</title><rect x="875.4" y="243.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="875.4" y="227.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.19%)</title><rect x="875.4" y="211.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.4" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="875.4" y="195.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="878.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.09%)</title><rect x="876.5" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.5" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="876.5" y="179.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="879.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.19%)</title><rect x="877.6" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.6" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.19%)</title><rect x="877.6" y="195.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="880.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 0.57%)</title><rect x="879.9" y="227.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.28%)</title><rect x="879.9" y="211.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="882.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="883.2" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="883.2" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="883.2" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="883.2" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="883.2" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="883.2" y="131.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="886.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="884.4" y="211.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="884.4" y="195.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="887.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (1 samples, 0.09%)</title><rect x="885.5" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="885.5" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="885.5" y="179.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="888.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="886.6" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="886.6" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="886.6" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="889.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (3 samples, 0.28%)</title><rect x="887.7" y="307.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (1 samples, 0.09%)</title><rect x="887.7" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (1 samples, 0.09%)</title><rect x="887.7" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="887.7" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.09%)</title><rect x="887.7" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.09%)</title><rect x="887.7" y="227.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.7" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="887.7" y="211.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="890.7" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.09%)</title><rect x="888.8" y="291.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="891.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.09%)</title><rect x="890.0" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.0" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="890.0" y="275.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="893.0" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6095] (49 samples, 4.65%)</title><rect x="891.1" y="451.0" width="54.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="894.1" y="462.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 4.65%)</title><rect x="891.1" y="435.0" width="54.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.1" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 4.65%)</title><rect x="891.1" y="419.0" width="54.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.1" y="430.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 4.65%)</title><rect x="891.1" y="403.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.1" y="414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.19%)</title><rect x="891.1" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.19%)</title><rect x="891.1" y="371.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.19%)</title><rect x="891.1" y="355.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.19%)</title><rect x="891.1" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.19%)</title><rect x="891.1" y="323.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="894.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (47 samples, 4.46%)</title><rect x="893.3" y="387.0" width="52.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.3" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (47 samples, 4.46%)</title><rect x="893.3" y="371.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.3" y="382.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.47%)</title><rect x="893.3" y="355.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.47%)</title><rect x="893.3" y="339.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.28%)</title><rect x="893.3" y="323.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.28%)</title><rect x="893.3" y="307.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.3" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="893.3" y="291.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="896.3" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.19%)</title><rect x="896.7" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.7" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.19%)</title><rect x="896.7" y="307.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="899.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (42 samples, 3.98%)</title><rect x="898.9" y="355.0" width="47.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.9" y="366.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (42 samples, 3.98%)</title><rect x="898.9" y="339.0" width="47.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.9" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (42 samples, 3.98%)</title><rect x="898.9" y="323.0" width="47.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.9" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (32 samples, 3.04%)</title><rect x="898.9" y="307.0" width="35.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.9" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (32 samples, 3.04%)</title><rect x="898.9" y="291.0" width="35.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.9" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.47%)</title><rect x="898.9" y="275.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.19%)</title><rect x="898.9" y="259.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.19%)</title><rect x="898.9" y="243.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.19%)</title><rect x="898.9" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (2 samples, 0.19%)</title><rect x="898.9" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.19%)</title><rect x="898.9" y="195.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.19%)</title><rect x="898.9" y="179.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.19%)</title><rect x="898.9" y="163.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="901.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (3 samples, 0.28%)</title><rect x="901.2" y="259.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.28%)</title><rect x="901.2" y="243.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.28%)</title><rect x="901.2" y="227.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.28%)</title><rect x="901.2" y="211.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (26 samples, 2.47%)</title><rect x="904.5" y="275.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (10 samples, 0.95%)</title><rect x="904.5" y="259.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="904.5" y="243.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.5" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="904.5" y="227.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="907.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.28%)</title><rect x="905.6" y="227.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.09%)</title><rect x="905.6" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.6" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.09%)</title><rect x="905.6" y="195.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="908.6" y="206.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="906.8" y="211.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="909.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="907.9" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="907.9" y="195.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="910.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.57%)</title><rect x="909.0" y="243.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="909.0" y="227.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="912.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.47%)</title><rect x="910.1" y="227.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.47%)</title><rect x="910.1" y="211.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.47%)</title><rect x="910.1" y="195.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.47%)</title><rect x="910.1" y="179.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (5 samples, 0.47%)</title><rect x="910.1" y="163.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.47%)</title><rect x="910.1" y="147.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.47%)</title><rect x="910.1" y="131.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.47%)</title><rect x="910.1" y="115.0" width="5.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="913.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (16 samples, 1.52%)</title><rect x="915.7" y="259.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.19%)</title><rect x="915.7" y="243.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="918.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.38%)</title><rect x="918.0" y="243.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.38%)</title><rect x="918.0" y="227.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.38%)</title><rect x="918.0" y="211.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.38%)</title><rect x="918.0" y="195.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.38%)</title><rect x="918.0" y="179.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.38%)</title><rect x="918.0" y="163.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="921.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (10 samples, 0.95%)</title><rect x="922.4" y="243.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="922.4" y="227.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="922.4" y="211.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.4" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.19%)</title><rect x="922.4" y="195.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="925.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="924.7" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.7" y="206.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="924.7" y="179.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="927.7" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="925.8" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="925.8" y="163.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="928.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 0.57%)</title><rect x="926.9" y="227.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="926.9" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="926.9" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="926.9" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="926.9" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="926.9" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="926.9" y="131.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="929.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="928.0" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="928.0" y="195.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="931.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (4 samples, 0.38%)</title><rect x="929.1" y="211.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.09%)</title><rect x="929.1" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (1 samples, 0.09%)</title><rect x="929.1" y="179.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="932.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.28%)</title><rect x="930.3" y="195.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.28%)</title><rect x="930.3" y="179.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="933.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="933.6" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="933.6" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="933.6" y="243.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="936.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (10 samples, 0.95%)</title><rect x="934.7" y="307.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.7" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="934.7" y="291.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="937.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (2 samples, 0.19%)</title><rect x="935.9" y="291.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="938.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (2 samples, 0.19%)</title><rect x="935.9" y="275.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.19%)</title><rect x="935.9" y="259.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.19%)</title><rect x="935.9" y="243.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="935.9" y="227.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="938.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.66%)</title><rect x="938.1" y="291.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.1" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="938.1" y="275.0" width="3.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="941.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.28%)</title><rect x="941.5" y="275.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="944.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="944.8" y="275.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="947.8" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6087] (118 samples, 11.20%)</title><rect x="945.9" y="451.0" width="132.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="948.9" y="462.0">[asyncWorker-3 t..</text>
</g>
<g>
<title>java/lang/Thread.run (118 samples, 11.20%)</title><rect x="945.9" y="435.0" width="132.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.9" y="446.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (118 samples, 11.20%)</title><rect x="945.9" y="419.0" width="132.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.9" y="430.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (118 samples, 11.20%)</title><rect x="945.9" y="403.0" width="132.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.9" y="414.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (118 samples, 11.20%)</title><rect x="945.9" y="387.0" width="132.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.9" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (118 samples, 11.20%)</title><rect x="945.9" y="371.0" width="132.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.9" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (118 samples, 11.20%)</title><rect x="945.9" y="355.0" width="132.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.9" y="366.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (118 samples, 11.20%)</title><rect x="945.9" y="339.0" width="132.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.9" y="350.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (118 samples, 11.20%)</title><rect x="945.9" y="323.0" width="132.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.9" y="334.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (118 samples, 11.20%)</title><rect x="945.9" y="307.0" width="132.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.9" y="318.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (116 samples, 11.01%)</title><rect x="945.9" y="291.0" width="129.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.9" y="302.0">one/nio/http/Htt..</text>
</g>
<g>
<title>byte[] (45 samples, 4.27%)</title><rect x="945.9" y="275.0" width="50.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="948.9" y="286.0">byte[]</text>
</g>
<g>
<title>byte[] (71 samples, 6.74%)</title><rect x="996.3" y="275.0" width="79.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.3" y="286.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.19%)</title><rect x="1075.8" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.19%)</title><rect x="1075.8" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="1075.8" y="259.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1078.8" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="1075.8" y="243.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.8" y="254.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.19%)</title><rect x="1075.8" y="227.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1078.8" y="238.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6092] (47 samples, 4.46%)</title><rect x="1078.0" y="451.0" width="52.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1081.0" y="462.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (47 samples, 4.46%)</title><rect x="1078.0" y="435.0" width="52.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.0" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (47 samples, 4.46%)</title><rect x="1078.0" y="419.0" width="52.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.0" y="430.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (47 samples, 4.46%)</title><rect x="1078.0" y="403.0" width="52.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.0" y="414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.28%)</title><rect x="1078.0" y="387.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.28%)</title><rect x="1078.0" y="371.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.28%)</title><rect x="1078.0" y="355.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.28%)</title><rect x="1078.0" y="339.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.28%)</title><rect x="1078.0" y="323.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1081.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (44 samples, 4.17%)</title><rect x="1081.4" y="387.0" width="49.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.4" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (44 samples, 4.17%)</title><rect x="1081.4" y="371.0" width="49.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.4" y="382.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.47%)</title><rect x="1081.4" y="355.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.47%)</title><rect x="1081.4" y="339.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.28%)</title><rect x="1081.4" y="323.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.28%)</title><rect x="1081.4" y="307.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.4" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="1081.4" y="291.0" width="3.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1084.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.19%)</title><rect x="1084.8" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.8" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.19%)</title><rect x="1084.8" y="307.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1087.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (39 samples, 3.70%)</title><rect x="1087.0" y="355.0" width="43.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.0" y="366.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (39 samples, 3.70%)</title><rect x="1087.0" y="339.0" width="43.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.0" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (39 samples, 3.70%)</title><rect x="1087.0" y="323.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.0" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (30 samples, 2.85%)</title><rect x="1087.0" y="307.0" width="33.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.0" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (30 samples, 2.85%)</title><rect x="1087.0" y="291.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.0" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.28%)</title><rect x="1087.0" y="275.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.09%)</title><rect x="1087.0" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.09%)</title><rect x="1087.0" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.09%)</title><rect x="1087.0" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (1 samples, 0.09%)</title><rect x="1087.0" y="211.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.09%)</title><rect x="1087.0" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="1087.0" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.09%)</title><rect x="1087.0" y="163.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1090.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (2 samples, 0.19%)</title><rect x="1088.1" y="259.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.19%)</title><rect x="1088.1" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.19%)</title><rect x="1088.1" y="227.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.19%)</title><rect x="1088.1" y="211.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1091.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (24 samples, 2.28%)</title><rect x="1090.4" y="275.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.4" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (8 samples, 0.76%)</title><rect x="1090.4" y="259.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.28%)</title><rect x="1090.4" y="243.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.28%)</title><rect x="1090.4" y="227.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.4" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="1090.4" y="211.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1093.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.09%)</title><rect x="1091.5" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.5" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.09%)</title><rect x="1091.5" y="195.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1094.5" y="206.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="1092.6" y="211.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1095.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.47%)</title><rect x="1093.7" y="243.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.47%)</title><rect x="1093.7" y="227.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.47%)</title><rect x="1093.7" y="211.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.47%)</title><rect x="1093.7" y="195.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.47%)</title><rect x="1093.7" y="179.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (5 samples, 0.47%)</title><rect x="1093.7" y="163.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.47%)</title><rect x="1093.7" y="147.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.47%)</title><rect x="1093.7" y="131.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.47%)</title><rect x="1093.7" y="115.0" width="5.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1096.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (16 samples, 1.52%)</title><rect x="1099.3" y="259.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (16 samples, 1.52%)</title><rect x="1099.3" y="243.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (7 samples, 0.66%)</title><rect x="1099.3" y="227.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.38%)</title><rect x="1099.3" y="211.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.3" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.19%)</title><rect x="1099.3" y="195.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1102.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="1101.6" y="195.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.6" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="1101.6" y="179.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1104.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.09%)</title><rect x="1102.7" y="179.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.7" y="190.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.09%)</title><rect x="1102.7" y="163.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1105.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.28%)</title><rect x="1103.8" y="211.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.8" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.28%)</title><rect x="1103.8" y="195.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1106.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9 samples, 0.85%)</title><rect x="1107.2" y="227.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.2" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.19%)</title><rect x="1107.2" y="211.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1110.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="1109.4" y="211.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="1109.4" y="195.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1112.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="1109.4" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1112.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="1109.4" y="163.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.19%)</title><rect x="1109.4" y="147.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.19%)</title><rect x="1109.4" y="131.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1112.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="1111.6" y="211.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="1111.6" y="195.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1114.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (4 samples, 0.38%)</title><rect x="1112.8" y="211.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.09%)</title><rect x="1112.8" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (1 samples, 0.09%)</title><rect x="1112.8" y="179.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1115.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.09%)</title><rect x="1113.9" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.09%)</title><rect x="1113.9" y="179.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1116.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="1115.0" y="195.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="1115.0" y="179.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.19%)</title><rect x="1115.0" y="163.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.19%)</title><rect x="1115.0" y="147.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1118.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.28%)</title><rect x="1117.2" y="275.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.28%)</title><rect x="1117.2" y="259.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.28%)</title><rect x="1117.2" y="243.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1120.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (9 samples, 0.85%)</title><rect x="1120.6" y="307.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.6" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="1120.6" y="291.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1123.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (4 samples, 0.38%)</title><rect x="1121.7" y="291.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (4 samples, 0.38%)</title><rect x="1121.7" y="275.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.38%)</title><rect x="1121.7" y="259.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.19%)</title><rect x="1121.7" y="243.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="1121.7" y="227.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1124.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.19%)</title><rect x="1123.9" y="243.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.19%)</title><rect x="1123.9" y="227.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.9" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="1123.9" y="211.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1126.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.38%)</title><rect x="1126.2" y="291.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.28%)</title><rect x="1126.2" y="275.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1129.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.09%)</title><rect x="1129.5" y="275.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1132.5" y="286.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6096] (53 samples, 5.03%)</title><rect x="1130.7" y="451.0" width="59.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1133.7" y="462.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (53 samples, 5.03%)</title><rect x="1130.7" y="435.0" width="59.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.7" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (53 samples, 5.03%)</title><rect x="1130.7" y="419.0" width="59.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.7" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (53 samples, 5.03%)</title><rect x="1130.7" y="403.0" width="59.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.7" y="414.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (53 samples, 5.03%)</title><rect x="1130.7" y="387.0" width="59.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.7" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (53 samples, 5.03%)</title><rect x="1130.7" y="371.0" width="59.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.7" y="382.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 1.52%)</title><rect x="1130.7" y="355.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 1.52%)</title><rect x="1130.7" y="339.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 1.14%)</title><rect x="1130.7" y="323.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 1.14%)</title><rect x="1130.7" y="307.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.7" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 1.14%)</title><rect x="1130.7" y="291.0" width="13.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1133.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.38%)</title><rect x="1144.1" y="323.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.38%)</title><rect x="1144.1" y="307.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1147.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (37 samples, 3.51%)</title><rect x="1148.6" y="355.0" width="41.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (37 samples, 3.51%)</title><rect x="1148.6" y="339.0" width="41.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.6" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (37 samples, 3.51%)</title><rect x="1148.6" y="323.0" width="41.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.6" y="334.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (28 samples, 2.66%)</title><rect x="1148.6" y="307.0" width="31.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.6" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (28 samples, 2.66%)</title><rect x="1148.6" y="291.0" width="31.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.6" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 1.14%)</title><rect x="1148.6" y="275.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.57%)</title><rect x="1148.6" y="259.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.57%)</title><rect x="1148.6" y="243.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.57%)</title><rect x="1148.6" y="227.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (6 samples, 0.57%)</title><rect x="1148.6" y="211.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.57%)</title><rect x="1148.6" y="195.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.57%)</title><rect x="1148.6" y="179.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.57%)</title><rect x="1148.6" y="163.0" width="6.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1151.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (6 samples, 0.57%)</title><rect x="1155.3" y="259.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.57%)</title><rect x="1155.3" y="243.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.57%)</title><rect x="1155.3" y="227.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.57%)</title><rect x="1155.3" y="211.0" width="6.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1158.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (14 samples, 1.33%)</title><rect x="1162.0" y="275.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (8 samples, 0.76%)</title><rect x="1162.0" y="259.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.19%)</title><rect x="1162.0" y="243.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="1162.0" y="227.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.0" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.09%)</title><rect x="1162.0" y="211.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1165.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1163.1" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="1163.1" y="195.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1166.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.57%)</title><rect x="1164.3" y="243.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="1164.3" y="227.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1167.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.47%)</title><rect x="1165.4" y="227.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.47%)</title><rect x="1165.4" y="211.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.47%)</title><rect x="1165.4" y="195.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.47%)</title><rect x="1165.4" y="179.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (5 samples, 0.47%)</title><rect x="1165.4" y="163.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.47%)</title><rect x="1165.4" y="147.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.47%)</title><rect x="1165.4" y="131.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.47%)</title><rect x="1165.4" y="115.0" width="5.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1168.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 0.57%)</title><rect x="1171.0" y="259.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="1171.0" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="1171.0" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="1171.0" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="1171.0" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="1171.0" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="1171.0" y="163.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1174.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (5 samples, 0.47%)</title><rect x="1172.1" y="243.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.38%)</title><rect x="1172.1" y="227.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.28%)</title><rect x="1172.1" y="211.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.1" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.09%)</title><rect x="1172.1" y="195.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1175.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.19%)</title><rect x="1173.2" y="195.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.09%)</title><rect x="1173.2" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.2" y="190.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.09%)</title><rect x="1173.2" y="163.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1176.2" y="174.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.09%)</title><rect x="1174.3" y="179.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1177.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.09%)</title><rect x="1175.4" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.4" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (1 samples, 0.09%)</title><rect x="1175.4" y="195.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1178.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.09%)</title><rect x="1176.6" y="227.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="1176.6" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.09%)</title><rect x="1176.6" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="1176.6" y="179.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.09%)</title><rect x="1176.6" y="163.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="1176.6" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.09%)</title><rect x="1176.6" y="131.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1179.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.19%)</title><rect x="1177.7" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.19%)</title><rect x="1177.7" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.19%)</title><rect x="1177.7" y="243.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1180.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (9 samples, 0.85%)</title><rect x="1179.9" y="307.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.9" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.09%)</title><rect x="1179.9" y="291.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1182.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (2 samples, 0.19%)</title><rect x="1181.0" y="291.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (2 samples, 0.19%)</title><rect x="1181.0" y="275.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.19%)</title><rect x="1181.0" y="259.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.19%)</title><rect x="1181.0" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.19%)</title><rect x="1181.0" y="227.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.0" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.19%)</title><rect x="1181.0" y="211.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1184.0" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.09%)</title><rect x="1183.3" y="291.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1186.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.47%)</title><rect x="1184.4" y="291.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.4" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.28%)</title><rect x="1184.4" y="275.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1187.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.19%)</title><rect x="1187.8" y="275.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1190.8" y="286.0"></text>
</g>
</g>
</svg>
