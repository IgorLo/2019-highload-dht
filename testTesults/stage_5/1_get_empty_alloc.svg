<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="533"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="533"> </text>
<g id="frames">
<g>
<title>all (335,451 samples, 100.00%)</title><rect x="10.0" y="499.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="510.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32103] (14,630 samples, 4.36%)</title><rect x="10.0" y="483.0" width="51.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,630 samples, 4.36%)</title><rect x="10.0" y="467.0" width="51.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,180 samples, 0.35%)</title><rect x="10.0" y="451.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,180 samples, 0.35%)</title><rect x="10.0" y="435.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,450 samples, 4.01%)</title><rect x="14.2" y="451.0" width="47.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.2" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,450 samples, 4.01%)</title><rect x="14.2" y="435.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.2" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,450 samples, 4.01%)</title><rect x="14.2" y="419.0" width="47.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.2" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,026 samples, 1.50%)</title><rect x="14.2" y="403.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,026 samples, 1.50%)</title><rect x="14.2" y="387.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.2" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3,908 samples, 1.16%)</title><rect x="14.2" y="371.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (970 samples, 0.29%)</title><rect x="14.2" y="355.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (970 samples, 0.29%)</title><rect x="14.2" y="339.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (970 samples, 0.29%)</title><rect x="14.2" y="323.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (585 samples, 0.17%)</title><rect x="14.2" y="307.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="17.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (385 samples, 0.11%)</title><rect x="16.2" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.2" y="318.0"></text>
</g>
<g>
<title>byte[] (385 samples, 0.11%)</title><rect x="16.2" y="291.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="19.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2,938 samples, 0.88%)</title><rect x="17.6" y="355.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (514 samples, 0.15%)</title><rect x="17.6" y="339.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (514 samples, 0.15%)</title><rect x="17.6" y="323.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (514 samples, 0.15%)</title><rect x="17.6" y="307.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (514 samples, 0.15%)</title><rect x="17.6" y="291.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.6" y="302.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.15%)</title><rect x="17.6" y="275.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,338 samples, 0.40%)</title><rect x="19.4" y="339.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,338 samples, 0.40%)</title><rect x="19.4" y="323.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,338 samples, 0.40%)</title><rect x="19.4" y="307.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="22.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,086 samples, 0.32%)</title><rect x="24.1" y="339.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649646178.linkToTargetMethod (453 samples, 0.14%)</title><rect x="24.1" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (453 samples, 0.14%)</title><rect x="24.1" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.get$Lambda (453 samples, 0.14%)</title><rect x="24.1" y="291.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.1" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$61 (453 samples, 0.14%)</title><rect x="24.1" y="275.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="27.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (633 samples, 0.19%)</title><rect x="25.7" y="323.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (633 samples, 0.19%)</title><rect x="25.7" y="307.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (630 samples, 0.19%)</title><rect x="25.7" y="291.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="28.7" y="302.0"></text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (121 samples, 0.04%)</title><rect x="27.9" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (121 samples, 0.04%)</title><rect x="27.9" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (121 samples, 0.04%)</title><rect x="27.9" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (121 samples, 0.04%)</title><rect x="27.9" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (121 samples, 0.04%)</title><rect x="27.9" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (121 samples, 0.04%)</title><rect x="27.9" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (121 samples, 0.04%)</title><rect x="27.9" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (121 samples, 0.04%)</title><rect x="27.9" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (121 samples, 0.04%)</title><rect x="27.9" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (121 samples, 0.04%)</title><rect x="27.9" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (102 samples, 0.03%)</title><rect x="27.9" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (997 samples, 0.30%)</title><rect x="28.4" y="371.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (997 samples, 0.30%)</title><rect x="28.4" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (997 samples, 0.30%)</title><rect x="28.4" y="339.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (394 samples, 0.12%)</title><rect x="28.4" y="323.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="31.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (603 samples, 0.18%)</title><rect x="29.7" y="323.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.7" y="334.0"></text>
</g>
<g>
<title>byte[] (603 samples, 0.18%)</title><rect x="29.7" y="307.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="32.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,349 samples, 1.59%)</title><rect x="31.9" y="403.0" width="18.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.9" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,009 samples, 0.30%)</title><rect x="31.9" y="387.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="34.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,685 samples, 0.50%)</title><rect x="35.4" y="387.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,287 samples, 0.38%)</title><rect x="35.4" y="371.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="38.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (398 samples, 0.12%)</title><rect x="39.9" y="371.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="42.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,655 samples, 0.79%)</title><rect x="41.3" y="387.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,655 samples, 0.79%)</title><rect x="41.3" y="371.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.3" y="382.0"></text>
</g>
<g>
<title>char[] (1,337 samples, 0.40%)</title><rect x="41.3" y="355.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="44.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (418 samples, 0.12%)</title><rect x="46.0" y="355.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="49.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (900 samples, 0.27%)</title><rect x="47.5" y="355.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (900 samples, 0.27%)</title><rect x="47.5" y="339.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (900 samples, 0.27%)</title><rect x="47.5" y="323.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.5" y="334.0"></text>
</g>
<g>
<title>byte[] (900 samples, 0.27%)</title><rect x="47.5" y="307.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="50.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,075 samples, 0.92%)</title><rect x="50.7" y="403.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,075 samples, 0.92%)</title><rect x="50.7" y="387.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.7" y="398.0"></text>
</g>
<g>
<title>char[] (1,298 samples, 0.39%)</title><rect x="50.7" y="371.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="53.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (1,043 samples, 0.31%)</title><rect x="55.2" y="371.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="58.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (734 samples, 0.22%)</title><rect x="58.9" y="371.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (734 samples, 0.22%)</title><rect x="58.9" y="355.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (734 samples, 0.22%)</title><rect x="58.9" y="339.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>byte[] (734 samples, 0.22%)</title><rect x="58.9" y="323.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32114] (14,491 samples, 4.32%)</title><rect x="61.5" y="483.0" width="51.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="64.5" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,491 samples, 4.32%)</title><rect x="61.5" y="467.0" width="51.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.5" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,083 samples, 0.32%)</title><rect x="61.5" y="451.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.5" y="462.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,083 samples, 0.32%)</title><rect x="61.5" y="435.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="64.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,408 samples, 4.00%)</title><rect x="65.3" y="451.0" width="47.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.3" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,408 samples, 4.00%)</title><rect x="65.3" y="435.0" width="47.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.3" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,408 samples, 4.00%)</title><rect x="65.3" y="419.0" width="47.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.3" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,046 samples, 1.50%)</title><rect x="65.3" y="403.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,046 samples, 1.50%)</title><rect x="65.3" y="387.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.3" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,143 samples, 1.24%)</title><rect x="65.3" y="371.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (800 samples, 0.24%)</title><rect x="65.3" y="355.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (800 samples, 0.24%)</title><rect x="65.3" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (800 samples, 0.24%)</title><rect x="65.3" y="323.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.11%)</title><rect x="65.3" y="307.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (426 samples, 0.13%)</title><rect x="66.6" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.6" y="318.0"></text>
</g>
<g>
<title>byte[] (426 samples, 0.13%)</title><rect x="66.6" y="291.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,343 samples, 1.00%)</title><rect x="68.1" y="355.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (456 samples, 0.14%)</title><rect x="68.1" y="339.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (456 samples, 0.14%)</title><rect x="68.1" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (456 samples, 0.14%)</title><rect x="68.1" y="307.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (456 samples, 0.14%)</title><rect x="68.1" y="291.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.1" y="302.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.14%)</title><rect x="68.1" y="275.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="71.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,087 samples, 0.32%)</title><rect x="69.7" y="339.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,087 samples, 0.32%)</title><rect x="69.7" y="323.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,087 samples, 0.32%)</title><rect x="69.7" y="307.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="72.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,059 samples, 0.32%)</title><rect x="73.5" y="339.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (277 samples, 0.08%)</title><rect x="73.5" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (277 samples, 0.08%)</title><rect x="73.5" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (277 samples, 0.08%)</title><rect x="73.5" y="291.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (277 samples, 0.08%)</title><rect x="73.5" y="275.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="76.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (782 samples, 0.23%)</title><rect x="74.5" y="323.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (357 samples, 0.11%)</title><rect x="74.5" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (357 samples, 0.11%)</title><rect x="74.5" y="291.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (357 samples, 0.11%)</title><rect x="74.5" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (357 samples, 0.11%)</title><rect x="74.5" y="259.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="77.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (425 samples, 0.13%)</title><rect x="75.8" y="307.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (425 samples, 0.13%)</title><rect x="75.8" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (425 samples, 0.13%)</title><rect x="75.8" y="275.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="78.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (741 samples, 0.22%)</title><rect x="77.3" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (741 samples, 0.22%)</title><rect x="77.3" y="323.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (741 samples, 0.22%)</title><rect x="77.3" y="307.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (741 samples, 0.22%)</title><rect x="77.3" y="291.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.13%)</title><rect x="77.3" y="275.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="80.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (320 samples, 0.10%)</title><rect x="78.7" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.7" y="286.0"></text>
</g>
<g>
<title>byte[] (320 samples, 0.10%)</title><rect x="78.7" y="259.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="81.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (903 samples, 0.27%)</title><rect x="79.9" y="371.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (903 samples, 0.27%)</title><rect x="79.9" y="355.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (903 samples, 0.27%)</title><rect x="79.9" y="339.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (455 samples, 0.14%)</title><rect x="79.9" y="323.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (448 samples, 0.13%)</title><rect x="81.5" y="323.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.5" y="334.0"></text>
</g>
<g>
<title>byte[] (448 samples, 0.13%)</title><rect x="81.5" y="307.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="84.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,362 samples, 1.30%)</title><rect x="83.1" y="403.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.1" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (616 samples, 0.18%)</title><rect x="83.1" y="387.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="86.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,476 samples, 0.44%)</title><rect x="85.2" y="387.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,448 samples, 0.43%)</title><rect x="85.2" y="371.0" width="5.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="88.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,270 samples, 0.68%)</title><rect x="90.4" y="387.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,270 samples, 0.68%)</title><rect x="90.4" y="371.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.4" y="382.0"></text>
</g>
<g>
<title>char[] (1,328 samples, 0.40%)</title><rect x="90.4" y="355.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="93.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (313 samples, 0.09%)</title><rect x="95.1" y="355.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="98.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (629 samples, 0.19%)</title><rect x="96.2" y="355.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (629 samples, 0.19%)</title><rect x="96.2" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (629 samples, 0.19%)</title><rect x="96.2" y="323.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.2" y="334.0"></text>
</g>
<g>
<title>byte[] (629 samples, 0.19%)</title><rect x="96.2" y="307.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="99.2" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,000 samples, 1.19%)</title><rect x="98.4" y="403.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,000 samples, 1.19%)</title><rect x="98.4" y="387.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.4" y="398.0"></text>
</g>
<g>
<title>char[] (1,729 samples, 0.52%)</title><rect x="98.4" y="371.0" width="6.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="101.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (992 samples, 0.30%)</title><rect x="104.5" y="371.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="107.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,279 samples, 0.38%)</title><rect x="108.0" y="371.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,279 samples, 0.38%)</title><rect x="108.0" y="355.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,279 samples, 0.38%)</title><rect x="108.0" y="339.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.0" y="350.0"></text>
</g>
<g>
<title>byte[] (1,279 samples, 0.38%)</title><rect x="108.0" y="323.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="111.0" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32121] (14,501 samples, 4.32%)</title><rect x="112.5" y="483.0" width="51.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="115.5" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,501 samples, 4.32%)</title><rect x="112.5" y="467.0" width="51.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.5" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (14,501 samples, 4.32%)</title><rect x="112.5" y="451.0" width="51.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.5" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14,501 samples, 4.32%)</title><rect x="112.5" y="435.0" width="51.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.5" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14,501 samples, 4.32%)</title><rect x="112.5" y="419.0" width="51.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.5" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,691 samples, 1.70%)</title><rect x="112.5" y="403.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,691 samples, 1.70%)</title><rect x="112.5" y="387.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.5" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,675 samples, 1.39%)</title><rect x="112.5" y="371.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (902 samples, 0.27%)</title><rect x="112.5" y="355.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (902 samples, 0.27%)</title><rect x="112.5" y="339.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (902 samples, 0.27%)</title><rect x="112.5" y="323.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (442 samples, 0.13%)</title><rect x="112.5" y="307.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (460 samples, 0.14%)</title><rect x="114.0" y="307.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.0" y="318.0"></text>
</g>
<g>
<title>byte[] (460 samples, 0.14%)</title><rect x="114.0" y="291.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="117.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,773 samples, 1.12%)</title><rect x="115.6" y="355.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (363 samples, 0.11%)</title><rect x="115.6" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (363 samples, 0.11%)</title><rect x="115.6" y="323.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (363 samples, 0.11%)</title><rect x="115.6" y="307.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (363 samples, 0.11%)</title><rect x="115.6" y="291.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.6" y="302.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.11%)</title><rect x="115.6" y="275.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="118.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,083 samples, 0.32%)</title><rect x="116.9" y="339.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,083 samples, 0.32%)</title><rect x="116.9" y="323.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,083 samples, 0.32%)</title><rect x="116.9" y="307.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="119.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,484 samples, 0.44%)</title><rect x="120.7" y="339.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (322 samples, 0.10%)</title><rect x="120.7" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (322 samples, 0.10%)</title><rect x="120.7" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (322 samples, 0.10%)</title><rect x="120.7" y="291.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.7" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (322 samples, 0.10%)</title><rect x="120.7" y="275.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="123.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (1,162 samples, 0.35%)</title><rect x="121.9" y="323.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (668 samples, 0.20%)</title><rect x="121.9" y="307.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (668 samples, 0.20%)</title><rect x="121.9" y="291.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (668 samples, 0.20%)</title><rect x="121.9" y="275.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (668 samples, 0.20%)</title><rect x="121.9" y="259.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="124.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (494 samples, 0.15%)</title><rect x="124.2" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (494 samples, 0.15%)</title><rect x="124.2" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (492 samples, 0.15%)</title><rect x="124.2" y="275.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="127.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (843 samples, 0.25%)</title><rect x="125.9" y="339.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (843 samples, 0.25%)</title><rect x="125.9" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (843 samples, 0.25%)</title><rect x="125.9" y="307.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (843 samples, 0.25%)</title><rect x="125.9" y="291.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (565 samples, 0.17%)</title><rect x="125.9" y="275.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="128.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.08%)</title><rect x="127.9" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.9" y="286.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.08%)</title><rect x="127.9" y="259.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="130.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,016 samples, 0.30%)</title><rect x="128.9" y="371.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,016 samples, 0.30%)</title><rect x="128.9" y="355.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,016 samples, 0.30%)</title><rect x="128.9" y="339.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (424 samples, 0.13%)</title><rect x="128.9" y="323.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="131.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (592 samples, 0.18%)</title><rect x="130.4" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.4" y="334.0"></text>
</g>
<g>
<title>byte[] (592 samples, 0.18%)</title><rect x="130.4" y="307.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="133.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,744 samples, 1.41%)</title><rect x="132.5" y="403.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.5" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (643 samples, 0.19%)</title><rect x="132.5" y="387.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="135.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,606 samples, 0.48%)</title><rect x="134.7" y="387.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,584 samples, 0.47%)</title><rect x="134.7" y="371.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="137.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,495 samples, 0.74%)</title><rect x="140.4" y="387.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,495 samples, 0.74%)</title><rect x="140.4" y="371.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.4" y="382.0"></text>
</g>
<g>
<title>char[] (1,475 samples, 0.44%)</title><rect x="140.4" y="355.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="143.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (318 samples, 0.09%)</title><rect x="145.6" y="355.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (702 samples, 0.21%)</title><rect x="146.7" y="355.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (702 samples, 0.21%)</title><rect x="146.7" y="339.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (702 samples, 0.21%)</title><rect x="146.7" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.7" y="334.0"></text>
</g>
<g>
<title>byte[] (702 samples, 0.21%)</title><rect x="146.7" y="307.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="149.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,066 samples, 1.21%)</title><rect x="149.2" y="403.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,066 samples, 1.21%)</title><rect x="149.2" y="387.0" width="14.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.2" y="398.0"></text>
</g>
<g>
<title>char[] (1,933 samples, 0.58%)</title><rect x="149.2" y="371.0" width="6.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (861 samples, 0.26%)</title><rect x="156.0" y="371.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="159.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,272 samples, 0.38%)</title><rect x="159.0" y="371.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,272 samples, 0.38%)</title><rect x="159.0" y="355.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,272 samples, 0.38%)</title><rect x="159.0" y="339.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.0" y="350.0"></text>
</g>
<g>
<title>byte[] (1,272 samples, 0.38%)</title><rect x="159.0" y="323.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="162.0" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32104] (14,553 samples, 4.34%)</title><rect x="163.5" y="483.0" width="51.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="166.5" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,553 samples, 4.34%)</title><rect x="163.5" y="467.0" width="51.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.5" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,128 samples, 0.34%)</title><rect x="163.5" y="451.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.5" y="462.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,128 samples, 0.34%)</title><rect x="163.5" y="435.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="166.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,425 samples, 4.00%)</title><rect x="167.4" y="451.0" width="47.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.4" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,425 samples, 4.00%)</title><rect x="167.4" y="435.0" width="47.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.4" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,422 samples, 4.00%)</title><rect x="167.4" y="419.0" width="47.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.4" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,036 samples, 1.50%)</title><rect x="167.4" y="403.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,036 samples, 1.50%)</title><rect x="167.4" y="387.0" width="17.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.4" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,035 samples, 1.20%)</title><rect x="167.4" y="371.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (956 samples, 0.28%)</title><rect x="167.4" y="355.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (956 samples, 0.28%)</title><rect x="167.4" y="339.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (956 samples, 0.28%)</title><rect x="167.4" y="323.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (541 samples, 0.16%)</title><rect x="167.4" y="307.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="170.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (415 samples, 0.12%)</title><rect x="169.3" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.3" y="318.0"></text>
</g>
<g>
<title>byte[] (415 samples, 0.12%)</title><rect x="169.3" y="291.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,079 samples, 0.92%)</title><rect x="170.8" y="355.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (505 samples, 0.15%)</title><rect x="170.8" y="339.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (505 samples, 0.15%)</title><rect x="170.8" y="323.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (505 samples, 0.15%)</title><rect x="170.8" y="307.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (505 samples, 0.15%)</title><rect x="170.8" y="291.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.8" y="302.0"></text>
</g>
<g>
<title>byte[] (505 samples, 0.15%)</title><rect x="170.8" y="275.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,324 samples, 0.39%)</title><rect x="172.6" y="339.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,324 samples, 0.39%)</title><rect x="172.6" y="323.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,324 samples, 0.39%)</title><rect x="172.6" y="307.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="175.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,250 samples, 0.37%)</title><rect x="177.2" y="339.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649646178.linkToTargetMethod (502 samples, 0.15%)</title><rect x="177.2" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (502 samples, 0.15%)</title><rect x="177.2" y="307.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.get$Lambda (502 samples, 0.15%)</title><rect x="177.2" y="291.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.2" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$61 (502 samples, 0.15%)</title><rect x="177.2" y="275.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="180.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (748 samples, 0.22%)</title><rect x="179.0" y="323.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (748 samples, 0.22%)</title><rect x="179.0" y="307.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (747 samples, 0.22%)</title><rect x="179.0" y="291.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="182.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,000 samples, 0.30%)</title><rect x="181.6" y="371.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,000 samples, 0.30%)</title><rect x="181.6" y="355.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,000 samples, 0.30%)</title><rect x="181.6" y="339.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (506 samples, 0.15%)</title><rect x="181.6" y="323.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="184.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (494 samples, 0.15%)</title><rect x="183.4" y="323.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.4" y="334.0"></text>
</g>
<g>
<title>byte[] (494 samples, 0.15%)</title><rect x="183.4" y="307.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="186.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,376 samples, 1.60%)</title><rect x="185.2" y="403.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.2" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (904 samples, 0.27%)</title><rect x="185.2" y="387.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="188.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,751 samples, 0.52%)</title><rect x="188.3" y="387.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,432 samples, 0.43%)</title><rect x="188.3" y="371.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="191.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (319 samples, 0.10%)</title><rect x="193.4" y="371.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,721 samples, 0.81%)</title><rect x="194.5" y="387.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,721 samples, 0.81%)</title><rect x="194.5" y="371.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.5" y="382.0"></text>
</g>
<g>
<title>char[] (1,391 samples, 0.41%)</title><rect x="194.5" y="355.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="197.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (372 samples, 0.11%)</title><rect x="199.4" y="355.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (958 samples, 0.29%)</title><rect x="200.7" y="355.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (958 samples, 0.29%)</title><rect x="200.7" y="339.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (958 samples, 0.29%)</title><rect x="200.7" y="323.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.7" y="334.0"></text>
</g>
<g>
<title>byte[] (958 samples, 0.29%)</title><rect x="200.7" y="307.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="203.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,010 samples, 0.90%)</title><rect x="204.1" y="403.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,010 samples, 0.90%)</title><rect x="204.1" y="387.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.1" y="398.0"></text>
</g>
<g>
<title>char[] (1,305 samples, 0.39%)</title><rect x="204.1" y="371.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="207.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (902 samples, 0.27%)</title><rect x="208.7" y="371.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="211.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (803 samples, 0.24%)</title><rect x="211.8" y="371.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (803 samples, 0.24%)</title><rect x="211.8" y="355.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (803 samples, 0.24%)</title><rect x="211.8" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.8" y="350.0"></text>
</g>
<g>
<title>byte[] (803 samples, 0.24%)</title><rect x="211.8" y="323.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="214.8" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32122] (14,549 samples, 4.34%)</title><rect x="214.7" y="483.0" width="51.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="217.7" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,549 samples, 4.34%)</title><rect x="214.7" y="467.0" width="51.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.7" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (14,549 samples, 4.34%)</title><rect x="214.7" y="451.0" width="51.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.7" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14,549 samples, 4.34%)</title><rect x="214.7" y="435.0" width="51.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.7" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14,549 samples, 4.34%)</title><rect x="214.7" y="419.0" width="51.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.7" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,269 samples, 1.57%)</title><rect x="214.7" y="403.0" width="18.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,269 samples, 1.57%)</title><rect x="214.7" y="387.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.7" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,221 samples, 1.26%)</title><rect x="214.7" y="371.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (845 samples, 0.25%)</title><rect x="214.7" y="355.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (845 samples, 0.25%)</title><rect x="214.7" y="339.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (845 samples, 0.25%)</title><rect x="214.7" y="323.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (482 samples, 0.14%)</title><rect x="214.7" y="307.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="217.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (363 samples, 0.11%)</title><rect x="216.4" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="318.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.11%)</title><rect x="216.4" y="291.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="219.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,376 samples, 1.01%)</title><rect x="217.6" y="355.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (330 samples, 0.10%)</title><rect x="217.6" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (330 samples, 0.10%)</title><rect x="217.6" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (330 samples, 0.10%)</title><rect x="217.6" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (330 samples, 0.10%)</title><rect x="217.6" y="291.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.6" y="302.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.10%)</title><rect x="217.6" y="275.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (909 samples, 0.27%)</title><rect x="218.8" y="339.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (909 samples, 0.27%)</title><rect x="218.8" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (909 samples, 0.27%)</title><rect x="218.8" y="307.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="221.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,298 samples, 0.39%)</title><rect x="222.0" y="339.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (429 samples, 0.13%)</title><rect x="222.0" y="323.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (429 samples, 0.13%)</title><rect x="222.0" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (429 samples, 0.13%)</title><rect x="222.0" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.0" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (429 samples, 0.13%)</title><rect x="222.0" y="275.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="225.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (869 samples, 0.26%)</title><rect x="223.5" y="323.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (520 samples, 0.16%)</title><rect x="223.5" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (520 samples, 0.16%)</title><rect x="223.5" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (520 samples, 0.16%)</title><rect x="223.5" y="275.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (520 samples, 0.16%)</title><rect x="223.5" y="259.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="226.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (349 samples, 0.10%)</title><rect x="225.3" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (349 samples, 0.10%)</title><rect x="225.3" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (348 samples, 0.10%)</title><rect x="225.3" y="275.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="228.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (839 samples, 0.25%)</title><rect x="226.6" y="339.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (839 samples, 0.25%)</title><rect x="226.6" y="323.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (839 samples, 0.25%)</title><rect x="226.6" y="307.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (839 samples, 0.25%)</title><rect x="226.6" y="291.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (555 samples, 0.17%)</title><rect x="226.6" y="275.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="229.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (284 samples, 0.08%)</title><rect x="228.5" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.5" y="286.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.08%)</title><rect x="228.5" y="259.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="231.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,048 samples, 0.31%)</title><rect x="229.5" y="371.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,048 samples, 0.31%)</title><rect x="229.5" y="355.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,048 samples, 0.31%)</title><rect x="229.5" y="339.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (457 samples, 0.14%)</title><rect x="229.5" y="323.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="232.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (591 samples, 0.18%)</title><rect x="231.1" y="323.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.1" y="334.0"></text>
</g>
<g>
<title>byte[] (591 samples, 0.18%)</title><rect x="231.1" y="307.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="234.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,108 samples, 1.52%)</title><rect x="233.2" y="403.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (595 samples, 0.18%)</title><rect x="233.2" y="387.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="236.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,603 samples, 0.48%)</title><rect x="235.3" y="387.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,546 samples, 0.46%)</title><rect x="235.3" y="371.0" width="5.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="238.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,910 samples, 0.87%)</title><rect x="240.9" y="387.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,910 samples, 0.87%)</title><rect x="240.9" y="371.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.9" y="382.0"></text>
</g>
<g>
<title>char[] (1,822 samples, 0.54%)</title><rect x="240.9" y="355.0" width="6.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (313 samples, 0.09%)</title><rect x="247.3" y="355.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="250.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (775 samples, 0.23%)</title><rect x="248.4" y="355.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (775 samples, 0.23%)</title><rect x="248.4" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (775 samples, 0.23%)</title><rect x="248.4" y="323.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.4" y="334.0"></text>
</g>
<g>
<title>byte[] (775 samples, 0.23%)</title><rect x="248.4" y="307.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="251.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,172 samples, 1.24%)</title><rect x="251.2" y="403.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,172 samples, 1.24%)</title><rect x="251.2" y="387.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="398.0"></text>
</g>
<g>
<title>char[] (2,001 samples, 0.60%)</title><rect x="251.2" y="371.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="254.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (940 samples, 0.28%)</title><rect x="258.2" y="371.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="261.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,231 samples, 0.37%)</title><rect x="261.5" y="371.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,231 samples, 0.37%)</title><rect x="261.5" y="355.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,231 samples, 0.37%)</title><rect x="261.5" y="339.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.5" y="350.0"></text>
</g>
<g>
<title>byte[] (1,231 samples, 0.37%)</title><rect x="261.5" y="323.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="264.5" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32105] (14,662 samples, 4.37%)</title><rect x="265.8" y="483.0" width="51.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="268.8" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,662 samples, 4.37%)</title><rect x="265.8" y="467.0" width="51.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.8" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (14,662 samples, 4.37%)</title><rect x="265.8" y="451.0" width="51.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.8" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14,662 samples, 4.37%)</title><rect x="265.8" y="435.0" width="51.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.8" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14,659 samples, 4.37%)</title><rect x="265.8" y="419.0" width="51.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.8" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,518 samples, 1.64%)</title><rect x="265.8" y="403.0" width="19.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,518 samples, 1.64%)</title><rect x="265.8" y="387.0" width="19.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.8" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,381 samples, 1.31%)</title><rect x="265.8" y="371.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (776 samples, 0.23%)</title><rect x="265.8" y="355.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (776 samples, 0.23%)</title><rect x="265.8" y="339.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (776 samples, 0.23%)</title><rect x="265.8" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (362 samples, 0.11%)</title><rect x="265.8" y="307.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="268.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (414 samples, 0.12%)</title><rect x="267.1" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.1" y="318.0"></text>
</g>
<g>
<title>byte[] (414 samples, 0.12%)</title><rect x="267.1" y="291.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="270.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,605 samples, 1.07%)</title><rect x="268.6" y="355.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (776 samples, 0.23%)</title><rect x="268.6" y="339.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (776 samples, 0.23%)</title><rect x="268.6" y="323.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (776 samples, 0.23%)</title><rect x="268.6" y="307.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (776 samples, 0.23%)</title><rect x="268.6" y="291.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.6" y="302.0"></text>
</g>
<g>
<title>byte[] (776 samples, 0.23%)</title><rect x="268.6" y="275.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="271.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,406 samples, 0.42%)</title><rect x="271.3" y="339.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,406 samples, 0.42%)</title><rect x="271.3" y="323.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,406 samples, 0.42%)</title><rect x="271.3" y="307.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="274.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,423 samples, 0.42%)</title><rect x="276.3" y="339.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649646178.linkToTargetMethod (732 samples, 0.22%)</title><rect x="276.3" y="323.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (732 samples, 0.22%)</title><rect x="276.3" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.get$Lambda (732 samples, 0.22%)</title><rect x="276.3" y="291.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$61 (732 samples, 0.22%)</title><rect x="276.3" y="275.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="279.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (691 samples, 0.21%)</title><rect x="278.8" y="323.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (691 samples, 0.21%)</title><rect x="278.8" y="307.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (688 samples, 0.21%)</title><rect x="278.8" y="291.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="281.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,137 samples, 0.34%)</title><rect x="281.3" y="371.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,137 samples, 0.34%)</title><rect x="281.3" y="355.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,137 samples, 0.34%)</title><rect x="281.3" y="339.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (574 samples, 0.17%)</title><rect x="281.3" y="323.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="284.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (563 samples, 0.17%)</title><rect x="283.3" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.3" y="334.0"></text>
</g>
<g>
<title>byte[] (563 samples, 0.17%)</title><rect x="283.3" y="307.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="286.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,918 samples, 1.76%)</title><rect x="285.3" y="403.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.3" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,094 samples, 0.33%)</title><rect x="285.3" y="387.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="288.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,756 samples, 0.52%)</title><rect x="289.1" y="387.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,574 samples, 0.47%)</title><rect x="289.1" y="371.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="292.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (182 samples, 0.05%)</title><rect x="294.6" y="371.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="297.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,068 samples, 0.91%)</title><rect x="295.3" y="387.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,068 samples, 0.91%)</title><rect x="295.3" y="371.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.3" y="382.0"></text>
</g>
<g>
<title>char[] (1,661 samples, 0.50%)</title><rect x="295.3" y="355.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="298.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (666 samples, 0.20%)</title><rect x="301.1" y="355.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="304.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (738 samples, 0.22%)</title><rect x="303.5" y="355.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (738 samples, 0.22%)</title><rect x="303.5" y="339.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (738 samples, 0.22%)</title><rect x="303.5" y="323.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.5" y="334.0"></text>
</g>
<g>
<title>byte[] (738 samples, 0.22%)</title><rect x="303.5" y="307.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="306.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,223 samples, 0.96%)</title><rect x="306.1" y="403.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,223 samples, 0.96%)</title><rect x="306.1" y="387.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.1" y="398.0"></text>
</g>
<g>
<title>char[] (1,568 samples, 0.47%)</title><rect x="306.1" y="371.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="309.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (478 samples, 0.14%)</title><rect x="311.6" y="371.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="314.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,177 samples, 0.35%)</title><rect x="313.3" y="371.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,177 samples, 0.35%)</title><rect x="313.3" y="355.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,177 samples, 0.35%)</title><rect x="313.3" y="339.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>byte[] (1,177 samples, 0.35%)</title><rect x="313.3" y="323.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="316.3" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32116] (13,757 samples, 4.10%)</title><rect x="317.4" y="483.0" width="48.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="320.4" y="494.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,757 samples, 4.10%)</title><rect x="317.4" y="467.0" width="48.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.4" y="478.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (13,757 samples, 4.10%)</title><rect x="317.4" y="451.0" width="48.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.4" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,757 samples, 4.10%)</title><rect x="317.4" y="435.0" width="48.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.4" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,757 samples, 4.10%)</title><rect x="317.4" y="419.0" width="48.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.4" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,293 samples, 1.58%)</title><rect x="317.4" y="403.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,293 samples, 1.58%)</title><rect x="317.4" y="387.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.4" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,277 samples, 1.27%)</title><rect x="317.4" y="371.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (886 samples, 0.26%)</title><rect x="317.4" y="355.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (886 samples, 0.26%)</title><rect x="317.4" y="339.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (886 samples, 0.26%)</title><rect x="317.4" y="323.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (457 samples, 0.14%)</title><rect x="317.4" y="307.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="320.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (429 samples, 0.13%)</title><rect x="319.0" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.0" y="318.0"></text>
</g>
<g>
<title>byte[] (429 samples, 0.13%)</title><rect x="319.0" y="291.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="322.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,391 samples, 1.01%)</title><rect x="320.5" y="355.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (384 samples, 0.11%)</title><rect x="320.5" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (384 samples, 0.11%)</title><rect x="320.5" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (384 samples, 0.11%)</title><rect x="320.5" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (384 samples, 0.11%)</title><rect x="320.5" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.5" y="302.0"></text>
</g>
<g>
<title>byte[] (384 samples, 0.11%)</title><rect x="320.5" y="275.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="323.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (958 samples, 0.29%)</title><rect x="321.9" y="339.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (958 samples, 0.29%)</title><rect x="321.9" y="323.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (958 samples, 0.29%)</title><rect x="321.9" y="307.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="324.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,306 samples, 0.39%)</title><rect x="325.3" y="339.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (302 samples, 0.09%)</title><rect x="325.3" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (302 samples, 0.09%)</title><rect x="325.3" y="307.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (302 samples, 0.09%)</title><rect x="325.3" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (302 samples, 0.09%)</title><rect x="325.3" y="275.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="328.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (1,004 samples, 0.30%)</title><rect x="326.3" y="323.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (625 samples, 0.19%)</title><rect x="326.3" y="307.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (625 samples, 0.19%)</title><rect x="326.3" y="291.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (625 samples, 0.19%)</title><rect x="326.3" y="275.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (625 samples, 0.19%)</title><rect x="326.3" y="259.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="329.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (379 samples, 0.11%)</title><rect x="328.5" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (379 samples, 0.11%)</title><rect x="328.5" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (379 samples, 0.11%)</title><rect x="328.5" y="275.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="331.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (743 samples, 0.22%)</title><rect x="329.9" y="339.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (743 samples, 0.22%)</title><rect x="329.9" y="323.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (743 samples, 0.22%)</title><rect x="329.9" y="307.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (743 samples, 0.22%)</title><rect x="329.9" y="291.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (498 samples, 0.15%)</title><rect x="329.9" y="275.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="332.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (245 samples, 0.07%)</title><rect x="331.6" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.6" y="286.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.07%)</title><rect x="331.6" y="259.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="334.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,016 samples, 0.30%)</title><rect x="332.5" y="371.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,016 samples, 0.30%)</title><rect x="332.5" y="355.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,016 samples, 0.30%)</title><rect x="332.5" y="339.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (428 samples, 0.13%)</title><rect x="332.5" y="323.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="335.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (588 samples, 0.18%)</title><rect x="334.0" y="323.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.0" y="334.0"></text>
</g>
<g>
<title>byte[] (588 samples, 0.18%)</title><rect x="334.0" y="307.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="337.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,759 samples, 1.42%)</title><rect x="336.0" y="403.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.0" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (711 samples, 0.21%)</title><rect x="336.0" y="387.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="339.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,536 samples, 0.46%)</title><rect x="338.5" y="387.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.5" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,536 samples, 0.46%)</title><rect x="338.5" y="371.0" width="5.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="341.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,512 samples, 0.75%)</title><rect x="343.9" y="387.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,512 samples, 0.75%)</title><rect x="343.9" y="371.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.9" y="382.0"></text>
</g>
<g>
<title>char[] (1,526 samples, 0.45%)</title><rect x="343.9" y="355.0" width="5.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="346.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (351 samples, 0.10%)</title><rect x="349.3" y="355.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="352.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (635 samples, 0.19%)</title><rect x="350.5" y="355.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (635 samples, 0.19%)</title><rect x="350.5" y="339.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (635 samples, 0.19%)</title><rect x="350.5" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.5" y="334.0"></text>
</g>
<g>
<title>byte[] (635 samples, 0.19%)</title><rect x="350.5" y="307.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="353.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,705 samples, 1.10%)</title><rect x="352.8" y="403.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,705 samples, 1.10%)</title><rect x="352.8" y="387.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.8" y="398.0"></text>
</g>
<g>
<title>char[] (1,890 samples, 0.56%)</title><rect x="352.8" y="371.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="355.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (639 samples, 0.19%)</title><rect x="359.4" y="371.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="362.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,176 samples, 0.35%)</title><rect x="361.7" y="371.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,176 samples, 0.35%)</title><rect x="361.7" y="355.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,176 samples, 0.35%)</title><rect x="361.7" y="339.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.7" y="350.0"></text>
</g>
<g>
<title>byte[] (1,176 samples, 0.35%)</title><rect x="361.7" y="323.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="364.7" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32106] (14,663 samples, 4.37%)</title><rect x="365.8" y="483.0" width="51.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="368.8" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,663 samples, 4.37%)</title><rect x="365.8" y="467.0" width="51.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.8" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (14,663 samples, 4.37%)</title><rect x="365.8" y="451.0" width="51.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14,663 samples, 4.37%)</title><rect x="365.8" y="435.0" width="51.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.8" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14,663 samples, 4.37%)</title><rect x="365.8" y="419.0" width="51.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,689 samples, 1.70%)</title><rect x="365.8" y="403.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,689 samples, 1.70%)</title><rect x="365.8" y="387.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.8" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,356 samples, 1.30%)</title><rect x="365.8" y="371.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (838 samples, 0.25%)</title><rect x="365.8" y="355.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (838 samples, 0.25%)</title><rect x="365.8" y="339.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (838 samples, 0.25%)</title><rect x="365.8" y="323.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.11%)</title><rect x="365.8" y="307.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="368.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (464 samples, 0.14%)</title><rect x="367.1" y="307.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.1" y="318.0"></text>
</g>
<g>
<title>byte[] (464 samples, 0.14%)</title><rect x="367.1" y="291.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="370.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,518 samples, 1.05%)</title><rect x="368.8" y="355.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (788 samples, 0.23%)</title><rect x="368.8" y="339.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (788 samples, 0.23%)</title><rect x="368.8" y="323.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (788 samples, 0.23%)</title><rect x="368.8" y="307.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (788 samples, 0.23%)</title><rect x="368.8" y="291.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.8" y="302.0"></text>
</g>
<g>
<title>byte[] (788 samples, 0.23%)</title><rect x="368.8" y="275.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="371.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,356 samples, 0.40%)</title><rect x="371.5" y="339.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,356 samples, 0.40%)</title><rect x="371.5" y="323.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,356 samples, 0.40%)</title><rect x="371.5" y="307.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="374.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,374 samples, 0.41%)</title><rect x="376.3" y="339.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649646178.linkToTargetMethod (630 samples, 0.19%)</title><rect x="376.3" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (630 samples, 0.19%)</title><rect x="376.3" y="307.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.get$Lambda (630 samples, 0.19%)</title><rect x="376.3" y="291.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$61 (630 samples, 0.19%)</title><rect x="376.3" y="275.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="379.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (744 samples, 0.22%)</title><rect x="378.5" y="323.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (744 samples, 0.22%)</title><rect x="378.5" y="307.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (741 samples, 0.22%)</title><rect x="378.5" y="291.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.5" y="302.0"></text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (127 samples, 0.04%)</title><rect x="381.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (127 samples, 0.04%)</title><rect x="381.1" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (127 samples, 0.04%)</title><rect x="381.1" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (127 samples, 0.04%)</title><rect x="381.1" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (127 samples, 0.04%)</title><rect x="381.1" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (127 samples, 0.04%)</title><rect x="381.1" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (127 samples, 0.04%)</title><rect x="381.1" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (127 samples, 0.04%)</title><rect x="381.1" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (127 samples, 0.04%)</title><rect x="381.1" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (127 samples, 0.04%)</title><rect x="381.1" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (102 samples, 0.03%)</title><rect x="381.1" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,206 samples, 0.36%)</title><rect x="381.6" y="371.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,206 samples, 0.36%)</title><rect x="381.6" y="355.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,206 samples, 0.36%)</title><rect x="381.6" y="339.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (540 samples, 0.16%)</title><rect x="381.6" y="323.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="384.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (666 samples, 0.20%)</title><rect x="383.5" y="323.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.5" y="334.0"></text>
</g>
<g>
<title>byte[] (666 samples, 0.20%)</title><rect x="383.5" y="307.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="386.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,858 samples, 1.75%)</title><rect x="385.8" y="403.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.8" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,017 samples, 0.30%)</title><rect x="385.8" y="387.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="388.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,785 samples, 0.53%)</title><rect x="389.4" y="387.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,514 samples, 0.45%)</title><rect x="389.4" y="371.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="392.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (271 samples, 0.08%)</title><rect x="394.7" y="371.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,056 samples, 0.91%)</title><rect x="395.7" y="387.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,056 samples, 0.91%)</title><rect x="395.7" y="371.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.7" y="382.0"></text>
</g>
<g>
<title>char[] (1,575 samples, 0.47%)</title><rect x="395.7" y="355.0" width="5.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="398.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (639 samples, 0.19%)</title><rect x="401.2" y="355.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="404.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (841 samples, 0.25%)</title><rect x="403.5" y="355.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (841 samples, 0.25%)</title><rect x="403.5" y="339.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (841 samples, 0.25%)</title><rect x="403.5" y="323.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.5" y="334.0"></text>
</g>
<g>
<title>byte[] (841 samples, 0.25%)</title><rect x="403.5" y="307.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="406.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,116 samples, 0.93%)</title><rect x="406.4" y="403.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,116 samples, 0.93%)</title><rect x="406.4" y="387.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.4" y="398.0"></text>
</g>
<g>
<title>char[] (1,517 samples, 0.45%)</title><rect x="406.4" y="371.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="409.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (689 samples, 0.21%)</title><rect x="411.8" y="371.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="414.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (910 samples, 0.27%)</title><rect x="414.2" y="371.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (910 samples, 0.27%)</title><rect x="414.2" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (910 samples, 0.27%)</title><rect x="414.2" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.2" y="350.0"></text>
</g>
<g>
<title>byte[] (910 samples, 0.27%)</title><rect x="414.2" y="323.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="417.2" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32117] (14,545 samples, 4.34%)</title><rect x="417.4" y="483.0" width="51.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="420.4" y="494.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,545 samples, 4.34%)</title><rect x="417.4" y="467.0" width="51.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.4" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,071 samples, 0.32%)</title><rect x="417.4" y="451.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.4" y="462.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,071 samples, 0.32%)</title><rect x="417.4" y="435.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="420.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,474 samples, 4.02%)</title><rect x="421.2" y="451.0" width="47.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.2" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,474 samples, 4.02%)</title><rect x="421.2" y="435.0" width="47.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.2" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,474 samples, 4.02%)</title><rect x="421.2" y="419.0" width="47.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,144 samples, 1.53%)</title><rect x="421.2" y="403.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,144 samples, 1.53%)</title><rect x="421.2" y="387.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,165 samples, 1.24%)</title><rect x="421.2" y="371.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (854 samples, 0.25%)</title><rect x="421.2" y="355.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (854 samples, 0.25%)</title><rect x="421.2" y="339.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (854 samples, 0.25%)</title><rect x="421.2" y="323.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (439 samples, 0.13%)</title><rect x="421.2" y="307.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="424.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (415 samples, 0.12%)</title><rect x="422.7" y="307.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.7" y="318.0"></text>
</g>
<g>
<title>byte[] (415 samples, 0.12%)</title><rect x="422.7" y="291.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="425.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,311 samples, 0.99%)</title><rect x="424.2" y="355.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (562 samples, 0.17%)</title><rect x="424.2" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (562 samples, 0.17%)</title><rect x="424.2" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (562 samples, 0.17%)</title><rect x="424.2" y="307.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (562 samples, 0.17%)</title><rect x="424.2" y="291.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.2" y="302.0"></text>
</g>
<g>
<title>byte[] (562 samples, 0.17%)</title><rect x="424.2" y="275.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="427.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (913 samples, 0.27%)</title><rect x="426.1" y="339.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (913 samples, 0.27%)</title><rect x="426.1" y="323.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (913 samples, 0.27%)</title><rect x="426.1" y="307.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="429.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,114 samples, 0.33%)</title><rect x="429.4" y="339.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (372 samples, 0.11%)</title><rect x="429.4" y="323.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (372 samples, 0.11%)</title><rect x="429.4" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (372 samples, 0.11%)</title><rect x="429.4" y="291.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.4" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (372 samples, 0.11%)</title><rect x="429.4" y="275.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="432.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (742 samples, 0.22%)</title><rect x="430.7" y="323.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (424 samples, 0.13%)</title><rect x="430.7" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (424 samples, 0.13%)</title><rect x="430.7" y="291.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (424 samples, 0.13%)</title><rect x="430.7" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (424 samples, 0.13%)</title><rect x="430.7" y="259.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="433.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (318 samples, 0.09%)</title><rect x="432.2" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (318 samples, 0.09%)</title><rect x="432.2" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (316 samples, 0.09%)</title><rect x="432.2" y="275.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="435.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (722 samples, 0.22%)</title><rect x="433.3" y="339.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (722 samples, 0.22%)</title><rect x="433.3" y="323.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (722 samples, 0.22%)</title><rect x="433.3" y="307.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (722 samples, 0.22%)</title><rect x="433.3" y="291.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (418 samples, 0.12%)</title><rect x="433.3" y="275.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="436.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (304 samples, 0.09%)</title><rect x="434.7" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.7" y="286.0"></text>
</g>
<g>
<title>byte[] (304 samples, 0.09%)</title><rect x="434.7" y="259.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="437.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (979 samples, 0.29%)</title><rect x="435.8" y="371.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (979 samples, 0.29%)</title><rect x="435.8" y="355.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (979 samples, 0.29%)</title><rect x="435.8" y="339.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (518 samples, 0.15%)</title><rect x="435.8" y="323.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="438.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (461 samples, 0.14%)</title><rect x="437.6" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.6" y="334.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.14%)</title><rect x="437.6" y="307.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="440.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,390 samples, 1.31%)</title><rect x="439.3" y="403.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.3" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (577 samples, 0.17%)</title><rect x="439.3" y="387.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="442.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,559 samples, 0.46%)</title><rect x="441.3" y="387.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,525 samples, 0.45%)</title><rect x="441.3" y="371.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="444.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,254 samples, 0.67%)</title><rect x="446.8" y="387.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,254 samples, 0.67%)</title><rect x="446.8" y="371.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.8" y="382.0"></text>
</g>
<g>
<title>char[] (1,274 samples, 0.38%)</title><rect x="446.8" y="355.0" width="4.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="449.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (318 samples, 0.09%)</title><rect x="451.3" y="355.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="454.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (662 samples, 0.20%)</title><rect x="452.4" y="355.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (662 samples, 0.20%)</title><rect x="452.4" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (662 samples, 0.20%)</title><rect x="452.4" y="323.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.4" y="334.0"></text>
</g>
<g>
<title>byte[] (662 samples, 0.20%)</title><rect x="452.4" y="307.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="455.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,940 samples, 1.17%)</title><rect x="454.7" y="403.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,940 samples, 1.17%)</title><rect x="454.7" y="387.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.7" y="398.0"></text>
</g>
<g>
<title>char[] (1,756 samples, 0.52%)</title><rect x="454.7" y="371.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="457.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (897 samples, 0.27%)</title><rect x="460.9" y="371.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="463.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,287 samples, 0.38%)</title><rect x="464.0" y="371.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,287 samples, 0.38%)</title><rect x="464.0" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,287 samples, 0.38%)</title><rect x="464.0" y="339.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.0" y="350.0"></text>
</g>
<g>
<title>byte[] (1,287 samples, 0.38%)</title><rect x="464.0" y="323.0" width="4.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="467.0" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32124] (13,861 samples, 4.13%)</title><rect x="468.6" y="483.0" width="48.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="471.6" y="494.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,861 samples, 4.13%)</title><rect x="468.6" y="467.0" width="48.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="478.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (13,861 samples, 4.13%)</title><rect x="468.6" y="451.0" width="48.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.6" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,861 samples, 4.13%)</title><rect x="468.6" y="435.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.6" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,861 samples, 4.13%)</title><rect x="468.6" y="419.0" width="48.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.6" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,253 samples, 1.57%)</title><rect x="468.6" y="403.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,253 samples, 1.57%)</title><rect x="468.6" y="387.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.6" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,210 samples, 1.26%)</title><rect x="468.6" y="371.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (775 samples, 0.23%)</title><rect x="468.6" y="355.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (775 samples, 0.23%)</title><rect x="468.6" y="339.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (775 samples, 0.23%)</title><rect x="468.6" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (445 samples, 0.13%)</title><rect x="468.6" y="307.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="471.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (330 samples, 0.10%)</title><rect x="470.1" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.1" y="318.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.10%)</title><rect x="470.1" y="291.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="473.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3,435 samples, 1.02%)</title><rect x="471.3" y="355.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (368 samples, 0.11%)</title><rect x="471.3" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (368 samples, 0.11%)</title><rect x="471.3" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (368 samples, 0.11%)</title><rect x="471.3" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (368 samples, 0.11%)</title><rect x="471.3" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.3" y="302.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.11%)</title><rect x="471.3" y="275.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="474.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (908 samples, 0.27%)</title><rect x="472.6" y="339.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (908 samples, 0.27%)</title><rect x="472.6" y="323.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (908 samples, 0.27%)</title><rect x="472.6" y="307.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="475.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1,241 samples, 0.37%)</title><rect x="475.8" y="339.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (408 samples, 0.12%)</title><rect x="475.8" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (408 samples, 0.12%)</title><rect x="475.8" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.get$Lambda (408 samples, 0.12%)</title><rect x="475.8" y="291.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.8" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$67 (408 samples, 0.12%)</title><rect x="475.8" y="275.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="478.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (833 samples, 0.25%)</title><rect x="477.2" y="323.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (475 samples, 0.14%)</title><rect x="477.2" y="307.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (475 samples, 0.14%)</title><rect x="477.2" y="291.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.get$Lambda (475 samples, 0.14%)</title><rect x="477.2" y="275.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicator$$Lambda$70 (475 samples, 0.14%)</title><rect x="477.2" y="259.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="480.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (358 samples, 0.11%)</title><rect x="478.9" y="307.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (358 samples, 0.11%)</title><rect x="478.9" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (356 samples, 0.11%)</title><rect x="478.9" y="275.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="481.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (918 samples, 0.27%)</title><rect x="480.1" y="339.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (918 samples, 0.27%)</title><rect x="480.1" y="323.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (918 samples, 0.27%)</title><rect x="480.1" y="307.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (918 samples, 0.27%)</title><rect x="480.1" y="291.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (609 samples, 0.18%)</title><rect x="480.1" y="275.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="483.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (309 samples, 0.09%)</title><rect x="482.3" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="286.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.09%)</title><rect x="482.3" y="259.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="485.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,043 samples, 0.31%)</title><rect x="483.4" y="371.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,043 samples, 0.31%)</title><rect x="483.4" y="355.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,043 samples, 0.31%)</title><rect x="483.4" y="339.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (458 samples, 0.14%)</title><rect x="483.4" y="323.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="486.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (585 samples, 0.17%)</title><rect x="485.0" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.0" y="334.0"></text>
</g>
<g>
<title>byte[] (585 samples, 0.17%)</title><rect x="485.0" y="307.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="488.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,849 samples, 1.45%)</title><rect x="487.0" y="403.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.0" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Request (662 samples, 0.20%)</title><rect x="487.0" y="387.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="490.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,637 samples, 0.49%)</title><rect x="489.4" y="387.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (1,637 samples, 0.49%)</title><rect x="489.4" y="371.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="492.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,550 samples, 0.76%)</title><rect x="495.1" y="387.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,550 samples, 0.76%)</title><rect x="495.1" y="371.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.1" y="382.0"></text>
</g>
<g>
<title>char[] (1,441 samples, 0.43%)</title><rect x="495.1" y="355.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="498.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (419 samples, 0.12%)</title><rect x="500.2" y="355.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="503.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (690 samples, 0.21%)</title><rect x="501.7" y="355.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (690 samples, 0.21%)</title><rect x="501.7" y="339.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (690 samples, 0.21%)</title><rect x="501.7" y="323.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.7" y="334.0"></text>
</g>
<g>
<title>byte[] (690 samples, 0.21%)</title><rect x="501.7" y="307.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="504.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,759 samples, 1.12%)</title><rect x="504.1" y="403.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,759 samples, 1.12%)</title><rect x="504.1" y="387.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.1" y="398.0"></text>
</g>
<g>
<title>char[] (1,846 samples, 0.55%)</title><rect x="504.1" y="371.0" width="6.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="507.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (713 samples, 0.21%)</title><rect x="510.6" y="371.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="513.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,200 samples, 0.36%)</title><rect x="513.1" y="371.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,200 samples, 0.36%)</title><rect x="513.1" y="355.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,200 samples, 0.36%)</title><rect x="513.1" y="339.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.1" y="350.0"></text>
</g>
<g>
<title>byte[] (1,200 samples, 0.36%)</title><rect x="513.1" y="323.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="516.1" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32182] (19,266 samples, 5.74%)</title><rect x="517.3" y="483.0" width="67.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="520.3" y="494.0">[asyncW..</text>
</g>
<g>
<title>java/lang/Thread.run (19,266 samples, 5.74%)</title><rect x="517.3" y="467.0" width="67.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.3" y="478.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,266 samples, 5.74%)</title><rect x="517.3" y="451.0" width="67.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.3" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,266 samples, 5.74%)</title><rect x="517.3" y="435.0" width="67.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.3" y="446.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (19,244 samples, 5.74%)</title><rect x="517.4" y="419.0" width="67.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.4" y="430.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (19,244 samples, 5.74%)</title><rect x="517.4" y="403.0" width="67.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.4" y="414.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collection.stream (83 samples, 0.02%)</title><rect x="517.6" y="387.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (155 samples, 0.05%)</title><rect x="518.0" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (136 samples, 0.04%)</title><rect x="518.0" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (136 samples, 0.04%)</title><rect x="518.0" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (107 samples, 0.03%)</title><rect x="518.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (100 samples, 0.03%)</title><rect x="518.0" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (77 samples, 0.02%)</title><rect x="518.0" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (94 samples, 0.03%)</title><rect x="518.7" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (89 samples, 0.03%)</title><rect x="518.7" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (80 samples, 0.02%)</title><rect x="518.7" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (80 samples, 0.02%)</title><rect x="518.7" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (84 samples, 0.03%)</title><rect x="519.0" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (18,708 samples, 5.58%)</title><rect x="519.3" y="387.0" width="65.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.3" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (9,033 samples, 2.69%)</title><rect x="519.3" y="371.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.3" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (9,033 samples, 2.69%)</title><rect x="519.3" y="355.0" width="31.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.3" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (9,033 samples, 2.69%)</title><rect x="519.3" y="339.0" width="31.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.3" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (8,917 samples, 2.66%)</title><rect x="519.3" y="323.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.3" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (8,917 samples, 2.66%)</title><rect x="519.3" y="307.0" width="31.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.3" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,136 samples, 0.34%)</title><rect x="519.3" y="291.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (975 samples, 0.29%)</title><rect x="519.3" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.3" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (412 samples, 0.12%)</title><rect x="519.3" y="259.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (412 samples, 0.12%)</title><rect x="519.3" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (412 samples, 0.12%)</title><rect x="519.3" y="227.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (412 samples, 0.12%)</title><rect x="519.3" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (412 samples, 0.12%)</title><rect x="519.3" y="195.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (412 samples, 0.12%)</title><rect x="519.3" y="179.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (412 samples, 0.12%)</title><rect x="519.3" y="163.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (412 samples, 0.12%)</title><rect x="519.3" y="147.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (304 samples, 0.09%)</title><rect x="519.3" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (304 samples, 0.09%)</title><rect x="519.3" y="115.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.3" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (304 samples, 0.09%)</title><rect x="519.3" y="99.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="522.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (108 samples, 0.03%)</title><rect x="520.4" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (108 samples, 0.03%)</title><rect x="520.4" y="115.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="523.4" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (563 samples, 0.17%)</title><rect x="520.8" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (563 samples, 0.17%)</title><rect x="520.8" y="243.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (563 samples, 0.17%)</title><rect x="520.8" y="227.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (563 samples, 0.17%)</title><rect x="520.8" y="211.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (563 samples, 0.17%)</title><rect x="520.8" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (563 samples, 0.17%)</title><rect x="520.8" y="179.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (284 samples, 0.08%)</title><rect x="520.8" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (282 samples, 0.08%)</title><rect x="520.8" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (282 samples, 0.08%)</title><rect x="520.8" y="131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (282 samples, 0.08%)</title><rect x="520.8" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (139 samples, 0.04%)</title><rect x="521.1" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (279 samples, 0.08%)</title><rect x="521.8" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (279 samples, 0.08%)</title><rect x="521.8" y="147.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (279 samples, 0.08%)</title><rect x="521.8" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (279 samples, 0.08%)</title><rect x="521.8" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (279 samples, 0.08%)</title><rect x="521.8" y="99.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (279 samples, 0.08%)</title><rect x="521.8" y="83.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="524.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (161 samples, 0.05%)</title><rect x="522.8" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (161 samples, 0.05%)</title><rect x="522.8" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (160 samples, 0.05%)</title><rect x="522.8" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (160 samples, 0.05%)</title><rect x="522.8" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.8" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (160 samples, 0.05%)</title><rect x="522.8" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="525.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (7,746 samples, 2.31%)</title><rect x="523.3" y="291.0" width="27.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.3" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1,540 samples, 0.46%)</title><rect x="523.3" y="275.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,075 samples, 0.32%)</title><rect x="523.3" y="259.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,065 samples, 0.32%)</title><rect x="523.4" y="243.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (947 samples, 0.28%)</title><rect x="523.8" y="227.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (947 samples, 0.28%)</title><rect x="523.8" y="211.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (933 samples, 0.28%)</title><rect x="523.8" y="195.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (933 samples, 0.28%)</title><rect x="523.8" y="179.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (933 samples, 0.28%)</title><rect x="523.8" y="163.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (933 samples, 0.28%)</title><rect x="523.8" y="147.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (651 samples, 0.19%)</title><rect x="523.8" y="131.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (585 samples, 0.17%)</title><rect x="524.1" y="115.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (585 samples, 0.17%)</title><rect x="524.1" y="99.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (585 samples, 0.17%)</title><rect x="524.1" y="83.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (84 samples, 0.03%)</title><rect x="524.1" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (84 samples, 0.03%)</title><rect x="524.1" y="51.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="527.1" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (76 samples, 0.02%)</title><rect x="524.4" y="67.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.02%)</title><rect x="524.4" y="51.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="527.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (334 samples, 0.10%)</title><rect x="524.6" y="67.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (164 samples, 0.05%)</title><rect x="524.6" y="51.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (164 samples, 0.05%)</title><rect x="524.6" y="35.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="527.6" y="46.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (170 samples, 0.05%)</title><rect x="525.2" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (170 samples, 0.05%)</title><rect x="525.2" y="35.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="528.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (91 samples, 0.03%)</title><rect x="525.8" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (91 samples, 0.03%)</title><rect x="525.8" y="51.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="528.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (282 samples, 0.08%)</title><rect x="526.1" y="131.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (282 samples, 0.08%)</title><rect x="526.1" y="115.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (282 samples, 0.08%)</title><rect x="526.1" y="99.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (282 samples, 0.08%)</title><rect x="526.1" y="83.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (282 samples, 0.08%)</title><rect x="526.1" y="67.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (282 samples, 0.08%)</title><rect x="526.1" y="51.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="529.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (465 samples, 0.14%)</title><rect x="527.1" y="259.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (465 samples, 0.14%)</title><rect x="527.1" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (465 samples, 0.14%)</title><rect x="527.1" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.1" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (213 samples, 0.06%)</title><rect x="527.1" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (213 samples, 0.06%)</title><rect x="527.1" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (213 samples, 0.06%)</title><rect x="527.1" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (213 samples, 0.06%)</title><rect x="527.1" y="163.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (213 samples, 0.06%)</title><rect x="527.1" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (213 samples, 0.06%)</title><rect x="527.1" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (213 samples, 0.06%)</title><rect x="527.1" y="115.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (213 samples, 0.06%)</title><rect x="527.1" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (213 samples, 0.06%)</title><rect x="527.1" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (213 samples, 0.06%)</title><rect x="527.1" y="67.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (213 samples, 0.06%)</title><rect x="527.1" y="51.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="530.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (252 samples, 0.08%)</title><rect x="527.9" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (252 samples, 0.08%)</title><rect x="527.9" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (252 samples, 0.08%)</title><rect x="527.9" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.9" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (252 samples, 0.08%)</title><rect x="527.9" y="163.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (252 samples, 0.08%)</title><rect x="527.9" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (252 samples, 0.08%)</title><rect x="527.9" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.9" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (102 samples, 0.03%)</title><rect x="527.9" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (102 samples, 0.03%)</title><rect x="527.9" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (102 samples, 0.03%)</title><rect x="527.9" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (102 samples, 0.03%)</title><rect x="527.9" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (73 samples, 0.02%)</title><rect x="527.9" y="51.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (150 samples, 0.04%)</title><rect x="528.2" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (150 samples, 0.04%)</title><rect x="528.2" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (150 samples, 0.04%)</title><rect x="528.2" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (150 samples, 0.04%)</title><rect x="528.2" y="67.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (150 samples, 0.04%)</title><rect x="528.2" y="51.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (150 samples, 0.04%)</title><rect x="528.2" y="35.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="531.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6,206 samples, 1.85%)</title><rect x="528.8" y="275.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.8" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (193 samples, 0.06%)</title><rect x="529.1" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (86 samples, 0.03%)</title><rect x="529.1" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (76 samples, 0.02%)</title><rect x="529.1" y="227.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (106 samples, 0.03%)</title><rect x="529.4" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (5,929 samples, 1.77%)</title><rect x="529.7" y="259.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (83 samples, 0.02%)</title><rect x="529.7" y="243.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="532.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (5,846 samples, 1.74%)</title><rect x="530.0" y="243.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (5,846 samples, 1.74%)</title><rect x="530.0" y="227.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (5,846 samples, 1.74%)</title><rect x="530.0" y="211.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,906 samples, 0.87%)</title><rect x="530.0" y="195.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.0" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,906 samples, 0.87%)</title><rect x="530.0" y="179.0" width="10.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="533.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,940 samples, 0.88%)</title><rect x="540.2" y="195.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.2" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,940 samples, 0.88%)</title><rect x="540.2" y="179.0" width="10.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="543.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (116 samples, 0.03%)</title><rect x="550.7" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (9,558 samples, 2.85%)</title><rect x="551.1" y="371.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.1" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,558 samples, 2.85%)</title><rect x="551.1" y="355.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.1" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,558 samples, 2.85%)</title><rect x="551.1" y="339.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.1" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,529 samples, 2.54%)</title><rect x="551.4" y="323.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.4" y="334.0">on..</text>
</g>
<g>
<title>byte[] (3,220 samples, 0.96%)</title><rect x="551.4" y="307.0" width="11.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="554.4" y="318.0"></text>
</g>
<g>
<title>byte[] (5,309 samples, 1.58%)</title><rect x="562.7" y="307.0" width="18.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="565.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (820 samples, 0.24%)</title><rect x="581.4" y="323.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (695 samples, 0.21%)</title><rect x="581.6" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (695 samples, 0.21%)</title><rect x="581.6" y="291.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (695 samples, 0.21%)</title><rect x="581.6" y="275.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.6" y="286.0"></text>
</g>
<g>
<title>char[] (505 samples, 0.15%)</title><rect x="581.6" y="259.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="584.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.02%)</title><rect x="583.4" y="259.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="586.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (107 samples, 0.03%)</title><rect x="583.7" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (107 samples, 0.03%)</title><rect x="583.7" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (107 samples, 0.03%)</title><rect x="583.7" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.7" y="238.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.03%)</title><rect x="583.7" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="586.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (94 samples, 0.03%)</title><rect x="584.2" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (94 samples, 0.03%)</title><rect x="584.2" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.2" y="318.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.03%)</title><rect x="584.2" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="587.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (98 samples, 0.03%)</title><rect x="584.7" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.7" y="382.0"></text>
</g>
<g>
<title>[asyncWorker tid=32183] (18,995 samples, 5.66%)</title><rect x="585.1" y="483.0" width="66.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="588.1" y="494.0">[asyncW..</text>
</g>
<g>
<title>java/lang/Thread.run (18,995 samples, 5.66%)</title><rect x="585.1" y="467.0" width="66.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.1" y="478.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,995 samples, 5.66%)</title><rect x="585.1" y="451.0" width="66.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,995 samples, 5.66%)</title><rect x="585.1" y="435.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.1" y="446.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (18,971 samples, 5.66%)</title><rect x="585.2" y="419.0" width="66.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.2" y="430.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (18,971 samples, 5.66%)</title><rect x="585.2" y="403.0" width="66.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.2" y="414.0">ru/mail..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (128 samples, 0.04%)</title><rect x="585.7" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (109 samples, 0.03%)</title><rect x="585.7" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (109 samples, 0.03%)</title><rect x="585.7" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (92 samples, 0.03%)</title><rect x="585.7" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (80 samples, 0.02%)</title><rect x="585.7" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (103 samples, 0.03%)</title><rect x="586.2" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (97 samples, 0.03%)</title><rect x="586.2" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (92 samples, 0.03%)</title><rect x="586.2" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (92 samples, 0.03%)</title><rect x="586.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (77 samples, 0.02%)</title><rect x="586.2" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (77 samples, 0.02%)</title><rect x="586.2" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.2" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (77 samples, 0.02%)</title><rect x="586.2" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (77 samples, 0.02%)</title><rect x="586.2" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.2" y="286.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (77 samples, 0.02%)</title><rect x="586.2" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.2" y="270.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (77 samples, 0.02%)</title><rect x="586.2" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (77 samples, 0.02%)</title><rect x="586.2" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (77 samples, 0.02%)</title><rect x="586.2" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (77 samples, 0.02%)</title><rect x="586.2" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (77 samples, 0.02%)</title><rect x="586.2" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (77 samples, 0.02%)</title><rect x="586.2" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (77 samples, 0.02%)</title><rect x="586.2" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (77 samples, 0.02%)</title><rect x="586.2" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (77 samples, 0.02%)</title><rect x="586.2" y="115.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.02%)</title><rect x="586.2" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.02%)</title><rect x="586.2" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (18,512 samples, 5.52%)</title><rect x="586.8" y="387.0" width="65.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.8" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (9,390 samples, 2.80%)</title><rect x="586.9" y="371.0" width="33.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.9" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (9,390 samples, 2.80%)</title><rect x="586.9" y="355.0" width="33.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.9" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (9,390 samples, 2.80%)</title><rect x="586.9" y="339.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="589.9" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (9,283 samples, 2.77%)</title><rect x="586.9" y="323.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.9" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (9,283 samples, 2.77%)</title><rect x="586.9" y="307.0" width="32.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.9" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,146 samples, 0.34%)</title><rect x="586.9" y="291.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (999 samples, 0.30%)</title><rect x="586.9" y="275.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.9" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (435 samples, 0.13%)</title><rect x="586.9" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (435 samples, 0.13%)</title><rect x="586.9" y="243.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (435 samples, 0.13%)</title><rect x="586.9" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.13%)</title><rect x="586.9" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.13%)</title><rect x="586.9" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (435 samples, 0.13%)</title><rect x="586.9" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (435 samples, 0.13%)</title><rect x="586.9" y="163.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (435 samples, 0.13%)</title><rect x="586.9" y="147.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (296 samples, 0.09%)</title><rect x="586.9" y="131.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (296 samples, 0.09%)</title><rect x="586.9" y="115.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.9" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (296 samples, 0.09%)</title><rect x="586.9" y="99.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="589.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (139 samples, 0.04%)</title><rect x="587.9" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 0.04%)</title><rect x="587.9" y="115.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.9" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (564 samples, 0.17%)</title><rect x="588.4" y="259.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (564 samples, 0.17%)</title><rect x="588.4" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (564 samples, 0.17%)</title><rect x="588.4" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (564 samples, 0.17%)</title><rect x="588.4" y="211.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (564 samples, 0.17%)</title><rect x="588.4" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (564 samples, 0.17%)</title><rect x="588.4" y="179.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (299 samples, 0.09%)</title><rect x="588.4" y="163.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (298 samples, 0.09%)</title><rect x="588.4" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (298 samples, 0.09%)</title><rect x="588.4" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (298 samples, 0.09%)</title><rect x="588.4" y="115.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (169 samples, 0.05%)</title><rect x="588.7" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (82 samples, 0.02%)</title><rect x="588.7" y="83.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (82 samples, 0.02%)</title><rect x="588.7" y="67.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="591.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (87 samples, 0.03%)</title><rect x="589.0" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.0" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (87 samples, 0.03%)</title><rect x="589.0" y="67.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="592.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (265 samples, 0.08%)</title><rect x="589.4" y="163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (265 samples, 0.08%)</title><rect x="589.4" y="147.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (265 samples, 0.08%)</title><rect x="589.4" y="131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (264 samples, 0.08%)</title><rect x="589.4" y="115.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (264 samples, 0.08%)</title><rect x="589.4" y="99.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (264 samples, 0.08%)</title><rect x="589.4" y="83.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="592.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (147 samples, 0.04%)</title><rect x="590.4" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (147 samples, 0.04%)</title><rect x="590.4" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (147 samples, 0.04%)</title><rect x="590.4" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (147 samples, 0.04%)</title><rect x="590.4" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.4" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (147 samples, 0.04%)</title><rect x="590.4" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="593.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (8,104 samples, 2.42%)</title><rect x="590.9" y="291.0" width="28.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.9" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1,623 samples, 0.48%)</title><rect x="590.9" y="275.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,150 samples, 0.34%)</title><rect x="590.9" y="259.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,143 samples, 0.34%)</title><rect x="590.9" y="243.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (77 samples, 0.02%)</title><rect x="591.0" y="227.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.0" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (77 samples, 0.02%)</title><rect x="591.0" y="211.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,027 samples, 0.31%)</title><rect x="591.3" y="227.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,027 samples, 0.31%)</title><rect x="591.3" y="211.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,007 samples, 0.30%)</title><rect x="591.4" y="195.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,007 samples, 0.30%)</title><rect x="591.4" y="179.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,007 samples, 0.30%)</title><rect x="591.4" y="163.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,007 samples, 0.30%)</title><rect x="591.4" y="147.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (692 samples, 0.21%)</title><rect x="591.4" y="131.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (640 samples, 0.19%)</title><rect x="591.6" y="115.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (640 samples, 0.19%)</title><rect x="591.6" y="99.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (640 samples, 0.19%)</title><rect x="591.6" y="83.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (91 samples, 0.03%)</title><rect x="591.6" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (91 samples, 0.03%)</title><rect x="591.6" y="51.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (372 samples, 0.11%)</title><rect x="592.1" y="67.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (176 samples, 0.05%)</title><rect x="592.1" y="51.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (176 samples, 0.05%)</title><rect x="592.1" y="35.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.1" y="46.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (196 samples, 0.06%)</title><rect x="592.8" y="51.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (196 samples, 0.06%)</title><rect x="592.8" y="35.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="595.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (106 samples, 0.03%)</title><rect x="593.5" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (106 samples, 0.03%)</title><rect x="593.5" y="51.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="596.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (315 samples, 0.09%)</title><rect x="593.8" y="131.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (315 samples, 0.09%)</title><rect x="593.8" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (315 samples, 0.09%)</title><rect x="593.8" y="99.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (315 samples, 0.09%)</title><rect x="593.8" y="83.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (315 samples, 0.09%)</title><rect x="593.8" y="67.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (315 samples, 0.09%)</title><rect x="593.8" y="51.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="596.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (473 samples, 0.14%)</title><rect x="594.9" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (473 samples, 0.14%)</title><rect x="594.9" y="243.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (473 samples, 0.14%)</title><rect x="594.9" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.9" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (225 samples, 0.07%)</title><rect x="594.9" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (225 samples, 0.07%)</title><rect x="594.9" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (225 samples, 0.07%)</title><rect x="594.9" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (225 samples, 0.07%)</title><rect x="594.9" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (225 samples, 0.07%)</title><rect x="594.9" y="147.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (225 samples, 0.07%)</title><rect x="594.9" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (225 samples, 0.07%)</title><rect x="594.9" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (225 samples, 0.07%)</title><rect x="594.9" y="99.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (225 samples, 0.07%)</title><rect x="594.9" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (225 samples, 0.07%)</title><rect x="594.9" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (225 samples, 0.07%)</title><rect x="594.9" y="51.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.9" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (248 samples, 0.07%)</title><rect x="595.7" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (248 samples, 0.07%)</title><rect x="595.7" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (248 samples, 0.07%)</title><rect x="595.7" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.7" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (248 samples, 0.07%)</title><rect x="595.7" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (248 samples, 0.07%)</title><rect x="595.7" y="147.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (248 samples, 0.07%)</title><rect x="595.7" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.7" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (107 samples, 0.03%)</title><rect x="595.7" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (107 samples, 0.03%)</title><rect x="595.7" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (107 samples, 0.03%)</title><rect x="595.7" y="83.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (107 samples, 0.03%)</title><rect x="595.7" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (84 samples, 0.03%)</title><rect x="595.7" y="51.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (141 samples, 0.04%)</title><rect x="596.1" y="115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (141 samples, 0.04%)</title><rect x="596.1" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (141 samples, 0.04%)</title><rect x="596.1" y="83.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (141 samples, 0.04%)</title><rect x="596.1" y="67.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (141 samples, 0.04%)</title><rect x="596.1" y="51.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (141 samples, 0.04%)</title><rect x="596.1" y="35.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6,481 samples, 1.93%)</title><rect x="596.6" y="275.0" width="22.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.6" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (192 samples, 0.06%)</title><rect x="596.9" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (80 samples, 0.02%)</title><rect x="596.9" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (112 samples, 0.03%)</title><rect x="597.2" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (6,208 samples, 1.85%)</title><rect x="597.6" y="259.0" width="21.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.6" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (6,147 samples, 1.83%)</title><rect x="597.8" y="243.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.8" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (6,147 samples, 1.83%)</title><rect x="597.8" y="227.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.8" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (6,147 samples, 1.83%)</title><rect x="597.8" y="211.0" width="21.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.8" y="222.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,027 samples, 0.90%)</title><rect x="597.8" y="195.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.8" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,027 samples, 0.90%)</title><rect x="597.8" y="179.0" width="10.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="600.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3,120 samples, 0.93%)</title><rect x="608.4" y="195.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.4" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,120 samples, 0.93%)</title><rect x="608.4" y="179.0" width="11.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="611.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (107 samples, 0.03%)</title><rect x="619.5" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (9,024 samples, 2.69%)</title><rect x="619.9" y="371.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.9" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,024 samples, 2.69%)</title><rect x="619.9" y="355.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.9" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,024 samples, 2.69%)</title><rect x="619.9" y="339.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.9" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,083 samples, 2.41%)</title><rect x="620.1" y="323.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.1" y="334.0">on..</text>
</g>
<g>
<title>byte[] (3,035 samples, 0.90%)</title><rect x="620.1" y="307.0" width="10.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="623.1" y="318.0"></text>
</g>
<g>
<title>byte[] (5,048 samples, 1.50%)</title><rect x="630.8" y="307.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (753 samples, 0.22%)</title><rect x="648.5" y="323.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (655 samples, 0.20%)</title><rect x="648.7" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (655 samples, 0.20%)</title><rect x="648.7" y="291.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (655 samples, 0.20%)</title><rect x="648.7" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.7" y="286.0"></text>
</g>
<g>
<title>char[] (482 samples, 0.14%)</title><rect x="648.7" y="259.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="651.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.02%)</title><rect x="650.4" y="259.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="653.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 0.03%)</title><rect x="650.7" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 0.03%)</title><rect x="650.7" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (94 samples, 0.03%)</title><rect x="650.7" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.7" y="238.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.03%)</title><rect x="650.7" y="211.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="653.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (83 samples, 0.02%)</title><rect x="651.2" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (83 samples, 0.02%)</title><rect x="651.2" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.2" y="318.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.02%)</title><rect x="651.2" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="654.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (77 samples, 0.02%)</title><rect x="651.6" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="382.0"></text>
</g>
<g>
<title>[asyncWorker tid=32184] (19,098 samples, 5.69%)</title><rect x="651.9" y="483.0" width="67.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="654.9" y="494.0">[asyncW..</text>
</g>
<g>
<title>java/lang/Thread.run (19,098 samples, 5.69%)</title><rect x="651.9" y="467.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.9" y="478.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,098 samples, 5.69%)</title><rect x="651.9" y="451.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.9" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,098 samples, 5.69%)</title><rect x="651.9" y="435.0" width="67.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.9" y="446.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (19,063 samples, 5.68%)</title><rect x="652.0" y="419.0" width="67.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.0" y="430.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (19,063 samples, 5.68%)</title><rect x="652.0" y="403.0" width="67.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.0" y="414.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collection.stream (76 samples, 0.02%)</title><rect x="652.2" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (135 samples, 0.04%)</title><rect x="652.7" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (122 samples, 0.04%)</title><rect x="652.7" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (122 samples, 0.04%)</title><rect x="652.7" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (110 samples, 0.03%)</title><rect x="652.7" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (104 samples, 0.03%)</title><rect x="652.7" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (86 samples, 0.03%)</title><rect x="652.7" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (73 samples, 0.02%)</title><rect x="652.7" y="291.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/32017212.accept (73 samples, 0.02%)</title><rect x="652.7" y="275.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (73 samples, 0.02%)</title><rect x="652.7" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.7" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (73 samples, 0.02%)</title><rect x="652.7" y="243.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (121 samples, 0.04%)</title><rect x="653.2" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (116 samples, 0.03%)</title><rect x="653.3" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (105 samples, 0.03%)</title><rect x="653.3" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (105 samples, 0.03%)</title><rect x="653.3" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (89 samples, 0.03%)</title><rect x="653.3" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (89 samples, 0.03%)</title><rect x="653.3" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (89 samples, 0.03%)</title><rect x="653.3" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (89 samples, 0.03%)</title><rect x="653.3" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.3" y="286.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (89 samples, 0.03%)</title><rect x="653.3" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.3" y="270.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (89 samples, 0.03%)</title><rect x="653.3" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (89 samples, 0.03%)</title><rect x="653.3" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (89 samples, 0.03%)</title><rect x="653.3" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (89 samples, 0.03%)</title><rect x="653.3" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (89 samples, 0.03%)</title><rect x="653.3" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (89 samples, 0.03%)</title><rect x="653.3" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (89 samples, 0.03%)</title><rect x="653.3" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (89 samples, 0.03%)</title><rect x="653.3" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (89 samples, 0.03%)</title><rect x="653.3" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (89 samples, 0.03%)</title><rect x="653.3" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 0.03%)</title><rect x="653.3" y="83.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (98 samples, 0.03%)</title><rect x="653.7" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (82 samples, 0.02%)</title><rect x="653.7" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (18,497 samples, 5.51%)</title><rect x="654.0" y="387.0" width="65.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.0" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (9,089 samples, 2.71%)</title><rect x="654.1" y="371.0" width="32.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.1" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (9,089 samples, 2.71%)</title><rect x="654.1" y="355.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.1" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (9,089 samples, 2.71%)</title><rect x="654.1" y="339.0" width="32.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.1" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (8,966 samples, 2.67%)</title><rect x="654.1" y="323.0" width="31.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.1" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (8,966 samples, 2.67%)</title><rect x="654.1" y="307.0" width="31.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.1" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,224 samples, 0.36%)</title><rect x="654.1" y="291.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,041 samples, 0.31%)</title><rect x="654.1" y="275.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.1" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (456 samples, 0.14%)</title><rect x="654.1" y="259.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (456 samples, 0.14%)</title><rect x="654.1" y="243.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (456 samples, 0.14%)</title><rect x="654.1" y="227.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (456 samples, 0.14%)</title><rect x="654.1" y="211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (456 samples, 0.14%)</title><rect x="654.1" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (456 samples, 0.14%)</title><rect x="654.1" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (456 samples, 0.14%)</title><rect x="654.1" y="163.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (456 samples, 0.14%)</title><rect x="654.1" y="147.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (315 samples, 0.09%)</title><rect x="654.1" y="131.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (315 samples, 0.09%)</title><rect x="654.1" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.1" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (315 samples, 0.09%)</title><rect x="654.1" y="99.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="657.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (141 samples, 0.04%)</title><rect x="655.2" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (141 samples, 0.04%)</title><rect x="655.2" y="115.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="658.2" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (585 samples, 0.17%)</title><rect x="655.7" y="259.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (585 samples, 0.17%)</title><rect x="655.7" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (585 samples, 0.17%)</title><rect x="655.7" y="227.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (585 samples, 0.17%)</title><rect x="655.7" y="211.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (585 samples, 0.17%)</title><rect x="655.7" y="195.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (585 samples, 0.17%)</title><rect x="655.7" y="179.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (305 samples, 0.09%)</title><rect x="655.7" y="163.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (305 samples, 0.09%)</title><rect x="655.7" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (305 samples, 0.09%)</title><rect x="655.7" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (305 samples, 0.09%)</title><rect x="655.7" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (159 samples, 0.05%)</title><rect x="656.1" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (92 samples, 0.03%)</title><rect x="656.1" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (92 samples, 0.03%)</title><rect x="656.1" y="67.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="659.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (280 samples, 0.08%)</title><rect x="656.8" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (280 samples, 0.08%)</title><rect x="656.8" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (280 samples, 0.08%)</title><rect x="656.8" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (280 samples, 0.08%)</title><rect x="656.8" y="115.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (280 samples, 0.08%)</title><rect x="656.8" y="99.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (280 samples, 0.08%)</title><rect x="656.8" y="83.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="659.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (183 samples, 0.05%)</title><rect x="657.8" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (183 samples, 0.05%)</title><rect x="657.8" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (183 samples, 0.05%)</title><rect x="657.8" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (183 samples, 0.05%)</title><rect x="657.8" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.8" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (183 samples, 0.05%)</title><rect x="657.8" y="211.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="660.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (7,702 samples, 2.30%)</title><rect x="658.4" y="291.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.4" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1,574 samples, 0.47%)</title><rect x="658.4" y="275.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,130 samples, 0.34%)</title><rect x="658.4" y="259.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,121 samples, 0.33%)</title><rect x="658.4" y="243.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (96 samples, 0.03%)</title><rect x="658.5" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.5" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (96 samples, 0.03%)</title><rect x="658.5" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="661.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (970 samples, 0.29%)</title><rect x="659.0" y="227.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (970 samples, 0.29%)</title><rect x="659.0" y="211.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (953 samples, 0.28%)</title><rect x="659.0" y="195.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (953 samples, 0.28%)</title><rect x="659.0" y="179.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (953 samples, 0.28%)</title><rect x="659.0" y="163.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (953 samples, 0.28%)</title><rect x="659.0" y="147.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (657 samples, 0.20%)</title><rect x="659.0" y="131.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (589 samples, 0.18%)</title><rect x="659.3" y="115.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (589 samples, 0.18%)</title><rect x="659.3" y="99.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (589 samples, 0.18%)</title><rect x="659.3" y="83.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (76 samples, 0.02%)</title><rect x="659.3" y="67.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.02%)</title><rect x="659.3" y="51.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="662.3" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (83 samples, 0.02%)</title><rect x="659.5" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.02%)</title><rect x="659.5" y="51.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (335 samples, 0.10%)</title><rect x="659.8" y="67.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (155 samples, 0.05%)</title><rect x="659.8" y="51.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (155 samples, 0.05%)</title><rect x="659.8" y="35.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="662.8" y="46.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (180 samples, 0.05%)</title><rect x="660.4" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.4" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (180 samples, 0.05%)</title><rect x="660.4" y="35.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="663.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (95 samples, 0.03%)</title><rect x="661.0" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (95 samples, 0.03%)</title><rect x="661.0" y="51.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="664.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (296 samples, 0.09%)</title><rect x="661.3" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (296 samples, 0.09%)</title><rect x="661.3" y="115.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (296 samples, 0.09%)</title><rect x="661.3" y="99.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (296 samples, 0.09%)</title><rect x="661.3" y="83.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (296 samples, 0.09%)</title><rect x="661.3" y="67.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (296 samples, 0.09%)</title><rect x="661.3" y="51.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="664.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (444 samples, 0.13%)</title><rect x="662.4" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (444 samples, 0.13%)</title><rect x="662.4" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (444 samples, 0.13%)</title><rect x="662.4" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (199 samples, 0.06%)</title><rect x="662.4" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (199 samples, 0.06%)</title><rect x="662.4" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (199 samples, 0.06%)</title><rect x="662.4" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (199 samples, 0.06%)</title><rect x="662.4" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (199 samples, 0.06%)</title><rect x="662.4" y="147.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (199 samples, 0.06%)</title><rect x="662.4" y="131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (199 samples, 0.06%)</title><rect x="662.4" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (199 samples, 0.06%)</title><rect x="662.4" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (199 samples, 0.06%)</title><rect x="662.4" y="83.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (199 samples, 0.06%)</title><rect x="662.4" y="67.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (199 samples, 0.06%)</title><rect x="662.4" y="51.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="665.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (245 samples, 0.07%)</title><rect x="663.1" y="211.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (245 samples, 0.07%)</title><rect x="663.1" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (245 samples, 0.07%)</title><rect x="663.1" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.1" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (245 samples, 0.07%)</title><rect x="663.1" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (245 samples, 0.07%)</title><rect x="663.1" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (245 samples, 0.07%)</title><rect x="663.1" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (96 samples, 0.03%)</title><rect x="663.1" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (96 samples, 0.03%)</title><rect x="663.1" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (96 samples, 0.03%)</title><rect x="663.1" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (96 samples, 0.03%)</title><rect x="663.1" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (149 samples, 0.04%)</title><rect x="663.4" y="115.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (149 samples, 0.04%)</title><rect x="663.4" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (149 samples, 0.04%)</title><rect x="663.4" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (149 samples, 0.04%)</title><rect x="663.4" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.4" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (149 samples, 0.04%)</title><rect x="663.4" y="51.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.4" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (149 samples, 0.04%)</title><rect x="663.4" y="35.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="666.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6,128 samples, 1.83%)</title><rect x="663.9" y="275.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.9" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (191 samples, 0.06%)</title><rect x="664.2" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (82 samples, 0.02%)</title><rect x="664.2" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (109 samples, 0.03%)</title><rect x="664.5" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (5,857 samples, 1.75%)</title><rect x="664.9" y="259.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (5,791 samples, 1.73%)</title><rect x="665.1" y="243.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (5,791 samples, 1.73%)</title><rect x="665.1" y="227.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (5,791 samples, 1.73%)</title><rect x="665.1" y="211.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.1" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,921 samples, 0.87%)</title><rect x="665.1" y="195.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,921 samples, 0.87%)</title><rect x="665.1" y="179.0" width="10.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="668.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,870 samples, 0.86%)</title><rect x="675.4" y="195.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.4" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,870 samples, 0.86%)</title><rect x="675.4" y="179.0" width="10.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="678.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (123 samples, 0.04%)</title><rect x="685.6" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (9,298 samples, 2.77%)</title><rect x="686.1" y="371.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.1" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,298 samples, 2.77%)</title><rect x="686.1" y="355.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.1" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,298 samples, 2.77%)</title><rect x="686.1" y="339.0" width="32.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.1" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,313 samples, 2.48%)</title><rect x="686.3" y="323.0" width="29.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.3" y="334.0">on..</text>
</g>
<g>
<title>byte[] (3,151 samples, 0.94%)</title><rect x="686.3" y="307.0" width="11.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="689.3" y="318.0"></text>
</g>
<g>
<title>byte[] (5,162 samples, 1.54%)</title><rect x="697.4" y="307.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="700.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (800 samples, 0.24%)</title><rect x="715.5" y="323.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (689 samples, 0.21%)</title><rect x="715.7" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (689 samples, 0.21%)</title><rect x="715.7" y="291.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (689 samples, 0.21%)</title><rect x="715.7" y="275.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.7" y="286.0"></text>
</g>
<g>
<title>char[] (510 samples, 0.15%)</title><rect x="715.7" y="259.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="718.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.03%)</title><rect x="717.5" y="259.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="720.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (91 samples, 0.03%)</title><rect x="717.8" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (91 samples, 0.03%)</title><rect x="717.8" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (91 samples, 0.03%)</title><rect x="717.8" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="238.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.03%)</title><rect x="717.8" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="720.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (86 samples, 0.03%)</title><rect x="718.3" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (86 samples, 0.03%)</title><rect x="718.3" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.3" y="318.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.03%)</title><rect x="718.3" y="291.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="721.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (90 samples, 0.03%)</title><rect x="718.8" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.8" y="382.0"></text>
</g>
<g>
<title>[asyncWorker tid=32185] (19,261 samples, 5.74%)</title><rect x="719.1" y="483.0" width="67.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="722.1" y="494.0">[asyncW..</text>
</g>
<g>
<title>java/lang/Thread.run (19,261 samples, 5.74%)</title><rect x="719.1" y="467.0" width="67.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.1" y="478.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,261 samples, 5.74%)</title><rect x="719.1" y="451.0" width="67.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.1" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,261 samples, 5.74%)</title><rect x="719.1" y="435.0" width="67.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.1" y="446.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (19,238 samples, 5.73%)</title><rect x="719.2" y="419.0" width="67.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.2" y="430.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (19,238 samples, 5.73%)</title><rect x="719.2" y="403.0" width="67.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.2" y="414.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collection.stream (73 samples, 0.02%)</title><rect x="719.3" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (118 samples, 0.04%)</title><rect x="719.7" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (105 samples, 0.03%)</title><rect x="719.7" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (105 samples, 0.03%)</title><rect x="719.7" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (92 samples, 0.03%)</title><rect x="719.7" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (91 samples, 0.03%)</title><rect x="719.7" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (76 samples, 0.02%)</title><rect x="719.7" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (96 samples, 0.03%)</title><rect x="720.2" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (91 samples, 0.03%)</title><rect x="720.2" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (81 samples, 0.02%)</title><rect x="720.2" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (81 samples, 0.02%)</title><rect x="720.2" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (82 samples, 0.02%)</title><rect x="720.5" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (72 samples, 0.02%)</title><rect x="720.5" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (18,763 samples, 5.59%)</title><rect x="720.8" y="387.0" width="66.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.8" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (9,101 samples, 2.71%)</title><rect x="720.9" y="371.0" width="32.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.9" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (9,101 samples, 2.71%)</title><rect x="720.9" y="355.0" width="32.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.9" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (9,101 samples, 2.71%)</title><rect x="720.9" y="339.0" width="32.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.9" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (8,977 samples, 2.68%)</title><rect x="720.9" y="323.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.9" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (8,977 samples, 2.68%)</title><rect x="720.9" y="307.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.9" y="318.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,142 samples, 0.34%)</title><rect x="720.9" y="291.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (985 samples, 0.29%)</title><rect x="720.9" y="275.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.9" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (404 samples, 0.12%)</title><rect x="720.9" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (404 samples, 0.12%)</title><rect x="720.9" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (404 samples, 0.12%)</title><rect x="720.9" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (404 samples, 0.12%)</title><rect x="720.9" y="211.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (404 samples, 0.12%)</title><rect x="720.9" y="195.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (404 samples, 0.12%)</title><rect x="720.9" y="179.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (404 samples, 0.12%)</title><rect x="720.9" y="163.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (404 samples, 0.12%)</title><rect x="720.9" y="147.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (285 samples, 0.08%)</title><rect x="720.9" y="131.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (285 samples, 0.08%)</title><rect x="720.9" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.9" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (285 samples, 0.08%)</title><rect x="720.9" y="99.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="723.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (119 samples, 0.04%)</title><rect x="721.9" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (119 samples, 0.04%)</title><rect x="721.9" y="115.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="724.9" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (581 samples, 0.17%)</title><rect x="722.3" y="259.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (581 samples, 0.17%)</title><rect x="722.3" y="243.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (581 samples, 0.17%)</title><rect x="722.3" y="227.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (581 samples, 0.17%)</title><rect x="722.3" y="211.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (581 samples, 0.17%)</title><rect x="722.3" y="195.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (581 samples, 0.17%)</title><rect x="722.3" y="179.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (316 samples, 0.09%)</title><rect x="722.3" y="163.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (314 samples, 0.09%)</title><rect x="722.3" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (314 samples, 0.09%)</title><rect x="722.3" y="131.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (314 samples, 0.09%)</title><rect x="722.3" y="115.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (159 samples, 0.05%)</title><rect x="722.7" y="99.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (76 samples, 0.02%)</title><rect x="722.7" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.02%)</title><rect x="722.7" y="67.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="725.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (83 samples, 0.02%)</title><rect x="723.0" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.0" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.02%)</title><rect x="723.0" y="67.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="726.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (265 samples, 0.08%)</title><rect x="723.4" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (265 samples, 0.08%)</title><rect x="723.4" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (265 samples, 0.08%)</title><rect x="723.4" y="131.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (264 samples, 0.08%)</title><rect x="723.4" y="115.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (264 samples, 0.08%)</title><rect x="723.4" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (264 samples, 0.08%)</title><rect x="723.4" y="83.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="726.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (157 samples, 0.05%)</title><rect x="724.4" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (157 samples, 0.05%)</title><rect x="724.4" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (157 samples, 0.05%)</title><rect x="724.4" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (157 samples, 0.05%)</title><rect x="724.4" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.4" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (157 samples, 0.05%)</title><rect x="724.4" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="727.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (7,790 samples, 2.32%)</title><rect x="724.9" y="291.0" width="27.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.9" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1,631 samples, 0.49%)</title><rect x="724.9" y="275.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,110 samples, 0.33%)</title><rect x="724.9" y="259.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,103 samples, 0.33%)</title><rect x="724.9" y="243.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (72 samples, 0.02%)</title><rect x="725.0" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.0" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (72 samples, 0.02%)</title><rect x="725.0" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="728.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (978 samples, 0.29%)</title><rect x="725.4" y="227.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (978 samples, 0.29%)</title><rect x="725.4" y="211.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (958 samples, 0.29%)</title><rect x="725.5" y="195.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (958 samples, 0.29%)</title><rect x="725.5" y="179.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (958 samples, 0.29%)</title><rect x="725.5" y="163.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (958 samples, 0.29%)</title><rect x="725.5" y="147.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (650 samples, 0.19%)</title><rect x="725.5" y="131.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (582 samples, 0.17%)</title><rect x="725.7" y="115.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (582 samples, 0.17%)</title><rect x="725.7" y="99.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (582 samples, 0.17%)</title><rect x="725.7" y="83.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.02%)</title><rect x="725.7" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.02%)</title><rect x="725.7" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="728.7" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (78 samples, 0.02%)</title><rect x="726.0" y="67.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.02%)</title><rect x="726.0" y="51.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="729.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (329 samples, 0.10%)</title><rect x="726.2" y="67.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (184 samples, 0.05%)</title><rect x="726.2" y="51.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (184 samples, 0.05%)</title><rect x="726.2" y="35.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="729.2" y="46.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (145 samples, 0.04%)</title><rect x="726.9" y="51.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (145 samples, 0.04%)</title><rect x="726.9" y="35.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="729.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (100 samples, 0.03%)</title><rect x="727.4" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (100 samples, 0.03%)</title><rect x="727.4" y="51.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (308 samples, 0.09%)</title><rect x="727.7" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (308 samples, 0.09%)</title><rect x="727.7" y="115.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (308 samples, 0.09%)</title><rect x="727.7" y="99.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (308 samples, 0.09%)</title><rect x="727.7" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (308 samples, 0.09%)</title><rect x="727.7" y="67.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (308 samples, 0.09%)</title><rect x="727.7" y="51.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="730.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (521 samples, 0.16%)</title><rect x="728.8" y="259.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (521 samples, 0.16%)</title><rect x="728.8" y="243.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (521 samples, 0.16%)</title><rect x="728.8" y="227.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.8" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (214 samples, 0.06%)</title><rect x="728.8" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (214 samples, 0.06%)</title><rect x="728.8" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (214 samples, 0.06%)</title><rect x="728.8" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (214 samples, 0.06%)</title><rect x="728.8" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (214 samples, 0.06%)</title><rect x="728.8" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (214 samples, 0.06%)</title><rect x="728.8" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (214 samples, 0.06%)</title><rect x="728.8" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (214 samples, 0.06%)</title><rect x="728.8" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (214 samples, 0.06%)</title><rect x="728.8" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (214 samples, 0.06%)</title><rect x="728.8" y="67.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (214 samples, 0.06%)</title><rect x="728.8" y="51.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="731.8" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (307 samples, 0.09%)</title><rect x="729.6" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (307 samples, 0.09%)</title><rect x="729.6" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (307 samples, 0.09%)</title><rect x="729.6" y="179.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.6" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (307 samples, 0.09%)</title><rect x="729.6" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (307 samples, 0.09%)</title><rect x="729.6" y="147.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (307 samples, 0.09%)</title><rect x="729.6" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.6" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (119 samples, 0.04%)</title><rect x="729.6" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (119 samples, 0.04%)</title><rect x="729.6" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (119 samples, 0.04%)</title><rect x="729.6" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (119 samples, 0.04%)</title><rect x="729.6" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (97 samples, 0.03%)</title><rect x="729.6" y="51.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (188 samples, 0.06%)</title><rect x="730.0" y="115.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (188 samples, 0.06%)</title><rect x="730.0" y="99.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (188 samples, 0.06%)</title><rect x="730.0" y="83.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (186 samples, 0.06%)</title><rect x="730.0" y="67.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (186 samples, 0.06%)</title><rect x="730.0" y="51.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (186 samples, 0.06%)</title><rect x="730.0" y="35.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="733.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6,159 samples, 1.84%)</title><rect x="730.7" y="275.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.7" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (197 samples, 0.06%)</title><rect x="730.9" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (72 samples, 0.02%)</title><rect x="730.9" y="243.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (125 samples, 0.04%)</title><rect x="731.1" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (5,896 samples, 1.76%)</title><rect x="731.6" y="259.0" width="20.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (5,825 samples, 1.74%)</title><rect x="731.8" y="243.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (5,825 samples, 1.74%)</title><rect x="731.8" y="227.0" width="20.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (5,825 samples, 1.74%)</title><rect x="731.8" y="211.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,876 samples, 0.86%)</title><rect x="731.8" y="195.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.8" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,876 samples, 0.86%)</title><rect x="731.8" y="179.0" width="10.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="734.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,949 samples, 0.88%)</title><rect x="741.9" y="195.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.9" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,949 samples, 0.88%)</title><rect x="741.9" y="179.0" width="10.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="744.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (124 samples, 0.04%)</title><rect x="752.5" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (9,574 samples, 2.85%)</title><rect x="752.9" y="371.0" width="33.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.9" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,574 samples, 2.85%)</title><rect x="752.9" y="355.0" width="33.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.9" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,574 samples, 2.85%)</title><rect x="752.9" y="339.0" width="33.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.9" y="350.0">on..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (72 samples, 0.02%)</title><rect x="752.9" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="755.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,581 samples, 2.56%)</title><rect x="753.2" y="323.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.2" y="334.0">on..</text>
</g>
<g>
<title>byte[] (3,188 samples, 0.95%)</title><rect x="753.2" y="307.0" width="11.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="756.2" y="318.0"></text>
</g>
<g>
<title>byte[] (5,393 samples, 1.61%)</title><rect x="764.4" y="307.0" width="19.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (784 samples, 0.23%)</title><rect x="783.4" y="323.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (664 samples, 0.20%)</title><rect x="783.6" y="307.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (664 samples, 0.20%)</title><rect x="783.6" y="291.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (664 samples, 0.20%)</title><rect x="783.6" y="275.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.6" y="286.0"></text>
</g>
<g>
<title>char[] (499 samples, 0.15%)</title><rect x="783.6" y="259.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="786.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.03%)</title><rect x="785.4" y="259.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="788.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (81 samples, 0.02%)</title><rect x="785.7" y="259.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (81 samples, 0.02%)</title><rect x="785.7" y="243.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (81 samples, 0.02%)</title><rect x="785.7" y="227.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="238.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.02%)</title><rect x="785.7" y="211.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="788.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (97 samples, 0.03%)</title><rect x="786.1" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (97 samples, 0.03%)</title><rect x="786.1" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.1" y="318.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.03%)</title><rect x="786.1" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="789.1" y="302.0"></text>
</g>
<g>
<title>[asyncWorker tid=32186] (14,304 samples, 4.26%)</title><rect x="786.8" y="483.0" width="50.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="789.8" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,304 samples, 4.26%)</title><rect x="786.8" y="467.0" width="50.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.8" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,304 samples, 4.26%)</title><rect x="786.8" y="451.0" width="50.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.8" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,304 samples, 4.26%)</title><rect x="786.8" y="435.0" width="50.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.8" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (82 samples, 0.02%)</title><rect x="786.8" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (82 samples, 0.02%)</title><rect x="786.8" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (82 samples, 0.02%)</title><rect x="786.8" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (82 samples, 0.02%)</title><rect x="786.8" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (82 samples, 0.02%)</title><rect x="786.8" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="789.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,222 samples, 4.24%)</title><rect x="787.1" y="419.0" width="50.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,222 samples, 4.24%)</title><rect x="787.1" y="403.0" width="50.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.1" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (207 samples, 0.06%)</title><rect x="787.1" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (207 samples, 0.06%)</title><rect x="787.1" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (161 samples, 0.05%)</title><rect x="787.1" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (159 samples, 0.05%)</title><rect x="787.1" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.1" y="350.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.05%)</title><rect x="787.1" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="790.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,015 samples, 4.18%)</title><rect x="787.9" y="387.0" width="49.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.9" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,015 samples, 4.18%)</title><rect x="787.9" y="371.0" width="49.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.9" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,015 samples, 4.18%)</title><rect x="787.9" y="355.0" width="49.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.9" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,813 samples, 4.12%)</title><rect x="787.9" y="339.0" width="48.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.9" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,813 samples, 4.12%)</title><rect x="787.9" y="323.0" width="48.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.9" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,926 samples, 0.57%)</title><rect x="787.9" y="307.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,632 samples, 0.49%)</title><rect x="787.9" y="291.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.9" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (711 samples, 0.21%)</title><rect x="787.9" y="275.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (711 samples, 0.21%)</title><rect x="787.9" y="259.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (711 samples, 0.21%)</title><rect x="787.9" y="243.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (711 samples, 0.21%)</title><rect x="787.9" y="227.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (711 samples, 0.21%)</title><rect x="787.9" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (711 samples, 0.21%)</title><rect x="787.9" y="195.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (711 samples, 0.21%)</title><rect x="787.9" y="179.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (711 samples, 0.21%)</title><rect x="787.9" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (510 samples, 0.15%)</title><rect x="787.9" y="147.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (510 samples, 0.15%)</title><rect x="787.9" y="131.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (510 samples, 0.15%)</title><rect x="787.9" y="115.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="790.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (201 samples, 0.06%)</title><rect x="789.6" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (201 samples, 0.06%)</title><rect x="789.6" y="131.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="792.6" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (921 samples, 0.27%)</title><rect x="790.4" y="275.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (921 samples, 0.27%)</title><rect x="790.4" y="259.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (921 samples, 0.27%)</title><rect x="790.4" y="243.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (921 samples, 0.27%)</title><rect x="790.4" y="227.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (921 samples, 0.27%)</title><rect x="790.4" y="211.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (921 samples, 0.27%)</title><rect x="790.4" y="195.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (491 samples, 0.15%)</title><rect x="790.4" y="179.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (487 samples, 0.15%)</title><rect x="790.4" y="163.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (487 samples, 0.15%)</title><rect x="790.4" y="147.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (487 samples, 0.15%)</title><rect x="790.4" y="131.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (279 samples, 0.08%)</title><rect x="790.8" y="115.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (141 samples, 0.04%)</title><rect x="790.8" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (141 samples, 0.04%)</title><rect x="790.8" y="83.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (138 samples, 0.04%)</title><rect x="791.3" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.3" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (138 samples, 0.04%)</title><rect x="791.3" y="83.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="794.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (85 samples, 0.03%)</title><rect x="791.8" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (85 samples, 0.03%)</title><rect x="791.8" y="99.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="794.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (430 samples, 0.13%)</title><rect x="792.1" y="179.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (430 samples, 0.13%)</title><rect x="792.1" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (430 samples, 0.13%)</title><rect x="792.1" y="147.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (426 samples, 0.13%)</title><rect x="792.1" y="131.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (426 samples, 0.13%)</title><rect x="792.1" y="115.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.1" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (426 samples, 0.13%)</title><rect x="792.1" y="99.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="795.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (294 samples, 0.09%)</title><rect x="793.6" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (294 samples, 0.09%)</title><rect x="793.6" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (292 samples, 0.09%)</title><rect x="793.6" y="259.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (292 samples, 0.09%)</title><rect x="793.6" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.6" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (292 samples, 0.09%)</title><rect x="793.6" y="227.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="796.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,814 samples, 3.52%)</title><rect x="794.6" y="307.0" width="41.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.6" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,676 samples, 0.80%)</title><rect x="794.6" y="291.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,875 samples, 0.56%)</title><rect x="794.6" y="275.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,854 samples, 0.55%)</title><rect x="794.7" y="259.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (118 samples, 0.04%)</title><rect x="794.8" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.8" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (118 samples, 0.04%)</title><rect x="794.8" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="797.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,656 samples, 0.49%)</title><rect x="795.4" y="243.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,656 samples, 0.49%)</title><rect x="795.4" y="227.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,613 samples, 0.48%)</title><rect x="795.6" y="211.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,613 samples, 0.48%)</title><rect x="795.6" y="195.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,613 samples, 0.48%)</title><rect x="795.6" y="179.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,613 samples, 0.48%)</title><rect x="795.6" y="163.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,090 samples, 0.32%)</title><rect x="795.6" y="147.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (116 samples, 0.03%)</title><rect x="795.6" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (116 samples, 0.03%)</title><rect x="795.6" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (116 samples, 0.03%)</title><rect x="795.6" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (116 samples, 0.03%)</title><rect x="795.6" y="83.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (116 samples, 0.03%)</title><rect x="795.6" y="67.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="798.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (974 samples, 0.29%)</title><rect x="796.0" y="131.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (974 samples, 0.29%)</title><rect x="796.0" y="115.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (974 samples, 0.29%)</title><rect x="796.0" y="99.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (140 samples, 0.04%)</title><rect x="796.0" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.0" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (140 samples, 0.04%)</title><rect x="796.0" y="67.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="799.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (147 samples, 0.04%)</title><rect x="796.5" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.5" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (147 samples, 0.04%)</title><rect x="796.5" y="67.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="799.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (517 samples, 0.15%)</title><rect x="797.0" y="83.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (265 samples, 0.08%)</title><rect x="797.0" y="67.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (265 samples, 0.08%)</title><rect x="797.0" y="51.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="800.0" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (252 samples, 0.08%)</title><rect x="797.9" y="67.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (252 samples, 0.08%)</title><rect x="797.9" y="51.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="800.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (170 samples, 0.05%)</title><rect x="798.8" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (170 samples, 0.05%)</title><rect x="798.8" y="67.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="801.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (523 samples, 0.16%)</title><rect x="799.4" y="147.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (523 samples, 0.16%)</title><rect x="799.4" y="131.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (523 samples, 0.16%)</title><rect x="799.4" y="115.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (523 samples, 0.16%)</title><rect x="799.4" y="99.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (523 samples, 0.16%)</title><rect x="799.4" y="83.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (523 samples, 0.16%)</title><rect x="799.4" y="67.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="802.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (801 samples, 0.24%)</title><rect x="801.2" y="275.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (801 samples, 0.24%)</title><rect x="801.2" y="259.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (801 samples, 0.24%)</title><rect x="801.2" y="243.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (345 samples, 0.10%)</title><rect x="801.2" y="227.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (345 samples, 0.10%)</title><rect x="801.2" y="211.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (345 samples, 0.10%)</title><rect x="801.2" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (345 samples, 0.10%)</title><rect x="801.2" y="179.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (345 samples, 0.10%)</title><rect x="801.2" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (345 samples, 0.10%)</title><rect x="801.2" y="147.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (345 samples, 0.10%)</title><rect x="801.2" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (345 samples, 0.10%)</title><rect x="801.2" y="115.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (345 samples, 0.10%)</title><rect x="801.2" y="99.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (345 samples, 0.10%)</title><rect x="801.2" y="83.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (345 samples, 0.10%)</title><rect x="801.2" y="67.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="804.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (456 samples, 0.14%)</title><rect x="802.4" y="227.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (456 samples, 0.14%)</title><rect x="802.4" y="211.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (456 samples, 0.14%)</title><rect x="802.4" y="195.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (456 samples, 0.14%)</title><rect x="802.4" y="179.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (456 samples, 0.14%)</title><rect x="802.4" y="163.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (456 samples, 0.14%)</title><rect x="802.4" y="147.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.05%)</title><rect x="802.4" y="131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (184 samples, 0.05%)</title><rect x="802.4" y="115.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (184 samples, 0.05%)</title><rect x="802.4" y="99.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (184 samples, 0.05%)</title><rect x="802.4" y="83.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (141 samples, 0.04%)</title><rect x="802.4" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.4" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (73 samples, 0.02%)</title><rect x="802.7" y="51.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.02%)</title><rect x="802.7" y="35.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="805.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (272 samples, 0.08%)</title><rect x="803.1" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (272 samples, 0.08%)</title><rect x="803.1" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (272 samples, 0.08%)</title><rect x="803.1" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (271 samples, 0.08%)</title><rect x="803.1" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (271 samples, 0.08%)</title><rect x="803.1" y="67.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (271 samples, 0.08%)</title><rect x="803.1" y="51.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="806.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,138 samples, 2.72%)</title><rect x="804.0" y="291.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.0" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (224 samples, 0.07%)</title><rect x="804.0" y="275.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="807.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (374 samples, 0.11%)</title><rect x="805.2" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (152 samples, 0.05%)</title><rect x="805.2" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (121 samples, 0.04%)</title><rect x="805.2" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (105 samples, 0.03%)</title><rect x="805.3" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (220 samples, 0.07%)</title><rect x="805.7" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (102 samples, 0.03%)</title><rect x="806.1" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,438 samples, 2.52%)</title><rect x="806.5" y="275.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.5" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (132 samples, 0.04%)</title><rect x="806.5" y="259.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="809.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,306 samples, 2.48%)</title><rect x="807.0" y="259.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.0" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,306 samples, 2.48%)</title><rect x="807.0" y="243.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.0" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,306 samples, 2.48%)</title><rect x="807.0" y="227.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.0" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,134 samples, 1.23%)</title><rect x="807.0" y="211.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.0" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,134 samples, 1.23%)</title><rect x="807.0" y="195.0" width="14.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="810.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,172 samples, 1.24%)</title><rect x="821.5" y="211.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.5" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,172 samples, 1.24%)</title><rect x="821.5" y="195.0" width="14.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="824.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (73 samples, 0.02%)</title><rect x="836.2" y="307.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (73 samples, 0.02%)</title><rect x="836.2" y="291.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (73 samples, 0.02%)</title><rect x="836.2" y="275.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.02%)</title><rect x="836.2" y="259.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="839.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (202 samples, 0.06%)</title><rect x="836.4" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (105 samples, 0.03%)</title><rect x="836.8" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.8" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32187] (14,371 samples, 4.28%)</title><rect x="837.2" y="483.0" width="50.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="840.2" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,371 samples, 4.28%)</title><rect x="837.2" y="467.0" width="50.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.2" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,371 samples, 4.28%)</title><rect x="837.2" y="451.0" width="50.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.2" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,371 samples, 4.28%)</title><rect x="837.2" y="435.0" width="50.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.2" y="446.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,304 samples, 4.26%)</title><rect x="837.4" y="419.0" width="50.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,304 samples, 4.26%)</title><rect x="837.4" y="403.0" width="50.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.4" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (168 samples, 0.05%)</title><rect x="837.4" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (168 samples, 0.05%)</title><rect x="837.4" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (123 samples, 0.04%)</title><rect x="837.4" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (123 samples, 0.04%)</title><rect x="837.4" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.4" y="350.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.04%)</title><rect x="837.4" y="323.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="840.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,136 samples, 4.21%)</title><rect x="838.0" y="387.0" width="49.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.0" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,136 samples, 4.21%)</title><rect x="838.0" y="371.0" width="49.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.0" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,136 samples, 4.21%)</title><rect x="838.0" y="355.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.0" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,928 samples, 4.15%)</title><rect x="838.0" y="339.0" width="49.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.0" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,928 samples, 4.15%)</title><rect x="838.0" y="323.0" width="49.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.0" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,898 samples, 0.57%)</title><rect x="838.0" y="307.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,600 samples, 0.48%)</title><rect x="838.0" y="291.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.0" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (675 samples, 0.20%)</title><rect x="838.0" y="275.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (675 samples, 0.20%)</title><rect x="838.0" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (675 samples, 0.20%)</title><rect x="838.0" y="243.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (675 samples, 0.20%)</title><rect x="838.0" y="227.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (675 samples, 0.20%)</title><rect x="838.0" y="211.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (675 samples, 0.20%)</title><rect x="838.0" y="195.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (675 samples, 0.20%)</title><rect x="838.0" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (675 samples, 0.20%)</title><rect x="838.0" y="163.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (480 samples, 0.14%)</title><rect x="838.0" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (480 samples, 0.14%)</title><rect x="838.0" y="131.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (480 samples, 0.14%)</title><rect x="838.0" y="115.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="841.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (195 samples, 0.06%)</title><rect x="839.7" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (195 samples, 0.06%)</title><rect x="839.7" y="131.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="842.7" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (925 samples, 0.28%)</title><rect x="840.4" y="275.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (925 samples, 0.28%)</title><rect x="840.4" y="259.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (925 samples, 0.28%)</title><rect x="840.4" y="243.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (925 samples, 0.28%)</title><rect x="840.4" y="227.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (925 samples, 0.28%)</title><rect x="840.4" y="211.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (925 samples, 0.28%)</title><rect x="840.4" y="195.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (513 samples, 0.15%)</title><rect x="840.4" y="179.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (512 samples, 0.15%)</title><rect x="840.4" y="163.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (512 samples, 0.15%)</title><rect x="840.4" y="147.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (512 samples, 0.15%)</title><rect x="840.4" y="131.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (72 samples, 0.02%)</title><rect x="840.6" y="115.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.6" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (72 samples, 0.02%)</title><rect x="840.6" y="99.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="843.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (290 samples, 0.09%)</title><rect x="840.8" y="115.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (150 samples, 0.04%)</title><rect x="840.8" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (150 samples, 0.04%)</title><rect x="840.8" y="83.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="843.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (140 samples, 0.04%)</title><rect x="841.4" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (140 samples, 0.04%)</title><rect x="841.4" y="83.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="844.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (88 samples, 0.03%)</title><rect x="841.9" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (88 samples, 0.03%)</title><rect x="841.9" y="99.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="844.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (412 samples, 0.12%)</title><rect x="842.2" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (412 samples, 0.12%)</title><rect x="842.2" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (412 samples, 0.12%)</title><rect x="842.2" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (409 samples, 0.12%)</title><rect x="842.2" y="131.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (409 samples, 0.12%)</title><rect x="842.2" y="115.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.2" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (409 samples, 0.12%)</title><rect x="842.2" y="99.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="845.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (298 samples, 0.09%)</title><rect x="843.6" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (298 samples, 0.09%)</title><rect x="843.6" y="275.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (298 samples, 0.09%)</title><rect x="843.6" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (298 samples, 0.09%)</title><rect x="843.6" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.6" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (298 samples, 0.09%)</title><rect x="843.6" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="846.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,949 samples, 3.56%)</title><rect x="844.7" y="307.0" width="42.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.7" y="318.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,645 samples, 0.79%)</title><rect x="844.7" y="291.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,860 samples, 0.55%)</title><rect x="844.7" y="275.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,848 samples, 0.55%)</title><rect x="844.7" y="259.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (122 samples, 0.04%)</title><rect x="844.8" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.8" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (122 samples, 0.04%)</title><rect x="844.8" y="227.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="847.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,643 samples, 0.49%)</title><rect x="845.4" y="243.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,643 samples, 0.49%)</title><rect x="845.4" y="227.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,602 samples, 0.48%)</title><rect x="845.6" y="211.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,602 samples, 0.48%)</title><rect x="845.6" y="195.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,602 samples, 0.48%)</title><rect x="845.6" y="179.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,602 samples, 0.48%)</title><rect x="845.6" y="163.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,103 samples, 0.33%)</title><rect x="845.6" y="147.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (102 samples, 0.03%)</title><rect x="845.6" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (102 samples, 0.03%)</title><rect x="845.6" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (102 samples, 0.03%)</title><rect x="845.6" y="99.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (102 samples, 0.03%)</title><rect x="845.6" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (102 samples, 0.03%)</title><rect x="845.6" y="67.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="848.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,001 samples, 0.30%)</title><rect x="845.9" y="131.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,001 samples, 0.30%)</title><rect x="845.9" y="115.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (1,001 samples, 0.30%)</title><rect x="845.9" y="99.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (150 samples, 0.04%)</title><rect x="845.9" y="83.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.9" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (150 samples, 0.04%)</title><rect x="845.9" y="67.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="848.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (152 samples, 0.05%)</title><rect x="846.5" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.5" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (152 samples, 0.05%)</title><rect x="846.5" y="67.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="849.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (521 samples, 0.16%)</title><rect x="847.0" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (255 samples, 0.08%)</title><rect x="847.0" y="67.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (255 samples, 0.08%)</title><rect x="847.0" y="51.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="850.0" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (266 samples, 0.08%)</title><rect x="847.9" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (266 samples, 0.08%)</title><rect x="847.9" y="51.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (178 samples, 0.05%)</title><rect x="848.8" y="83.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (178 samples, 0.05%)</title><rect x="848.8" y="67.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="851.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (499 samples, 0.15%)</title><rect x="849.4" y="147.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (499 samples, 0.15%)</title><rect x="849.4" y="131.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (499 samples, 0.15%)</title><rect x="849.4" y="115.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (499 samples, 0.15%)</title><rect x="849.4" y="99.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (499 samples, 0.15%)</title><rect x="849.4" y="83.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (499 samples, 0.15%)</title><rect x="849.4" y="67.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="852.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (785 samples, 0.23%)</title><rect x="851.2" y="275.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (785 samples, 0.23%)</title><rect x="851.2" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (785 samples, 0.23%)</title><rect x="851.2" y="243.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (341 samples, 0.10%)</title><rect x="851.2" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (341 samples, 0.10%)</title><rect x="851.2" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (341 samples, 0.10%)</title><rect x="851.2" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (341 samples, 0.10%)</title><rect x="851.2" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (341 samples, 0.10%)</title><rect x="851.2" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (341 samples, 0.10%)</title><rect x="851.2" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (341 samples, 0.10%)</title><rect x="851.2" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (341 samples, 0.10%)</title><rect x="851.2" y="115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (341 samples, 0.10%)</title><rect x="851.2" y="99.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (341 samples, 0.10%)</title><rect x="851.2" y="83.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (341 samples, 0.10%)</title><rect x="851.2" y="67.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="854.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (444 samples, 0.13%)</title><rect x="852.4" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (444 samples, 0.13%)</title><rect x="852.4" y="211.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (444 samples, 0.13%)</title><rect x="852.4" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (444 samples, 0.13%)</title><rect x="852.4" y="179.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (444 samples, 0.13%)</title><rect x="852.4" y="163.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (444 samples, 0.13%)</title><rect x="852.4" y="147.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (193 samples, 0.06%)</title><rect x="852.4" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (193 samples, 0.06%)</title><rect x="852.4" y="115.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (193 samples, 0.06%)</title><rect x="852.4" y="99.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (193 samples, 0.06%)</title><rect x="852.4" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (146 samples, 0.04%)</title><rect x="852.4" y="67.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.4" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (80 samples, 0.02%)</title><rect x="852.7" y="51.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (80 samples, 0.02%)</title><rect x="852.7" y="35.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="855.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (251 samples, 0.07%)</title><rect x="853.1" y="131.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (251 samples, 0.07%)</title><rect x="853.1" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (251 samples, 0.07%)</title><rect x="853.1" y="99.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (248 samples, 0.07%)</title><rect x="853.1" y="83.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (248 samples, 0.07%)</title><rect x="853.1" y="67.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (248 samples, 0.07%)</title><rect x="853.1" y="51.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="856.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,304 samples, 2.77%)</title><rect x="854.0" y="291.0" width="32.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.0" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (222 samples, 0.07%)</title><rect x="854.0" y="275.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="857.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.03%)</title><rect x="854.7" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.03%)</title><rect x="854.7" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.03%)</title><rect x="854.7" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.03%)</title><rect x="854.7" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.03%)</title><rect x="854.7" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.03%)</title><rect x="854.7" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="857.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (375 samples, 0.11%)</title><rect x="855.2" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (162 samples, 0.05%)</title><rect x="855.2" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (130 samples, 0.04%)</title><rect x="855.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (108 samples, 0.03%)</title><rect x="855.3" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (211 samples, 0.06%)</title><rect x="855.7" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (103 samples, 0.03%)</title><rect x="856.1" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,585 samples, 2.56%)</title><rect x="856.5" y="275.0" width="30.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.5" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (115 samples, 0.03%)</title><rect x="856.5" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="859.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,470 samples, 2.52%)</title><rect x="856.9" y="259.0" width="29.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,470 samples, 2.52%)</title><rect x="856.9" y="243.0" width="29.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.9" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,470 samples, 2.52%)</title><rect x="856.9" y="227.0" width="29.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.9" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,133 samples, 1.23%)</title><rect x="856.9" y="211.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.9" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,133 samples, 1.23%)</title><rect x="856.9" y="195.0" width="14.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="859.9" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,337 samples, 1.29%)</title><rect x="871.4" y="211.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.4" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,337 samples, 1.29%)</title><rect x="871.4" y="195.0" width="15.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="874.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (81 samples, 0.02%)</title><rect x="886.7" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (81 samples, 0.02%)</title><rect x="886.7" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (81 samples, 0.02%)</title><rect x="886.7" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.7" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (81 samples, 0.02%)</title><rect x="886.7" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="889.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (208 samples, 0.06%)</title><rect x="887.0" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (87 samples, 0.03%)</title><rect x="887.0" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (87 samples, 0.03%)</title><rect x="887.0" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.03%)</title><rect x="887.0" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (98 samples, 0.03%)</title><rect x="887.4" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.4" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32188] (14,278 samples, 4.26%)</title><rect x="887.7" y="483.0" width="50.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="890.7" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,278 samples, 4.26%)</title><rect x="887.7" y="467.0" width="50.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.7" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,278 samples, 4.26%)</title><rect x="887.7" y="451.0" width="50.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.7" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,278 samples, 4.26%)</title><rect x="887.7" y="435.0" width="50.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.7" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (87 samples, 0.03%)</title><rect x="887.7" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (87 samples, 0.03%)</title><rect x="887.7" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (87 samples, 0.03%)</title><rect x="887.7" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (87 samples, 0.03%)</title><rect x="887.7" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (87 samples, 0.03%)</title><rect x="887.7" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="890.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,191 samples, 4.23%)</title><rect x="888.0" y="419.0" width="49.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.0" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,191 samples, 4.23%)</title><rect x="888.0" y="403.0" width="49.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.0" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (172 samples, 0.05%)</title><rect x="888.0" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (172 samples, 0.05%)</title><rect x="888.0" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (130 samples, 0.04%)</title><rect x="888.0" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (130 samples, 0.04%)</title><rect x="888.0" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.0" y="350.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.04%)</title><rect x="888.0" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="891.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,019 samples, 4.18%)</title><rect x="888.6" y="387.0" width="49.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.6" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,019 samples, 4.18%)</title><rect x="888.6" y="371.0" width="49.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.6" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,019 samples, 4.18%)</title><rect x="888.6" y="355.0" width="49.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.6" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,834 samples, 4.12%)</title><rect x="888.6" y="339.0" width="48.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.6" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,834 samples, 4.12%)</title><rect x="888.6" y="323.0" width="48.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.6" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,938 samples, 0.58%)</title><rect x="888.6" y="307.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,630 samples, 0.49%)</title><rect x="888.6" y="291.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.6" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (665 samples, 0.20%)</title><rect x="888.6" y="275.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (665 samples, 0.20%)</title><rect x="888.6" y="259.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (665 samples, 0.20%)</title><rect x="888.6" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (665 samples, 0.20%)</title><rect x="888.6" y="227.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (665 samples, 0.20%)</title><rect x="888.6" y="211.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (665 samples, 0.20%)</title><rect x="888.6" y="195.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (665 samples, 0.20%)</title><rect x="888.6" y="179.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (665 samples, 0.20%)</title><rect x="888.6" y="163.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (505 samples, 0.15%)</title><rect x="888.6" y="147.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (505 samples, 0.15%)</title><rect x="888.6" y="131.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (505 samples, 0.15%)</title><rect x="888.6" y="115.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="891.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (160 samples, 0.05%)</title><rect x="890.4" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (160 samples, 0.05%)</title><rect x="890.4" y="131.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="893.4" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (965 samples, 0.29%)</title><rect x="891.0" y="275.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (965 samples, 0.29%)</title><rect x="891.0" y="259.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (965 samples, 0.29%)</title><rect x="891.0" y="243.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (965 samples, 0.29%)</title><rect x="891.0" y="227.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (965 samples, 0.29%)</title><rect x="891.0" y="211.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (965 samples, 0.29%)</title><rect x="891.0" y="195.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (504 samples, 0.15%)</title><rect x="891.0" y="179.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (499 samples, 0.15%)</title><rect x="891.0" y="163.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (499 samples, 0.15%)</title><rect x="891.0" y="147.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (499 samples, 0.15%)</title><rect x="891.0" y="131.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (268 samples, 0.08%)</title><rect x="891.4" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (132 samples, 0.04%)</title><rect x="891.4" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (132 samples, 0.04%)</title><rect x="891.4" y="83.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="894.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (136 samples, 0.04%)</title><rect x="891.9" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.9" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (136 samples, 0.04%)</title><rect x="891.9" y="83.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (99 samples, 0.03%)</title><rect x="892.4" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (99 samples, 0.03%)</title><rect x="892.4" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="895.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (461 samples, 0.14%)</title><rect x="892.7" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (461 samples, 0.14%)</title><rect x="892.7" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (461 samples, 0.14%)</title><rect x="892.7" y="147.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (458 samples, 0.14%)</title><rect x="892.7" y="131.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (458 samples, 0.14%)</title><rect x="892.7" y="115.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.7" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (458 samples, 0.14%)</title><rect x="892.7" y="99.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="895.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (308 samples, 0.09%)</title><rect x="894.4" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (308 samples, 0.09%)</title><rect x="894.4" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (308 samples, 0.09%)</title><rect x="894.4" y="259.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (308 samples, 0.09%)</title><rect x="894.4" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.4" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (308 samples, 0.09%)</title><rect x="894.4" y="227.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="897.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,816 samples, 3.52%)</title><rect x="895.4" y="307.0" width="41.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,629 samples, 0.78%)</title><rect x="895.4" y="291.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,870 samples, 0.56%)</title><rect x="895.4" y="275.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,862 samples, 0.56%)</title><rect x="895.5" y="259.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (122 samples, 0.04%)</title><rect x="895.6" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.6" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (122 samples, 0.04%)</title><rect x="895.6" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="898.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,658 samples, 0.49%)</title><rect x="896.2" y="243.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,658 samples, 0.49%)</title><rect x="896.2" y="227.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,612 samples, 0.48%)</title><rect x="896.3" y="211.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,612 samples, 0.48%)</title><rect x="896.3" y="195.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,612 samples, 0.48%)</title><rect x="896.3" y="179.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,612 samples, 0.48%)</title><rect x="896.3" y="163.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,086 samples, 0.32%)</title><rect x="896.3" y="147.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (107 samples, 0.03%)</title><rect x="896.3" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (107 samples, 0.03%)</title><rect x="896.3" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (107 samples, 0.03%)</title><rect x="896.3" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (107 samples, 0.03%)</title><rect x="896.3" y="83.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (107 samples, 0.03%)</title><rect x="896.3" y="67.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="899.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (979 samples, 0.29%)</title><rect x="896.7" y="131.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (979 samples, 0.29%)</title><rect x="896.7" y="115.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (979 samples, 0.29%)</title><rect x="896.7" y="99.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (152 samples, 0.05%)</title><rect x="896.7" y="83.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (152 samples, 0.05%)</title><rect x="896.7" y="67.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="899.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (125 samples, 0.04%)</title><rect x="897.3" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.3" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (125 samples, 0.04%)</title><rect x="897.3" y="67.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="900.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (523 samples, 0.16%)</title><rect x="897.7" y="83.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (268 samples, 0.08%)</title><rect x="897.7" y="67.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (268 samples, 0.08%)</title><rect x="897.7" y="51.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="900.7" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (255 samples, 0.08%)</title><rect x="898.6" y="67.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (255 samples, 0.08%)</title><rect x="898.6" y="51.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="901.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (179 samples, 0.05%)</title><rect x="899.5" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (179 samples, 0.05%)</title><rect x="899.5" y="67.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="902.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (526 samples, 0.16%)</title><rect x="900.2" y="147.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (526 samples, 0.16%)</title><rect x="900.2" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (526 samples, 0.16%)</title><rect x="900.2" y="115.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (526 samples, 0.16%)</title><rect x="900.2" y="99.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (526 samples, 0.16%)</title><rect x="900.2" y="83.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (526 samples, 0.16%)</title><rect x="900.2" y="67.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="903.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (759 samples, 0.23%)</title><rect x="902.0" y="275.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (759 samples, 0.23%)</title><rect x="902.0" y="259.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (759 samples, 0.23%)</title><rect x="902.0" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.0" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (337 samples, 0.10%)</title><rect x="902.0" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (337 samples, 0.10%)</title><rect x="902.0" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (337 samples, 0.10%)</title><rect x="902.0" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 0.10%)</title><rect x="902.0" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 0.10%)</title><rect x="902.0" y="163.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (337 samples, 0.10%)</title><rect x="902.0" y="147.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (337 samples, 0.10%)</title><rect x="902.0" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (337 samples, 0.10%)</title><rect x="902.0" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (337 samples, 0.10%)</title><rect x="902.0" y="99.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (337 samples, 0.10%)</title><rect x="902.0" y="83.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.0" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (337 samples, 0.10%)</title><rect x="902.0" y="67.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="905.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (422 samples, 0.13%)</title><rect x="903.2" y="227.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (422 samples, 0.13%)</title><rect x="903.2" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (422 samples, 0.13%)</title><rect x="903.2" y="195.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (422 samples, 0.13%)</title><rect x="903.2" y="179.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (422 samples, 0.13%)</title><rect x="903.2" y="163.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (422 samples, 0.13%)</title><rect x="903.2" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (182 samples, 0.05%)</title><rect x="903.2" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (182 samples, 0.05%)</title><rect x="903.2" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (182 samples, 0.05%)</title><rect x="903.2" y="99.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (182 samples, 0.05%)</title><rect x="903.2" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (141 samples, 0.04%)</title><rect x="903.2" y="67.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (76 samples, 0.02%)</title><rect x="903.2" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.02%)</title><rect x="903.2" y="35.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="906.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (240 samples, 0.07%)</title><rect x="903.8" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (240 samples, 0.07%)</title><rect x="903.8" y="115.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (240 samples, 0.07%)</title><rect x="903.8" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (239 samples, 0.07%)</title><rect x="903.8" y="83.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (239 samples, 0.07%)</title><rect x="903.8" y="67.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (239 samples, 0.07%)</title><rect x="903.8" y="51.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="906.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,187 samples, 2.74%)</title><rect x="904.7" y="291.0" width="32.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.7" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (207 samples, 0.06%)</title><rect x="904.7" y="275.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="907.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (391 samples, 0.12%)</title><rect x="905.8" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (160 samples, 0.05%)</title><rect x="905.8" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (132 samples, 0.04%)</title><rect x="905.8" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (113 samples, 0.03%)</title><rect x="905.8" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (231 samples, 0.07%)</title><rect x="906.3" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (115 samples, 0.03%)</title><rect x="906.7" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,488 samples, 2.53%)</title><rect x="907.1" y="275.0" width="29.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.1" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (120 samples, 0.04%)</title><rect x="907.1" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="910.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,368 samples, 2.49%)</title><rect x="907.6" y="259.0" width="29.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.6" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,368 samples, 2.49%)</title><rect x="907.6" y="243.0" width="29.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.6" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,368 samples, 2.49%)</title><rect x="907.6" y="227.0" width="29.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.6" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,102 samples, 1.22%)</title><rect x="907.6" y="211.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.6" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,102 samples, 1.22%)</title><rect x="907.6" y="195.0" width="14.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="910.6" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,266 samples, 1.27%)</title><rect x="922.0" y="211.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.0" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,266 samples, 1.27%)</title><rect x="922.0" y="195.0" width="15.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="925.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (80 samples, 0.02%)</title><rect x="937.0" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (80 samples, 0.02%)</title><rect x="937.0" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (80 samples, 0.02%)</title><rect x="937.0" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (80 samples, 0.02%)</title><rect x="937.0" y="259.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="940.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (185 samples, 0.06%)</title><rect x="937.3" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (74 samples, 0.02%)</title><rect x="937.3" y="323.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (74 samples, 0.02%)</title><rect x="937.3" y="307.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.02%)</title><rect x="937.3" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (85 samples, 0.03%)</title><rect x="937.6" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="940.6" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32189] (14,333 samples, 4.27%)</title><rect x="937.9" y="483.0" width="50.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="940.9" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,333 samples, 4.27%)</title><rect x="937.9" y="467.0" width="50.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,333 samples, 4.27%)</title><rect x="937.9" y="451.0" width="50.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.9" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,333 samples, 4.27%)</title><rect x="937.9" y="435.0" width="50.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.9" y="446.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,276 samples, 4.26%)</title><rect x="938.1" y="419.0" width="50.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,276 samples, 4.26%)</title><rect x="938.1" y="403.0" width="50.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.1" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (166 samples, 0.05%)</title><rect x="938.1" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (166 samples, 0.05%)</title><rect x="938.1" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (124 samples, 0.04%)</title><rect x="938.1" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (124 samples, 0.04%)</title><rect x="938.1" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.1" y="350.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.04%)</title><rect x="938.1" y="323.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="941.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,110 samples, 4.21%)</title><rect x="938.7" y="387.0" width="49.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.7" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,110 samples, 4.21%)</title><rect x="938.7" y="371.0" width="49.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.7" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,110 samples, 4.21%)</title><rect x="938.7" y="355.0" width="49.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.7" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,907 samples, 4.15%)</title><rect x="938.7" y="339.0" width="48.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.7" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,907 samples, 4.15%)</title><rect x="938.7" y="323.0" width="48.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.7" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,929 samples, 0.58%)</title><rect x="938.7" y="307.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,629 samples, 0.49%)</title><rect x="938.7" y="291.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.7" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (716 samples, 0.21%)</title><rect x="938.7" y="275.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (716 samples, 0.21%)</title><rect x="938.7" y="259.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (716 samples, 0.21%)</title><rect x="938.7" y="243.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (716 samples, 0.21%)</title><rect x="938.7" y="227.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (716 samples, 0.21%)</title><rect x="938.7" y="211.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (716 samples, 0.21%)</title><rect x="938.7" y="195.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (716 samples, 0.21%)</title><rect x="938.7" y="179.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (716 samples, 0.21%)</title><rect x="938.7" y="163.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (494 samples, 0.15%)</title><rect x="938.7" y="147.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (494 samples, 0.15%)</title><rect x="938.7" y="131.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (494 samples, 0.15%)</title><rect x="938.7" y="115.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="941.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (222 samples, 0.07%)</title><rect x="940.5" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (222 samples, 0.07%)</title><rect x="940.5" y="131.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="943.5" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (913 samples, 0.27%)</title><rect x="941.2" y="275.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (913 samples, 0.27%)</title><rect x="941.2" y="259.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (913 samples, 0.27%)</title><rect x="941.2" y="243.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (913 samples, 0.27%)</title><rect x="941.2" y="227.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (913 samples, 0.27%)</title><rect x="941.2" y="211.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (913 samples, 0.27%)</title><rect x="941.2" y="195.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (483 samples, 0.14%)</title><rect x="941.2" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (480 samples, 0.14%)</title><rect x="941.2" y="163.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (480 samples, 0.14%)</title><rect x="941.2" y="147.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (480 samples, 0.14%)</title><rect x="941.2" y="131.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (281 samples, 0.08%)</title><rect x="941.7" y="115.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (149 samples, 0.04%)</title><rect x="941.7" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.7" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (149 samples, 0.04%)</title><rect x="941.7" y="83.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="944.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (132 samples, 0.04%)</title><rect x="942.2" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.2" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (132 samples, 0.04%)</title><rect x="942.2" y="83.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="945.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (77 samples, 0.02%)</title><rect x="942.7" y="115.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (77 samples, 0.02%)</title><rect x="942.7" y="99.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="945.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (430 samples, 0.13%)</title><rect x="942.9" y="179.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (430 samples, 0.13%)</title><rect x="942.9" y="163.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (430 samples, 0.13%)</title><rect x="942.9" y="147.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (422 samples, 0.13%)</title><rect x="942.9" y="131.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="945.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (422 samples, 0.13%)</title><rect x="942.9" y="115.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.9" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (422 samples, 0.13%)</title><rect x="942.9" y="99.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="945.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (300 samples, 0.09%)</title><rect x="944.4" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (300 samples, 0.09%)</title><rect x="944.4" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (298 samples, 0.09%)</title><rect x="944.4" y="259.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (298 samples, 0.09%)</title><rect x="944.4" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.4" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (298 samples, 0.09%)</title><rect x="944.4" y="227.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="947.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,910 samples, 3.55%)</title><rect x="945.5" y="307.0" width="41.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.5" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,666 samples, 0.79%)</title><rect x="945.5" y="291.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,904 samples, 0.57%)</title><rect x="945.5" y="275.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,890 samples, 0.56%)</title><rect x="945.6" y="259.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (126 samples, 0.04%)</title><rect x="945.7" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.7" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (126 samples, 0.04%)</title><rect x="945.7" y="227.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="948.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,658 samples, 0.49%)</title><rect x="946.4" y="243.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,658 samples, 0.49%)</title><rect x="946.4" y="227.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,616 samples, 0.48%)</title><rect x="946.5" y="211.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,616 samples, 0.48%)</title><rect x="946.5" y="195.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,616 samples, 0.48%)</title><rect x="946.5" y="179.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,616 samples, 0.48%)</title><rect x="946.5" y="163.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,092 samples, 0.33%)</title><rect x="946.5" y="147.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (107 samples, 0.03%)</title><rect x="946.5" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (107 samples, 0.03%)</title><rect x="946.5" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (107 samples, 0.03%)</title><rect x="946.5" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (107 samples, 0.03%)</title><rect x="946.5" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (107 samples, 0.03%)</title><rect x="946.5" y="67.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="949.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (985 samples, 0.29%)</title><rect x="946.9" y="131.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (985 samples, 0.29%)</title><rect x="946.9" y="115.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (985 samples, 0.29%)</title><rect x="946.9" y="99.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (136 samples, 0.04%)</title><rect x="946.9" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.9" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (136 samples, 0.04%)</title><rect x="946.9" y="67.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="949.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (123 samples, 0.04%)</title><rect x="947.4" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (123 samples, 0.04%)</title><rect x="947.4" y="67.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (561 samples, 0.17%)</title><rect x="947.8" y="83.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (271 samples, 0.08%)</title><rect x="947.8" y="67.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (271 samples, 0.08%)</title><rect x="947.8" y="51.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="950.8" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (290 samples, 0.09%)</title><rect x="948.8" y="67.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (290 samples, 0.09%)</title><rect x="948.8" y="51.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="951.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (165 samples, 0.05%)</title><rect x="949.8" y="83.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (165 samples, 0.05%)</title><rect x="949.8" y="67.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="952.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (524 samples, 0.16%)</title><rect x="950.4" y="147.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (524 samples, 0.16%)</title><rect x="950.4" y="131.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (524 samples, 0.16%)</title><rect x="950.4" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (524 samples, 0.16%)</title><rect x="950.4" y="99.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (524 samples, 0.16%)</title><rect x="950.4" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (524 samples, 0.16%)</title><rect x="950.4" y="67.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="953.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (762 samples, 0.23%)</title><rect x="952.2" y="275.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (762 samples, 0.23%)</title><rect x="952.2" y="259.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (762 samples, 0.23%)</title><rect x="952.2" y="243.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (342 samples, 0.10%)</title><rect x="952.2" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (342 samples, 0.10%)</title><rect x="952.2" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (342 samples, 0.10%)</title><rect x="952.2" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (342 samples, 0.10%)</title><rect x="952.2" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (342 samples, 0.10%)</title><rect x="952.2" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (342 samples, 0.10%)</title><rect x="952.2" y="147.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (342 samples, 0.10%)</title><rect x="952.2" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (342 samples, 0.10%)</title><rect x="952.2" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (342 samples, 0.10%)</title><rect x="952.2" y="99.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (342 samples, 0.10%)</title><rect x="952.2" y="83.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (342 samples, 0.10%)</title><rect x="952.2" y="67.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="955.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (420 samples, 0.13%)</title><rect x="953.4" y="227.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (420 samples, 0.13%)</title><rect x="953.4" y="211.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (420 samples, 0.13%)</title><rect x="953.4" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (420 samples, 0.13%)</title><rect x="953.4" y="179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.13%)</title><rect x="953.4" y="163.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.13%)</title><rect x="953.4" y="147.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="956.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (176 samples, 0.05%)</title><rect x="953.4" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (176 samples, 0.05%)</title><rect x="953.4" y="115.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (176 samples, 0.05%)</title><rect x="953.4" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (176 samples, 0.05%)</title><rect x="953.4" y="83.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (127 samples, 0.04%)</title><rect x="953.4" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (244 samples, 0.07%)</title><rect x="954.0" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (244 samples, 0.07%)</title><rect x="954.0" y="115.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (244 samples, 0.07%)</title><rect x="954.0" y="99.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (243 samples, 0.07%)</title><rect x="954.0" y="83.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (243 samples, 0.07%)</title><rect x="954.0" y="67.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (243 samples, 0.07%)</title><rect x="954.0" y="51.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="957.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,244 samples, 2.76%)</title><rect x="954.9" y="291.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.9" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (209 samples, 0.06%)</title><rect x="954.9" y="275.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="957.9" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="955.6" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="955.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="955.6" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="955.6" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="958.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.02%)</title><rect x="955.6" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.6" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.02%)</title><rect x="955.6" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="958.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (370 samples, 0.11%)</title><rect x="956.0" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (148 samples, 0.04%)</title><rect x="956.0" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (124 samples, 0.04%)</title><rect x="956.0" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (101 samples, 0.03%)</title><rect x="956.1" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (222 samples, 0.07%)</title><rect x="956.5" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (105 samples, 0.03%)</title><rect x="956.9" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,552 samples, 2.55%)</title><rect x="957.3" y="275.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.3" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (125 samples, 0.04%)</title><rect x="957.3" y="259.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="960.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,427 samples, 2.51%)</title><rect x="957.8" y="259.0" width="29.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.8" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,427 samples, 2.51%)</title><rect x="957.8" y="243.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.8" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,427 samples, 2.51%)</title><rect x="957.8" y="227.0" width="29.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.8" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,243 samples, 1.26%)</title><rect x="957.8" y="211.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.8" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,243 samples, 1.26%)</title><rect x="957.8" y="195.0" width="14.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="960.8" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,184 samples, 1.25%)</title><rect x="972.7" y="211.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.7" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,184 samples, 1.25%)</title><rect x="972.7" y="195.0" width="14.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="975.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (203 samples, 0.06%)</title><rect x="987.6" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (84 samples, 0.03%)</title><rect x="987.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (84 samples, 0.03%)</title><rect x="987.6" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.03%)</title><rect x="987.6" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (101 samples, 0.03%)</title><rect x="988.0" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.0" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32190] (14,351 samples, 4.28%)</title><rect x="988.4" y="483.0" width="50.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="991.4" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,351 samples, 4.28%)</title><rect x="988.4" y="467.0" width="50.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.4" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,351 samples, 4.28%)</title><rect x="988.4" y="451.0" width="50.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.4" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,351 samples, 4.28%)</title><rect x="988.4" y="435.0" width="50.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="991.4" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (85 samples, 0.03%)</title><rect x="988.4" y="419.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (85 samples, 0.03%)</title><rect x="988.4" y="403.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (85 samples, 0.03%)</title><rect x="988.4" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (85 samples, 0.03%)</title><rect x="988.4" y="371.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (85 samples, 0.03%)</title><rect x="988.4" y="355.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="991.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,266 samples, 4.25%)</title><rect x="988.6" y="419.0" width="50.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.6" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,266 samples, 4.25%)</title><rect x="988.6" y="403.0" width="50.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.6" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (183 samples, 0.05%)</title><rect x="988.6" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (183 samples, 0.05%)</title><rect x="988.6" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (134 samples, 0.04%)</title><rect x="988.6" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (131 samples, 0.04%)</title><rect x="988.7" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.7" y="350.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.04%)</title><rect x="988.7" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="991.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,083 samples, 4.20%)</title><rect x="989.3" y="387.0" width="49.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.3" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,083 samples, 4.20%)</title><rect x="989.3" y="371.0" width="49.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.3" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,083 samples, 4.20%)</title><rect x="989.3" y="355.0" width="49.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.3" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,878 samples, 4.14%)</title><rect x="989.3" y="339.0" width="48.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.3" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,878 samples, 4.14%)</title><rect x="989.3" y="323.0" width="48.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,898 samples, 0.57%)</title><rect x="989.3" y="307.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,640 samples, 0.49%)</title><rect x="989.3" y="291.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.3" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (679 samples, 0.20%)</title><rect x="989.3" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (679 samples, 0.20%)</title><rect x="989.3" y="259.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (679 samples, 0.20%)</title><rect x="989.3" y="243.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (679 samples, 0.20%)</title><rect x="989.3" y="227.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (679 samples, 0.20%)</title><rect x="989.3" y="211.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (679 samples, 0.20%)</title><rect x="989.3" y="195.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (679 samples, 0.20%)</title><rect x="989.3" y="179.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (679 samples, 0.20%)</title><rect x="989.3" y="163.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (479 samples, 0.14%)</title><rect x="989.3" y="147.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (479 samples, 0.14%)</title><rect x="989.3" y="131.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (479 samples, 0.14%)</title><rect x="989.3" y="115.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="992.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (200 samples, 0.06%)</title><rect x="991.0" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (200 samples, 0.06%)</title><rect x="991.0" y="131.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="994.0" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (961 samples, 0.29%)</title><rect x="991.7" y="275.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (961 samples, 0.29%)</title><rect x="991.7" y="259.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (961 samples, 0.29%)</title><rect x="991.7" y="243.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (961 samples, 0.29%)</title><rect x="991.7" y="227.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (961 samples, 0.29%)</title><rect x="991.7" y="211.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (961 samples, 0.29%)</title><rect x="991.7" y="195.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (521 samples, 0.16%)</title><rect x="991.7" y="179.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (516 samples, 0.15%)</title><rect x="991.7" y="163.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (516 samples, 0.15%)</title><rect x="991.7" y="147.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (516 samples, 0.15%)</title><rect x="991.7" y="131.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (295 samples, 0.09%)</title><rect x="992.2" y="115.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (155 samples, 0.05%)</title><rect x="992.2" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.2" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (155 samples, 0.05%)</title><rect x="992.2" y="83.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="995.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (140 samples, 0.04%)</title><rect x="992.7" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.7" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (140 samples, 0.04%)</title><rect x="992.7" y="83.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="995.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (91 samples, 0.03%)</title><rect x="993.2" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (91 samples, 0.03%)</title><rect x="993.2" y="99.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="996.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (440 samples, 0.13%)</title><rect x="993.5" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (440 samples, 0.13%)</title><rect x="993.5" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (440 samples, 0.13%)</title><rect x="993.5" y="147.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (440 samples, 0.13%)</title><rect x="993.5" y="131.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (440 samples, 0.13%)</title><rect x="993.5" y="115.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.5" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (440 samples, 0.13%)</title><rect x="993.5" y="99.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="996.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (258 samples, 0.08%)</title><rect x="995.1" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (258 samples, 0.08%)</title><rect x="995.1" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (258 samples, 0.08%)</title><rect x="995.1" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (258 samples, 0.08%)</title><rect x="995.1" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.1" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (258 samples, 0.08%)</title><rect x="995.1" y="227.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="998.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,915 samples, 3.55%)</title><rect x="996.0" y="307.0" width="41.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.0" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,670 samples, 0.80%)</title><rect x="996.0" y="291.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="999.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,927 samples, 0.57%)</title><rect x="996.0" y="275.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,910 samples, 0.57%)</title><rect x="996.0" y="259.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (132 samples, 0.04%)</title><rect x="996.1" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.1" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (132 samples, 0.04%)</title><rect x="996.1" y="227.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="999.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,696 samples, 0.51%)</title><rect x="996.8" y="243.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,696 samples, 0.51%)</title><rect x="996.8" y="227.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,641 samples, 0.49%)</title><rect x="997.0" y="211.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,641 samples, 0.49%)</title><rect x="997.0" y="195.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,641 samples, 0.49%)</title><rect x="997.0" y="179.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,641 samples, 0.49%)</title><rect x="997.0" y="163.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,122 samples, 0.33%)</title><rect x="997.0" y="147.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (104 samples, 0.03%)</title><rect x="997.0" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (104 samples, 0.03%)</title><rect x="997.0" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (104 samples, 0.03%)</title><rect x="997.0" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (104 samples, 0.03%)</title><rect x="997.0" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (104 samples, 0.03%)</title><rect x="997.0" y="67.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1000.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,018 samples, 0.30%)</title><rect x="997.3" y="131.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,018 samples, 0.30%)</title><rect x="997.3" y="115.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (1,018 samples, 0.30%)</title><rect x="997.3" y="99.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (135 samples, 0.04%)</title><rect x="997.3" y="83.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.3" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (135 samples, 0.04%)</title><rect x="997.3" y="67.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1000.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (128 samples, 0.04%)</title><rect x="997.8" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.8" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (128 samples, 0.04%)</title><rect x="997.8" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1000.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (583 samples, 0.17%)</title><rect x="998.3" y="83.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1001.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (280 samples, 0.08%)</title><rect x="998.3" y="67.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (280 samples, 0.08%)</title><rect x="998.3" y="51.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.3" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (303 samples, 0.09%)</title><rect x="999.3" y="67.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (303 samples, 0.09%)</title><rect x="999.3" y="51.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1002.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (172 samples, 0.05%)</title><rect x="1000.3" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (172 samples, 0.05%)</title><rect x="1000.3" y="67.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1003.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (519 samples, 0.15%)</title><rect x="1000.9" y="147.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (519 samples, 0.15%)</title><rect x="1000.9" y="131.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (519 samples, 0.15%)</title><rect x="1000.9" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (519 samples, 0.15%)</title><rect x="1000.9" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (519 samples, 0.15%)</title><rect x="1000.9" y="83.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.9" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (519 samples, 0.15%)</title><rect x="1000.9" y="67.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1003.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (743 samples, 0.22%)</title><rect x="1002.7" y="275.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (743 samples, 0.22%)</title><rect x="1002.7" y="259.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (743 samples, 0.22%)</title><rect x="1002.7" y="243.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.7" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (323 samples, 0.10%)</title><rect x="1002.7" y="227.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (323 samples, 0.10%)</title><rect x="1002.7" y="211.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (323 samples, 0.10%)</title><rect x="1002.7" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (323 samples, 0.10%)</title><rect x="1002.7" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (323 samples, 0.10%)</title><rect x="1002.7" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (323 samples, 0.10%)</title><rect x="1002.7" y="147.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (323 samples, 0.10%)</title><rect x="1002.7" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (323 samples, 0.10%)</title><rect x="1002.7" y="115.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (323 samples, 0.10%)</title><rect x="1002.7" y="99.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (323 samples, 0.10%)</title><rect x="1002.7" y="83.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (323 samples, 0.10%)</title><rect x="1002.7" y="67.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1005.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (420 samples, 0.13%)</title><rect x="1003.9" y="227.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (420 samples, 0.13%)</title><rect x="1003.9" y="211.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (420 samples, 0.13%)</title><rect x="1003.9" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (420 samples, 0.13%)</title><rect x="1003.9" y="179.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.13%)</title><rect x="1003.9" y="163.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.13%)</title><rect x="1003.9" y="147.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (181 samples, 0.05%)</title><rect x="1003.9" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (181 samples, 0.05%)</title><rect x="1003.9" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (181 samples, 0.05%)</title><rect x="1003.9" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (181 samples, 0.05%)</title><rect x="1003.9" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (138 samples, 0.04%)</title><rect x="1003.9" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (239 samples, 0.07%)</title><rect x="1004.5" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (239 samples, 0.07%)</title><rect x="1004.5" y="115.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (239 samples, 0.07%)</title><rect x="1004.5" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (238 samples, 0.07%)</title><rect x="1004.5" y="83.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (238 samples, 0.07%)</title><rect x="1004.5" y="67.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (238 samples, 0.07%)</title><rect x="1004.5" y="51.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1007.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,245 samples, 2.76%)</title><rect x="1005.4" y="291.0" width="32.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.4" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (224 samples, 0.07%)</title><rect x="1005.4" y="275.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1008.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (422 samples, 0.13%)</title><rect x="1006.4" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (157 samples, 0.05%)</title><rect x="1006.4" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (136 samples, 0.04%)</title><rect x="1006.4" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (115 samples, 0.03%)</title><rect x="1006.5" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (264 samples, 0.08%)</title><rect x="1007.0" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.02%)</title><rect x="1007.1" y="243.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.02%)</title><rect x="1007.1" y="227.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.02%)</title><rect x="1007.1" y="211.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.02%)</title><rect x="1007.1" y="195.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (76 samples, 0.02%)</title><rect x="1007.1" y="179.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (76 samples, 0.02%)</title><rect x="1007.1" y="163.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1010.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (114 samples, 0.03%)</title><rect x="1007.5" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,522 samples, 2.54%)</title><rect x="1007.9" y="275.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1010.9" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (106 samples, 0.03%)</title><rect x="1007.9" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1010.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,416 samples, 2.51%)</title><rect x="1008.3" y="259.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.3" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,416 samples, 2.51%)</title><rect x="1008.3" y="243.0" width="29.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.3" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,416 samples, 2.51%)</title><rect x="1008.3" y="227.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.3" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,254 samples, 1.27%)</title><rect x="1008.3" y="211.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.3" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,254 samples, 1.27%)</title><rect x="1008.3" y="195.0" width="14.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1011.3" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,162 samples, 1.24%)</title><rect x="1023.2" y="211.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.2" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,162 samples, 1.24%)</title><rect x="1023.2" y="195.0" width="14.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1026.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (205 samples, 0.06%)</title><rect x="1038.1" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (79 samples, 0.02%)</title><rect x="1038.1" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (79 samples, 0.02%)</title><rect x="1038.1" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.02%)</title><rect x="1038.1" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (98 samples, 0.03%)</title><rect x="1038.5" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.5" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32191] (14,315 samples, 4.27%)</title><rect x="1038.8" y="483.0" width="50.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1041.8" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,315 samples, 4.27%)</title><rect x="1038.8" y="467.0" width="50.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.8" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,315 samples, 4.27%)</title><rect x="1038.8" y="451.0" width="50.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.8" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,315 samples, 4.27%)</title><rect x="1038.8" y="435.0" width="50.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.8" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (74 samples, 0.02%)</title><rect x="1038.8" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (74 samples, 0.02%)</title><rect x="1038.8" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (74 samples, 0.02%)</title><rect x="1038.8" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (74 samples, 0.02%)</title><rect x="1038.8" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (74 samples, 0.02%)</title><rect x="1038.8" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1041.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,241 samples, 4.25%)</title><rect x="1039.1" y="419.0" width="50.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,241 samples, 4.25%)</title><rect x="1039.1" y="403.0" width="50.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.1" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (177 samples, 0.05%)</title><rect x="1039.1" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (177 samples, 0.05%)</title><rect x="1039.1" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1042.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (144 samples, 0.04%)</title><rect x="1039.1" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (141 samples, 0.04%)</title><rect x="1039.1" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.1" y="350.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.04%)</title><rect x="1039.1" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1042.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,064 samples, 4.19%)</title><rect x="1039.7" y="387.0" width="49.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.7" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,064 samples, 4.19%)</title><rect x="1039.7" y="371.0" width="49.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.7" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,064 samples, 4.19%)</title><rect x="1039.7" y="355.0" width="49.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.7" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,843 samples, 4.13%)</title><rect x="1039.7" y="339.0" width="48.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.7" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,843 samples, 4.13%)</title><rect x="1039.7" y="323.0" width="48.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1042.7" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,884 samples, 0.56%)</title><rect x="1039.7" y="307.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,608 samples, 0.48%)</title><rect x="1039.7" y="291.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.7" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (655 samples, 0.20%)</title><rect x="1039.7" y="275.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1042.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (655 samples, 0.20%)</title><rect x="1039.7" y="259.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (655 samples, 0.20%)</title><rect x="1039.7" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (655 samples, 0.20%)</title><rect x="1039.7" y="227.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (655 samples, 0.20%)</title><rect x="1039.7" y="211.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (655 samples, 0.20%)</title><rect x="1039.7" y="195.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (655 samples, 0.20%)</title><rect x="1039.7" y="179.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (655 samples, 0.20%)</title><rect x="1039.7" y="163.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (449 samples, 0.13%)</title><rect x="1039.7" y="147.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (449 samples, 0.13%)</title><rect x="1039.7" y="131.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (449 samples, 0.13%)</title><rect x="1039.7" y="115.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1042.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (206 samples, 0.06%)</title><rect x="1041.3" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (206 samples, 0.06%)</title><rect x="1041.3" y="131.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1044.3" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (953 samples, 0.28%)</title><rect x="1042.0" y="275.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (953 samples, 0.28%)</title><rect x="1042.0" y="259.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (953 samples, 0.28%)</title><rect x="1042.0" y="243.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (953 samples, 0.28%)</title><rect x="1042.0" y="227.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (953 samples, 0.28%)</title><rect x="1042.0" y="211.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (953 samples, 0.28%)</title><rect x="1042.0" y="195.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (521 samples, 0.16%)</title><rect x="1042.0" y="179.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (519 samples, 0.15%)</title><rect x="1042.0" y="163.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (519 samples, 0.15%)</title><rect x="1042.0" y="147.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (519 samples, 0.15%)</title><rect x="1042.0" y="131.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (73 samples, 0.02%)</title><rect x="1042.0" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.0" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.02%)</title><rect x="1042.0" y="99.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1045.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (275 samples, 0.08%)</title><rect x="1042.5" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (126 samples, 0.04%)</title><rect x="1042.5" y="99.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.5" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (126 samples, 0.04%)</title><rect x="1042.5" y="83.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1045.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (149 samples, 0.04%)</title><rect x="1043.0" y="99.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.0" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (149 samples, 0.04%)</title><rect x="1043.0" y="83.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1046.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (100 samples, 0.03%)</title><rect x="1043.5" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (100 samples, 0.03%)</title><rect x="1043.5" y="99.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1046.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (432 samples, 0.13%)</title><rect x="1043.9" y="179.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (432 samples, 0.13%)</title><rect x="1043.9" y="163.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (432 samples, 0.13%)</title><rect x="1043.9" y="147.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (429 samples, 0.13%)</title><rect x="1043.9" y="131.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (429 samples, 0.13%)</title><rect x="1043.9" y="115.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.9" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (429 samples, 0.13%)</title><rect x="1043.9" y="99.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (276 samples, 0.08%)</title><rect x="1045.4" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (276 samples, 0.08%)</title><rect x="1045.4" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (275 samples, 0.08%)</title><rect x="1045.4" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (275 samples, 0.08%)</title><rect x="1045.4" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.4" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (275 samples, 0.08%)</title><rect x="1045.4" y="227.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1048.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,878 samples, 3.54%)</title><rect x="1046.3" y="307.0" width="41.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.3" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,811 samples, 0.84%)</title><rect x="1046.3" y="291.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,991 samples, 0.59%)</title><rect x="1046.3" y="275.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,979 samples, 0.59%)</title><rect x="1046.4" y="259.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (153 samples, 0.05%)</title><rect x="1046.5" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.5" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (153 samples, 0.05%)</title><rect x="1046.5" y="227.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1049.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,751 samples, 0.52%)</title><rect x="1047.2" y="243.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,751 samples, 0.52%)</title><rect x="1047.2" y="227.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,708 samples, 0.51%)</title><rect x="1047.3" y="211.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,708 samples, 0.51%)</title><rect x="1047.3" y="195.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,708 samples, 0.51%)</title><rect x="1047.3" y="179.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,708 samples, 0.51%)</title><rect x="1047.3" y="163.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,130 samples, 0.34%)</title><rect x="1047.3" y="147.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (111 samples, 0.03%)</title><rect x="1047.3" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (111 samples, 0.03%)</title><rect x="1047.3" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (111 samples, 0.03%)</title><rect x="1047.3" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (111 samples, 0.03%)</title><rect x="1047.3" y="83.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (111 samples, 0.03%)</title><rect x="1047.3" y="67.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,019 samples, 0.30%)</title><rect x="1047.7" y="131.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (1,019 samples, 0.30%)</title><rect x="1047.7" y="115.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (1,019 samples, 0.30%)</title><rect x="1047.7" y="99.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (135 samples, 0.04%)</title><rect x="1047.7" y="83.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (135 samples, 0.04%)</title><rect x="1047.7" y="67.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1050.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (144 samples, 0.04%)</title><rect x="1048.2" y="83.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (144 samples, 0.04%)</title><rect x="1048.2" y="67.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1051.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (582 samples, 0.17%)</title><rect x="1048.7" y="83.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (289 samples, 0.09%)</title><rect x="1048.7" y="67.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (289 samples, 0.09%)</title><rect x="1048.7" y="51.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1051.7" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (293 samples, 0.09%)</title><rect x="1049.7" y="67.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (293 samples, 0.09%)</title><rect x="1049.7" y="51.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1052.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (158 samples, 0.05%)</title><rect x="1050.8" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (158 samples, 0.05%)</title><rect x="1050.8" y="67.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1053.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (578 samples, 0.17%)</title><rect x="1051.3" y="147.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (578 samples, 0.17%)</title><rect x="1051.3" y="131.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (578 samples, 0.17%)</title><rect x="1051.3" y="115.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (578 samples, 0.17%)</title><rect x="1051.3" y="99.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (578 samples, 0.17%)</title><rect x="1051.3" y="83.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.3" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (578 samples, 0.17%)</title><rect x="1051.3" y="67.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1054.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (820 samples, 0.24%)</title><rect x="1053.3" y="275.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (820 samples, 0.24%)</title><rect x="1053.3" y="259.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (820 samples, 0.24%)</title><rect x="1053.3" y="243.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.3" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (365 samples, 0.11%)</title><rect x="1053.3" y="227.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (365 samples, 0.11%)</title><rect x="1053.3" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (365 samples, 0.11%)</title><rect x="1053.3" y="195.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (365 samples, 0.11%)</title><rect x="1053.3" y="179.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (365 samples, 0.11%)</title><rect x="1053.3" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (365 samples, 0.11%)</title><rect x="1053.3" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (365 samples, 0.11%)</title><rect x="1053.3" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (365 samples, 0.11%)</title><rect x="1053.3" y="115.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (365 samples, 0.11%)</title><rect x="1053.3" y="99.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (365 samples, 0.11%)</title><rect x="1053.3" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.3" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (365 samples, 0.11%)</title><rect x="1053.3" y="67.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1056.3" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (455 samples, 0.14%)</title><rect x="1054.6" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (455 samples, 0.14%)</title><rect x="1054.6" y="211.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (455 samples, 0.14%)</title><rect x="1054.6" y="195.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (455 samples, 0.14%)</title><rect x="1054.6" y="179.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (455 samples, 0.14%)</title><rect x="1054.6" y="163.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (455 samples, 0.14%)</title><rect x="1054.6" y="147.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (190 samples, 0.06%)</title><rect x="1054.6" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (190 samples, 0.06%)</title><rect x="1054.6" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (190 samples, 0.06%)</title><rect x="1054.6" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (190 samples, 0.06%)</title><rect x="1054.6" y="83.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (143 samples, 0.04%)</title><rect x="1054.6" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (74 samples, 0.02%)</title><rect x="1054.6" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (74 samples, 0.02%)</title><rect x="1054.6" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1057.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (265 samples, 0.08%)</title><rect x="1055.3" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (265 samples, 0.08%)</title><rect x="1055.3" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (265 samples, 0.08%)</title><rect x="1055.3" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (261 samples, 0.08%)</title><rect x="1055.3" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (261 samples, 0.08%)</title><rect x="1055.3" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (261 samples, 0.08%)</title><rect x="1055.3" y="51.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1058.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,067 samples, 2.70%)</title><rect x="1056.2" y="291.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.2" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (222 samples, 0.07%)</title><rect x="1056.2" y="275.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1059.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (372 samples, 0.11%)</title><rect x="1057.3" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (148 samples, 0.04%)</title><rect x="1057.3" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (126 samples, 0.04%)</title><rect x="1057.3" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (111 samples, 0.03%)</title><rect x="1057.4" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (223 samples, 0.07%)</title><rect x="1057.8" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (101 samples, 0.03%)</title><rect x="1058.3" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,387 samples, 2.50%)</title><rect x="1058.6" y="275.0" width="29.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.6" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (113 samples, 0.03%)</title><rect x="1058.6" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1061.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,274 samples, 2.47%)</title><rect x="1059.0" y="259.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.0" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,274 samples, 2.47%)</title><rect x="1059.0" y="243.0" width="29.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1062.0" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,274 samples, 2.47%)</title><rect x="1059.0" y="227.0" width="29.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.0" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,184 samples, 1.25%)</title><rect x="1059.0" y="211.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.0" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,184 samples, 1.25%)</title><rect x="1059.0" y="195.0" width="14.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1062.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,090 samples, 1.22%)</title><rect x="1073.7" y="211.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.7" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,090 samples, 1.22%)</title><rect x="1073.7" y="195.0" width="14.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1076.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (81 samples, 0.02%)</title><rect x="1088.1" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (81 samples, 0.02%)</title><rect x="1088.1" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (81 samples, 0.02%)</title><rect x="1088.1" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.1" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (81 samples, 0.02%)</title><rect x="1088.1" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1091.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (221 samples, 0.07%)</title><rect x="1088.4" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (98 samples, 0.03%)</title><rect x="1088.4" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (98 samples, 0.03%)</title><rect x="1088.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.03%)</title><rect x="1088.4" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (99 samples, 0.03%)</title><rect x="1088.8" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.8" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32192] (14,353 samples, 4.28%)</title><rect x="1089.2" y="483.0" width="50.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1092.2" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,353 samples, 4.28%)</title><rect x="1089.2" y="467.0" width="50.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.2" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,353 samples, 4.28%)</title><rect x="1089.2" y="451.0" width="50.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.2" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,353 samples, 4.28%)</title><rect x="1089.2" y="435.0" width="50.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.2" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (83 samples, 0.02%)</title><rect x="1089.2" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (83 samples, 0.02%)</title><rect x="1089.2" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.02%)</title><rect x="1089.2" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (81 samples, 0.02%)</title><rect x="1089.2" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (81 samples, 0.02%)</title><rect x="1089.2" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1092.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,270 samples, 4.25%)</title><rect x="1089.5" y="419.0" width="50.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,270 samples, 4.25%)</title><rect x="1089.5" y="403.0" width="50.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (181 samples, 0.05%)</title><rect x="1089.5" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (181 samples, 0.05%)</title><rect x="1089.5" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (136 samples, 0.04%)</title><rect x="1089.5" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (135 samples, 0.04%)</title><rect x="1089.5" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.5" y="350.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.04%)</title><rect x="1089.5" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1092.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,089 samples, 4.20%)</title><rect x="1090.1" y="387.0" width="49.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.1" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,089 samples, 4.20%)</title><rect x="1090.1" y="371.0" width="49.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.1" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,089 samples, 4.20%)</title><rect x="1090.1" y="355.0" width="49.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.1" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,887 samples, 4.14%)</title><rect x="1090.1" y="339.0" width="48.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.1" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,887 samples, 4.14%)</title><rect x="1090.1" y="323.0" width="48.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.1" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,917 samples, 0.57%)</title><rect x="1090.1" y="307.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,639 samples, 0.49%)</title><rect x="1090.1" y="291.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.1" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (689 samples, 0.21%)</title><rect x="1090.1" y="275.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (689 samples, 0.21%)</title><rect x="1090.1" y="259.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (689 samples, 0.21%)</title><rect x="1090.1" y="243.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (689 samples, 0.21%)</title><rect x="1090.1" y="227.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (689 samples, 0.21%)</title><rect x="1090.1" y="211.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (689 samples, 0.21%)</title><rect x="1090.1" y="195.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (689 samples, 0.21%)</title><rect x="1090.1" y="179.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (689 samples, 0.21%)</title><rect x="1090.1" y="163.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (488 samples, 0.15%)</title><rect x="1090.1" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (488 samples, 0.15%)</title><rect x="1090.1" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (488 samples, 0.15%)</title><rect x="1090.1" y="115.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1093.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (201 samples, 0.06%)</title><rect x="1091.8" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (201 samples, 0.06%)</title><rect x="1091.8" y="131.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1094.8" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (950 samples, 0.28%)</title><rect x="1092.5" y="275.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (950 samples, 0.28%)</title><rect x="1092.5" y="259.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (950 samples, 0.28%)</title><rect x="1092.5" y="243.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (950 samples, 0.28%)</title><rect x="1092.5" y="227.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (950 samples, 0.28%)</title><rect x="1092.5" y="211.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (950 samples, 0.28%)</title><rect x="1092.5" y="195.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (477 samples, 0.14%)</title><rect x="1092.5" y="179.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (470 samples, 0.14%)</title><rect x="1092.6" y="163.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (470 samples, 0.14%)</title><rect x="1092.6" y="147.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (470 samples, 0.14%)</title><rect x="1092.6" y="131.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (256 samples, 0.08%)</title><rect x="1093.0" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (124 samples, 0.04%)</title><rect x="1093.0" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.0" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (124 samples, 0.04%)</title><rect x="1093.0" y="83.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1096.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (132 samples, 0.04%)</title><rect x="1093.5" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.5" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (132 samples, 0.04%)</title><rect x="1093.5" y="83.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1096.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (80 samples, 0.02%)</title><rect x="1093.9" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (80 samples, 0.02%)</title><rect x="1093.9" y="99.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1096.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (473 samples, 0.14%)</title><rect x="1094.2" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (473 samples, 0.14%)</title><rect x="1094.2" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (473 samples, 0.14%)</title><rect x="1094.2" y="147.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (473 samples, 0.14%)</title><rect x="1094.2" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (473 samples, 0.14%)</title><rect x="1094.2" y="115.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.2" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (473 samples, 0.14%)</title><rect x="1094.2" y="99.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1097.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (278 samples, 0.08%)</title><rect x="1095.9" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (278 samples, 0.08%)</title><rect x="1095.9" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (277 samples, 0.08%)</title><rect x="1095.9" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (277 samples, 0.08%)</title><rect x="1095.9" y="243.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.9" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (277 samples, 0.08%)</title><rect x="1095.9" y="227.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1098.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,913 samples, 3.55%)</title><rect x="1096.9" y="307.0" width="41.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.9" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,734 samples, 0.82%)</title><rect x="1096.9" y="291.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,934 samples, 0.58%)</title><rect x="1096.9" y="275.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,918 samples, 0.57%)</title><rect x="1096.9" y="259.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (137 samples, 0.04%)</title><rect x="1097.0" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.0" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (137 samples, 0.04%)</title><rect x="1097.0" y="227.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1100.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,702 samples, 0.51%)</title><rect x="1097.7" y="243.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,702 samples, 0.51%)</title><rect x="1097.7" y="227.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,657 samples, 0.49%)</title><rect x="1097.8" y="211.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,657 samples, 0.49%)</title><rect x="1097.8" y="195.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,657 samples, 0.49%)</title><rect x="1097.8" y="179.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,657 samples, 0.49%)</title><rect x="1097.8" y="163.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,112 samples, 0.33%)</title><rect x="1097.8" y="147.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (113 samples, 0.03%)</title><rect x="1097.8" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (113 samples, 0.03%)</title><rect x="1097.8" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (113 samples, 0.03%)</title><rect x="1097.8" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (113 samples, 0.03%)</title><rect x="1097.8" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (113 samples, 0.03%)</title><rect x="1097.8" y="67.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1100.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (999 samples, 0.30%)</title><rect x="1098.2" y="131.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (999 samples, 0.30%)</title><rect x="1098.2" y="115.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (999 samples, 0.30%)</title><rect x="1098.2" y="99.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1101.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (127 samples, 0.04%)</title><rect x="1098.2" y="83.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (127 samples, 0.04%)</title><rect x="1098.2" y="67.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1101.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (133 samples, 0.04%)</title><rect x="1098.7" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (133 samples, 0.04%)</title><rect x="1098.7" y="67.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1101.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (564 samples, 0.17%)</title><rect x="1099.1" y="83.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (283 samples, 0.08%)</title><rect x="1099.1" y="67.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (283 samples, 0.08%)</title><rect x="1099.1" y="51.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1102.1" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (281 samples, 0.08%)</title><rect x="1100.1" y="67.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (281 samples, 0.08%)</title><rect x="1100.1" y="51.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1103.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (175 samples, 0.05%)</title><rect x="1101.1" y="83.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (175 samples, 0.05%)</title><rect x="1101.1" y="67.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1104.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (545 samples, 0.16%)</title><rect x="1101.7" y="147.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (545 samples, 0.16%)</title><rect x="1101.7" y="131.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (545 samples, 0.16%)</title><rect x="1101.7" y="115.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (545 samples, 0.16%)</title><rect x="1101.7" y="99.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (545 samples, 0.16%)</title><rect x="1101.7" y="83.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (545 samples, 0.16%)</title><rect x="1101.7" y="67.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1104.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (800 samples, 0.24%)</title><rect x="1103.7" y="275.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (800 samples, 0.24%)</title><rect x="1103.7" y="259.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (800 samples, 0.24%)</title><rect x="1103.7" y="243.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.7" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (329 samples, 0.10%)</title><rect x="1103.7" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (329 samples, 0.10%)</title><rect x="1103.7" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (329 samples, 0.10%)</title><rect x="1103.7" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (329 samples, 0.10%)</title><rect x="1103.7" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (329 samples, 0.10%)</title><rect x="1103.7" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (329 samples, 0.10%)</title><rect x="1103.7" y="147.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (329 samples, 0.10%)</title><rect x="1103.7" y="131.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (329 samples, 0.10%)</title><rect x="1103.7" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (329 samples, 0.10%)</title><rect x="1103.7" y="99.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (329 samples, 0.10%)</title><rect x="1103.7" y="83.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.7" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (329 samples, 0.10%)</title><rect x="1103.7" y="67.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1106.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (471 samples, 0.14%)</title><rect x="1104.8" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (471 samples, 0.14%)</title><rect x="1104.8" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (471 samples, 0.14%)</title><rect x="1104.8" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (471 samples, 0.14%)</title><rect x="1104.8" y="179.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (471 samples, 0.14%)</title><rect x="1104.8" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (471 samples, 0.14%)</title><rect x="1104.8" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (206 samples, 0.06%)</title><rect x="1104.8" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (206 samples, 0.06%)</title><rect x="1104.8" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (206 samples, 0.06%)</title><rect x="1104.8" y="99.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (206 samples, 0.06%)</title><rect x="1104.8" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (149 samples, 0.04%)</title><rect x="1104.8" y="67.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (79 samples, 0.02%)</title><rect x="1105.1" y="51.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.02%)</title><rect x="1105.1" y="35.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1108.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (265 samples, 0.08%)</title><rect x="1105.5" y="131.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (265 samples, 0.08%)</title><rect x="1105.5" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (265 samples, 0.08%)</title><rect x="1105.5" y="99.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (264 samples, 0.08%)</title><rect x="1105.5" y="83.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1108.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (264 samples, 0.08%)</title><rect x="1105.5" y="67.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (264 samples, 0.08%)</title><rect x="1105.5" y="51.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1108.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,179 samples, 2.74%)</title><rect x="1106.5" y="291.0" width="32.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.5" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (211 samples, 0.06%)</title><rect x="1106.5" y="275.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1109.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (411 samples, 0.12%)</title><rect x="1107.6" y="275.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (160 samples, 0.05%)</title><rect x="1107.6" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (135 samples, 0.04%)</title><rect x="1107.6" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (121 samples, 0.04%)</title><rect x="1107.6" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (250 samples, 0.07%)</title><rect x="1108.1" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (122 samples, 0.04%)</title><rect x="1108.6" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,460 samples, 2.52%)</title><rect x="1109.0" y="275.0" width="29.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.0" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (126 samples, 0.04%)</title><rect x="1109.0" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1112.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,334 samples, 2.48%)</title><rect x="1109.4" y="259.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1112.4" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,334 samples, 2.48%)</title><rect x="1109.4" y="243.0" width="29.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.4" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,334 samples, 2.48%)</title><rect x="1109.4" y="227.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.4" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,110 samples, 1.23%)</title><rect x="1109.4" y="211.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1112.4" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,110 samples, 1.23%)</title><rect x="1109.4" y="195.0" width="14.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1112.4" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,224 samples, 1.26%)</title><rect x="1123.9" y="211.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.9" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,224 samples, 1.26%)</title><rect x="1123.9" y="195.0" width="14.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1126.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (202 samples, 0.06%)</title><rect x="1139.0" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (116 samples, 0.03%)</title><rect x="1139.3" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.3" y="334.0"></text>
</g>
<g>
<title>[asyncWorker tid=32193] (14,306 samples, 4.26%)</title><rect x="1139.7" y="483.0" width="50.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1142.7" y="494.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14,306 samples, 4.26%)</title><rect x="1139.7" y="467.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.7" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,306 samples, 4.26%)</title><rect x="1139.7" y="451.0" width="50.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.7" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,306 samples, 4.26%)</title><rect x="1139.7" y="435.0" width="50.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.7" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (74 samples, 0.02%)</title><rect x="1139.7" y="419.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (74 samples, 0.02%)</title><rect x="1139.7" y="403.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (73 samples, 0.02%)</title><rect x="1139.7" y="387.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (73 samples, 0.02%)</title><rect x="1139.7" y="371.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (73 samples, 0.02%)</title><rect x="1139.7" y="355.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1142.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (14,232 samples, 4.24%)</title><rect x="1139.9" y="419.0" width="50.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (14,232 samples, 4.24%)</title><rect x="1139.9" y="403.0" width="50.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.9" y="414.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (195 samples, 0.06%)</title><rect x="1139.9" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (195 samples, 0.06%)</title><rect x="1139.9" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (150 samples, 0.04%)</title><rect x="1139.9" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (150 samples, 0.04%)</title><rect x="1139.9" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.9" y="350.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.04%)</title><rect x="1139.9" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1142.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (14,037 samples, 4.18%)</title><rect x="1140.6" y="387.0" width="49.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.6" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (14,037 samples, 4.18%)</title><rect x="1140.6" y="371.0" width="49.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.6" y="382.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (14,037 samples, 4.18%)</title><rect x="1140.6" y="355.0" width="49.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.6" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (13,831 samples, 4.12%)</title><rect x="1140.6" y="339.0" width="48.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.6" y="350.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (13,831 samples, 4.12%)</title><rect x="1140.6" y="323.0" width="48.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.6" y="334.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,930 samples, 0.58%)</title><rect x="1140.6" y="307.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,673 samples, 0.50%)</title><rect x="1140.6" y="291.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.6" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (699 samples, 0.21%)</title><rect x="1140.6" y="275.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (699 samples, 0.21%)</title><rect x="1140.6" y="259.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (699 samples, 0.21%)</title><rect x="1140.6" y="243.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (699 samples, 0.21%)</title><rect x="1140.6" y="227.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (699 samples, 0.21%)</title><rect x="1140.6" y="211.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (699 samples, 0.21%)</title><rect x="1140.6" y="195.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (699 samples, 0.21%)</title><rect x="1140.6" y="179.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (699 samples, 0.21%)</title><rect x="1140.6" y="163.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (491 samples, 0.15%)</title><rect x="1140.6" y="147.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (491 samples, 0.15%)</title><rect x="1140.6" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (491 samples, 0.15%)</title><rect x="1140.6" y="115.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1143.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (208 samples, 0.06%)</title><rect x="1142.3" y="147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (208 samples, 0.06%)</title><rect x="1142.3" y="131.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1145.3" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (974 samples, 0.29%)</title><rect x="1143.1" y="275.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (974 samples, 0.29%)</title><rect x="1143.1" y="259.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (974 samples, 0.29%)</title><rect x="1143.1" y="243.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (974 samples, 0.29%)</title><rect x="1143.1" y="227.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (974 samples, 0.29%)</title><rect x="1143.1" y="211.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (974 samples, 0.29%)</title><rect x="1143.1" y="195.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (518 samples, 0.15%)</title><rect x="1143.1" y="179.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (516 samples, 0.15%)</title><rect x="1143.1" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (516 samples, 0.15%)</title><rect x="1143.1" y="147.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (516 samples, 0.15%)</title><rect x="1143.1" y="131.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (79 samples, 0.02%)</title><rect x="1143.3" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.3" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.02%)</title><rect x="1143.3" y="99.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1146.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (286 samples, 0.09%)</title><rect x="1143.6" y="115.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (132 samples, 0.04%)</title><rect x="1143.6" y="99.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.6" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (132 samples, 0.04%)</title><rect x="1143.6" y="83.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1146.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (154 samples, 0.05%)</title><rect x="1144.1" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.1" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (154 samples, 0.05%)</title><rect x="1144.1" y="83.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1147.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (84 samples, 0.03%)</title><rect x="1144.6" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (84 samples, 0.03%)</title><rect x="1144.6" y="99.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1147.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (456 samples, 0.14%)</title><rect x="1144.9" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (456 samples, 0.14%)</title><rect x="1144.9" y="163.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (456 samples, 0.14%)</title><rect x="1144.9" y="147.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (452 samples, 0.13%)</title><rect x="1144.9" y="131.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (452 samples, 0.13%)</title><rect x="1144.9" y="115.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.9" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (452 samples, 0.13%)</title><rect x="1144.9" y="99.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1147.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (257 samples, 0.08%)</title><rect x="1146.5" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (257 samples, 0.08%)</title><rect x="1146.5" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (257 samples, 0.08%)</title><rect x="1146.5" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (257 samples, 0.08%)</title><rect x="1146.5" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.5" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (257 samples, 0.08%)</title><rect x="1146.5" y="227.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1149.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (11,823 samples, 3.52%)</title><rect x="1147.4" y="307.0" width="41.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1150.4" y="318.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2,648 samples, 0.79%)</title><rect x="1147.4" y="291.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1150.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,850 samples, 0.55%)</title><rect x="1147.4" y="275.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,833 samples, 0.55%)</title><rect x="1147.5" y="259.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (136 samples, 0.04%)</title><rect x="1147.6" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.6" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (136 samples, 0.04%)</title><rect x="1147.6" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1150.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,604 samples, 0.48%)</title><rect x="1148.3" y="243.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,604 samples, 0.48%)</title><rect x="1148.3" y="227.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,558 samples, 0.46%)</title><rect x="1148.4" y="211.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,558 samples, 0.46%)</title><rect x="1148.4" y="195.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,558 samples, 0.46%)</title><rect x="1148.4" y="179.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,558 samples, 0.46%)</title><rect x="1148.4" y="163.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,027 samples, 0.31%)</title><rect x="1148.4" y="147.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (96 samples, 0.03%)</title><rect x="1148.4" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (96 samples, 0.03%)</title><rect x="1148.4" y="115.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (96 samples, 0.03%)</title><rect x="1148.4" y="99.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (96 samples, 0.03%)</title><rect x="1148.4" y="83.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (96 samples, 0.03%)</title><rect x="1148.4" y="67.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1151.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (931 samples, 0.28%)</title><rect x="1148.8" y="131.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (931 samples, 0.28%)</title><rect x="1148.8" y="115.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (931 samples, 0.28%)</title><rect x="1148.8" y="99.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1151.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (129 samples, 0.04%)</title><rect x="1148.8" y="83.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.8" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (129 samples, 0.04%)</title><rect x="1148.8" y="67.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1151.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (144 samples, 0.04%)</title><rect x="1149.2" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1152.2" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (144 samples, 0.04%)</title><rect x="1149.2" y="67.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1152.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (497 samples, 0.15%)</title><rect x="1149.7" y="83.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (256 samples, 0.08%)</title><rect x="1149.7" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (256 samples, 0.08%)</title><rect x="1149.7" y="51.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1152.7" y="62.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (241 samples, 0.07%)</title><rect x="1150.6" y="67.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (241 samples, 0.07%)</title><rect x="1150.6" y="51.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1153.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (161 samples, 0.05%)</title><rect x="1151.5" y="83.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (161 samples, 0.05%)</title><rect x="1151.5" y="67.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1154.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (531 samples, 0.16%)</title><rect x="1152.1" y="147.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (531 samples, 0.16%)</title><rect x="1152.1" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (531 samples, 0.16%)</title><rect x="1152.1" y="115.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (531 samples, 0.16%)</title><rect x="1152.1" y="99.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (531 samples, 0.16%)</title><rect x="1152.1" y="83.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.1" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (531 samples, 0.16%)</title><rect x="1152.1" y="67.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1155.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (798 samples, 0.24%)</title><rect x="1153.9" y="275.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (798 samples, 0.24%)</title><rect x="1153.9" y="259.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (798 samples, 0.24%)</title><rect x="1153.9" y="243.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.9" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (356 samples, 0.11%)</title><rect x="1153.9" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (356 samples, 0.11%)</title><rect x="1153.9" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (356 samples, 0.11%)</title><rect x="1153.9" y="195.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (356 samples, 0.11%)</title><rect x="1153.9" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (356 samples, 0.11%)</title><rect x="1153.9" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (356 samples, 0.11%)</title><rect x="1153.9" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1156.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (356 samples, 0.11%)</title><rect x="1153.9" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (356 samples, 0.11%)</title><rect x="1153.9" y="115.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (356 samples, 0.11%)</title><rect x="1153.9" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (356 samples, 0.11%)</title><rect x="1153.9" y="83.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.9" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (356 samples, 0.11%)</title><rect x="1153.9" y="67.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1156.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (442 samples, 0.13%)</title><rect x="1155.2" y="227.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (442 samples, 0.13%)</title><rect x="1155.2" y="211.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (442 samples, 0.13%)</title><rect x="1155.2" y="195.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (442 samples, 0.13%)</title><rect x="1155.2" y="179.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (442 samples, 0.13%)</title><rect x="1155.2" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (442 samples, 0.13%)</title><rect x="1155.2" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (172 samples, 0.05%)</title><rect x="1155.2" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (172 samples, 0.05%)</title><rect x="1155.2" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (172 samples, 0.05%)</title><rect x="1155.2" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (172 samples, 0.05%)</title><rect x="1155.2" y="83.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (132 samples, 0.04%)</title><rect x="1155.2" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (270 samples, 0.08%)</title><rect x="1155.8" y="131.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (270 samples, 0.08%)</title><rect x="1155.8" y="115.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (270 samples, 0.08%)</title><rect x="1155.8" y="99.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (270 samples, 0.08%)</title><rect x="1155.8" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (270 samples, 0.08%)</title><rect x="1155.8" y="67.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (270 samples, 0.08%)</title><rect x="1155.8" y="51.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1158.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9,175 samples, 2.74%)</title><rect x="1156.7" y="291.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.7" y="302.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (209 samples, 0.06%)</title><rect x="1156.7" y="275.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1159.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="1157.5" y="275.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.5" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="1157.5" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="1157.5" y="243.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="1157.5" y="227.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.02%)</title><rect x="1157.5" y="211.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.02%)</title><rect x="1157.5" y="195.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1160.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (377 samples, 0.11%)</title><rect x="1157.8" y="275.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (136 samples, 0.04%)</title><rect x="1157.8" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (114 samples, 0.03%)</title><rect x="1157.8" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (96 samples, 0.03%)</title><rect x="1157.9" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (241 samples, 0.07%)</title><rect x="1158.3" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (123 samples, 0.04%)</title><rect x="1158.7" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (8,493 samples, 2.53%)</title><rect x="1159.1" y="275.0" width="29.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.1" y="286.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.SSTable$1 (127 samples, 0.04%)</title><rect x="1159.1" y="259.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1162.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (8,366 samples, 2.49%)</title><rect x="1159.6" y="259.0" width="29.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (8,366 samples, 2.49%)</title><rect x="1159.6" y="243.0" width="29.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.6" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (8,366 samples, 2.49%)</title><rect x="1159.6" y="227.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.6" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,192 samples, 1.25%)</title><rect x="1159.6" y="211.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.6" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,192 samples, 1.25%)</title><rect x="1159.6" y="195.0" width="14.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1162.6" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,174 samples, 1.24%)</title><rect x="1174.3" y="211.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.3" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,174 samples, 1.24%)</title><rect x="1174.3" y="195.0" width="14.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1177.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (78 samples, 0.02%)</title><rect x="1189.0" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (78 samples, 0.02%)</title><rect x="1189.0" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (78 samples, 0.02%)</title><rect x="1189.0" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.02%)</title><rect x="1189.0" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1192.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (206 samples, 0.06%)</title><rect x="1189.3" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (80 samples, 0.02%)</title><rect x="1189.3" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1114155645.invoke (80 samples, 0.02%)</title><rect x="1189.3" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.02%)</title><rect x="1189.3" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (106 samples, 0.03%)</title><rect x="1189.6" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.6" y="334.0"></text>
</g>
</g>
</svg>
