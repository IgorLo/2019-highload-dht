<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (90,545 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32103] (36,075 samples, 39.84%)</title><rect x="10.0" y="355.0" width="470.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="366.0">[NIO Selector #0 tid=32103]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (36,075 samples, 39.84%)</title><rect x="10.0" y="339.0" width="470.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (36,075 samples, 39.84%)</title><rect x="10.0" y="323.0" width="470.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (591 samples, 0.65%)</title><rect x="10.0" y="307.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (591 samples, 0.65%)</title><rect x="10.0" y="291.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (591 samples, 0.65%)</title><rect x="10.0" y="275.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (591 samples, 0.65%)</title><rect x="10.0" y="259.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (591 samples, 0.65%)</title><rect x="10.0" y="243.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (591 samples, 0.65%)</title><rect x="10.0" y="227.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (591 samples, 0.65%)</title><rect x="10.0" y="211.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (591 samples, 0.65%)</title><rect x="10.0" y="195.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (591 samples, 0.65%)</title><rect x="10.0" y="179.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (587 samples, 0.65%)</title><rect x="10.0" y="163.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (587 samples, 0.65%)</title><rect x="10.0" y="147.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (587 samples, 0.65%)</title><rect x="10.0" y="131.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (587 samples, 0.65%)</title><rect x="10.0" y="115.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (587 samples, 0.65%)</title><rect x="10.0" y="99.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (587 samples, 0.65%)</title><rect x="10.0" y="83.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (587 samples, 0.65%)</title><rect x="10.0" y="67.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (587 samples, 0.65%)</title><rect x="10.0" y="51.0" width="7.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (35,484 samples, 39.19%)</title><rect x="17.7" y="307.0" width="462.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.7" y="318.0">ru.mail.polis.service.igorlo.StorageSession</text>
</g>
<g>
<title>[NIO Selector #0 tid=32114] (142 samples, 0.16%)</title><rect x="480.1" y="355.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="483.1" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (142 samples, 0.16%)</title><rect x="480.1" y="339.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (142 samples, 0.16%)</title><rect x="480.1" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (42 samples, 0.05%)</title><rect x="480.1" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 0.05%)</title><rect x="480.1" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 0.05%)</title><rect x="480.1" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 0.05%)</title><rect x="480.1" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.1" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (42 samples, 0.05%)</title><rect x="480.1" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (42 samples, 0.05%)</title><rect x="480.1" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (42 samples, 0.05%)</title><rect x="480.1" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (42 samples, 0.05%)</title><rect x="480.1" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.05%)</title><rect x="480.1" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.05%)</title><rect x="480.1" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.04%)</title><rect x="480.1" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.04%)</title><rect x="480.1" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.04%)</title><rect x="480.1" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.04%)</title><rect x="480.1" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.04%)</title><rect x="480.1" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.04%)</title><rect x="480.1" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.04%)</title><rect x="480.1" y="51.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.04%)</title><rect x="480.1" y="35.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="483.1" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (100 samples, 0.11%)</title><rect x="480.7" y="307.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="483.7" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32121] (116 samples, 0.13%)</title><rect x="482.0" y="355.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="485.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (116 samples, 0.13%)</title><rect x="482.0" y="339.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (116 samples, 0.13%)</title><rect x="482.0" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 0.06%)</title><rect x="482.0" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (54 samples, 0.06%)</title><rect x="482.0" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54 samples, 0.06%)</title><rect x="482.0" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54 samples, 0.06%)</title><rect x="482.0" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (54 samples, 0.06%)</title><rect x="482.0" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (54 samples, 0.06%)</title><rect x="482.0" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (54 samples, 0.06%)</title><rect x="482.0" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (54 samples, 0.06%)</title><rect x="482.0" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 0.06%)</title><rect x="482.0" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (54 samples, 0.06%)</title><rect x="482.0" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (46 samples, 0.05%)</title><rect x="482.0" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (46 samples, 0.05%)</title><rect x="482.0" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (46 samples, 0.05%)</title><rect x="482.0" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (46 samples, 0.05%)</title><rect x="482.0" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (46 samples, 0.05%)</title><rect x="482.0" y="83.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.05%)</title><rect x="482.0" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.05%)</title><rect x="482.0" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (46 samples, 0.05%)</title><rect x="482.0" y="35.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="485.0" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (62 samples, 0.07%)</title><rect x="482.7" y="307.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="485.7" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32104] (18,352 samples, 20.27%)</title><rect x="483.5" y="355.0" width="239.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="486.5" y="366.0">[NIO Selector #1 tid=32104]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18,352 samples, 20.27%)</title><rect x="483.5" y="339.0" width="239.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.5" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (18,352 samples, 20.27%)</title><rect x="483.5" y="323.0" width="239.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.5" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (355 samples, 0.39%)</title><rect x="483.5" y="307.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (355 samples, 0.39%)</title><rect x="483.5" y="291.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (355 samples, 0.39%)</title><rect x="483.5" y="275.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (355 samples, 0.39%)</title><rect x="483.5" y="259.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.5" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (355 samples, 0.39%)</title><rect x="483.5" y="243.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (355 samples, 0.39%)</title><rect x="483.5" y="227.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (355 samples, 0.39%)</title><rect x="483.5" y="211.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (355 samples, 0.39%)</title><rect x="483.5" y="195.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (355 samples, 0.39%)</title><rect x="483.5" y="179.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (348 samples, 0.38%)</title><rect x="483.5" y="163.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (348 samples, 0.38%)</title><rect x="483.5" y="147.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (348 samples, 0.38%)</title><rect x="483.5" y="131.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (348 samples, 0.38%)</title><rect x="483.5" y="115.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (348 samples, 0.38%)</title><rect x="483.5" y="99.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (348 samples, 0.38%)</title><rect x="483.5" y="83.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (348 samples, 0.38%)</title><rect x="483.5" y="67.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (348 samples, 0.38%)</title><rect x="483.5" y="51.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="486.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (17,997 samples, 19.88%)</title><rect x="488.1" y="307.0" width="234.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="491.1" y="318.0">ru.mail.polis.service.igorlo.St..</text>
</g>
<g>
<title>[NIO Selector #1 tid=32122] (136 samples, 0.15%)</title><rect x="722.7" y="355.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (136 samples, 0.15%)</title><rect x="722.7" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (136 samples, 0.15%)</title><rect x="722.7" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50 samples, 0.06%)</title><rect x="722.7" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (50 samples, 0.06%)</title><rect x="722.7" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50 samples, 0.06%)</title><rect x="722.7" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (50 samples, 0.06%)</title><rect x="722.7" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.7" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (50 samples, 0.06%)</title><rect x="722.7" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (50 samples, 0.06%)</title><rect x="722.7" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (50 samples, 0.06%)</title><rect x="722.7" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (50 samples, 0.06%)</title><rect x="722.7" y="195.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (50 samples, 0.06%)</title><rect x="722.7" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (50 samples, 0.06%)</title><rect x="722.7" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (42 samples, 0.05%)</title><rect x="722.7" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (42 samples, 0.05%)</title><rect x="722.7" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (42 samples, 0.05%)</title><rect x="722.7" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (42 samples, 0.05%)</title><rect x="722.7" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (42 samples, 0.05%)</title><rect x="722.7" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.05%)</title><rect x="722.7" y="67.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.05%)</title><rect x="722.7" y="51.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (42 samples, 0.05%)</title><rect x="722.7" y="35.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="725.7" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (86 samples, 0.09%)</title><rect x="723.3" y="307.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="726.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32116] (304 samples, 0.34%)</title><rect x="724.4" y="355.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="727.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (304 samples, 0.34%)</title><rect x="724.4" y="339.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (304 samples, 0.34%)</title><rect x="724.4" y="323.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (115 samples, 0.13%)</title><rect x="724.4" y="307.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (115 samples, 0.13%)</title><rect x="724.4" y="291.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (115 samples, 0.13%)</title><rect x="724.4" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 0.13%)</title><rect x="724.4" y="259.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (115 samples, 0.13%)</title><rect x="724.4" y="243.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (115 samples, 0.13%)</title><rect x="724.4" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (115 samples, 0.13%)</title><rect x="724.4" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (115 samples, 0.13%)</title><rect x="724.4" y="195.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (115 samples, 0.13%)</title><rect x="724.4" y="179.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (115 samples, 0.13%)</title><rect x="724.4" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (109 samples, 0.12%)</title><rect x="724.4" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (109 samples, 0.12%)</title><rect x="724.4" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (109 samples, 0.12%)</title><rect x="724.4" y="115.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (109 samples, 0.12%)</title><rect x="724.4" y="99.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (109 samples, 0.12%)</title><rect x="724.4" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (109 samples, 0.12%)</title><rect x="724.4" y="67.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (109 samples, 0.12%)</title><rect x="724.4" y="51.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (109 samples, 0.12%)</title><rect x="724.4" y="35.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="727.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (189 samples, 0.21%)</title><rect x="725.9" y="307.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32106] (19,871 samples, 21.95%)</title><rect x="728.4" y="355.0" width="259.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="731.4" y="366.0">[NIO Selector #3 tid=32106]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,871 samples, 21.95%)</title><rect x="728.4" y="339.0" width="259.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.4" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (19,871 samples, 21.95%)</title><rect x="728.4" y="323.0" width="259.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.4" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (365 samples, 0.40%)</title><rect x="728.4" y="307.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (365 samples, 0.40%)</title><rect x="728.4" y="291.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (365 samples, 0.40%)</title><rect x="728.4" y="275.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (365 samples, 0.40%)</title><rect x="728.4" y="259.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (365 samples, 0.40%)</title><rect x="728.4" y="243.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (365 samples, 0.40%)</title><rect x="728.4" y="227.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (365 samples, 0.40%)</title><rect x="728.4" y="211.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (365 samples, 0.40%)</title><rect x="728.4" y="195.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (365 samples, 0.40%)</title><rect x="728.4" y="179.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (353 samples, 0.39%)</title><rect x="728.4" y="163.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (353 samples, 0.39%)</title><rect x="728.4" y="147.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (353 samples, 0.39%)</title><rect x="728.4" y="131.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (353 samples, 0.39%)</title><rect x="728.4" y="115.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (353 samples, 0.39%)</title><rect x="728.4" y="99.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (353 samples, 0.39%)</title><rect x="728.4" y="83.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (353 samples, 0.39%)</title><rect x="728.4" y="67.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (353 samples, 0.39%)</title><rect x="728.4" y="51.0" width="4.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="731.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (19,506 samples, 21.54%)</title><rect x="733.2" y="307.0" width="254.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="736.2" y="318.0">ru.mail.polis.service.igorlo.Stora..</text>
</g>
<g>
<title>[NIO Selector #3 tid=32117] (126 samples, 0.14%)</title><rect x="987.4" y="355.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="990.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (126 samples, 0.14%)</title><rect x="987.4" y="339.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (126 samples, 0.14%)</title><rect x="987.4" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="990.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43 samples, 0.05%)</title><rect x="987.4" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 0.05%)</title><rect x="987.4" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (43 samples, 0.05%)</title><rect x="987.4" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (43 samples, 0.05%)</title><rect x="987.4" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (43 samples, 0.05%)</title><rect x="987.4" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (43 samples, 0.05%)</title><rect x="987.4" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (43 samples, 0.05%)</title><rect x="987.4" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (43 samples, 0.05%)</title><rect x="987.4" y="195.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (43 samples, 0.05%)</title><rect x="987.4" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (43 samples, 0.05%)</title><rect x="987.4" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (40 samples, 0.04%)</title><rect x="987.4" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (40 samples, 0.04%)</title><rect x="987.4" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (40 samples, 0.04%)</title><rect x="987.4" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (40 samples, 0.04%)</title><rect x="987.4" y="99.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.04%)</title><rect x="987.4" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.04%)</title><rect x="987.4" y="67.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.04%)</title><rect x="987.4" y="51.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (40 samples, 0.04%)</title><rect x="987.4" y="35.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="990.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (83 samples, 0.09%)</title><rect x="987.9" y="307.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="990.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32124] (232 samples, 0.26%)</title><rect x="989.0" y="355.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="992.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (232 samples, 0.26%)</title><rect x="989.0" y="339.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (232 samples, 0.26%)</title><rect x="989.0" y="323.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (111 samples, 0.12%)</title><rect x="989.0" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (111 samples, 0.12%)</title><rect x="989.0" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (111 samples, 0.12%)</title><rect x="989.0" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (111 samples, 0.12%)</title><rect x="989.0" y="259.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (111 samples, 0.12%)</title><rect x="989.0" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (111 samples, 0.12%)</title><rect x="989.0" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeDelete (111 samples, 0.12%)</title><rect x="989.0" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (111 samples, 0.12%)</title><rect x="989.0" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (111 samples, 0.12%)</title><rect x="989.0" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (111 samples, 0.12%)</title><rect x="989.0" y="163.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (101 samples, 0.11%)</title><rect x="989.0" y="147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (101 samples, 0.11%)</title><rect x="989.0" y="131.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (101 samples, 0.11%)</title><rect x="989.0" y="115.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (101 samples, 0.11%)</title><rect x="989.0" y="99.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (101 samples, 0.11%)</title><rect x="989.0" y="83.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 0.11%)</title><rect x="989.0" y="67.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 0.11%)</title><rect x="989.0" y="51.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (101 samples, 0.11%)</title><rect x="989.0" y="35.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="992.0" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (121 samples, 0.13%)</title><rect x="990.5" y="307.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="993.5" y="318.0"></text>
</g>
<g>
<title>[asyncWorker tid=32182] (1,756 samples, 1.94%)</title><rect x="992.0" y="355.0" width="22.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="995.0" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,756 samples, 1.94%)</title><rect x="992.0" y="339.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.0" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,756 samples, 1.94%)</title><rect x="992.0" y="323.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,756 samples, 1.94%)</title><rect x="992.0" y="307.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,053 samples, 1.16%)</title><rect x="992.0" y="291.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,053 samples, 1.16%)</title><rect x="992.0" y="275.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (240 samples, 0.27%)</title><rect x="992.0" y="259.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (240 samples, 0.27%)</title><rect x="992.0" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (240 samples, 0.27%)</title><rect x="992.0" y="227.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (240 samples, 0.27%)</title><rect x="992.0" y="211.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (240 samples, 0.27%)</title><rect x="992.0" y="195.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (240 samples, 0.27%)</title><rect x="992.0" y="179.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="995.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (813 samples, 0.90%)</title><rect x="995.2" y="259.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (813 samples, 0.90%)</title><rect x="995.2" y="243.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (813 samples, 0.90%)</title><rect x="995.2" y="227.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (813 samples, 0.90%)</title><rect x="995.2" y="211.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (813 samples, 0.90%)</title><rect x="995.2" y="195.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (813 samples, 0.90%)</title><rect x="995.2" y="179.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (813 samples, 0.90%)</title><rect x="995.2" y="163.0" width="10.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="998.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$95/76133413.run (703 samples, 0.78%)</title><rect x="1005.8" y="291.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$14 (703 samples, 0.78%)</title><rect x="1005.8" y="275.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (690 samples, 0.76%)</title><rect x="1005.9" y="259.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$99/1623949071.action (112 samples, 0.12%)</title><rect x="1005.9" y="243.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$12 (112 samples, 0.12%)</title><rect x="1005.9" y="227.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (112 samples, 0.12%)</title><rect x="1005.9" y="211.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (112 samples, 0.12%)</title><rect x="1005.9" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (112 samples, 0.12%)</title><rect x="1005.9" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (112 samples, 0.12%)</title><rect x="1005.9" y="163.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (112 samples, 0.12%)</title><rect x="1005.9" y="147.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (112 samples, 0.12%)</title><rect x="1005.9" y="131.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (112 samples, 0.12%)</title><rect x="1005.9" y="115.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1008.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (578 samples, 0.64%)</title><rect x="1007.4" y="243.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (578 samples, 0.64%)</title><rect x="1007.4" y="227.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (578 samples, 0.64%)</title><rect x="1007.4" y="211.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.4" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (316 samples, 0.35%)</title><rect x="1007.4" y="195.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.4" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (316 samples, 0.35%)</title><rect x="1007.4" y="179.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1010.4" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (262 samples, 0.29%)</title><rect x="1011.5" y="195.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.5" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (262 samples, 0.29%)</title><rect x="1011.5" y="179.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1014.5" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32183] (1,691 samples, 1.87%)</title><rect x="1014.9" y="355.0" width="22.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1017.9" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,691 samples, 1.87%)</title><rect x="1014.9" y="339.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.9" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,691 samples, 1.87%)</title><rect x="1014.9" y="323.0" width="22.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.9" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,691 samples, 1.87%)</title><rect x="1014.9" y="307.0" width="22.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (993 samples, 1.10%)</title><rect x="1014.9" y="291.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (993 samples, 1.10%)</title><rect x="1014.9" y="275.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (242 samples, 0.27%)</title><rect x="1014.9" y="259.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (242 samples, 0.27%)</title><rect x="1014.9" y="243.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (242 samples, 0.27%)</title><rect x="1014.9" y="227.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (242 samples, 0.27%)</title><rect x="1014.9" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (242 samples, 0.27%)</title><rect x="1014.9" y="195.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (242 samples, 0.27%)</title><rect x="1014.9" y="179.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1017.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (751 samples, 0.83%)</title><rect x="1018.1" y="259.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (751 samples, 0.83%)</title><rect x="1018.1" y="243.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (751 samples, 0.83%)</title><rect x="1018.1" y="227.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (751 samples, 0.83%)</title><rect x="1018.1" y="211.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (751 samples, 0.83%)</title><rect x="1018.1" y="195.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (751 samples, 0.83%)</title><rect x="1018.1" y="179.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (751 samples, 0.83%)</title><rect x="1018.1" y="163.0" width="9.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1021.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$95/76133413.run (698 samples, 0.77%)</title><rect x="1027.9" y="291.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$14 (698 samples, 0.77%)</title><rect x="1027.9" y="275.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (692 samples, 0.76%)</title><rect x="1027.9" y="259.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$99/1623949071.action (123 samples, 0.14%)</title><rect x="1027.9" y="243.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$12 (123 samples, 0.14%)</title><rect x="1027.9" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (123 samples, 0.14%)</title><rect x="1027.9" y="211.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (123 samples, 0.14%)</title><rect x="1027.9" y="195.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (123 samples, 0.14%)</title><rect x="1027.9" y="179.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (123 samples, 0.14%)</title><rect x="1027.9" y="163.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (123 samples, 0.14%)</title><rect x="1027.9" y="147.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (123 samples, 0.14%)</title><rect x="1027.9" y="131.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (123 samples, 0.14%)</title><rect x="1027.9" y="115.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1030.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (569 samples, 0.63%)</title><rect x="1029.5" y="243.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 0.63%)</title><rect x="1029.5" y="227.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 0.63%)</title><rect x="1029.5" y="211.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.5" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (291 samples, 0.32%)</title><rect x="1029.5" y="195.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.5" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (291 samples, 0.32%)</title><rect x="1029.5" y="179.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1032.5" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (278 samples, 0.31%)</title><rect x="1033.3" y="195.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (278 samples, 0.31%)</title><rect x="1033.3" y="179.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1036.3" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32184] (1,699 samples, 1.88%)</title><rect x="1036.9" y="355.0" width="22.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1039.9" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,699 samples, 1.88%)</title><rect x="1036.9" y="339.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.9" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,699 samples, 1.88%)</title><rect x="1036.9" y="323.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.9" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,699 samples, 1.88%)</title><rect x="1036.9" y="307.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (998 samples, 1.10%)</title><rect x="1036.9" y="291.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (998 samples, 1.10%)</title><rect x="1036.9" y="275.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (262 samples, 0.29%)</title><rect x="1036.9" y="259.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (262 samples, 0.29%)</title><rect x="1036.9" y="243.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (262 samples, 0.29%)</title><rect x="1036.9" y="227.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (262 samples, 0.29%)</title><rect x="1036.9" y="211.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (262 samples, 0.29%)</title><rect x="1036.9" y="195.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (262 samples, 0.29%)</title><rect x="1036.9" y="179.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1039.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (736 samples, 0.81%)</title><rect x="1040.4" y="259.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (736 samples, 0.81%)</title><rect x="1040.4" y="243.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (736 samples, 0.81%)</title><rect x="1040.4" y="227.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (736 samples, 0.81%)</title><rect x="1040.4" y="211.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (736 samples, 0.81%)</title><rect x="1040.4" y="195.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (736 samples, 0.81%)</title><rect x="1040.4" y="179.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (736 samples, 0.81%)</title><rect x="1040.4" y="163.0" width="9.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$95/76133413.run (701 samples, 0.77%)</title><rect x="1050.0" y="291.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$14 (701 samples, 0.77%)</title><rect x="1050.0" y="275.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.acceptReplicas (22 samples, 0.02%)</title><rect x="1050.0" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.02%)</title><rect x="1050.0" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (22 samples, 0.02%)</title><rect x="1050.0" y="227.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1053.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (679 samples, 0.75%)</title><rect x="1050.2" y="259.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$99/1623949071.action (106 samples, 0.12%)</title><rect x="1050.2" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$12 (106 samples, 0.12%)</title><rect x="1050.2" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (106 samples, 0.12%)</title><rect x="1050.2" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (106 samples, 0.12%)</title><rect x="1050.2" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (106 samples, 0.12%)</title><rect x="1050.2" y="179.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (106 samples, 0.12%)</title><rect x="1050.2" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (106 samples, 0.12%)</title><rect x="1050.2" y="147.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (106 samples, 0.12%)</title><rect x="1050.2" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.2" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (106 samples, 0.12%)</title><rect x="1050.2" y="115.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1053.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (573 samples, 0.63%)</title><rect x="1051.6" y="243.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (573 samples, 0.63%)</title><rect x="1051.6" y="227.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (573 samples, 0.63%)</title><rect x="1051.6" y="211.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.6" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (283 samples, 0.31%)</title><rect x="1051.6" y="195.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.6" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (283 samples, 0.31%)</title><rect x="1051.6" y="179.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1054.6" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (290 samples, 0.32%)</title><rect x="1055.3" y="195.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (290 samples, 0.32%)</title><rect x="1055.3" y="179.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1058.3" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32185] (1,698 samples, 1.88%)</title><rect x="1059.1" y="355.0" width="22.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1062.1" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,698 samples, 1.88%)</title><rect x="1059.1" y="339.0" width="22.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,698 samples, 1.88%)</title><rect x="1059.1" y="323.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.1" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,698 samples, 1.88%)</title><rect x="1059.1" y="307.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.1" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (951 samples, 1.05%)</title><rect x="1059.1" y="291.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (951 samples, 1.05%)</title><rect x="1059.1" y="275.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (218 samples, 0.24%)</title><rect x="1059.1" y="259.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (218 samples, 0.24%)</title><rect x="1059.1" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (218 samples, 0.24%)</title><rect x="1059.1" y="227.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (218 samples, 0.24%)</title><rect x="1059.1" y="211.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (218 samples, 0.24%)</title><rect x="1059.1" y="195.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (218 samples, 0.24%)</title><rect x="1059.1" y="179.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1062.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (733 samples, 0.81%)</title><rect x="1061.9" y="259.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (733 samples, 0.81%)</title><rect x="1061.9" y="243.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (733 samples, 0.81%)</title><rect x="1061.9" y="227.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (733 samples, 0.81%)</title><rect x="1061.9" y="211.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (733 samples, 0.81%)</title><rect x="1061.9" y="195.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (733 samples, 0.81%)</title><rect x="1061.9" y="179.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (733 samples, 0.81%)</title><rect x="1061.9" y="163.0" width="9.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1064.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$95/76133413.run (747 samples, 0.83%)</title><rect x="1071.5" y="291.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$14 (747 samples, 0.83%)</title><rect x="1071.5" y="275.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (733 samples, 0.81%)</title><rect x="1071.7" y="259.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$99/1623949071.action (121 samples, 0.13%)</title><rect x="1071.7" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$12 (121 samples, 0.13%)</title><rect x="1071.7" y="227.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (121 samples, 0.13%)</title><rect x="1071.7" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (121 samples, 0.13%)</title><rect x="1071.7" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (121 samples, 0.13%)</title><rect x="1071.7" y="179.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (121 samples, 0.13%)</title><rect x="1071.7" y="163.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (121 samples, 0.13%)</title><rect x="1071.7" y="147.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (121 samples, 0.13%)</title><rect x="1071.7" y="131.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.7" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (121 samples, 0.13%)</title><rect x="1071.7" y="115.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1074.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (612 samples, 0.68%)</title><rect x="1073.2" y="243.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (612 samples, 0.68%)</title><rect x="1073.2" y="227.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (612 samples, 0.68%)</title><rect x="1073.2" y="211.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.2" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (304 samples, 0.34%)</title><rect x="1073.2" y="195.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.2" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (304 samples, 0.34%)</title><rect x="1073.2" y="179.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1076.2" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (308 samples, 0.34%)</title><rect x="1077.2" y="195.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.2" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (308 samples, 0.34%)</title><rect x="1077.2" y="179.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1080.2" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32186] (974 samples, 1.08%)</title><rect x="1081.2" y="355.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1084.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (974 samples, 1.08%)</title><rect x="1081.2" y="339.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (974 samples, 1.08%)</title><rect x="1081.2" y="323.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (974 samples, 1.08%)</title><rect x="1081.2" y="307.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (357 samples, 0.39%)</title><rect x="1081.2" y="291.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (357 samples, 0.39%)</title><rect x="1081.2" y="275.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (84 samples, 0.09%)</title><rect x="1081.2" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (84 samples, 0.09%)</title><rect x="1081.2" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (84 samples, 0.09%)</title><rect x="1081.2" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 0.09%)</title><rect x="1081.2" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 0.09%)</title><rect x="1081.2" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (84 samples, 0.09%)</title><rect x="1081.2" y="179.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1084.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (273 samples, 0.30%)</title><rect x="1082.3" y="259.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (273 samples, 0.30%)</title><rect x="1082.3" y="243.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (273 samples, 0.30%)</title><rect x="1082.3" y="227.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (273 samples, 0.30%)</title><rect x="1082.3" y="211.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (273 samples, 0.30%)</title><rect x="1082.3" y="195.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (273 samples, 0.30%)</title><rect x="1082.3" y="179.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (273 samples, 0.30%)</title><rect x="1082.3" y="163.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1085.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (617 samples, 0.68%)</title><rect x="1085.9" y="291.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (617 samples, 0.68%)</title><rect x="1085.9" y="275.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (458 samples, 0.51%)</title><rect x="1085.9" y="259.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (458 samples, 0.51%)</title><rect x="1085.9" y="243.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1088.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (159 samples, 0.18%)</title><rect x="1091.8" y="259.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (159 samples, 0.18%)</title><rect x="1091.8" y="243.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (159 samples, 0.18%)</title><rect x="1091.8" y="227.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (159 samples, 0.18%)</title><rect x="1091.8" y="211.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (159 samples, 0.18%)</title><rect x="1091.8" y="195.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (159 samples, 0.18%)</title><rect x="1091.8" y="179.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (159 samples, 0.18%)</title><rect x="1091.8" y="163.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (159 samples, 0.18%)</title><rect x="1091.8" y="147.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (159 samples, 0.18%)</title><rect x="1091.8" y="131.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1094.8" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32187] (1,067 samples, 1.18%)</title><rect x="1093.9" y="355.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1096.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,067 samples, 1.18%)</title><rect x="1093.9" y="339.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,067 samples, 1.18%)</title><rect x="1093.9" y="323.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,067 samples, 1.18%)</title><rect x="1093.9" y="307.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (394 samples, 0.44%)</title><rect x="1093.9" y="291.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (394 samples, 0.44%)</title><rect x="1093.9" y="275.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (93 samples, 0.10%)</title><rect x="1093.9" y="259.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (93 samples, 0.10%)</title><rect x="1093.9" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (93 samples, 0.10%)</title><rect x="1093.9" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (93 samples, 0.10%)</title><rect x="1093.9" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (93 samples, 0.10%)</title><rect x="1093.9" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (93 samples, 0.10%)</title><rect x="1093.9" y="179.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1096.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (301 samples, 0.33%)</title><rect x="1095.1" y="259.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (301 samples, 0.33%)</title><rect x="1095.1" y="243.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (301 samples, 0.33%)</title><rect x="1095.1" y="227.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (301 samples, 0.33%)</title><rect x="1095.1" y="211.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (301 samples, 0.33%)</title><rect x="1095.1" y="195.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (301 samples, 0.33%)</title><rect x="1095.1" y="179.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (301 samples, 0.33%)</title><rect x="1095.1" y="163.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1098.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (673 samples, 0.74%)</title><rect x="1099.0" y="291.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (673 samples, 0.74%)</title><rect x="1099.0" y="275.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (520 samples, 0.57%)</title><rect x="1099.0" y="259.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (520 samples, 0.57%)</title><rect x="1099.0" y="243.0" width="6.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1102.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (153 samples, 0.17%)</title><rect x="1105.8" y="259.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (153 samples, 0.17%)</title><rect x="1105.8" y="243.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1108.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (153 samples, 0.17%)</title><rect x="1105.8" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (153 samples, 0.17%)</title><rect x="1105.8" y="211.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (153 samples, 0.17%)</title><rect x="1105.8" y="195.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (153 samples, 0.17%)</title><rect x="1105.8" y="179.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (153 samples, 0.17%)</title><rect x="1105.8" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (153 samples, 0.17%)</title><rect x="1105.8" y="147.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (153 samples, 0.17%)</title><rect x="1105.8" y="131.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1108.8" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32188] (1,014 samples, 1.12%)</title><rect x="1107.8" y="355.0" width="13.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1110.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,014 samples, 1.12%)</title><rect x="1107.8" y="339.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,014 samples, 1.12%)</title><rect x="1107.8" y="323.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,014 samples, 1.12%)</title><rect x="1107.8" y="307.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (459 samples, 0.51%)</title><rect x="1107.8" y="291.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (459 samples, 0.51%)</title><rect x="1107.8" y="275.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (113 samples, 0.12%)</title><rect x="1107.8" y="259.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (113 samples, 0.12%)</title><rect x="1107.8" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (113 samples, 0.12%)</title><rect x="1107.8" y="227.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (113 samples, 0.12%)</title><rect x="1107.8" y="211.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (113 samples, 0.12%)</title><rect x="1107.8" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (113 samples, 0.12%)</title><rect x="1107.8" y="179.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1110.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (346 samples, 0.38%)</title><rect x="1109.3" y="259.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (346 samples, 0.38%)</title><rect x="1109.3" y="243.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (346 samples, 0.38%)</title><rect x="1109.3" y="227.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (346 samples, 0.38%)</title><rect x="1109.3" y="211.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (346 samples, 0.38%)</title><rect x="1109.3" y="195.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (346 samples, 0.38%)</title><rect x="1109.3" y="179.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (346 samples, 0.38%)</title><rect x="1109.3" y="163.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1112.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (555 samples, 0.61%)</title><rect x="1113.8" y="291.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1116.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (555 samples, 0.61%)</title><rect x="1113.8" y="275.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (439 samples, 0.48%)</title><rect x="1113.8" y="259.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (439 samples, 0.48%)</title><rect x="1113.8" y="243.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1116.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (116 samples, 0.13%)</title><rect x="1119.5" y="259.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (116 samples, 0.13%)</title><rect x="1119.5" y="243.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (116 samples, 0.13%)</title><rect x="1119.5" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (116 samples, 0.13%)</title><rect x="1119.5" y="211.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (116 samples, 0.13%)</title><rect x="1119.5" y="195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (116 samples, 0.13%)</title><rect x="1119.5" y="179.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (116 samples, 0.13%)</title><rect x="1119.5" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (116 samples, 0.13%)</title><rect x="1119.5" y="147.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (116 samples, 0.13%)</title><rect x="1119.5" y="131.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1122.5" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32189] (1,074 samples, 1.19%)</title><rect x="1121.0" y="355.0" width="14.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1124.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,074 samples, 1.19%)</title><rect x="1121.0" y="339.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,074 samples, 1.19%)</title><rect x="1121.0" y="323.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,074 samples, 1.19%)</title><rect x="1121.0" y="307.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (423 samples, 0.47%)</title><rect x="1121.0" y="291.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (423 samples, 0.47%)</title><rect x="1121.0" y="275.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (104 samples, 0.11%)</title><rect x="1121.0" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (104 samples, 0.11%)</title><rect x="1121.0" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (104 samples, 0.11%)</title><rect x="1121.0" y="227.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (104 samples, 0.11%)</title><rect x="1121.0" y="211.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (104 samples, 0.11%)</title><rect x="1121.0" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (104 samples, 0.11%)</title><rect x="1121.0" y="179.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1124.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (319 samples, 0.35%)</title><rect x="1122.4" y="259.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (319 samples, 0.35%)</title><rect x="1122.4" y="243.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (319 samples, 0.35%)</title><rect x="1122.4" y="227.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (319 samples, 0.35%)</title><rect x="1122.4" y="211.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (319 samples, 0.35%)</title><rect x="1122.4" y="195.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (319 samples, 0.35%)</title><rect x="1122.4" y="179.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (319 samples, 0.35%)</title><rect x="1122.4" y="163.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1125.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (651 samples, 0.72%)</title><rect x="1126.5" y="291.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (651 samples, 0.72%)</title><rect x="1126.5" y="275.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (479 samples, 0.53%)</title><rect x="1126.5" y="259.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (479 samples, 0.53%)</title><rect x="1126.5" y="243.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1129.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (172 samples, 0.19%)</title><rect x="1132.8" y="259.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (172 samples, 0.19%)</title><rect x="1132.8" y="243.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (172 samples, 0.19%)</title><rect x="1132.8" y="227.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (172 samples, 0.19%)</title><rect x="1132.8" y="211.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (172 samples, 0.19%)</title><rect x="1132.8" y="195.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (172 samples, 0.19%)</title><rect x="1132.8" y="179.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (172 samples, 0.19%)</title><rect x="1132.8" y="163.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (172 samples, 0.19%)</title><rect x="1132.8" y="147.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (172 samples, 0.19%)</title><rect x="1132.8" y="131.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1135.8" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32190] (1,062 samples, 1.17%)</title><rect x="1135.0" y="355.0" width="13.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1138.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,062 samples, 1.17%)</title><rect x="1135.0" y="339.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,062 samples, 1.17%)</title><rect x="1135.0" y="323.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,062 samples, 1.17%)</title><rect x="1135.0" y="307.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (351 samples, 0.39%)</title><rect x="1135.0" y="291.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (351 samples, 0.39%)</title><rect x="1135.0" y="275.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.09%)</title><rect x="1135.0" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.09%)</title><rect x="1135.0" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.09%)</title><rect x="1135.0" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.09%)</title><rect x="1135.0" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.09%)</title><rect x="1135.0" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.09%)</title><rect x="1135.0" y="179.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1138.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (270 samples, 0.30%)</title><rect x="1136.1" y="259.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (270 samples, 0.30%)</title><rect x="1136.1" y="243.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (270 samples, 0.30%)</title><rect x="1136.1" y="227.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (270 samples, 0.30%)</title><rect x="1136.1" y="211.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (270 samples, 0.30%)</title><rect x="1136.1" y="195.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (270 samples, 0.30%)</title><rect x="1136.1" y="179.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (270 samples, 0.30%)</title><rect x="1136.1" y="163.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1139.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (711 samples, 0.79%)</title><rect x="1139.6" y="291.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (711 samples, 0.79%)</title><rect x="1139.6" y="275.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (555 samples, 0.61%)</title><rect x="1139.6" y="259.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (555 samples, 0.61%)</title><rect x="1139.6" y="243.0" width="7.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1142.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (156 samples, 0.17%)</title><rect x="1146.8" y="259.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (156 samples, 0.17%)</title><rect x="1146.8" y="243.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (156 samples, 0.17%)</title><rect x="1146.8" y="227.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (156 samples, 0.17%)</title><rect x="1146.8" y="211.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (156 samples, 0.17%)</title><rect x="1146.8" y="195.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (156 samples, 0.17%)</title><rect x="1146.8" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (156 samples, 0.17%)</title><rect x="1146.8" y="163.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (156 samples, 0.17%)</title><rect x="1146.8" y="147.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (156 samples, 0.17%)</title><rect x="1146.8" y="131.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1149.8" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32191] (1,055 samples, 1.17%)</title><rect x="1148.9" y="355.0" width="13.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1151.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,055 samples, 1.17%)</title><rect x="1148.9" y="339.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,055 samples, 1.17%)</title><rect x="1148.9" y="323.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,055 samples, 1.17%)</title><rect x="1148.9" y="307.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (474 samples, 0.52%)</title><rect x="1148.9" y="291.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (474 samples, 0.52%)</title><rect x="1148.9" y="275.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (123 samples, 0.14%)</title><rect x="1148.9" y="259.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (123 samples, 0.14%)</title><rect x="1148.9" y="243.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (123 samples, 0.14%)</title><rect x="1148.9" y="227.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (123 samples, 0.14%)</title><rect x="1148.9" y="211.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1151.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (123 samples, 0.14%)</title><rect x="1148.9" y="195.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (123 samples, 0.14%)</title><rect x="1148.9" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1151.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (351 samples, 0.39%)</title><rect x="1150.5" y="259.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (351 samples, 0.39%)</title><rect x="1150.5" y="243.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (351 samples, 0.39%)</title><rect x="1150.5" y="227.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (351 samples, 0.39%)</title><rect x="1150.5" y="211.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (351 samples, 0.39%)</title><rect x="1150.5" y="195.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (351 samples, 0.39%)</title><rect x="1150.5" y="179.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (351 samples, 0.39%)</title><rect x="1150.5" y="163.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1153.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (581 samples, 0.64%)</title><rect x="1155.0" y="291.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (581 samples, 0.64%)</title><rect x="1155.0" y="275.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (464 samples, 0.51%)</title><rect x="1155.0" y="259.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (464 samples, 0.51%)</title><rect x="1155.0" y="243.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1158.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (117 samples, 0.13%)</title><rect x="1161.1" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (117 samples, 0.13%)</title><rect x="1161.1" y="243.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (117 samples, 0.13%)</title><rect x="1161.1" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (117 samples, 0.13%)</title><rect x="1161.1" y="211.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (117 samples, 0.13%)</title><rect x="1161.1" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (117 samples, 0.13%)</title><rect x="1161.1" y="179.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (117 samples, 0.13%)</title><rect x="1161.1" y="163.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (117 samples, 0.13%)</title><rect x="1161.1" y="147.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (117 samples, 0.13%)</title><rect x="1161.1" y="131.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1164.1" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32192] (1,055 samples, 1.17%)</title><rect x="1162.6" y="355.0" width="13.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1165.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,055 samples, 1.17%)</title><rect x="1162.6" y="339.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,055 samples, 1.17%)</title><rect x="1162.6" y="323.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,055 samples, 1.17%)</title><rect x="1162.6" y="307.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (466 samples, 0.51%)</title><rect x="1162.6" y="291.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (466 samples, 0.51%)</title><rect x="1162.6" y="275.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 0.13%)</title><rect x="1162.6" y="259.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (118 samples, 0.13%)</title><rect x="1162.6" y="243.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (118 samples, 0.13%)</title><rect x="1162.6" y="227.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (118 samples, 0.13%)</title><rect x="1162.6" y="211.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (118 samples, 0.13%)</title><rect x="1162.6" y="195.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (118 samples, 0.13%)</title><rect x="1162.6" y="179.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1165.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (348 samples, 0.38%)</title><rect x="1164.2" y="259.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (348 samples, 0.38%)</title><rect x="1164.2" y="243.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (348 samples, 0.38%)</title><rect x="1164.2" y="227.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (348 samples, 0.38%)</title><rect x="1164.2" y="211.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (348 samples, 0.38%)</title><rect x="1164.2" y="195.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (348 samples, 0.38%)</title><rect x="1164.2" y="179.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (348 samples, 0.38%)</title><rect x="1164.2" y="163.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1167.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (589 samples, 0.65%)</title><rect x="1168.7" y="291.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (589 samples, 0.65%)</title><rect x="1168.7" y="275.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (475 samples, 0.52%)</title><rect x="1168.7" y="259.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (475 samples, 0.52%)</title><rect x="1168.7" y="243.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1171.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (114 samples, 0.13%)</title><rect x="1174.9" y="259.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (114 samples, 0.13%)</title><rect x="1174.9" y="243.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (114 samples, 0.13%)</title><rect x="1174.9" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (114 samples, 0.13%)</title><rect x="1174.9" y="211.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (114 samples, 0.13%)</title><rect x="1174.9" y="195.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (114 samples, 0.13%)</title><rect x="1174.9" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (114 samples, 0.13%)</title><rect x="1174.9" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (114 samples, 0.13%)</title><rect x="1174.9" y="147.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (114 samples, 0.13%)</title><rect x="1174.9" y="131.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1177.9" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32193] (1,046 samples, 1.16%)</title><rect x="1176.4" y="355.0" width="13.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1179.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,046 samples, 1.16%)</title><rect x="1176.4" y="339.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,046 samples, 1.16%)</title><rect x="1176.4" y="323.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,046 samples, 1.16%)</title><rect x="1176.4" y="307.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (492 samples, 0.54%)</title><rect x="1176.4" y="291.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (492 samples, 0.54%)</title><rect x="1176.4" y="275.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (121 samples, 0.13%)</title><rect x="1176.4" y="259.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (121 samples, 0.13%)</title><rect x="1176.4" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (121 samples, 0.13%)</title><rect x="1176.4" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (121 samples, 0.13%)</title><rect x="1176.4" y="211.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (121 samples, 0.13%)</title><rect x="1176.4" y="195.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (121 samples, 0.13%)</title><rect x="1176.4" y="179.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1179.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (371 samples, 0.41%)</title><rect x="1177.9" y="259.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (371 samples, 0.41%)</title><rect x="1177.9" y="243.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (371 samples, 0.41%)</title><rect x="1177.9" y="227.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (371 samples, 0.41%)</title><rect x="1177.9" y="211.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (371 samples, 0.41%)</title><rect x="1177.9" y="195.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (371 samples, 0.41%)</title><rect x="1177.9" y="179.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (371 samples, 0.41%)</title><rect x="1177.9" y="163.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1180.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (554 samples, 0.61%)</title><rect x="1182.8" y="291.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (554 samples, 0.61%)</title><rect x="1182.8" y="275.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (427 samples, 0.47%)</title><rect x="1182.8" y="259.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (427 samples, 0.47%)</title><rect x="1182.8" y="243.0" width="5.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1185.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$100/644080283.action (127 samples, 0.14%)</title><rect x="1188.3" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeDelete$11 (127 samples, 0.14%)</title><rect x="1188.3" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.delete (127 samples, 0.14%)</title><rect x="1188.3" y="227.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (127 samples, 0.14%)</title><rect x="1188.3" y="211.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (127 samples, 0.14%)</title><rect x="1188.3" y="195.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (127 samples, 0.14%)</title><rect x="1188.3" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (127 samples, 0.14%)</title><rect x="1188.3" y="163.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (127 samples, 0.14%)</title><rect x="1188.3" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (127 samples, 0.14%)</title><rect x="1188.3" y="131.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1191.3" y="142.0"></text>
</g>
</g>
</svg>
