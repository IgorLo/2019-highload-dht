<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (85,120 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32103] (34,424 samples, 40.44%)</title><rect x="10.0" y="355.0" width="477.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="366.0">[NIO Selector #0 tid=32103]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34,424 samples, 40.44%)</title><rect x="10.0" y="339.0" width="477.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (34,424 samples, 40.44%)</title><rect x="10.0" y="323.0" width="477.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (582 samples, 0.68%)</title><rect x="10.0" y="307.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (582 samples, 0.68%)</title><rect x="10.0" y="291.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (582 samples, 0.68%)</title><rect x="10.0" y="275.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (582 samples, 0.68%)</title><rect x="10.0" y="259.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (582 samples, 0.68%)</title><rect x="10.0" y="243.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (582 samples, 0.68%)</title><rect x="10.0" y="227.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (582 samples, 0.68%)</title><rect x="10.0" y="211.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (582 samples, 0.68%)</title><rect x="10.0" y="195.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (582 samples, 0.68%)</title><rect x="10.0" y="179.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (578 samples, 0.68%)</title><rect x="10.0" y="163.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (578 samples, 0.68%)</title><rect x="10.0" y="147.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (578 samples, 0.68%)</title><rect x="10.0" y="131.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (578 samples, 0.68%)</title><rect x="10.0" y="115.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (578 samples, 0.68%)</title><rect x="10.0" y="99.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (578 samples, 0.68%)</title><rect x="10.0" y="83.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (578 samples, 0.68%)</title><rect x="10.0" y="67.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (578 samples, 0.68%)</title><rect x="10.0" y="51.0" width="8.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (33,842 samples, 39.76%)</title><rect x="18.1" y="307.0" width="469.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="21.1" y="318.0">ru.mail.polis.service.igorlo.StorageSession</text>
</g>
<g>
<title>[NIO Selector #0 tid=32114] (105 samples, 0.12%)</title><rect x="487.2" y="355.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="490.2" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (105 samples, 0.12%)</title><rect x="487.2" y="339.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (105 samples, 0.12%)</title><rect x="487.2" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 0.06%)</title><rect x="487.2" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (54 samples, 0.06%)</title><rect x="487.2" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54 samples, 0.06%)</title><rect x="487.2" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54 samples, 0.06%)</title><rect x="487.2" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.2" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (54 samples, 0.06%)</title><rect x="487.2" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (54 samples, 0.06%)</title><rect x="487.2" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (54 samples, 0.06%)</title><rect x="487.2" y="211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (54 samples, 0.06%)</title><rect x="487.2" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 0.06%)</title><rect x="487.2" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (54 samples, 0.06%)</title><rect x="487.2" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (52 samples, 0.06%)</title><rect x="487.2" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (52 samples, 0.06%)</title><rect x="487.2" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (52 samples, 0.06%)</title><rect x="487.2" y="115.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (52 samples, 0.06%)</title><rect x="487.2" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (52 samples, 0.06%)</title><rect x="487.2" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 0.06%)</title><rect x="487.2" y="67.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 0.06%)</title><rect x="487.2" y="51.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (52 samples, 0.06%)</title><rect x="487.2" y="35.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="490.2" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (51 samples, 0.06%)</title><rect x="488.0" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="491.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32121] (115 samples, 0.14%)</title><rect x="488.7" y="355.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="491.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (115 samples, 0.14%)</title><rect x="488.7" y="339.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (115 samples, 0.14%)</title><rect x="488.7" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (33 samples, 0.04%)</title><rect x="488.7" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (33 samples, 0.04%)</title><rect x="488.7" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.04%)</title><rect x="488.7" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 0.04%)</title><rect x="488.7" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.7" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.04%)</title><rect x="488.7" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (33 samples, 0.04%)</title><rect x="488.7" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (33 samples, 0.04%)</title><rect x="488.7" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (33 samples, 0.04%)</title><rect x="488.7" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.04%)</title><rect x="488.7" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (33 samples, 0.04%)</title><rect x="488.7" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.04%)</title><rect x="488.7" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.04%)</title><rect x="488.7" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.04%)</title><rect x="488.7" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.04%)</title><rect x="488.7" y="99.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.04%)</title><rect x="488.7" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.04%)</title><rect x="488.7" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.04%)</title><rect x="488.7" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.04%)</title><rect x="488.7" y="35.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="491.7" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (82 samples, 0.10%)</title><rect x="489.1" y="307.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="492.1" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32104] (17,976 samples, 21.12%)</title><rect x="490.3" y="355.0" width="249.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="493.3" y="366.0">[NIO Selector #1 tid=32104]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17,976 samples, 21.12%)</title><rect x="490.3" y="339.0" width="249.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (17,976 samples, 21.12%)</title><rect x="490.3" y="323.0" width="249.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.3" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (353 samples, 0.41%)</title><rect x="490.3" y="307.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 0.41%)</title><rect x="490.3" y="291.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (353 samples, 0.41%)</title><rect x="490.3" y="275.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (353 samples, 0.41%)</title><rect x="490.3" y="259.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.3" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (353 samples, 0.41%)</title><rect x="490.3" y="243.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (353 samples, 0.41%)</title><rect x="490.3" y="227.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (353 samples, 0.41%)</title><rect x="490.3" y="211.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (353 samples, 0.41%)</title><rect x="490.3" y="195.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (353 samples, 0.41%)</title><rect x="490.3" y="179.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (339 samples, 0.40%)</title><rect x="490.3" y="163.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (339 samples, 0.40%)</title><rect x="490.3" y="147.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (339 samples, 0.40%)</title><rect x="490.3" y="131.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (339 samples, 0.40%)</title><rect x="490.3" y="115.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (339 samples, 0.40%)</title><rect x="490.3" y="99.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (339 samples, 0.40%)</title><rect x="490.3" y="83.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (339 samples, 0.40%)</title><rect x="490.3" y="67.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (339 samples, 0.40%)</title><rect x="490.3" y="51.0" width="4.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="493.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (17,623 samples, 20.70%)</title><rect x="495.2" y="307.0" width="244.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="498.2" y="318.0">ru.mail.polis.service.igorlo.Sto..</text>
</g>
<g>
<title>[NIO Selector #1 tid=32122] (113 samples, 0.13%)</title><rect x="739.5" y="355.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="742.5" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (113 samples, 0.13%)</title><rect x="739.5" y="339.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (113 samples, 0.13%)</title><rect x="739.5" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (42 samples, 0.05%)</title><rect x="739.5" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 0.05%)</title><rect x="739.5" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 0.05%)</title><rect x="739.5" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 0.05%)</title><rect x="739.5" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (42 samples, 0.05%)</title><rect x="739.5" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (42 samples, 0.05%)</title><rect x="739.5" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (42 samples, 0.05%)</title><rect x="739.5" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (42 samples, 0.05%)</title><rect x="739.5" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.05%)</title><rect x="739.5" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.05%)</title><rect x="739.5" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (36 samples, 0.04%)</title><rect x="739.5" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (36 samples, 0.04%)</title><rect x="739.5" y="131.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (36 samples, 0.04%)</title><rect x="739.5" y="115.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (36 samples, 0.04%)</title><rect x="739.5" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (36 samples, 0.04%)</title><rect x="739.5" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (36 samples, 0.04%)</title><rect x="739.5" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (36 samples, 0.04%)</title><rect x="739.5" y="51.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (36 samples, 0.04%)</title><rect x="739.5" y="35.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="742.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (71 samples, 0.08%)</title><rect x="740.0" y="307.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="743.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32105] (18,037 samples, 21.19%)</title><rect x="741.0" y="355.0" width="250.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="744.0" y="366.0">[NIO Selector #2 tid=32105]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18,037 samples, 21.19%)</title><rect x="741.0" y="339.0" width="250.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (18,037 samples, 21.19%)</title><rect x="741.0" y="323.0" width="250.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.0" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (343 samples, 0.40%)</title><rect x="741.0" y="307.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (343 samples, 0.40%)</title><rect x="741.0" y="291.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (343 samples, 0.40%)</title><rect x="741.0" y="275.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (343 samples, 0.40%)</title><rect x="741.0" y="259.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (343 samples, 0.40%)</title><rect x="741.0" y="243.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (343 samples, 0.40%)</title><rect x="741.0" y="227.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (343 samples, 0.40%)</title><rect x="741.0" y="211.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (343 samples, 0.40%)</title><rect x="741.0" y="195.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (343 samples, 0.40%)</title><rect x="741.0" y="179.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (339 samples, 0.40%)</title><rect x="741.0" y="163.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (339 samples, 0.40%)</title><rect x="741.0" y="147.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (339 samples, 0.40%)</title><rect x="741.0" y="131.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (339 samples, 0.40%)</title><rect x="741.0" y="115.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (339 samples, 0.40%)</title><rect x="741.0" y="99.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (339 samples, 0.40%)</title><rect x="741.0" y="83.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (339 samples, 0.40%)</title><rect x="741.0" y="67.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (339 samples, 0.40%)</title><rect x="741.0" y="51.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (17,694 samples, 20.79%)</title><rect x="745.8" y="307.0" width="245.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="748.8" y="318.0">ru.mail.polis.service.igorlo.Stor..</text>
</g>
<g>
<title>[NIO Selector #2 tid=32116] (225 samples, 0.26%)</title><rect x="991.1" y="355.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="994.1" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (225 samples, 0.26%)</title><rect x="991.1" y="339.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (225 samples, 0.26%)</title><rect x="991.1" y="323.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (119 samples, 0.14%)</title><rect x="991.1" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (119 samples, 0.14%)</title><rect x="991.1" y="291.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (119 samples, 0.14%)</title><rect x="991.1" y="275.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (119 samples, 0.14%)</title><rect x="991.1" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.1" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (119 samples, 0.14%)</title><rect x="991.1" y="243.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (119 samples, 0.14%)</title><rect x="991.1" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (119 samples, 0.14%)</title><rect x="991.1" y="211.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (119 samples, 0.14%)</title><rect x="991.1" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (119 samples, 0.14%)</title><rect x="991.1" y="179.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (119 samples, 0.14%)</title><rect x="991.1" y="163.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (116 samples, 0.14%)</title><rect x="991.1" y="147.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (116 samples, 0.14%)</title><rect x="991.1" y="131.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (116 samples, 0.14%)</title><rect x="991.1" y="115.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (116 samples, 0.14%)</title><rect x="991.1" y="99.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (116 samples, 0.14%)</title><rect x="991.1" y="83.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (116 samples, 0.14%)</title><rect x="991.1" y="67.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 0.14%)</title><rect x="991.1" y="51.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (116 samples, 0.14%)</title><rect x="991.1" y="35.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="994.1" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (106 samples, 0.12%)</title><rect x="992.7" y="307.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="995.7" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32117] (115 samples, 0.14%)</title><rect x="994.2" y="355.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="997.2" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (115 samples, 0.14%)</title><rect x="994.2" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (115 samples, 0.14%)</title><rect x="994.2" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50 samples, 0.06%)</title><rect x="994.2" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (50 samples, 0.06%)</title><rect x="994.2" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50 samples, 0.06%)</title><rect x="994.2" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (50 samples, 0.06%)</title><rect x="994.2" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.2" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (50 samples, 0.06%)</title><rect x="994.2" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (50 samples, 0.06%)</title><rect x="994.2" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (50 samples, 0.06%)</title><rect x="994.2" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (50 samples, 0.06%)</title><rect x="994.2" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (50 samples, 0.06%)</title><rect x="994.2" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (50 samples, 0.06%)</title><rect x="994.2" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (49 samples, 0.06%)</title><rect x="994.2" y="147.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (49 samples, 0.06%)</title><rect x="994.2" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (49 samples, 0.06%)</title><rect x="994.2" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (49 samples, 0.06%)</title><rect x="994.2" y="99.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (49 samples, 0.06%)</title><rect x="994.2" y="83.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.06%)</title><rect x="994.2" y="67.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.06%)</title><rect x="994.2" y="51.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (49 samples, 0.06%)</title><rect x="994.2" y="35.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="997.2" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (65 samples, 0.08%)</title><rect x="994.9" y="307.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="997.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32124] (254 samples, 0.30%)</title><rect x="995.8" y="355.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="998.8" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (254 samples, 0.30%)</title><rect x="995.8" y="339.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (254 samples, 0.30%)</title><rect x="995.8" y="323.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="998.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (105 samples, 0.12%)</title><rect x="995.8" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (105 samples, 0.12%)</title><rect x="995.8" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (105 samples, 0.12%)</title><rect x="995.8" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (105 samples, 0.12%)</title><rect x="995.8" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.8" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (105 samples, 0.12%)</title><rect x="995.8" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (105 samples, 0.12%)</title><rect x="995.8" y="227.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executePut (105 samples, 0.12%)</title><rect x="995.8" y="211.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (105 samples, 0.12%)</title><rect x="995.8" y="195.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.12%)</title><rect x="995.8" y="179.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (105 samples, 0.12%)</title><rect x="995.8" y="163.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (98 samples, 0.12%)</title><rect x="995.8" y="147.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (98 samples, 0.12%)</title><rect x="995.8" y="131.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (98 samples, 0.12%)</title><rect x="995.8" y="115.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (98 samples, 0.12%)</title><rect x="995.8" y="99.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (98 samples, 0.12%)</title><rect x="995.8" y="83.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (98 samples, 0.12%)</title><rect x="995.8" y="67.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (98 samples, 0.12%)</title><rect x="995.8" y="51.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (98 samples, 0.12%)</title><rect x="995.8" y="35.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="998.8" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (149 samples, 0.18%)</title><rect x="997.2" y="307.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1000.2" y="318.0"></text>
</g>
<g>
<title>[asyncWorker tid=32182] (1,620 samples, 1.90%)</title><rect x="999.3" y="355.0" width="22.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1002.3" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,620 samples, 1.90%)</title><rect x="999.3" y="339.0" width="22.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,620 samples, 1.90%)</title><rect x="999.3" y="323.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,620 samples, 1.90%)</title><rect x="999.3" y="307.0" width="22.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (976 samples, 1.15%)</title><rect x="999.3" y="291.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (976 samples, 1.15%)</title><rect x="999.3" y="275.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (238 samples, 0.28%)</title><rect x="999.3" y="259.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (238 samples, 0.28%)</title><rect x="999.3" y="243.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (238 samples, 0.28%)</title><rect x="999.3" y="227.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (238 samples, 0.28%)</title><rect x="999.3" y="211.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (238 samples, 0.28%)</title><rect x="999.3" y="195.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (238 samples, 0.28%)</title><rect x="999.3" y="179.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1002.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (738 samples, 0.87%)</title><rect x="1002.6" y="259.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (738 samples, 0.87%)</title><rect x="1002.6" y="243.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (738 samples, 0.87%)</title><rect x="1002.6" y="227.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (738 samples, 0.87%)</title><rect x="1002.6" y="211.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (738 samples, 0.87%)</title><rect x="1002.6" y="195.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (738 samples, 0.87%)</title><rect x="1002.6" y="179.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (738 samples, 0.87%)</title><rect x="1002.6" y="163.0" width="10.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1005.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$88/381454608.run (644 samples, 0.76%)</title><rect x="1012.8" y="291.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$10 (644 samples, 0.76%)</title><rect x="1012.8" y="275.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (632 samples, 0.74%)</title><rect x="1013.0" y="259.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$89/848943389.action (92 samples, 0.11%)</title><rect x="1013.0" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$8 (92 samples, 0.11%)</title><rect x="1013.0" y="227.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (92 samples, 0.11%)</title><rect x="1013.0" y="211.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (92 samples, 0.11%)</title><rect x="1013.0" y="195.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (92 samples, 0.11%)</title><rect x="1013.0" y="179.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (92 samples, 0.11%)</title><rect x="1013.0" y="163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (92 samples, 0.11%)</title><rect x="1013.0" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (92 samples, 0.11%)</title><rect x="1013.0" y="131.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.0" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (92 samples, 0.11%)</title><rect x="1013.0" y="115.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1016.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (540 samples, 0.63%)</title><rect x="1014.3" y="243.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (540 samples, 0.63%)</title><rect x="1014.3" y="227.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (540 samples, 0.63%)</title><rect x="1014.3" y="211.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.3" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (273 samples, 0.32%)</title><rect x="1014.3" y="195.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (273 samples, 0.32%)</title><rect x="1014.3" y="179.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1017.3" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (267 samples, 0.31%)</title><rect x="1018.1" y="195.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.1" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (267 samples, 0.31%)</title><rect x="1018.1" y="179.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1021.1" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32183] (1,591 samples, 1.87%)</title><rect x="1021.8" y="355.0" width="22.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1024.8" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,591 samples, 1.87%)</title><rect x="1021.8" y="339.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.8" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,591 samples, 1.87%)</title><rect x="1021.8" y="323.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.8" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,591 samples, 1.87%)</title><rect x="1021.8" y="307.0" width="22.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (918 samples, 1.08%)</title><rect x="1021.8" y="291.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (918 samples, 1.08%)</title><rect x="1021.8" y="275.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (215 samples, 0.25%)</title><rect x="1021.8" y="259.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (215 samples, 0.25%)</title><rect x="1021.8" y="243.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (215 samples, 0.25%)</title><rect x="1021.8" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (215 samples, 0.25%)</title><rect x="1021.8" y="211.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (215 samples, 0.25%)</title><rect x="1021.8" y="195.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (215 samples, 0.25%)</title><rect x="1021.8" y="179.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1024.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (703 samples, 0.83%)</title><rect x="1024.7" y="259.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (703 samples, 0.83%)</title><rect x="1024.7" y="243.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (703 samples, 0.83%)</title><rect x="1024.7" y="227.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (703 samples, 0.83%)</title><rect x="1024.7" y="211.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (703 samples, 0.83%)</title><rect x="1024.7" y="195.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (703 samples, 0.83%)</title><rect x="1024.7" y="179.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (703 samples, 0.83%)</title><rect x="1024.7" y="163.0" width="9.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1027.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$88/381454608.run (673 samples, 0.79%)</title><rect x="1034.5" y="291.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$10 (673 samples, 0.79%)</title><rect x="1034.5" y="275.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (663 samples, 0.78%)</title><rect x="1034.6" y="259.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$89/848943389.action (101 samples, 0.12%)</title><rect x="1034.6" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$8 (101 samples, 0.12%)</title><rect x="1034.6" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (101 samples, 0.12%)</title><rect x="1034.6" y="211.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (101 samples, 0.12%)</title><rect x="1034.6" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (101 samples, 0.12%)</title><rect x="1034.6" y="179.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (101 samples, 0.12%)</title><rect x="1034.6" y="163.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (101 samples, 0.12%)</title><rect x="1034.6" y="147.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (101 samples, 0.12%)</title><rect x="1034.6" y="131.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.6" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (101 samples, 0.12%)</title><rect x="1034.6" y="115.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1037.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (562 samples, 0.66%)</title><rect x="1036.0" y="243.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (562 samples, 0.66%)</title><rect x="1036.0" y="227.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (562 samples, 0.66%)</title><rect x="1036.0" y="211.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.0" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (287 samples, 0.34%)</title><rect x="1036.0" y="195.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (287 samples, 0.34%)</title><rect x="1036.0" y="179.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1039.0" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (275 samples, 0.32%)</title><rect x="1040.0" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (275 samples, 0.32%)</title><rect x="1040.0" y="179.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1043.0" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32184] (1,525 samples, 1.79%)</title><rect x="1043.8" y="355.0" width="21.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1046.8" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,525 samples, 1.79%)</title><rect x="1043.8" y="339.0" width="21.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.8" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,525 samples, 1.79%)</title><rect x="1043.8" y="323.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.8" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,525 samples, 1.79%)</title><rect x="1043.8" y="307.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.8" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (853 samples, 1.00%)</title><rect x="1043.8" y="291.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1046.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (853 samples, 1.00%)</title><rect x="1043.8" y="275.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (178 samples, 0.21%)</title><rect x="1043.8" y="259.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (178 samples, 0.21%)</title><rect x="1043.8" y="243.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (178 samples, 0.21%)</title><rect x="1043.8" y="227.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (178 samples, 0.21%)</title><rect x="1043.8" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (178 samples, 0.21%)</title><rect x="1043.8" y="195.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1046.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (178 samples, 0.21%)</title><rect x="1043.8" y="179.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (675 samples, 0.79%)</title><rect x="1046.3" y="259.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (675 samples, 0.79%)</title><rect x="1046.3" y="243.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (675 samples, 0.79%)</title><rect x="1046.3" y="227.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (675 samples, 0.79%)</title><rect x="1046.3" y="211.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (675 samples, 0.79%)</title><rect x="1046.3" y="195.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (675 samples, 0.79%)</title><rect x="1046.3" y="179.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (675 samples, 0.79%)</title><rect x="1046.3" y="163.0" width="9.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1049.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$88/381454608.run (672 samples, 0.79%)</title><rect x="1055.6" y="291.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$10 (672 samples, 0.79%)</title><rect x="1055.6" y="275.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (663 samples, 0.78%)</title><rect x="1055.8" y="259.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$89/848943389.action (90 samples, 0.11%)</title><rect x="1055.8" y="243.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$8 (90 samples, 0.11%)</title><rect x="1055.8" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (90 samples, 0.11%)</title><rect x="1055.8" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (90 samples, 0.11%)</title><rect x="1055.8" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (90 samples, 0.11%)</title><rect x="1055.8" y="179.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (90 samples, 0.11%)</title><rect x="1055.8" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (90 samples, 0.11%)</title><rect x="1055.8" y="147.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (90 samples, 0.11%)</title><rect x="1055.8" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.8" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (90 samples, 0.11%)</title><rect x="1055.8" y="115.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1058.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (573 samples, 0.67%)</title><rect x="1057.0" y="243.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (573 samples, 0.67%)</title><rect x="1057.0" y="227.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (573 samples, 0.67%)</title><rect x="1057.0" y="211.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.0" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (292 samples, 0.34%)</title><rect x="1057.0" y="195.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (292 samples, 0.34%)</title><rect x="1057.0" y="179.0" width="4.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1060.0" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (281 samples, 0.33%)</title><rect x="1061.1" y="195.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.1" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (281 samples, 0.33%)</title><rect x="1061.1" y="179.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1064.1" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32185] (1,588 samples, 1.87%)</title><rect x="1065.0" y="355.0" width="22.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1068.0" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,588 samples, 1.87%)</title><rect x="1065.0" y="339.0" width="22.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1068.0" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,588 samples, 1.87%)</title><rect x="1065.0" y="323.0" width="22.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,588 samples, 1.87%)</title><rect x="1065.0" y="307.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (940 samples, 1.10%)</title><rect x="1065.0" y="291.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (940 samples, 1.10%)</title><rect x="1065.0" y="275.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (235 samples, 0.28%)</title><rect x="1065.0" y="259.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (235 samples, 0.28%)</title><rect x="1065.0" y="243.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (235 samples, 0.28%)</title><rect x="1065.0" y="227.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (235 samples, 0.28%)</title><rect x="1065.0" y="211.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (235 samples, 0.28%)</title><rect x="1065.0" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (235 samples, 0.28%)</title><rect x="1065.0" y="179.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1068.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (705 samples, 0.83%)</title><rect x="1068.2" y="259.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (705 samples, 0.83%)</title><rect x="1068.2" y="243.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (705 samples, 0.83%)</title><rect x="1068.2" y="227.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (705 samples, 0.83%)</title><rect x="1068.2" y="211.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (705 samples, 0.83%)</title><rect x="1068.2" y="195.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (705 samples, 0.83%)</title><rect x="1068.2" y="179.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (705 samples, 0.83%)</title><rect x="1068.2" y="163.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1071.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$88/381454608.run (648 samples, 0.76%)</title><rect x="1078.0" y="291.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$10 (648 samples, 0.76%)</title><rect x="1078.0" y="275.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (638 samples, 0.75%)</title><rect x="1078.1" y="259.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$89/848943389.action (95 samples, 0.11%)</title><rect x="1078.1" y="243.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$8 (95 samples, 0.11%)</title><rect x="1078.1" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (95 samples, 0.11%)</title><rect x="1078.1" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (95 samples, 0.11%)</title><rect x="1078.1" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (95 samples, 0.11%)</title><rect x="1078.1" y="179.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (95 samples, 0.11%)</title><rect x="1078.1" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (95 samples, 0.11%)</title><rect x="1078.1" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (95 samples, 0.11%)</title><rect x="1078.1" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.1" y="142.0"></text>
</g>
<g>
<title>java.lang.Class (95 samples, 0.11%)</title><rect x="1078.1" y="115.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1081.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (543 samples, 0.64%)</title><rect x="1079.4" y="243.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 0.64%)</title><rect x="1079.4" y="227.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 0.64%)</title><rect x="1079.4" y="211.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.4" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (277 samples, 0.33%)</title><rect x="1079.4" y="195.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.4" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (277 samples, 0.33%)</title><rect x="1079.4" y="179.0" width="3.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1082.4" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (266 samples, 0.31%)</title><rect x="1083.3" y="195.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (266 samples, 0.31%)</title><rect x="1083.3" y="179.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1086.3" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32186] (1,005 samples, 1.18%)</title><rect x="1087.0" y="355.0" width="13.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1090.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,005 samples, 1.18%)</title><rect x="1087.0" y="339.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,005 samples, 1.18%)</title><rect x="1087.0" y="323.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,005 samples, 1.18%)</title><rect x="1087.0" y="307.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (342 samples, 0.40%)</title><rect x="1087.0" y="291.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (342 samples, 0.40%)</title><rect x="1087.0" y="275.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 0.10%)</title><rect x="1087.0" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (83 samples, 0.10%)</title><rect x="1087.0" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (83 samples, 0.10%)</title><rect x="1087.0" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (83 samples, 0.10%)</title><rect x="1087.0" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (83 samples, 0.10%)</title><rect x="1087.0" y="195.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (83 samples, 0.10%)</title><rect x="1087.0" y="179.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1090.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (259 samples, 0.30%)</title><rect x="1088.1" y="259.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (259 samples, 0.30%)</title><rect x="1088.1" y="243.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (259 samples, 0.30%)</title><rect x="1088.1" y="227.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (259 samples, 0.30%)</title><rect x="1088.1" y="211.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (259 samples, 0.30%)</title><rect x="1088.1" y="195.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (259 samples, 0.30%)</title><rect x="1088.1" y="179.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (259 samples, 0.30%)</title><rect x="1088.1" y="163.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1091.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (663 samples, 0.78%)</title><rect x="1091.7" y="291.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (663 samples, 0.78%)</title><rect x="1091.7" y="275.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (525 samples, 0.62%)</title><rect x="1091.7" y="259.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (525 samples, 0.62%)</title><rect x="1091.7" y="243.0" width="7.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1094.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (138 samples, 0.16%)</title><rect x="1099.0" y="259.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1102.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (138 samples, 0.16%)</title><rect x="1099.0" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (138 samples, 0.16%)</title><rect x="1099.0" y="227.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (138 samples, 0.16%)</title><rect x="1099.0" y="211.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (138 samples, 0.16%)</title><rect x="1099.0" y="195.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (138 samples, 0.16%)</title><rect x="1099.0" y="179.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (138 samples, 0.16%)</title><rect x="1099.0" y="163.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (138 samples, 0.16%)</title><rect x="1099.0" y="147.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (138 samples, 0.16%)</title><rect x="1099.0" y="131.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1102.0" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32187] (949 samples, 1.11%)</title><rect x="1100.9" y="355.0" width="13.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1103.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (949 samples, 1.11%)</title><rect x="1100.9" y="339.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (949 samples, 1.11%)</title><rect x="1100.9" y="323.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (949 samples, 1.11%)</title><rect x="1100.9" y="307.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (373 samples, 0.44%)</title><rect x="1100.9" y="291.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (373 samples, 0.44%)</title><rect x="1100.9" y="275.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (80 samples, 0.09%)</title><rect x="1100.9" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (80 samples, 0.09%)</title><rect x="1100.9" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (80 samples, 0.09%)</title><rect x="1100.9" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (80 samples, 0.09%)</title><rect x="1100.9" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (80 samples, 0.09%)</title><rect x="1100.9" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (80 samples, 0.09%)</title><rect x="1100.9" y="179.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1103.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (293 samples, 0.34%)</title><rect x="1102.0" y="259.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (293 samples, 0.34%)</title><rect x="1102.0" y="243.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (293 samples, 0.34%)</title><rect x="1102.0" y="227.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (293 samples, 0.34%)</title><rect x="1102.0" y="211.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (293 samples, 0.34%)</title><rect x="1102.0" y="195.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (293 samples, 0.34%)</title><rect x="1102.0" y="179.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (293 samples, 0.34%)</title><rect x="1102.0" y="163.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1105.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (576 samples, 0.68%)</title><rect x="1106.1" y="291.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (576 samples, 0.68%)</title><rect x="1106.1" y="275.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (445 samples, 0.52%)</title><rect x="1106.1" y="259.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (445 samples, 0.52%)</title><rect x="1106.1" y="243.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1109.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (131 samples, 0.15%)</title><rect x="1112.2" y="259.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (131 samples, 0.15%)</title><rect x="1112.2" y="243.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (131 samples, 0.15%)</title><rect x="1112.2" y="227.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (131 samples, 0.15%)</title><rect x="1112.2" y="211.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (131 samples, 0.15%)</title><rect x="1112.2" y="195.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (131 samples, 0.15%)</title><rect x="1112.2" y="179.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (131 samples, 0.15%)</title><rect x="1112.2" y="163.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (131 samples, 0.15%)</title><rect x="1112.2" y="147.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (131 samples, 0.15%)</title><rect x="1112.2" y="131.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1115.2" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32188] (870 samples, 1.02%)</title><rect x="1114.1" y="355.0" width="12.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1117.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (870 samples, 1.02%)</title><rect x="1114.1" y="339.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (870 samples, 1.02%)</title><rect x="1114.1" y="323.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (870 samples, 1.02%)</title><rect x="1114.1" y="307.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (394 samples, 0.46%)</title><rect x="1114.1" y="291.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (394 samples, 0.46%)</title><rect x="1114.1" y="275.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (107 samples, 0.13%)</title><rect x="1114.1" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (107 samples, 0.13%)</title><rect x="1114.1" y="243.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (107 samples, 0.13%)</title><rect x="1114.1" y="227.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 0.13%)</title><rect x="1114.1" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 0.13%)</title><rect x="1114.1" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (107 samples, 0.13%)</title><rect x="1114.1" y="179.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1117.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (287 samples, 0.34%)</title><rect x="1115.5" y="259.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (287 samples, 0.34%)</title><rect x="1115.5" y="243.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (287 samples, 0.34%)</title><rect x="1115.5" y="227.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (287 samples, 0.34%)</title><rect x="1115.5" y="211.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (287 samples, 0.34%)</title><rect x="1115.5" y="195.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (287 samples, 0.34%)</title><rect x="1115.5" y="179.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (287 samples, 0.34%)</title><rect x="1115.5" y="163.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1118.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (476 samples, 0.56%)</title><rect x="1119.5" y="291.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (476 samples, 0.56%)</title><rect x="1119.5" y="275.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (373 samples, 0.44%)</title><rect x="1119.5" y="259.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (373 samples, 0.44%)</title><rect x="1119.5" y="243.0" width="5.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1122.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (103 samples, 0.12%)</title><rect x="1124.7" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (103 samples, 0.12%)</title><rect x="1124.7" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (103 samples, 0.12%)</title><rect x="1124.7" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (103 samples, 0.12%)</title><rect x="1124.7" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (103 samples, 0.12%)</title><rect x="1124.7" y="195.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (103 samples, 0.12%)</title><rect x="1124.7" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (103 samples, 0.12%)</title><rect x="1124.7" y="163.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (103 samples, 0.12%)</title><rect x="1124.7" y="147.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (103 samples, 0.12%)</title><rect x="1124.7" y="131.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1127.7" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32189] (952 samples, 1.12%)</title><rect x="1126.1" y="355.0" width="13.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1129.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (952 samples, 1.12%)</title><rect x="1126.1" y="339.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (952 samples, 1.12%)</title><rect x="1126.1" y="323.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (952 samples, 1.12%)</title><rect x="1126.1" y="307.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (372 samples, 0.44%)</title><rect x="1126.1" y="291.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (372 samples, 0.44%)</title><rect x="1126.1" y="275.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (74 samples, 0.09%)</title><rect x="1126.1" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (74 samples, 0.09%)</title><rect x="1126.1" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (74 samples, 0.09%)</title><rect x="1126.1" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 0.09%)</title><rect x="1126.1" y="211.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 0.09%)</title><rect x="1126.1" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (74 samples, 0.09%)</title><rect x="1126.1" y="179.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1129.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (298 samples, 0.35%)</title><rect x="1127.1" y="259.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (298 samples, 0.35%)</title><rect x="1127.1" y="243.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (298 samples, 0.35%)</title><rect x="1127.1" y="227.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (298 samples, 0.35%)</title><rect x="1127.1" y="211.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (298 samples, 0.35%)</title><rect x="1127.1" y="195.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (298 samples, 0.35%)</title><rect x="1127.1" y="179.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (298 samples, 0.35%)</title><rect x="1127.1" y="163.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1130.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (580 samples, 0.68%)</title><rect x="1131.3" y="291.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (580 samples, 0.68%)</title><rect x="1131.3" y="275.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (459 samples, 0.54%)</title><rect x="1131.3" y="259.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (459 samples, 0.54%)</title><rect x="1131.3" y="243.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1134.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (121 samples, 0.14%)</title><rect x="1137.6" y="259.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (121 samples, 0.14%)</title><rect x="1137.6" y="243.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (121 samples, 0.14%)</title><rect x="1137.6" y="227.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (121 samples, 0.14%)</title><rect x="1137.6" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (121 samples, 0.14%)</title><rect x="1137.6" y="195.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (121 samples, 0.14%)</title><rect x="1137.6" y="179.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (121 samples, 0.14%)</title><rect x="1137.6" y="163.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (121 samples, 0.14%)</title><rect x="1137.6" y="147.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (121 samples, 0.14%)</title><rect x="1137.6" y="131.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1140.6" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32190] (974 samples, 1.14%)</title><rect x="1139.3" y="355.0" width="13.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1142.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (974 samples, 1.14%)</title><rect x="1139.3" y="339.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (974 samples, 1.14%)</title><rect x="1139.3" y="323.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (974 samples, 1.14%)</title><rect x="1139.3" y="307.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (358 samples, 0.42%)</title><rect x="1139.3" y="291.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (358 samples, 0.42%)</title><rect x="1139.3" y="275.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 0.10%)</title><rect x="1139.3" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (83 samples, 0.10%)</title><rect x="1139.3" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (83 samples, 0.10%)</title><rect x="1139.3" y="227.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (83 samples, 0.10%)</title><rect x="1139.3" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (83 samples, 0.10%)</title><rect x="1139.3" y="195.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (83 samples, 0.10%)</title><rect x="1139.3" y="179.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1142.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (275 samples, 0.32%)</title><rect x="1140.5" y="259.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (275 samples, 0.32%)</title><rect x="1140.5" y="243.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (275 samples, 0.32%)</title><rect x="1140.5" y="227.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (275 samples, 0.32%)</title><rect x="1140.5" y="211.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (275 samples, 0.32%)</title><rect x="1140.5" y="195.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (275 samples, 0.32%)</title><rect x="1140.5" y="179.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (275 samples, 0.32%)</title><rect x="1140.5" y="163.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1143.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (616 samples, 0.72%)</title><rect x="1144.3" y="291.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (616 samples, 0.72%)</title><rect x="1144.3" y="275.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (468 samples, 0.55%)</title><rect x="1144.3" y="259.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (468 samples, 0.55%)</title><rect x="1144.3" y="243.0" width="6.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1147.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (148 samples, 0.17%)</title><rect x="1150.8" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (148 samples, 0.17%)</title><rect x="1150.8" y="243.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (148 samples, 0.17%)</title><rect x="1150.8" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (148 samples, 0.17%)</title><rect x="1150.8" y="211.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (148 samples, 0.17%)</title><rect x="1150.8" y="195.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (148 samples, 0.17%)</title><rect x="1150.8" y="179.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (148 samples, 0.17%)</title><rect x="1150.8" y="163.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (148 samples, 0.17%)</title><rect x="1150.8" y="147.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (148 samples, 0.17%)</title><rect x="1150.8" y="131.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1153.8" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32191] (896 samples, 1.05%)</title><rect x="1152.8" y="355.0" width="12.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1155.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (896 samples, 1.05%)</title><rect x="1152.8" y="339.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (896 samples, 1.05%)</title><rect x="1152.8" y="323.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (896 samples, 1.05%)</title><rect x="1152.8" y="307.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (425 samples, 0.50%)</title><rect x="1152.8" y="291.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (425 samples, 0.50%)</title><rect x="1152.8" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (95 samples, 0.11%)</title><rect x="1152.8" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (95 samples, 0.11%)</title><rect x="1152.8" y="243.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (95 samples, 0.11%)</title><rect x="1152.8" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (95 samples, 0.11%)</title><rect x="1152.8" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 0.11%)</title><rect x="1152.8" y="195.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (95 samples, 0.11%)</title><rect x="1152.8" y="179.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1155.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (330 samples, 0.39%)</title><rect x="1154.1" y="259.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (330 samples, 0.39%)</title><rect x="1154.1" y="243.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (330 samples, 0.39%)</title><rect x="1154.1" y="227.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (330 samples, 0.39%)</title><rect x="1154.1" y="211.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (330 samples, 0.39%)</title><rect x="1154.1" y="195.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (330 samples, 0.39%)</title><rect x="1154.1" y="179.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (330 samples, 0.39%)</title><rect x="1154.1" y="163.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1157.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (471 samples, 0.55%)</title><rect x="1158.7" y="291.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (471 samples, 0.55%)</title><rect x="1158.7" y="275.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (361 samples, 0.42%)</title><rect x="1158.7" y="259.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (361 samples, 0.42%)</title><rect x="1158.7" y="243.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1161.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (110 samples, 0.13%)</title><rect x="1163.7" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (110 samples, 0.13%)</title><rect x="1163.7" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (110 samples, 0.13%)</title><rect x="1163.7" y="227.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (110 samples, 0.13%)</title><rect x="1163.7" y="211.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (110 samples, 0.13%)</title><rect x="1163.7" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (110 samples, 0.13%)</title><rect x="1163.7" y="179.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (110 samples, 0.13%)</title><rect x="1163.7" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (110 samples, 0.13%)</title><rect x="1163.7" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (110 samples, 0.13%)</title><rect x="1163.7" y="131.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1166.7" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32192] (910 samples, 1.07%)</title><rect x="1165.2" y="355.0" width="12.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1168.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (910 samples, 1.07%)</title><rect x="1165.2" y="339.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (910 samples, 1.07%)</title><rect x="1165.2" y="323.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (910 samples, 1.07%)</title><rect x="1165.2" y="307.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (435 samples, 0.51%)</title><rect x="1165.2" y="291.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (435 samples, 0.51%)</title><rect x="1165.2" y="275.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (107 samples, 0.13%)</title><rect x="1165.2" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (107 samples, 0.13%)</title><rect x="1165.2" y="243.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (107 samples, 0.13%)</title><rect x="1165.2" y="227.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 0.13%)</title><rect x="1165.2" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 0.13%)</title><rect x="1165.2" y="195.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (107 samples, 0.13%)</title><rect x="1165.2" y="179.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1168.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (328 samples, 0.39%)</title><rect x="1166.7" y="259.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (328 samples, 0.39%)</title><rect x="1166.7" y="243.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (328 samples, 0.39%)</title><rect x="1166.7" y="227.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (328 samples, 0.39%)</title><rect x="1166.7" y="211.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (328 samples, 0.39%)</title><rect x="1166.7" y="195.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (328 samples, 0.39%)</title><rect x="1166.7" y="179.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (328 samples, 0.39%)</title><rect x="1166.7" y="163.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1169.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (475 samples, 0.56%)</title><rect x="1171.3" y="291.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (475 samples, 0.56%)</title><rect x="1171.3" y="275.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (366 samples, 0.43%)</title><rect x="1171.3" y="259.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (366 samples, 0.43%)</title><rect x="1171.3" y="243.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1174.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (109 samples, 0.13%)</title><rect x="1176.3" y="259.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (109 samples, 0.13%)</title><rect x="1176.3" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (109 samples, 0.13%)</title><rect x="1176.3" y="227.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (109 samples, 0.13%)</title><rect x="1176.3" y="211.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (109 samples, 0.13%)</title><rect x="1176.3" y="195.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (109 samples, 0.13%)</title><rect x="1176.3" y="179.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (109 samples, 0.13%)</title><rect x="1176.3" y="163.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (109 samples, 0.13%)</title><rect x="1176.3" y="147.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (109 samples, 0.13%)</title><rect x="1176.3" y="131.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1179.3" y="142.0"></text>
</g>
<g>
<title>[asyncWorker tid=32193] (876 samples, 1.03%)</title><rect x="1177.9" y="355.0" width="12.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1180.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (876 samples, 1.03%)</title><rect x="1177.9" y="339.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (876 samples, 1.03%)</title><rect x="1177.9" y="323.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (876 samples, 1.03%)</title><rect x="1177.9" y="307.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (395 samples, 0.46%)</title><rect x="1177.9" y="291.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (395 samples, 0.46%)</title><rect x="1177.9" y="275.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (94 samples, 0.11%)</title><rect x="1177.9" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (94 samples, 0.11%)</title><rect x="1177.9" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (94 samples, 0.11%)</title><rect x="1177.9" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (94 samples, 0.11%)</title><rect x="1177.9" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (94 samples, 0.11%)</title><rect x="1177.9" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (94 samples, 0.11%)</title><rect x="1177.9" y="179.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1180.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (301 samples, 0.35%)</title><rect x="1179.2" y="259.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (301 samples, 0.35%)</title><rect x="1179.2" y="243.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (301 samples, 0.35%)</title><rect x="1179.2" y="227.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (301 samples, 0.35%)</title><rect x="1179.2" y="211.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (301 samples, 0.35%)</title><rect x="1179.2" y="195.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (301 samples, 0.35%)</title><rect x="1179.2" y="179.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (301 samples, 0.35%)</title><rect x="1179.2" y="163.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1182.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (481 samples, 0.57%)</title><rect x="1183.3" y="291.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (481 samples, 0.57%)</title><rect x="1183.3" y="275.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (387 samples, 0.45%)</title><rect x="1183.3" y="259.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (387 samples, 0.45%)</title><rect x="1183.3" y="243.0" width="5.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1186.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$90/1630966158.action (94 samples, 0.11%)</title><rect x="1188.7" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executePut$7 (94 samples, 0.11%)</title><rect x="1188.7" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.put (94 samples, 0.11%)</title><rect x="1188.7" y="227.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.upsert (94 samples, 0.11%)</title><rect x="1188.7" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.upsert (94 samples, 0.11%)</title><rect x="1188.7" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.upsert (94 samples, 0.11%)</title><rect x="1188.7" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (94 samples, 0.11%)</title><rect x="1188.7" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.currentTimeNanos (94 samples, 0.11%)</title><rect x="1188.7" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (94 samples, 0.11%)</title><rect x="1188.7" y="131.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1191.7" y="142.0"></text>
</g>
</g>
</svg>
