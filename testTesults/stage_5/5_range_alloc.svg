<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="453"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="453"> </text>
<g id="frames">
<g>
<title>all (1,343 samples, 100.00%)</title><rect x="10.0" y="419.0" width="1180.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="430.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=6009] (1 samples, 0.07%)</title><rect x="10.0" y="403.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.07%)</title><rect x="10.0" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (1 samples, 0.07%)</title><rect x="10.0" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (1 samples, 0.07%)</title><rect x="10.0" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (1 samples, 0.07%)</title><rect x="10.0" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6005] (256 samples, 19.06%)</title><rect x="10.9" y="403.0" width="224.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.9" y="414.0">[NIO Selector #0 tid=6005]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (256 samples, 19.06%)</title><rect x="10.9" y="387.0" width="224.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="398.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/Session.process (256 samples, 19.06%)</title><rect x="10.9" y="371.0" width="224.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.9" y="382.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (256 samples, 19.06%)</title><rect x="10.9" y="355.0" width="224.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="366.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (256 samples, 19.06%)</title><rect x="10.9" y="339.0" width="224.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.9" y="350.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (253 samples, 18.84%)</title><rect x="10.9" y="323.0" width="222.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="334.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (253 samples, 18.84%)</title><rect x="10.9" y="307.0" width="222.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.9" y="318.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (252 samples, 18.76%)</title><rect x="10.9" y="291.0" width="221.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.9" y="302.0">RequestHandler2_entities.hand..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (252 samples, 18.76%)</title><rect x="10.9" y="275.0" width="221.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="286.0">ru/mail/polis/service/igorlo/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="10.9" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="10.9" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.07%)</title><rect x="10.9" y="227.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (248 samples, 18.47%)</title><rect x="11.8" y="259.0" width="217.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.8" y="270.0">ru/mail/polis/dao/DAO.range</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (242 samples, 18.02%)</title><rect x="11.8" y="243.0" width="212.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.8" y="254.0">ru/mail/polis/dao/Iters.until</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (242 samples, 18.02%)</title><rect x="11.8" y="227.0" width="212.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="238.0">ru/mail/polis/dao/Iters$Unti..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (242 samples, 18.02%)</title><rect x="11.8" y="211.0" width="212.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.8" y="222.0">com/google/common/collect/Tr..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (242 samples, 18.02%)</title><rect x="11.8" y="195.0" width="212.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.8" y="206.0">com/google/common/collect/Ab..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (242 samples, 18.02%)</title><rect x="11.8" y="179.0" width="212.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.8" y="190.0">com/google/common/collect/Ab..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (242 samples, 18.02%)</title><rect x="11.8" y="163.0" width="212.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.8" y="174.0">com/google/common/collect/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (242 samples, 18.02%)</title><rect x="11.8" y="147.0" width="212.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="158.0">ru/mail/polis/dao/Iters$Coll..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (120 samples, 8.94%)</title><rect x="11.8" y="131.0" width="105.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.8" y="142.0">com/google/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (120 samples, 8.94%)</title><rect x="11.8" y="115.0" width="105.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="126.0">com/google/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (120 samples, 8.94%)</title><rect x="11.8" y="99.0" width="105.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.8" y="110.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (120 samples, 8.94%)</title><rect x="11.8" y="83.0" width="105.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.8" y="94.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (120 samples, 8.94%)</title><rect x="11.8" y="67.0" width="105.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="78.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (120 samples, 8.94%)</title><rect x="11.8" y="51.0" width="105.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.8" y="62.0">java/nio/Heap..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (120 samples, 8.94%)</title><rect x="11.8" y="35.0" width="105.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="14.8" y="46.0">java.nio.Heap..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (122 samples, 9.08%)</title><rect x="117.2" y="131.0" width="107.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.2" y="142.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (122 samples, 9.08%)</title><rect x="117.2" y="115.0" width="107.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.2" y="126.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (122 samples, 9.08%)</title><rect x="117.2" y="99.0" width="107.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.2" y="110.0">java/nio/Heap..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (122 samples, 9.08%)</title><rect x="117.2" y="83.0" width="107.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="120.2" y="94.0">java.nio.Heap..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (6 samples, 0.45%)</title><rect x="224.4" y="243.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (6 samples, 0.45%)</title><rect x="224.4" y="227.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 0.45%)</title><rect x="224.4" y="211.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.07%)</title><rect x="224.4" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.07%)</title><rect x="224.4" y="179.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="227.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (5 samples, 0.37%)</title><rect x="225.3" y="195.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (5 samples, 0.37%)</title><rect x="225.3" y="179.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.3" y="190.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.15%)</title><rect x="225.3" y="163.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="228.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="227.0" y="163.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="227.0" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="227.0" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="227.0" y="115.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="227.0" y="99.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.0" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.07%)</title><rect x="227.0" y="83.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="230.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (2 samples, 0.15%)</title><rect x="227.9" y="163.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.07%)</title><rect x="227.9" y="147.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (1 samples, 0.07%)</title><rect x="227.9" y="131.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="230.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="228.8" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="228.8" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="228.8" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1 samples, 0.07%)</title><rect x="228.8" y="99.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="231.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (3 samples, 0.22%)</title><rect x="229.7" y="259.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.7" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.07%)</title><rect x="229.7" y="243.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="232.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (2 samples, 0.15%)</title><rect x="230.5" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession$Chunks.end (2 samples, 0.15%)</title><rect x="230.5" y="227.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.5" y="238.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.15%)</title><rect x="230.5" y="211.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.5" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.15%)</title><rect x="230.5" y="195.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="233.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.07%)</title><rect x="232.3" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="232.3" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="232.3" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="232.3" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.3" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="232.3" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="235.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.22%)</title><rect x="233.2" y="323.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.07%)</title><rect x="233.2" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.07%)</title><rect x="233.2" y="291.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="236.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="234.1" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="234.1" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.1" y="302.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.07%)</title><rect x="234.1" y="275.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="237.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="234.9" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="234.9" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.07%)</title><rect x="234.9" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.9" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="234.9" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="237.9" y="238.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6006] (243 samples, 18.09%)</title><rect x="235.8" y="403.0" width="213.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="238.8" y="414.0">[NIO Selector #1 tid=6006]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (243 samples, 18.09%)</title><rect x="235.8" y="387.0" width="213.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.8" y="398.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/Session.process (243 samples, 18.09%)</title><rect x="235.8" y="371.0" width="213.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="382.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (243 samples, 18.09%)</title><rect x="235.8" y="355.0" width="213.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.8" y="366.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (243 samples, 18.09%)</title><rect x="235.8" y="339.0" width="213.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.8" y="350.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (239 samples, 17.80%)</title><rect x="235.8" y="323.0" width="210.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.8" y="334.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (239 samples, 17.80%)</title><rect x="235.8" y="307.0" width="210.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="318.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (239 samples, 17.80%)</title><rect x="235.8" y="291.0" width="210.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.8" y="302.0">RequestHandler2_entities.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="235.8" y="275.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="235.8" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="235.8" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="235.8" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.8" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="235.8" y="211.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="238.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (238 samples, 17.72%)</title><rect x="236.7" y="275.0" width="209.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.7" y="286.0">ru/mail/polis/service/igorl..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (235 samples, 17.50%)</title><rect x="236.7" y="259.0" width="206.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.7" y="270.0">ru/mail/polis/dao/DAO.range</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (232 samples, 17.27%)</title><rect x="236.7" y="243.0" width="203.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.7" y="254.0">ru/mail/polis/dao/Iters.until</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (232 samples, 17.27%)</title><rect x="236.7" y="227.0" width="203.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.7" y="238.0">ru/mail/polis/dao/Iters$Unt..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (232 samples, 17.27%)</title><rect x="236.7" y="211.0" width="203.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.7" y="222.0">com/google/common/collect/T..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (232 samples, 17.27%)</title><rect x="236.7" y="195.0" width="203.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.7" y="206.0">com/google/common/collect/A..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (232 samples, 17.27%)</title><rect x="236.7" y="179.0" width="203.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.7" y="190.0">com/google/common/collect/A..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (232 samples, 17.27%)</title><rect x="236.7" y="163.0" width="203.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.7" y="174.0">com/google/common/collect/I..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (232 samples, 17.27%)</title><rect x="236.7" y="147.0" width="203.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.7" y="158.0">ru/mail/polis/dao/Iters$Col..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (98 samples, 7.30%)</title><rect x="236.7" y="131.0" width="86.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.7" y="142.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (98 samples, 7.30%)</title><rect x="236.7" y="115.0" width="86.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.7" y="126.0">com/google..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (98 samples, 7.30%)</title><rect x="236.7" y="99.0" width="86.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.7" y="110.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (98 samples, 7.30%)</title><rect x="236.7" y="83.0" width="86.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.7" y="94.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (98 samples, 7.30%)</title><rect x="236.7" y="67.0" width="86.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.7" y="78.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (98 samples, 7.30%)</title><rect x="236.7" y="51.0" width="86.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.7" y="62.0">java/nio/H..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (98 samples, 7.30%)</title><rect x="236.7" y="35.0" width="86.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="239.7" y="46.0">java.nio.H..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (134 samples, 9.98%)</title><rect x="322.8" y="131.0" width="117.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.8" y="142.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (134 samples, 9.98%)</title><rect x="322.8" y="115.0" width="117.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.8" y="126.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (134 samples, 9.98%)</title><rect x="322.8" y="99.0" width="117.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.8" y="110.0">java/nio/HeapB..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (134 samples, 9.98%)</title><rect x="322.8" y="83.0" width="117.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="325.8" y="94.0">java.nio.HeapB..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (3 samples, 0.22%)</title><rect x="440.5" y="243.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.15%)</title><rect x="440.5" y="227.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.07%)</title><rect x="440.5" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.07%)</title><rect x="440.5" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="440.5" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.5" y="190.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (1 samples, 0.07%)</title><rect x="440.5" y="163.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="443.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.07%)</title><rect x="441.4" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.07%)</title><rect x="441.4" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.07%)</title><rect x="441.4" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (1 samples, 0.07%)</title><rect x="441.4" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.07%)</title><rect x="441.4" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (1 samples, 0.07%)</title><rect x="441.4" y="131.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="444.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.aliveRowIterators (1 samples, 0.07%)</title><rect x="442.3" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.07%)</title><rect x="442.3" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.3" y="222.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 0.07%)</title><rect x="442.3" y="195.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="445.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (3 samples, 0.22%)</title><rect x="443.2" y="259.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.07%)</title><rect x="443.2" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="446.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.15%)</title><rect x="444.0" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.07%)</title><rect x="444.0" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="444.0" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.0" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="444.0" y="195.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="447.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="444.9" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.07%)</title><rect x="444.9" y="211.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="447.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.30%)</title><rect x="445.8" y="323.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.8" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.07%)</title><rect x="445.8" y="307.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="448.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.07%)</title><rect x="446.7" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.07%)</title><rect x="446.7" y="291.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="449.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="447.6" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="447.6" y="291.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.6" y="302.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.15%)</title><rect x="447.6" y="275.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="450.6" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6007] (163 samples, 12.14%)</title><rect x="449.3" y="403.0" width="143.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="452.3" y="414.0">[NIO Selector #2 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (163 samples, 12.14%)</title><rect x="449.3" y="387.0" width="143.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.3" y="398.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.07%)</title><rect x="449.3" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.3" y="382.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.07%)</title><rect x="449.3" y="355.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="452.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (162 samples, 12.06%)</title><rect x="450.2" y="371.0" width="142.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.2" y="382.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (162 samples, 12.06%)</title><rect x="450.2" y="355.0" width="142.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.2" y="366.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (161 samples, 11.99%)</title><rect x="450.2" y="339.0" width="141.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.2" y="350.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (159 samples, 11.84%)</title><rect x="450.2" y="323.0" width="139.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.2" y="334.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (159 samples, 11.84%)</title><rect x="450.2" y="307.0" width="139.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.2" y="318.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (159 samples, 11.84%)</title><rect x="450.2" y="291.0" width="139.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.2" y="302.0">RequestHandler2_e..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (159 samples, 11.84%)</title><rect x="450.2" y="275.0" width="139.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.2" y="286.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="450.2" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="450.2" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.07%)</title><rect x="450.2" y="227.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="453.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (155 samples, 11.54%)</title><rect x="451.1" y="259.0" width="136.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.1" y="270.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (153 samples, 11.39%)</title><rect x="451.1" y="243.0" width="134.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.1" y="254.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (153 samples, 11.39%)</title><rect x="451.1" y="227.0" width="134.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.1" y="238.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (153 samples, 11.39%)</title><rect x="451.1" y="211.0" width="134.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.1" y="222.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (153 samples, 11.39%)</title><rect x="451.1" y="195.0" width="134.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.1" y="206.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (153 samples, 11.39%)</title><rect x="451.1" y="179.0" width="134.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.1" y="190.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (153 samples, 11.39%)</title><rect x="451.1" y="163.0" width="134.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.1" y="174.0">com/google/common..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (153 samples, 11.39%)</title><rect x="451.1" y="147.0" width="134.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.1" y="158.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (73 samples, 5.44%)</title><rect x="451.1" y="131.0" width="64.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.1" y="142.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (73 samples, 5.44%)</title><rect x="451.1" y="115.0" width="64.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.1" y="126.0">com/goo..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (73 samples, 5.44%)</title><rect x="451.1" y="99.0" width="64.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.1" y="110.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (73 samples, 5.44%)</title><rect x="451.1" y="83.0" width="64.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.1" y="94.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (73 samples, 5.44%)</title><rect x="451.1" y="67.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.1" y="78.0">ru/mail..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (73 samples, 5.44%)</title><rect x="451.1" y="51.0" width="64.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.1" y="62.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (73 samples, 5.44%)</title><rect x="451.1" y="35.0" width="64.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="454.1" y="46.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (80 samples, 5.96%)</title><rect x="515.2" y="131.0" width="70.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.2" y="142.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (80 samples, 5.96%)</title><rect x="515.2" y="115.0" width="70.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.2" y="126.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (80 samples, 5.96%)</title><rect x="515.2" y="99.0" width="70.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="110.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (80 samples, 5.96%)</title><rect x="515.2" y="83.0" width="70.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="518.2" y="94.0">java.nio..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (2 samples, 0.15%)</title><rect x="585.5" y="243.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.15%)</title><rect x="585.5" y="227.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.07%)</title><rect x="585.5" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.07%)</title><rect x="585.5" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="585.5" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.5" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.07%)</title><rect x="585.5" y="163.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.07%)</title><rect x="585.5" y="147.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="588.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.07%)</title><rect x="586.4" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.07%)</title><rect x="586.4" y="195.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.07%)</title><rect x="586.4" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (1 samples, 0.07%)</title><rect x="586.4" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="586.4" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="586.4" y="131.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="586.4" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1 samples, 0.07%)</title><rect x="586.4" y="99.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (3 samples, 0.22%)</title><rect x="587.3" y="259.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="587.3" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="587.3" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.3" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.07%)</title><rect x="587.3" y="211.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="590.3" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession$Chunks (1 samples, 0.07%)</title><rect x="588.1" y="243.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="591.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (1 samples, 0.07%)</title><rect x="589.0" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="589.0" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.07%)</title><rect x="589.0" y="211.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="592.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.15%)</title><rect x="589.9" y="323.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.9" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.07%)</title><rect x="589.9" y="307.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="592.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="590.8" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.8" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="590.8" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.8" y="302.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.07%)</title><rect x="590.8" y="275.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.07%)</title><rect x="591.7" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.07%)</title><rect x="591.7" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.07%)</title><rect x="591.7" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.7" y="318.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.07%)</title><rect x="591.7" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.7" y="302.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.07%)</title><rect x="591.7" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.07%)</title><rect x="591.7" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="591.7" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="591.7" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.7" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="591.7" y="211.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.7" y="222.0"></text>
</g>
<g>
<title>short[] (1 samples, 0.07%)</title><rect x="591.7" y="195.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="594.7" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6008] (680 samples, 50.63%)</title><rect x="592.5" y="403.0" width="597.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="595.5" y="414.0">[NIO Selector #3 tid=6008]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (680 samples, 50.63%)</title><rect x="592.5" y="387.0" width="597.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.5" y="398.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.07%)</title><rect x="592.5" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.5" y="382.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.07%)</title><rect x="592.5" y="355.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="595.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (679 samples, 50.56%)</title><rect x="593.4" y="371.0" width="596.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="382.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (679 samples, 50.56%)</title><rect x="593.4" y="355.0" width="596.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.4" y="366.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (679 samples, 50.56%)</title><rect x="593.4" y="339.0" width="596.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.4" y="350.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (675 samples, 50.26%)</title><rect x="593.4" y="323.0" width="593.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.4" y="334.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (675 samples, 50.26%)</title><rect x="593.4" y="307.0" width="593.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.4" y="318.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (675 samples, 50.26%)</title><rect x="593.4" y="291.0" width="593.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="302.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (675 samples, 50.26%)</title><rect x="593.4" y="275.0" width="593.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.4" y="286.0">ru/mail/polis/service/igorlo/ShardedService.entities</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.15%)</title><rect x="593.4" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.15%)</title><rect x="593.4" y="243.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.15%)</title><rect x="593.4" y="227.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.15%)</title><rect x="593.4" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.4" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.15%)</title><rect x="593.4" y="195.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="596.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="595.2" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="595.2" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.07%)</title><rect x="595.2" y="227.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="598.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (669 samples, 49.81%)</title><rect x="596.0" y="259.0" width="587.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.0" y="270.0">ru/mail/polis/dao/DAO.range</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="596.0" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.07%)</title><rect x="596.0" y="227.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="599.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (661 samples, 49.22%)</title><rect x="596.9" y="243.0" width="580.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="254.0">ru/mail/polis/dao/Iters.until</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$UntilIterator (1 samples, 0.07%)</title><rect x="596.9" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="599.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (660 samples, 49.14%)</title><rect x="597.8" y="227.0" width="579.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.8" y="238.0">ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt;</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (660 samples, 49.14%)</title><rect x="597.8" y="211.0" width="579.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.8" y="222.0">com/google/common/collect/TransformedIterator.hasNext</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (660 samples, 49.14%)</title><rect x="597.8" y="195.0" width="579.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.8" y="206.0">com/google/common/collect/AbstractIterator.hasNext</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (660 samples, 49.14%)</title><rect x="597.8" y="179.0" width="579.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="190.0">com/google/common/collect/AbstractIterator.tryToComputeNext</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (660 samples, 49.14%)</title><rect x="597.8" y="163.0" width="579.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.8" y="174.0">com/google/common/collect/Iterators$5.computeNext</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (660 samples, 49.14%)</title><rect x="597.8" y="147.0" width="579.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.8" y="158.0">ru/mail/polis/dao/Iters$CollapseEqualsIterator.next</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (343 samples, 25.54%)</title><rect x="597.8" y="131.0" width="301.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.8" y="142.0">com/google/common/collect/Iterators$Mergi..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (343 samples, 25.54%)</title><rect x="597.8" y="115.0" width="301.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.8" y="126.0">com/google/common/collect/Iterators$Peeki..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (343 samples, 25.54%)</title><rect x="597.8" y="99.0" width="301.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.8" y="110.0">ru/mail/polis/dao/Iters$CollapseEqualsIte..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (343 samples, 25.54%)</title><rect x="597.8" y="83.0" width="301.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.8" y="94.0">ru/mail/polis/dao/igorlo/Utilities$$Lambd..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (343 samples, 25.54%)</title><rect x="597.8" y="67.0" width="301.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.8" y="78.0">ru/mail/polis/dao/igorlo/TableRow.getKey</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (343 samples, 25.54%)</title><rect x="597.8" y="51.0" width="301.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.8" y="62.0">java/nio/HeapByteBuffer.asReadOnlyBuffer</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (343 samples, 25.54%)</title><rect x="597.8" y="35.0" width="301.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="600.8" y="46.0">java.nio.HeapByteBufferR</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (317 samples, 23.60%)</title><rect x="899.2" y="131.0" width="278.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.2" y="142.0">ru/mail/polis/dao/igorlo/Utilities$$L..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (317 samples, 23.60%)</title><rect x="899.2" y="115.0" width="278.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.2" y="126.0">ru/mail/polis/dao/igorlo/TableRow.get..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (317 samples, 23.60%)</title><rect x="899.2" y="99.0" width="278.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.2" y="110.0">java/nio/HeapByteBuffer.asReadOnlyBuf..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (317 samples, 23.60%)</title><rect x="899.2" y="83.0" width="278.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="902.2" y="94.0">java.nio.HeapByteBufferR</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (7 samples, 0.52%)</title><rect x="1177.7" y="243.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (7 samples, 0.52%)</title><rect x="1177.7" y="227.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (3 samples, 0.22%)</title><rect x="1177.7" y="211.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.07%)</title><rect x="1177.7" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.7" y="206.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (1 samples, 0.07%)</title><rect x="1177.7" y="179.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1180.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.15%)</title><rect x="1178.6" y="195.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.15%)</title><rect x="1178.6" y="179.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.15%)</title><rect x="1178.6" y="163.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.15%)</title><rect x="1178.6" y="147.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.15%)</title><rect x="1178.6" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$71/158093058.apply (2 samples, 0.15%)</title><rect x="1178.6" y="115.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.15%)</title><rect x="1178.6" y="99.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.15%)</title><rect x="1178.6" y="83.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.15%)</title><rect x="1178.6" y="67.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1181.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (4 samples, 0.30%)</title><rect x="1180.3" y="211.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="1180.3" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="1180.3" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="1180.3" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="1180.3" y="147.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="1180.3" y="131.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.3" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.07%)</title><rect x="1180.3" y="115.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1183.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (3 samples, 0.22%)</title><rect x="1181.2" y="195.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (3 samples, 0.22%)</title><rect x="1181.2" y="179.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.22%)</title><rect x="1181.2" y="163.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.22%)</title><rect x="1181.2" y="147.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.2" y="158.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.15%)</title><rect x="1181.2" y="131.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1184.2" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.07%)</title><rect x="1183.0" y="131.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.0" y="142.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.07%)</title><rect x="1183.0" y="115.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1186.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (3 samples, 0.22%)</title><rect x="1183.8" y="259.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="1183.8" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1183.8" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.8" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.07%)</title><rect x="1183.8" y="211.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1186.8" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession$Chunks (1 samples, 0.07%)</title><rect x="1184.7" y="243.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1187.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (1 samples, 0.07%)</title><rect x="1185.6" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1185.6" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.07%)</title><rect x="1185.6" y="211.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1188.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.22%)</title><rect x="1186.5" y="323.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1186.5" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.07%)</title><rect x="1186.5" y="291.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1189.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="1187.4" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.15%)</title><rect x="1187.4" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.07%)</title><rect x="1187.4" y="275.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="1188.2" y="275.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1191.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="1189.1" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="1189.1" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="1189.1" y="291.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1192.1" y="302.0"></text>
</g>
</g>
</svg>
