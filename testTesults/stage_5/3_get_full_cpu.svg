<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1333"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1333"> </text>
<g id="frames">
<g>
<title>all (305 samples, 100.00%)</title><rect x="10.0" y="1299.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1310.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=6023] (2 samples, 0.66%)</title><rect x="10.0" y="1283.0" width="7.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2 samples, 0.66%)</title><rect x="10.0" y="1267.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2 samples, 0.66%)</title><rect x="10.0" y="1251.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2 samples, 0.66%)</title><rect x="10.0" y="1235.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.66%)</title><rect x="10.0" y="1219.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.66%)</title><rect x="10.0" y="1203.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.66%)</title><rect x="10.0" y="1187.0" width="7.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1171.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1155.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1139.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1123.0" width="7.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1107.0" width="7.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1091.0" width="7.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="10.0" y="1075.0" width="7.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="13.9" y="1059.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="16.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="13.9" y="1043.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="16.9" y="1054.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6006] (8 samples, 2.62%)</title><rect x="17.7" y="1283.0" width="31.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="20.7" y="1294.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8 samples, 2.62%)</title><rect x="17.7" y="1267.0" width="31.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="1278.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.33%)</title><rect x="21.6" y="1251.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.33%)</title><rect x="21.6" y="1235.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1219.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="24.6" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.33%)</title><rect x="21.6" y="1203.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1187.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="24.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1171.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1155.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1139.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="24.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1123.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1107.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1091.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="24.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1075.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1059.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="21.6" y="1043.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="24.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 1.97%)</title><rect x="25.5" y="1251.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.5" y="1262.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 1.64%)</title><rect x="25.5" y="1235.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 1.31%)</title><rect x="25.5" y="1219.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 1.31%)</title><rect x="25.5" y="1203.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 1.31%)</title><rect x="25.5" y="1187.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.5" y="1198.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.66%)</title><rect x="25.5" y="1171.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2 samples, 0.66%)</title><rect x="25.5" y="1155.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.5" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (1 samples, 0.33%)</title><rect x="25.5" y="1139.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.isCorrect (1 samples, 0.33%)</title><rect x="25.5" y="1123.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.33%)</title><rect x="25.5" y="1107.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.33%)</title><rect x="25.5" y="1091.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.5" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.33%)</title><rect x="25.5" y="1075.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.33%)</title><rect x="25.5" y="1059.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.5" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.33%)</title><rect x="25.5" y="1043.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.5" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.33%)</title><rect x="25.5" y="1027.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.33%)</title><rect x="25.5" y="1011.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1 samples, 0.33%)</title><rect x="29.3" y="1139.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.33%)</title><rect x="29.3" y="1123.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.33%)</title><rect x="29.3" y="1107.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.33%)</title><rect x="29.3" y="1091.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="29.3" y="1075.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="29.3" y="1059.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="29.3" y="1043.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="29.3" y="1027.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="29.3" y="1011.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="29.3" y="995.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="979.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="32.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="963.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="32.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="947.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="32.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="931.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="32.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="915.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="32.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="899.0" width="3.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="32.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="883.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="29.3" y="867.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="32.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.33%)</title><rect x="33.2" y="1171.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.33%)</title><rect x="33.2" y="1155.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.33%)</title><rect x="33.2" y="1139.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.33%)</title><rect x="33.2" y="1123.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.33%)</title><rect x="37.1" y="1171.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.33%)</title><rect x="37.1" y="1155.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.33%)</title><rect x="37.1" y="1139.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.33%)</title><rect x="37.1" y="1123.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.1" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.33%)</title><rect x="37.1" y="1107.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.33%)</title><rect x="41.0" y="1219.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="41.0" y="1203.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.0" y="1214.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="41.0" y="1187.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="44.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1171.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="44.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1155.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1139.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="44.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1123.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="44.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1107.0" width="3.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1091.0" width="3.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1075.0" width="3.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="44.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1059.0" width="3.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1043.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1027.0" width="3.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="44.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="41.0" y="1011.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="44.0" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.33%)</title><rect x="44.8" y="1235.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.8" y="1246.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.33%)</title><rect x="44.8" y="1219.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="47.8" y="1230.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6013] (1 samples, 0.33%)</title><rect x="48.7" y="1283.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="51.7" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.33%)</title><rect x="48.7" y="1267.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.7" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.33%)</title><rect x="48.7" y="1251.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.7" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.33%)</title><rect x="48.7" y="1235.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="48.7" y="1219.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="51.7" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.33%)</title><rect x="48.7" y="1203.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="51.7" y="1214.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6024] (1 samples, 0.33%)</title><rect x="52.6" y="1283.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="55.6" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.33%)</title><rect x="52.6" y="1267.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.33%)</title><rect x="52.6" y="1251.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.33%)</title><rect x="52.6" y="1235.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1219.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="55.6" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.33%)</title><rect x="52.6" y="1203.0" width="3.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="55.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1187.0" width="3.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="55.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1171.0" width="3.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="55.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1155.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="55.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1139.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="55.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1123.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="55.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1107.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="52.6" y="1091.0" width="3.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="55.6" y="1102.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6007] (5 samples, 1.64%)</title><rect x="56.4" y="1283.0" width="19.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="59.4" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5 samples, 1.64%)</title><rect x="56.4" y="1267.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.4" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.33%)</title><rect x="60.3" y="1251.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.33%)</title><rect x="60.3" y="1235.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.3" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.33%)</title><rect x="60.3" y="1219.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.98%)</title><rect x="64.2" y="1251.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.98%)</title><rect x="64.2" y="1235.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.2" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.33%)</title><rect x="64.2" y="1219.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.33%)</title><rect x="64.2" y="1203.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.33%)</title><rect x="64.2" y="1187.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.33%)</title><rect x="64.2" y="1171.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1155.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="67.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1139.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="67.2" y="1150.0"></text>
</g>
<g>
<title>__GI___shutdown (1 samples, 0.33%)</title><rect x="64.2" y="1123.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="67.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1107.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="67.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1091.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="67.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1075.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="67.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1059.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="67.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1043.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="67.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1027.0" width="3.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="67.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="1011.0" width="3.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="995.0" width="3.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="67.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="979.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="67.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="963.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="67.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="947.0" width="3.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="67.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="931.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="67.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="915.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="67.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="899.0" width="3.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="67.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="883.0" width="3.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="867.0" width="3.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="67.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="851.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="67.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="835.0" width="3.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="67.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="819.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="67.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="803.0" width="3.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="67.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="787.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="67.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="771.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="67.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="755.0" width="3.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="67.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="64.2" y="739.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.66%)</title><rect x="68.0" y="1219.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.33%)</title><rect x="68.0" y="1203.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.33%)</title><rect x="68.0" y="1187.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.0" y="1198.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.33%)</title><rect x="68.0" y="1171.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (1 samples, 0.33%)</title><rect x="68.0" y="1155.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1 samples, 0.33%)</title><rect x="68.0" y="1139.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.33%)</title><rect x="68.0" y="1123.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.33%)</title><rect x="68.0" y="1107.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.33%)</title><rect x="68.0" y="1091.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="68.0" y="1075.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="68.0" y="1059.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="68.0" y="1043.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="68.0" y="1027.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="68.0" y="1011.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.0" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="68.0" y="995.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="979.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="963.0" width="3.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="71.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="947.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="71.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="931.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="71.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="915.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="71.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="68.0" y="899.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="71.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.33%)</title><rect x="71.9" y="1203.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.9" y="1214.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6017] (2 samples, 0.66%)</title><rect x="75.8" y="1283.0" width="7.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="78.8" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2 samples, 0.66%)</title><rect x="75.8" y="1267.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.8" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2 samples, 0.66%)</title><rect x="75.8" y="1251.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.8" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2 samples, 0.66%)</title><rect x="75.8" y="1235.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.33%)</title><rect x="75.8" y="1219.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.33%)</title><rect x="75.8" y="1203.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.33%)</title><rect x="75.8" y="1187.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.8" y="1198.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.33%)</title><rect x="75.8" y="1171.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (1 samples, 0.33%)</title><rect x="75.8" y="1155.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (1 samples, 0.33%)</title><rect x="75.8" y="1139.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (1 samples, 0.33%)</title><rect x="75.8" y="1123.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.33%)</title><rect x="75.8" y="1107.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.33%)</title><rect x="75.8" y="1091.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.33%)</title><rect x="75.8" y="1075.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="75.8" y="1059.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="75.8" y="1043.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="75.8" y="1027.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="75.8" y="1011.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="75.8" y="995.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.8" y="1006.0"></text>
</g>
<g>
<title>_init (1 samples, 0.33%)</title><rect x="75.8" y="979.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="78.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.33%)</title><rect x="79.6" y="1219.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="79.6" y="1203.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.6" y="1214.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="79.6" y="1187.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="82.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1171.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="82.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1155.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="82.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1139.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="82.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1123.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="82.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1107.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="82.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1091.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="82.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="79.6" y="1075.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="82.6" y="1086.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6025] (5 samples, 1.64%)</title><rect x="83.5" y="1283.0" width="19.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="86.5" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5 samples, 1.64%)</title><rect x="83.5" y="1267.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.5" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 1.64%)</title><rect x="83.5" y="1251.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 1.64%)</title><rect x="83.5" y="1235.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.64%)</title><rect x="83.5" y="1219.0" width="19.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 1.31%)</title><rect x="83.5" y="1203.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 1.31%)</title><rect x="83.5" y="1187.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.5" y="1198.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 1.31%)</title><rect x="83.5" y="1171.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (4 samples, 1.31%)</title><rect x="83.5" y="1155.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.5" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (4 samples, 1.31%)</title><rect x="83.5" y="1139.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.66%)</title><rect x="83.5" y="1123.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.66%)</title><rect x="83.5" y="1107.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.get$Lambda (2 samples, 0.66%)</title><rect x="83.5" y="1091.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.&lt;init&gt; (1 samples, 0.33%)</title><rect x="87.4" y="1075.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.4" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (2 samples, 0.66%)</title><rect x="91.2" y="1123.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.66%)</title><rect x="91.2" y="1107.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.66%)</title><rect x="91.2" y="1091.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.66%)</title><rect x="91.2" y="1075.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.66%)</title><rect x="91.2" y="1059.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.66%)</title><rect x="91.2" y="1043.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.66%)</title><rect x="91.2" y="1027.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.66%)</title><rect x="91.2" y="1011.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.66%)</title><rect x="91.2" y="995.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.33%)</title><rect x="91.2" y="979.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="94.2" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.33%)</title><rect x="91.2" y="963.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="94.2" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="95.1" y="979.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="98.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="963.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="98.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="947.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="98.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="931.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="98.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="915.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="98.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="899.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="98.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="883.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="98.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="867.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="98.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="95.1" y="851.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="98.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.33%)</title><rect x="99.0" y="1203.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.33%)</title><rect x="99.0" y="1187.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.33%)</title><rect x="99.0" y="1171.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.0" y="1182.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6008] (4 samples, 1.31%)</title><rect x="102.9" y="1283.0" width="15.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="105.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4 samples, 1.31%)</title><rect x="102.9" y="1267.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.98%)</title><rect x="106.7" y="1251.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.7" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.98%)</title><rect x="106.7" y="1235.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.66%)</title><rect x="106.7" y="1219.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.33%)</title><rect x="110.6" y="1203.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.33%)</title><rect x="110.6" y="1187.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.33%)</title><rect x="110.6" y="1171.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.33%)</title><rect x="114.5" y="1219.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="114.5" y="1203.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="114.5" y="1187.0" width="3.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="117.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="114.5" y="1171.0" width="3.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="117.5" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.33%)</title><rect x="114.5" y="1155.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="117.5" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.33%)</title><rect x="114.5" y="1139.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="117.5" y="1150.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6019] (2 samples, 0.66%)</title><rect x="118.3" y="1283.0" width="7.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="121.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2 samples, 0.66%)</title><rect x="118.3" y="1267.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1 samples, 0.33%)</title><rect x="122.2" y="1251.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 0.33%)</title><rect x="122.2" y="1235.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.2" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.33%)</title><rect x="122.2" y="1219.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="122.2" y="1203.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.2" y="1214.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="122.2" y="1187.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="125.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1171.0" width="3.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="125.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1155.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="125.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1139.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="125.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1123.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="125.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1107.0" width="3.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="125.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1091.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="125.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1075.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="125.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1059.0" width="3.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="125.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1043.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="125.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1027.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="125.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="122.2" y="1011.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="125.2" y="1022.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6088] (16 samples, 5.25%)</title><rect x="126.1" y="1283.0" width="61.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="129.1" y="1294.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 5.25%)</title><rect x="126.1" y="1267.0" width="61.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.1" y="1278.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 5.25%)</title><rect x="126.1" y="1251.0" width="61.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 5.25%)</title><rect x="126.1" y="1235.0" width="61.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="1246.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.33%)</title><rect x="126.1" y="1219.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (15 samples, 4.92%)</title><rect x="129.9" y="1219.0" width="58.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.9" y="1230.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (15 samples, 4.92%)</title><rect x="129.9" y="1203.0" width="58.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.9" y="1214.0">ru/mai..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.33%)</title><rect x="129.9" y="1187.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.9" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.33%)</title><rect x="129.9" y="1171.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.9" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.33%)</title><rect x="129.9" y="1155.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.9" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.33%)</title><rect x="129.9" y="1139.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.9" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.33%)</title><rect x="129.9" y="1123.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.33%)</title><rect x="129.9" y="1107.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.9" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.33%)</title><rect x="129.9" y="1091.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$74/1180167125.test (1 samples, 0.33%)</title><rect x="129.9" y="1075.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.validResponse (1 samples, 0.33%)</title><rect x="129.9" y="1059.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeaders (1 samples, 0.33%)</title><rect x="129.9" y="1043.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.9" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (2 samples, 0.66%)</title><rect x="133.8" y="1187.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.8" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2 samples, 0.66%)</title><rect x="133.8" y="1171.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.8" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.66%)</title><rect x="133.8" y="1155.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.8" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.66%)</title><rect x="133.8" y="1139.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.33%)</title><rect x="133.8" y="1123.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.33%)</title><rect x="133.8" y="1107.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (1 samples, 0.33%)</title><rect x="133.8" y="1091.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.33%)</title><rect x="133.8" y="1075.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.8" y="1086.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$101/112769521.apply (1 samples, 0.33%)</title><rect x="133.8" y="1059.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="1070.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.33%)</title><rect x="133.8" y="1043.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.8" y="1054.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$98/512492279.compare (1 samples, 0.33%)</title><rect x="133.8" y="1027.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.8" y="1038.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.33%)</title><rect x="133.8" y="1011.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.8" y="1022.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$94/207480707.compare (1 samples, 0.33%)</title><rect x="133.8" y="995.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.33%)</title><rect x="133.8" y="979.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$93/311991135.applyAsLong (1 samples, 0.33%)</title><rect x="133.8" y="963.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (1 samples, 0.33%)</title><rect x="133.8" y="947.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (1 samples, 0.33%)</title><rect x="133.8" y="931.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.33%)</title><rect x="133.8" y="915.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.33%)</title><rect x="133.8" y="899.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.33%)</title><rect x="133.8" y="883.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.8" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.33%)</title><rect x="133.8" y="867.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.33%)</title><rect x="137.7" y="1123.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.7" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.33%)</title><rect x="137.7" y="1107.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.33%)</title><rect x="141.5" y="1187.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.33%)</title><rect x="141.5" y="1171.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="141.5" y="1155.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="141.5" y="1139.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="141.5" y="1123.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="141.5" y="1107.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.5" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="141.5" y="1091.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="144.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="1075.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="144.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="1059.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="144.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="1043.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="144.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="1027.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="144.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="1011.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="144.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="995.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="144.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="979.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="144.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="963.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="144.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="947.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="144.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="931.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="144.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="915.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="144.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="899.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="144.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="883.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="144.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="867.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="144.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="851.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="144.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="835.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="144.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="819.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="144.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="803.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="144.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="787.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="144.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="771.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="144.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="755.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="144.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="739.0" width="3.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="144.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="723.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="144.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="707.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="144.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="691.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="144.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="675.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="144.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="659.0" width="3.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="144.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="643.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="144.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="627.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="144.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="611.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="144.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="595.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="144.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="579.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="144.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="563.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="144.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="547.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="144.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="531.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="144.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="515.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="144.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="499.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="144.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="483.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="144.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="141.5" y="467.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="144.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (11 samples, 3.61%)</title><rect x="145.4" y="1187.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.4" y="1198.0">ru/m..</text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.33%)</title><rect x="145.4" y="1171.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.4" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (10 samples, 3.28%)</title><rect x="149.3" y="1171.0" width="38.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.3" y="1182.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 3.28%)</title><rect x="149.3" y="1155.0" width="38.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.3" y="1166.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 3.28%)</title><rect x="149.3" y="1139.0" width="38.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.3" y="1150.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1 samples, 0.33%)</title><rect x="153.1" y="1123.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="153.1" y="1107.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.1" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="153.1" y="1091.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="156.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="1075.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="156.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="1059.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="156.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="1043.0" width="3.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="156.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="1027.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="156.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="1011.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="156.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="995.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="156.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="979.0" width="3.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="156.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="963.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="156.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="947.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="156.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="931.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="156.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="915.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="156.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="899.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="156.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="883.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="156.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="867.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="156.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="851.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="156.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="835.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="156.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="819.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="156.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="803.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="156.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="787.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="156.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="153.1" y="771.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="156.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 0.66%)</title><rect x="157.0" y="1123.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.0" y="1134.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.66%)</title><rect x="157.0" y="1107.0" width="7.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="160.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1091.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="163.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1075.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="163.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1059.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="163.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1043.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="163.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1027.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="163.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="1011.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="163.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="160.9" y="995.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="163.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (6 samples, 1.97%)</title><rect x="164.8" y="1123.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.8" y="1134.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.33%)</title><rect x="164.8" y="1107.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="167.8" y="1118.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.33%)</title><rect x="164.8" y="1091.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="167.8" y="1102.0"></text>
</g>
<g>
<title>__send (5 samples, 1.64%)</title><rect x="168.6" y="1107.0" width="19.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="171.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1091.0" width="19.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1075.0" width="19.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="171.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1059.0" width="19.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="171.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1043.0" width="19.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="171.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1027.0" width="19.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="171.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="1011.0" width="19.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="171.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="995.0" width="19.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="171.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="168.6" y="979.0" width="19.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="171.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="172.5" y="963.0" width="15.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="175.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="172.5" y="947.0" width="15.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="175.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="172.5" y="931.0" width="15.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="175.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="172.5" y="915.0" width="15.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="175.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="899.0" width="7.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="183.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="883.0" width="7.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="183.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="867.0" width="7.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="183.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="851.0" width="7.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="183.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="835.0" width="7.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="183.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="819.0" width="7.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="183.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="180.2" y="803.0" width="7.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="183.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="787.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="187.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="771.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="187.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="755.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="187.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="739.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="187.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="723.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="187.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="707.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="691.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="187.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="675.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="187.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="659.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="187.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="643.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="187.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="627.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="187.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="611.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="187.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="595.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="187.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="579.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="187.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="563.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="187.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="184.1" y="547.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="187.1" y="558.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6089] (4 samples, 1.31%)</title><rect x="188.0" y="1283.0" width="15.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="191.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 1.31%)</title><rect x="188.0" y="1267.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 1.31%)</title><rect x="188.0" y="1251.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 1.31%)</title><rect x="188.0" y="1235.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.0" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (4 samples, 1.31%)</title><rect x="188.0" y="1219.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.0" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (4 samples, 1.31%)</title><rect x="188.0" y="1203.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.66%)</title><rect x="188.0" y="1187.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.66%)</title><rect x="188.0" y="1171.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.66%)</title><rect x="188.0" y="1155.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.66%)</title><rect x="188.0" y="1139.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.66%)</title><rect x="188.0" y="1123.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.66%)</title><rect x="188.0" y="1107.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.0" y="1118.0"></text>
</g>
<g>
<title>__send (2 samples, 0.66%)</title><rect x="188.0" y="1091.0" width="7.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="191.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="1075.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="191.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="1059.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="1043.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="191.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="1027.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="1011.0" width="7.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="191.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="995.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="191.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="979.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="191.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="963.0" width="7.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="191.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="947.0" width="7.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="191.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="931.0" width="7.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="915.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="899.0" width="7.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="883.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="191.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="867.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="851.0" width="7.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="191.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="835.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="819.0" width="7.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="191.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="803.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="787.0" width="7.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="191.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="771.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="191.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="755.0" width="7.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="191.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="739.0" width="7.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="191.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="723.0" width="7.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="191.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="707.0" width="7.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="191.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="691.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="675.0" width="7.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="191.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="659.0" width="7.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="191.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="643.0" width="7.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="191.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="627.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="611.0" width="7.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="191.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="595.0" width="7.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="191.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="188.0" y="579.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="191.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="563.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="194.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="547.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="194.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="531.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="194.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="515.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="194.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="499.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="194.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="483.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="194.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="467.0" width="3.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="194.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="451.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="194.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="435.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="194.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="419.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="194.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="191.8" y="403.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="194.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (2 samples, 0.66%)</title><rect x="195.7" y="1187.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.7" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (2 samples, 0.66%)</title><rect x="195.7" y="1171.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="195.7" y="1155.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.7" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.66%)</title><rect x="195.7" y="1139.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.66%)</title><rect x="195.7" y="1123.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.66%)</title><rect x="195.7" y="1107.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.66%)</title><rect x="195.7" y="1091.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.33%)</title><rect x="195.7" y="1075.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.33%)</title><rect x="199.6" y="1075.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.33%)</title><rect x="199.6" y="1059.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.33%)</title><rect x="199.6" y="1043.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.33%)</title><rect x="199.6" y="1027.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.33%)</title><rect x="199.6" y="1011.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.33%)</title><rect x="199.6" y="995.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.33%)</title><rect x="199.6" y="979.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.33%)</title><rect x="199.6" y="963.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="974.0"></text>
</g>
<g>
<title>[asyncWorker-0 tid=6093] (5 samples, 1.64%)</title><rect x="203.4" y="1283.0" width="19.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="206.4" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.33%)</title><rect x="203.4" y="1267.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="206.4" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.33%)</title><rect x="203.4" y="1251.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="206.4" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.33%)</title><rect x="203.4" y="1235.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="206.4" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.33%)</title><rect x="203.4" y="1219.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="206.4" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.33%)</title><rect x="203.4" y="1203.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="206.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 1.31%)</title><rect x="207.3" y="1267.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 1.31%)</title><rect x="207.3" y="1251.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 1.31%)</title><rect x="207.3" y="1235.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="207.3" y="1219.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="207.3" y="1203.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="207.3" y="1187.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="207.3" y="1171.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="207.3" y="1155.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="207.3" y="1139.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="207.3" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.3" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="207.3" y="1107.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="210.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1091.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="210.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1075.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="210.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1059.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="210.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1043.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="210.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1027.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="210.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="207.3" y="1011.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="210.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (3 samples, 0.98%)</title><rect x="211.2" y="1219.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.2" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (3 samples, 0.98%)</title><rect x="211.2" y="1203.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.66%)</title><rect x="211.2" y="1187.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.66%)</title><rect x="211.2" y="1171.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.33%)</title><rect x="211.2" y="1155.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.33%)</title><rect x="211.2" y="1139.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.33%)</title><rect x="211.2" y="1123.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.33%)</title><rect x="211.2" y="1107.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="215.0" y="1155.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="215.0" y="1139.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="215.0" y="1123.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="215.0" y="1107.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.0" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="215.0" y="1091.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="218.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="1075.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="218.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="1059.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="218.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="1043.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="218.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="1027.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="218.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="1011.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="218.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="995.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="218.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="979.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="218.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="215.0" y="963.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="218.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (1 samples, 0.33%)</title><rect x="218.9" y="1187.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (1 samples, 0.33%)</title><rect x="218.9" y="1171.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.9" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (1 samples, 0.33%)</title><rect x="218.9" y="1155.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.33%)</title><rect x="218.9" y="1139.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.33%)</title><rect x="218.9" y="1123.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.33%)</title><rect x="218.9" y="1107.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.33%)</title><rect x="218.9" y="1091.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.9" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.33%)</title><rect x="218.9" y="1075.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.hasNext (1 samples, 0.33%)</title><rect x="218.9" y="1059.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.9" y="1070.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6085] (17 samples, 5.57%)</title><rect x="222.8" y="1283.0" width="65.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="225.8" y="1294.0">[asyncW..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 5.57%)</title><rect x="222.8" y="1267.0" width="65.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.8" y="1278.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 5.57%)</title><rect x="222.8" y="1251.0" width="65.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.8" y="1262.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 5.57%)</title><rect x="222.8" y="1235.0" width="65.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.8" y="1246.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.66%)</title><rect x="226.7" y="1219.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.66%)</title><rect x="226.7" y="1203.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.66%)</title><rect x="226.7" y="1187.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.66%)</title><rect x="226.7" y="1171.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.66%)</title><rect x="226.7" y="1155.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.7" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.33%)</title><rect x="226.7" y="1139.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="229.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1139.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="233.5" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.33%)</title><rect x="230.5" y="1123.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="233.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1107.0" width="3.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="233.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1091.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="233.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1075.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="233.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1059.0" width="3.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="233.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1043.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="233.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1027.0" width="3.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="233.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="230.5" y="1011.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="233.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (14 samples, 4.59%)</title><rect x="234.4" y="1219.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.4" y="1230.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (14 samples, 4.59%)</title><rect x="234.4" y="1203.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.4" y="1214.0">ru/ma..</text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (1 samples, 0.33%)</title><rect x="234.4" y="1187.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.4" y="1198.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.33%)</title><rect x="234.4" y="1171.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.33%)</title><rect x="234.4" y="1155.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.33%)</title><rect x="234.4" y="1139.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$98/512492279.get$Lambda (1 samples, 0.33%)</title><rect x="234.4" y="1123.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.98%)</title><rect x="238.3" y="1187.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.98%)</title><rect x="238.3" y="1171.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.33%)</title><rect x="238.3" y="1155.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.3" y="1166.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.33%)</title><rect x="238.3" y="1139.0" width="3.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="241.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.66%)</title><rect x="242.1" y="1155.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.66%)</title><rect x="242.1" y="1139.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="246.0" y="1123.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="246.0" y="1107.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="246.0" y="1091.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="249.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="1075.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="1059.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="249.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="1043.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="249.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="1027.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="1011.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="249.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="995.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="249.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="979.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="963.0" width="3.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="249.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="947.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="249.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="931.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="249.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="915.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="899.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="249.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="883.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="867.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="249.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="851.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="835.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="249.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="819.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="249.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="803.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="249.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="787.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="249.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="771.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="249.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="755.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="249.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="739.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="249.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="723.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="249.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="707.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="249.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="691.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="249.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="675.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="659.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="249.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="643.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="249.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="627.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="249.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="611.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="249.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="595.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="579.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="249.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="563.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="249.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="246.0" y="547.0" width="3.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="249.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (10 samples, 3.28%)</title><rect x="249.9" y="1187.0" width="38.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="1198.0">ru/..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.33%)</title><rect x="249.9" y="1171.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.33%)</title><rect x="249.9" y="1155.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (2 samples, 0.66%)</title><rect x="253.7" y="1171.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (2 samples, 0.66%)</title><rect x="253.7" y="1155.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.7" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="253.7" y="1139.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.66%)</title><rect x="253.7" y="1123.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.66%)</title><rect x="253.7" y="1107.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.66%)</title><rect x="253.7" y="1091.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.66%)</title><rect x="253.7" y="1075.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (2 samples, 0.66%)</title><rect x="253.7" y="1059.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (1 samples, 0.33%)</title><rect x="253.7" y="1043.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (1 samples, 0.33%)</title><rect x="253.7" y="1027.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.33%)</title><rect x="257.6" y="1043.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (1 samples, 0.33%)</title><rect x="257.6" y="1027.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.33%)</title><rect x="257.6" y="1011.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="257.6" y="995.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.33%)</title><rect x="257.6" y="979.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.33%)</title><rect x="257.6" y="963.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.33%)</title><rect x="257.6" y="947.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.33%)</title><rect x="257.6" y="931.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (7 samples, 2.30%)</title><rect x="261.5" y="1171.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.5" y="1182.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7 samples, 2.30%)</title><rect x="261.5" y="1155.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.5" y="1166.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7 samples, 2.30%)</title><rect x="261.5" y="1139.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.5" y="1150.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1 samples, 0.33%)</title><rect x="265.3" y="1123.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="265.3" y="1107.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.3" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="265.3" y="1091.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="268.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="1075.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="268.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="1059.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="268.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="1043.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="268.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="1027.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="268.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="1011.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="268.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="995.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="268.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="979.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="268.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="963.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="268.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="947.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="268.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="265.3" y="931.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="268.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (5 samples, 1.64%)</title><rect x="269.2" y="1123.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.2" y="1134.0"></text>
</g>
<g>
<title>__send (5 samples, 1.64%)</title><rect x="269.2" y="1107.0" width="19.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="272.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1091.0" width="19.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="272.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1075.0" width="19.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="272.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1059.0" width="19.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="272.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1043.0" width="19.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="272.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1027.0" width="19.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="272.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="1011.0" width="19.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="272.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="995.0" width="19.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="272.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="979.0" width="19.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="272.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="269.2" y="963.0" width="19.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="272.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="947.0" width="15.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="931.0" width="15.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="276.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="915.0" width="15.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="276.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="899.0" width="15.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="276.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="883.0" width="15.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="276.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="867.0" width="15.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="276.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="851.0" width="15.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="276.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="835.0" width="15.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="276.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="273.1" y="819.0" width="15.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="276.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="280.8" y="803.0" width="7.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="787.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="287.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="771.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="287.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="755.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="287.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="739.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="287.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="723.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="287.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="707.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="287.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="691.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="287.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="675.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="287.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="659.0" width="3.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="287.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="643.0" width="3.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="287.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="627.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="287.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="611.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="287.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="595.0" width="3.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="287.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="579.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="287.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="563.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="287.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="547.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="287.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="531.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="287.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="515.0" width="3.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="287.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="499.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="287.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="284.7" y="483.0" width="3.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="287.7" y="494.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6090] (4 samples, 1.31%)</title><rect x="288.6" y="1283.0" width="15.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="291.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 1.31%)</title><rect x="288.6" y="1267.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 1.31%)</title><rect x="288.6" y="1251.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 1.31%)</title><rect x="288.6" y="1235.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="288.6" y="1219.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="288.6" y="1203.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="288.6" y="1187.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.33%)</title><rect x="288.6" y="1171.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (3 samples, 0.98%)</title><rect x="292.4" y="1219.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.4" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (3 samples, 0.98%)</title><rect x="292.4" y="1203.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.33%)</title><rect x="292.4" y="1187.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.33%)</title><rect x="292.4" y="1171.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="292.4" y="1155.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="292.4" y="1139.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="292.4" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="292.4" y="1107.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.4" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="292.4" y="1091.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="295.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="1075.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="295.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="1059.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="295.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="1043.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="295.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="1027.0" width="3.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="295.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="1011.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="295.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="995.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="295.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="979.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="295.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="963.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="295.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="947.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="295.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="931.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="295.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="915.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="295.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="899.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="295.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="883.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="295.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="867.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="295.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="851.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="295.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="835.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="295.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="819.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="295.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="803.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="295.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="787.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="295.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="292.4" y="771.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="295.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (2 samples, 0.66%)</title><rect x="296.3" y="1187.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (2 samples, 0.66%)</title><rect x="296.3" y="1171.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="296.3" y="1155.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.66%)</title><rect x="296.3" y="1139.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.66%)</title><rect x="296.3" y="1123.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.66%)</title><rect x="296.3" y="1107.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.66%)</title><rect x="296.3" y="1091.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (2 samples, 0.66%)</title><rect x="296.3" y="1075.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.33%)</title><rect x="296.3" y="1059.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.33%)</title><rect x="296.3" y="1043.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.33%)</title><rect x="296.3" y="1027.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.33%)</title><rect x="296.3" y="1011.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.33%)</title><rect x="296.3" y="995.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.33%)</title><rect x="296.3" y="979.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.33%)</title><rect x="300.2" y="1059.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (1 samples, 0.33%)</title><rect x="300.2" y="1043.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.33%)</title><rect x="300.2" y="1027.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="300.2" y="1011.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.33%)</title><rect x="300.2" y="995.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.33%)</title><rect x="300.2" y="979.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.33%)</title><rect x="300.2" y="963.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.33%)</title><rect x="300.2" y="947.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.33%)</title><rect x="300.2" y="931.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.2" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.33%)</title><rect x="300.2" y="915.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.33%)</title><rect x="300.2" y="899.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.2" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.33%)</title><rect x="300.2" y="883.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.2" y="894.0"></text>
</g>
<g>
<title>[asyncWorker-1 tid=6094] (6 samples, 1.97%)</title><rect x="304.0" y="1283.0" width="23.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="307.0" y="1294.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 1.97%)</title><rect x="304.0" y="1267.0" width="23.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.0" y="1278.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 1.97%)</title><rect x="304.0" y="1251.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.0" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 1.97%)</title><rect x="304.0" y="1235.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.0" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.66%)</title><rect x="307.9" y="1219.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.66%)</title><rect x="307.9" y="1203.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="307.9" y="1187.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.33%)</title><rect x="307.9" y="1171.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.33%)</title><rect x="307.9" y="1155.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.9" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.33%)</title><rect x="307.9" y="1139.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="310.9" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.33%)</title><rect x="307.9" y="1123.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="310.9" y="1134.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.33%)</title><rect x="307.9" y="1107.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="310.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="311.8" y="1187.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="311.8" y="1171.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="311.8" y="1155.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="311.8" y="1139.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="311.8" y="1123.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.8" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="311.8" y="1107.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="314.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="311.8" y="1091.0" width="3.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="314.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="311.8" y="1075.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="314.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="311.8" y="1059.0" width="3.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="314.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="311.8" y="1043.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="314.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="311.8" y="1027.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="314.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (3 samples, 0.98%)</title><rect x="315.6" y="1219.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (3 samples, 0.98%)</title><rect x="315.6" y="1203.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.66%)</title><rect x="315.6" y="1187.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.66%)</title><rect x="315.6" y="1171.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.33%)</title><rect x="315.6" y="1155.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.33%)</title><rect x="315.6" y="1139.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.33%)</title><rect x="315.6" y="1123.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.33%)</title><rect x="315.6" y="1107.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="319.5" y="1155.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="319.5" y="1139.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="319.5" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="319.5" y="1107.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.5" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="319.5" y="1091.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="322.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="1075.0" width="3.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="322.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="1059.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="322.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="1043.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="322.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="1027.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="322.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="1011.0" width="3.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="322.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="995.0" width="3.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="322.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="979.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="322.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="963.0" width="3.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="322.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="947.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="322.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="931.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="322.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="915.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="322.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="319.5" y="899.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="322.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (1 samples, 0.33%)</title><rect x="323.4" y="1187.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.4" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (1 samples, 0.33%)</title><rect x="323.4" y="1171.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.4" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (1 samples, 0.33%)</title><rect x="323.4" y="1155.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (1 samples, 0.33%)</title><rect x="323.4" y="1139.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.4" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.33%)</title><rect x="323.4" y="1123.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.4" y="1134.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6086] (16 samples, 5.25%)</title><rect x="327.2" y="1283.0" width="61.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="330.2" y="1294.0">[async..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.33%)</title><rect x="327.2" y="1267.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="330.2" y="1278.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.33%)</title><rect x="327.2" y="1251.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="330.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 4.92%)</title><rect x="331.1" y="1267.0" width="58.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.1" y="1278.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 4.92%)</title><rect x="331.1" y="1251.0" width="58.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.1" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 4.92%)</title><rect x="331.1" y="1235.0" width="58.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.1" y="1246.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="331.1" y="1219.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="331.1" y="1203.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="331.1" y="1187.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.33%)</title><rect x="331.1" y="1171.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.33%)</title><rect x="331.1" y="1155.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.1" y="1166.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.33%)</title><rect x="331.1" y="1139.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="334.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (14 samples, 4.59%)</title><rect x="335.0" y="1219.0" width="54.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.0" y="1230.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (14 samples, 4.59%)</title><rect x="335.0" y="1203.0" width="54.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.0" y="1214.0">ru/ma..</text>
</g>
<g>
<title>java/util/Comparator.comparingInt (1 samples, 0.33%)</title><rect x="338.9" y="1187.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.33%)</title><rect x="338.9" y="1171.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.33%)</title><rect x="338.9" y="1155.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.9" y="1166.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$86/985686918.get$Lambda (1 samples, 0.33%)</title><rect x="338.9" y="1139.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.9" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (1 samples, 0.33%)</title><rect x="342.7" y="1187.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.7" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.33%)</title><rect x="342.7" y="1171.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.7" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.33%)</title><rect x="342.7" y="1155.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.7" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.33%)</title><rect x="346.6" y="1187.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.6" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.33%)</title><rect x="346.6" y="1171.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.6" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.33%)</title><rect x="346.6" y="1155.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.6" y="1166.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.33%)</title><rect x="346.6" y="1139.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="349.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (2 samples, 0.66%)</title><rect x="350.5" y="1187.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.5" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2 samples, 0.66%)</title><rect x="350.5" y="1171.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.66%)</title><rect x="350.5" y="1155.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.5" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.66%)</title><rect x="350.5" y="1139.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.66%)</title><rect x="350.5" y="1123.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.66%)</title><rect x="350.5" y="1107.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (2 samples, 0.66%)</title><rect x="350.5" y="1091.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.66%)</title><rect x="350.5" y="1075.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.5" y="1086.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$101/112769521.apply (2 samples, 0.66%)</title><rect x="350.5" y="1059.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.5" y="1070.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.66%)</title><rect x="350.5" y="1043.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.5" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.33%)</title><rect x="350.5" y="1027.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="353.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$98/512492279.compare (1 samples, 0.33%)</title><rect x="354.3" y="1027.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.33%)</title><rect x="354.3" y="1011.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$86/985686918.compare (1 samples, 0.33%)</title><rect x="354.3" y="995.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.3" y="1006.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingInt$7b0bb60$1 (1 samples, 0.33%)</title><rect x="354.3" y="979.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.compare (1 samples, 0.33%)</title><rect x="354.3" y="963.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (8 samples, 2.62%)</title><rect x="358.2" y="1187.0" width="30.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.2" y="1198.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (2 samples, 0.66%)</title><rect x="358.2" y="1171.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (2 samples, 0.66%)</title><rect x="358.2" y="1155.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="358.2" y="1139.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.66%)</title><rect x="358.2" y="1123.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.66%)</title><rect x="358.2" y="1107.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.66%)</title><rect x="358.2" y="1091.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.33%)</title><rect x="362.1" y="1075.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.33%)</title><rect x="362.1" y="1059.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.33%)</title><rect x="362.1" y="1043.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.33%)</title><rect x="362.1" y="1027.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.33%)</title><rect x="362.1" y="1011.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (6 samples, 1.97%)</title><rect x="365.9" y="1171.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.9" y="1182.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6 samples, 1.97%)</title><rect x="365.9" y="1155.0" width="23.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.9" y="1166.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6 samples, 1.97%)</title><rect x="365.9" y="1139.0" width="23.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.9" y="1150.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.33%)</title><rect x="365.9" y="1123.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.33%)</title><rect x="365.9" y="1107.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.33%)</title><rect x="365.9" y="1091.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.33%)</title><rect x="365.9" y="1075.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.33%)</title><rect x="365.9" y="1059.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1 samples, 0.33%)</title><rect x="369.8" y="1123.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.33%)</title><rect x="369.8" y="1107.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.8" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.33%)</title><rect x="369.8" y="1091.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="372.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="1075.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="372.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="1059.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="372.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="1043.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="372.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="1027.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="372.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="1011.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="372.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="995.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="372.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="979.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="372.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="963.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="372.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="947.0" width="3.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="372.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="931.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="372.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="369.8" y="915.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="372.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.33%)</title><rect x="373.7" y="1123.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.33%)</title><rect x="373.7" y="1107.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.33%)</title><rect x="373.7" y="1091.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.33%)</title><rect x="373.7" y="1075.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3 samples, 0.98%)</title><rect x="377.5" y="1123.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.5" y="1134.0"></text>
</g>
<g>
<title>__send (3 samples, 0.98%)</title><rect x="377.5" y="1107.0" width="11.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="380.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1091.0" width="11.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="380.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1075.0" width="11.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="380.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1059.0" width="11.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="380.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1043.0" width="11.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="380.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1027.0" width="11.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="380.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="1011.0" width="11.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="380.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="995.0" width="11.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="380.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="979.0" width="11.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="380.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="963.0" width="11.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="380.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="947.0" width="11.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="380.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="931.0" width="11.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="380.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="915.0" width="11.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="380.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="899.0" width="11.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="380.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="883.0" width="11.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="380.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="867.0" width="11.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="380.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="851.0" width="11.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="380.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="835.0" width="11.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="380.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="819.0" width="11.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="380.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="803.0" width="11.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="380.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="787.0" width="11.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="380.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="771.0" width="11.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="380.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="755.0" width="11.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="380.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="739.0" width="11.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="380.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="723.0" width="11.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="380.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="707.0" width="11.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="380.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="691.0" width="11.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="380.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="675.0" width="11.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="380.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="659.0" width="11.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="380.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="643.0" width="11.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="380.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="627.0" width="11.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="380.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="611.0" width="11.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="380.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="595.0" width="11.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="380.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="579.0" width="11.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="380.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="563.0" width="11.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="380.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="547.0" width="11.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="380.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="531.0" width="11.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="380.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="515.0" width="11.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="380.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="377.5" y="499.0" width="11.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="380.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="381.4" y="483.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="384.4" y="494.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6091] (5 samples, 1.64%)</title><rect x="389.1" y="1283.0" width="19.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="392.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 1.64%)</title><rect x="389.1" y="1267.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 1.64%)</title><rect x="389.1" y="1251.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 1.64%)</title><rect x="389.1" y="1235.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.66%)</title><rect x="393.0" y="1219.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.66%)</title><rect x="393.0" y="1203.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.66%)</title><rect x="393.0" y="1187.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.66%)</title><rect x="393.0" y="1171.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.66%)</title><rect x="393.0" y="1155.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.0" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.33%)</title><rect x="393.0" y="1139.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="396.0" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.33%)</title><rect x="393.0" y="1123.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="396.0" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.33%)</title><rect x="393.0" y="1107.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="396.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="396.9" y="1139.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="399.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.33%)</title><rect x="396.9" y="1123.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="399.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (2 samples, 0.66%)</title><rect x="400.8" y="1219.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.8" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (2 samples, 0.66%)</title><rect x="400.8" y="1203.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.8" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (2 samples, 0.66%)</title><rect x="400.8" y="1187.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.8" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (2 samples, 0.66%)</title><rect x="400.8" y="1171.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="400.8" y="1155.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (2 samples, 0.66%)</title><rect x="400.8" y="1139.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050075015.linkToTargetMethod (1 samples, 0.33%)</title><rect x="400.8" y="1123.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2075376465.invoke (1 samples, 0.33%)</title><rect x="400.8" y="1107.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/817507397.invokeStatic (1 samples, 0.33%)</title><rect x="400.8" y="1091.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.33%)</title><rect x="400.8" y="1075.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.33%)</title><rect x="404.6" y="1123.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.6" y="1134.0"></text>
</g>
<g>
<title>[asyncWorker-2 tid=6095] (3 samples, 0.98%)</title><rect x="408.5" y="1283.0" width="11.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="411.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.98%)</title><rect x="408.5" y="1267.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.98%)</title><rect x="408.5" y="1251.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.98%)</title><rect x="408.5" y="1235.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="408.5" y="1219.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="408.5" y="1203.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.33%)</title><rect x="408.5" y="1187.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.33%)</title><rect x="408.5" y="1171.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.33%)</title><rect x="408.5" y="1155.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.33%)</title><rect x="408.5" y="1139.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.33%)</title><rect x="408.5" y="1123.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.5" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.33%)</title><rect x="408.5" y="1107.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="411.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1091.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="411.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1075.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="411.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1059.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="411.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1043.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="411.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1027.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="1011.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="411.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="995.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="411.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="408.5" y="979.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="411.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (2 samples, 0.66%)</title><rect x="412.4" y="1219.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.4" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (2 samples, 0.66%)</title><rect x="412.4" y="1203.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.33%)</title><rect x="412.4" y="1187.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.33%)</title><rect x="412.4" y="1171.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="412.4" y="1155.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="412.4" y="1139.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (1 samples, 0.33%)</title><rect x="416.2" y="1187.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (1 samples, 0.33%)</title><rect x="416.2" y="1171.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (1 samples, 0.33%)</title><rect x="416.2" y="1155.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.33%)</title><rect x="416.2" y="1139.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.33%)</title><rect x="416.2" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.33%)</title><rect x="416.2" y="1107.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.33%)</title><rect x="416.2" y="1091.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.33%)</title><rect x="416.2" y="1075.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="416.2" y="1059.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.33%)</title><rect x="416.2" y="1043.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.2" y="1054.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6087] (14 samples, 4.59%)</title><rect x="420.1" y="1283.0" width="54.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="423.1" y="1294.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 4.59%)</title><rect x="420.1" y="1267.0" width="54.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.1" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 4.59%)</title><rect x="420.1" y="1251.0" width="54.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.1" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 4.59%)</title><rect x="420.1" y="1235.0" width="54.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.1" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="420.1" y="1219.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="420.1" y="1203.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="420.1" y="1187.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.33%)</title><rect x="420.1" y="1171.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.33%)</title><rect x="420.1" y="1155.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.1" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.33%)</title><rect x="420.1" y="1139.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="423.1" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.33%)</title><rect x="420.1" y="1123.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="423.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="420.1" y="1107.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="423.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="420.1" y="1091.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="423.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/936104449.run (13 samples, 4.26%)</title><rect x="424.0" y="1219.0" width="50.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.0" y="1230.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (13 samples, 4.26%)</title><rect x="424.0" y="1203.0" width="50.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.0" y="1214.0">ru/ma..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.66%)</title><rect x="424.0" y="1187.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.0" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.66%)</title><rect x="424.0" y="1171.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.0" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.66%)</title><rect x="424.0" y="1155.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.0" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.66%)</title><rect x="424.0" y="1139.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.66%)</title><rect x="424.0" y="1123.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.0" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.66%)</title><rect x="424.0" y="1107.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.33%)</title><rect x="424.0" y="1091.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/1121454968.accept (1 samples, 0.33%)</title><rect x="424.0" y="1075.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (1 samples, 0.33%)</title><rect x="424.0" y="1059.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (1 samples, 0.33%)</title><rect x="424.0" y="1043.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.33%)</title><rect x="424.0" y="1027.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.33%)</title><rect x="424.0" y="1011.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.0" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.33%)</title><rect x="424.0" y="995.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="427.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.33%)</title><rect x="427.8" y="1091.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$74/1180167125.test (1 samples, 0.33%)</title><rect x="427.8" y="1075.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.validResponse (1 samples, 0.33%)</title><rect x="427.8" y="1059.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.33%)</title><rect x="427.8" y="1043.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.33%)</title><rect x="431.7" y="1187.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.7" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.33%)</title><rect x="431.7" y="1171.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.7" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.33%)</title><rect x="431.7" y="1155.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.7" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.33%)</title><rect x="431.7" y="1139.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.7" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.33%)</title><rect x="431.7" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.7" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.33%)</title><rect x="431.7" y="1107.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (1 samples, 0.33%)</title><rect x="431.7" y="1091.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.33%)</title><rect x="431.7" y="1075.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.7" y="1086.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$101/112769521.apply (1 samples, 0.33%)</title><rect x="431.7" y="1059.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.7" y="1070.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.33%)</title><rect x="431.7" y="1043.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$98/512492279.compare (1 samples, 0.33%)</title><rect x="431.7" y="1027.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.33%)</title><rect x="431.7" y="1011.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (10 samples, 3.28%)</title><rect x="435.6" y="1187.0" width="38.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.6" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$64/170284425.action (5 samples, 1.64%)</title><rect x="435.6" y="1171.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (5 samples, 1.64%)</title><rect x="435.6" y="1155.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (5 samples, 1.64%)</title><rect x="435.6" y="1139.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (5 samples, 1.64%)</title><rect x="435.6" y="1123.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (5 samples, 1.64%)</title><rect x="435.6" y="1107.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (5 samples, 1.64%)</title><rect x="435.6" y="1091.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.33%)</title><rect x="435.6" y="1075.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.33%)</title><rect x="435.6" y="1059.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="435.6" y="1043.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.6" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.33%)</title><rect x="435.6" y="1027.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.33%)</title><rect x="435.6" y="1011.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.33%)</title><rect x="435.6" y="995.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.33%)</title><rect x="435.6" y="979.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.33%)</title><rect x="435.6" y="963.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (4 samples, 1.31%)</title><rect x="439.4" y="1075.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.4" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.33%)</title><rect x="439.4" y="1059.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.33%)</title><rect x="443.3" y="1059.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="443.3" y="1043.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.33%)</title><rect x="443.3" y="1027.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (1 samples, 0.33%)</title><rect x="443.3" y="1011.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (1 samples, 0.33%)</title><rect x="443.3" y="995.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (2 samples, 0.66%)</title><rect x="447.2" y="1059.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.66%)</title><rect x="447.2" y="1043.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (2 samples, 0.66%)</title><rect x="447.2" y="1027.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.33%)</title><rect x="451.0" y="1011.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="451.0" y="995.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.33%)</title><rect x="451.0" y="979.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.33%)</title><rect x="451.0" y="963.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.33%)</title><rect x="451.0" y="947.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (5 samples, 1.64%)</title><rect x="454.9" y="1171.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5 samples, 1.64%)</title><rect x="454.9" y="1155.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5 samples, 1.64%)</title><rect x="454.9" y="1139.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (5 samples, 1.64%)</title><rect x="454.9" y="1123.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.9" y="1134.0"></text>
</g>
<g>
<title>__send (5 samples, 1.64%)</title><rect x="454.9" y="1107.0" width="19.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="457.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1091.0" width="19.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="457.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1075.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="457.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1059.0" width="19.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="457.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1043.0" width="19.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="457.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1027.0" width="19.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="457.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="1011.0" width="19.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="457.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="995.0" width="19.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="457.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="979.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="457.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="963.0" width="19.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="457.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="947.0" width="19.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="457.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="931.0" width="19.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="457.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="915.0" width="19.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="457.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="899.0" width="19.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="457.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="883.0" width="19.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="457.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="867.0" width="19.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="457.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="851.0" width="19.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="457.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="835.0" width="19.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="457.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="819.0" width="19.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="457.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="803.0" width="19.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="457.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="787.0" width="19.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="457.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="771.0" width="19.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="457.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="755.0" width="19.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="457.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="739.0" width="19.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="457.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="723.0" width="19.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="457.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="707.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="457.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="691.0" width="19.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="457.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="675.0" width="19.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="457.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="659.0" width="19.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="457.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="643.0" width="19.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="457.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="627.0" width="19.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="457.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.64%)</title><rect x="454.9" y="611.0" width="19.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="457.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="458.8" y="595.0" width="15.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="461.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="458.8" y="579.0" width="15.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="461.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.31%)</title><rect x="458.8" y="563.0" width="15.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="461.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="462.7" y="547.0" width="11.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="465.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="462.7" y="531.0" width="11.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="465.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="462.7" y="515.0" width="11.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="465.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.98%)</title><rect x="462.7" y="499.0" width="11.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="465.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="466.5" y="483.0" width="7.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="469.5" y="494.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6092] (5 samples, 1.64%)</title><rect x="474.3" y="1283.0" width="19.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="477.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 1.64%)</title><rect x="474.3" y="1267.0" width="19.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 1.64%)</title><rect x="474.3" y="1251.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 1.64%)</title><rect x="474.3" y="1235.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="474.3" y="1219.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="474.3" y="1203.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="474.3" y="1187.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.33%)</title><rect x="474.3" y="1171.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.33%)</title><rect x="474.3" y="1155.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="474.3" y="1139.0" width="3.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="477.3" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.33%)</title><rect x="474.3" y="1123.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="477.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (4 samples, 1.31%)</title><rect x="478.1" y="1219.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (4 samples, 1.31%)</title><rect x="478.1" y="1203.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 1.31%)</title><rect x="478.1" y="1187.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.1" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.33%)</title><rect x="478.1" y="1171.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.98%)</title><rect x="482.0" y="1171.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.98%)</title><rect x="482.0" y="1155.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.98%)</title><rect x="482.0" y="1139.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.98%)</title><rect x="482.0" y="1123.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.98%)</title><rect x="482.0" y="1107.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.0" y="1118.0"></text>
</g>
<g>
<title>__send (3 samples, 0.98%)</title><rect x="482.0" y="1091.0" width="11.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="485.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="1075.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="488.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="1059.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="488.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="1043.0" width="7.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="488.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="1027.0" width="7.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="488.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="1011.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="488.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="995.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="488.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="979.0" width="7.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="488.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="963.0" width="7.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="488.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="947.0" width="7.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="488.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="931.0" width="7.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="488.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.66%)</title><rect x="485.9" y="915.0" width="7.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="488.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="899.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="492.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="883.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="492.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="867.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="492.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="851.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="835.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="492.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="819.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="492.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="803.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="492.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="787.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="492.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="771.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="492.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="755.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="492.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="739.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="492.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="723.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="492.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="707.0" width="3.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="492.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="691.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="675.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="659.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="492.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="643.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="627.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="611.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="595.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="579.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="492.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="563.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="492.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="547.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="492.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="531.0" width="3.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="492.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="515.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="492.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="499.0" width="3.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="492.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="483.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="489.7" y="467.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="492.7" y="478.0"></text>
</g>
<g>
<title>[asyncWorker-3 tid=6096] (4 samples, 1.31%)</title><rect x="493.6" y="1283.0" width="15.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="496.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 1.31%)</title><rect x="493.6" y="1267.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 1.31%)</title><rect x="493.6" y="1251.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 1.31%)</title><rect x="493.6" y="1235.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.33%)</title><rect x="493.6" y="1219.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.33%)</title><rect x="493.6" y="1203.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.33%)</title><rect x="493.6" y="1187.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.33%)</title><rect x="493.6" y="1171.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.33%)</title><rect x="493.6" y="1155.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="493.6" y="1139.0" width="3.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="496.6" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.33%)</title><rect x="493.6" y="1123.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="496.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$73/1268727901.run (3 samples, 0.98%)</title><rect x="497.5" y="1219.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.5" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (3 samples, 0.98%)</title><rect x="497.5" y="1203.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.33%)</title><rect x="497.5" y="1187.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.33%)</title><rect x="497.5" y="1171.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="497.5" y="1155.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.33%)</title><rect x="497.5" y="1139.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.33%)</title><rect x="497.5" y="1123.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.33%)</title><rect x="497.5" y="1107.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.5" y="1118.0"></text>
</g>
<g>
<title>__send (1 samples, 0.33%)</title><rect x="497.5" y="1091.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="500.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="1075.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="500.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="1059.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="500.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="1043.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="500.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="1027.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="500.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="1011.0" width="3.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="500.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="995.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="500.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="979.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="500.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="963.0" width="3.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="500.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="947.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="500.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="931.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="500.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="915.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="500.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="899.0" width="3.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="500.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="883.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="500.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="867.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="500.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="851.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="500.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="835.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="500.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="819.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="500.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="803.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="500.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="787.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="500.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="771.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="500.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="755.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="500.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="739.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="500.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="723.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="500.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="707.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="500.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="691.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="500.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="675.0" width="3.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="500.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="659.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="500.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="643.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="500.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="627.0" width="3.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="500.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="611.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="500.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="595.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="500.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="497.5" y="579.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="500.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$72/1097280301.action (2 samples, 0.66%)</title><rect x="501.3" y="1187.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (2 samples, 0.66%)</title><rect x="501.3" y="1171.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (2 samples, 0.66%)</title><rect x="501.3" y="1155.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.66%)</title><rect x="501.3" y="1139.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.33%)</title><rect x="505.2" y="1123.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.33%)</title><rect x="505.2" y="1107.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.33%)</title><rect x="505.2" y="1091.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.33%)</title><rect x="505.2" y="1075.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.33%)</title><rect x="505.2" y="1059.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.2" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.33%)</title><rect x="505.2" y="1043.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.2" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.33%)</title><rect x="505.2" y="1027.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.2" y="1038.0"></text>
</g>
<g>
<title>[tid=5993] (1 samples, 0.33%)</title><rect x="509.1" y="1283.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="512.1" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.33%)</title><rect x="509.1" y="1267.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="512.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1251.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="512.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1235.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="512.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1219.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="512.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1203.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="512.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1187.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="512.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="509.1" y="1171.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="512.1" y="1182.0"></text>
</g>
<g>
<title>[tid=5997] (166 samples, 54.43%)</title><rect x="513.0" y="1283.0" width="642.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="516.0" y="1294.0">[tid=5997]</text>
</g>
<g>
<title>start_thread (166 samples, 54.43%)</title><rect x="513.0" y="1267.0" width="642.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="516.0" y="1278.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (166 samples, 54.43%)</title><rect x="513.0" y="1251.0" width="642.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="516.0" y="1262.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (166 samples, 54.43%)</title><rect x="513.0" y="1235.0" width="642.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.0" y="1246.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (166 samples, 54.43%)</title><rect x="513.0" y="1219.0" width="642.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="516.0" y="1230.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (166 samples, 54.43%)</title><rect x="513.0" y="1203.0" width="642.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="516.0" y="1214.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (166 samples, 54.43%)</title><rect x="513.0" y="1187.0" width="642.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="516.0" y="1198.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (166 samples, 54.43%)</title><rect x="513.0" y="1171.0" width="642.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.0" y="1182.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (166 samples, 54.43%)</title><rect x="513.0" y="1155.0" width="642.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="516.0" y="1166.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (166 samples, 54.43%)</title><rect x="513.0" y="1139.0" width="642.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="516.0" y="1150.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Code_Gen() (97 samples, 31.80%)</title><rect x="513.0" y="1123.0" width="375.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="516.0" y="1134.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (5 samples, 1.64%)</title><rect x="513.0" y="1107.0" width="19.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.0" y="1118.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (3 samples, 0.98%)</title><rect x="513.0" y="1091.0" width="11.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.0" y="1102.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.33%)</title><rect x="520.7" y="1075.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="523.7" y="1086.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.33%)</title><rect x="524.6" y="1091.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="527.6" y="1102.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.33%)</title><rect x="524.6" y="1075.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="527.6" y="1086.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.33%)</title><rect x="528.4" y="1091.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="531.4" y="1102.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.33%)</title><rect x="532.3" y="1107.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="535.3" y="1118.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.33%)</title><rect x="532.3" y="1091.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="535.3" y="1102.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.33%)</title><rect x="532.3" y="1075.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="535.3" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (8 samples, 2.62%)</title><rect x="536.2" y="1107.0" width="30.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="539.2" y="1118.0">Ma..</text>
</g>
<g>
<title>Matcher::xform(Node*, int) (7 samples, 2.30%)</title><rect x="536.2" y="1091.0" width="27.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="539.2" y="1102.0">M..</text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.33%)</title><rect x="540.0" y="1075.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="543.0" y="1086.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 1.64%)</title><rect x="543.9" y="1075.0" width="19.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="546.9" y="1086.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.66%)</title><rect x="543.9" y="1059.0" width="7.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="546.9" y="1070.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.66%)</title><rect x="543.9" y="1043.0" width="7.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="546.9" y="1054.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.33%)</title><rect x="543.9" y="1027.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="546.9" y="1038.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.33%)</title><rect x="543.9" y="1011.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="546.9" y="1022.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.33%)</title><rect x="543.9" y="995.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="546.9" y="1006.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.33%)</title><rect x="543.9" y="979.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="546.9" y="990.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.33%)</title><rect x="547.8" y="1027.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="550.8" y="1038.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.33%)</title><rect x="547.8" y="1011.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="550.8" y="1022.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.98%)</title><rect x="551.6" y="1059.0" width="11.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="554.6" y="1070.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (3 samples, 0.98%)</title><rect x="551.6" y="1043.0" width="11.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="554.6" y="1054.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.33%)</title><rect x="551.6" y="1027.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="554.6" y="1038.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.33%)</title><rect x="551.6" y="1011.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="554.6" y="1022.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.33%)</title><rect x="555.5" y="1027.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="558.5" y="1038.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.33%)</title><rect x="559.4" y="1027.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="562.4" y="1038.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.33%)</title><rect x="563.2" y="1091.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="566.2" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (12 samples, 3.93%)</title><rect x="567.1" y="1107.0" width="46.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="570.1" y="1118.0">Phas..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (12 samples, 3.93%)</title><rect x="567.1" y="1091.0" width="46.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="570.1" y="1102.0">Phas..</text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.33%)</title><rect x="567.1" y="1075.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="570.1" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.98%)</title><rect x="571.0" y="1075.0" width="11.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="574.0" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (2 samples, 0.66%)</title><rect x="571.0" y="1059.0" width="7.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="574.0" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.33%)</title><rect x="578.7" y="1059.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="581.7" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.33%)</title><rect x="582.6" y="1075.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="585.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.66%)</title><rect x="586.5" y="1075.0" width="7.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="589.5" y="1086.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.33%)</title><rect x="590.3" y="1059.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="593.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.66%)</title><rect x="594.2" y="1075.0" width="7.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="597.2" y="1086.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.66%)</title><rect x="594.2" y="1059.0" width="7.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="597.2" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.98%)</title><rect x="601.9" y="1075.0" width="11.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.9" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.98%)</title><rect x="601.9" y="1059.0" width="11.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="604.9" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="609.7" y="1043.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="612.7" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (71 samples, 23.28%)</title><rect x="613.5" y="1107.0" width="274.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="616.5" y="1118.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.33%)</title><rect x="613.5" y="1091.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="616.5" y="1102.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.33%)</title><rect x="617.4" y="1091.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="620.4" y="1102.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 1.31%)</title><rect x="621.3" y="1091.0" width="15.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="624.3" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.98%)</title><rect x="636.8" y="1091.0" width="11.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="639.8" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="640.6" y="1075.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="643.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.33%)</title><rect x="644.5" y="1075.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="647.5" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="644.5" y="1059.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="647.5" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.66%)</title><rect x="648.4" y="1091.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="651.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.66%)</title><rect x="648.4" y="1075.0" width="7.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="651.4" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="652.2" y="1059.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="655.2" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 3.61%)</title><rect x="656.1" y="1091.0" width="42.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="659.1" y="1102.0">Phas..</text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.33%)</title><rect x="690.9" y="1075.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="693.9" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::clone_projs(Block*, unsigned int, Node*, Node*, unsigned int&amp;) (1 samples, 0.33%)</title><rect x="690.9" y="1059.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="693.9" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.33%)</title><rect x="694.8" y="1075.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="697.8" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.33%)</title><rect x="694.8" y="1059.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="697.8" y="1070.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.33%)</title><rect x="694.8" y="1043.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="697.8" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (21 samples, 6.89%)</title><rect x="698.7" y="1091.0" width="81.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.7" y="1102.0">PhaseChai..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.33%)</title><rect x="721.9" y="1075.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="724.9" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="725.7" y="1075.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="728.7" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.66%)</title><rect x="729.6" y="1075.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="732.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.66%)</title><rect x="737.3" y="1075.0" width="7.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="740.3" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (9 samples, 2.95%)</title><rect x="745.1" y="1075.0" width="34.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.1" y="1086.0">Ph..</text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.33%)</title><rect x="752.8" y="1059.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="755.8" y="1070.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (6 samples, 1.97%)</title><rect x="756.7" y="1059.0" width="23.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="759.7" y="1070.0">R..</text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.33%)</title><rect x="779.9" y="1091.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="782.9" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.33%)</title><rect x="779.9" y="1075.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="782.9" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 1.64%)</title><rect x="783.8" y="1091.0" width="19.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.8" y="1102.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.33%)</title><rect x="799.2" y="1075.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="802.2" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.33%)</title><rect x="803.1" y="1091.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="806.1" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (9 samples, 2.95%)</title><rect x="807.0" y="1091.0" width="34.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="810.0" y="1102.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 1.31%)</title><rect x="826.3" y="1075.0" width="15.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="829.3" y="1086.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.33%)</title><rect x="837.9" y="1059.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="840.9" y="1070.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.98%)</title><rect x="841.8" y="1091.0" width="11.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="844.8" y="1102.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.33%)</title><rect x="841.8" y="1075.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="844.8" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.66%)</title><rect x="845.7" y="1075.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="848.7" y="1086.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.33%)</title><rect x="853.4" y="1091.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="856.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.33%)</title><rect x="857.3" y="1091.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="860.3" y="1102.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.33%)</title><rect x="857.3" y="1075.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="860.3" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 1.31%)</title><rect x="861.1" y="1091.0" width="15.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="864.1" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.98%)</title><rect x="865.0" y="1075.0" width="11.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="868.0" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.33%)</title><rect x="868.9" y="1059.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="871.9" y="1070.0"></text>
</g>
<g>
<title>_init (1 samples, 0.33%)</title><rect x="872.8" y="1059.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="875.8" y="1070.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.33%)</title><rect x="876.6" y="1091.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.6" y="1102.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.66%)</title><rect x="880.5" y="1091.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="883.5" y="1102.0"></text>
</g>
<g>
<title>Compile::Optimize() (48 samples, 15.74%)</title><rect x="888.2" y="1123.0" width="185.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="891.2" y="1134.0">Compile::Optimize()</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.33%)</title><rect x="888.2" y="1107.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="891.2" y="1118.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.33%)</title><rect x="888.2" y="1091.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="891.2" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (1 samples, 0.33%)</title><rect x="892.1" y="1107.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.33%)</title><rect x="892.1" y="1091.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="895.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.33%)</title><rect x="892.1" y="1075.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.1" y="1086.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.33%)</title><rect x="892.1" y="1059.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.1" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.33%)</title><rect x="892.1" y="1043.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="895.1" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="1027.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="895.1" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="1011.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="895.1" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="995.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.1" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="979.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="895.1" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="963.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="895.1" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="947.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="895.1" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="931.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="895.1" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="915.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="895.1" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="899.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.1" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="883.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.1" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="867.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="895.1" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="851.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="895.1" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="835.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="895.1" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="819.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.1" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="803.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="895.1" y="814.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.33%)</title><rect x="892.1" y="787.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="895.1" y="798.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.33%)</title><rect x="892.1" y="771.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.1" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.98%)</title><rect x="896.0" y="1107.0" width="11.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="899.0" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.98%)</title><rect x="896.0" y="1091.0" width="11.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="899.0" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.33%)</title><rect x="896.0" y="1075.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="899.0" y="1086.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.33%)</title><rect x="896.0" y="1059.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="899.0" y="1070.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.33%)</title><rect x="896.0" y="1043.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="899.0" y="1054.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.33%)</title><rect x="896.0" y="1027.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="899.0" y="1038.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.33%)</title><rect x="896.0" y="1011.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="899.0" y="1022.0"></text>
</g>
<g>
<title>ciVirtualCallData::translate_from(ProfileData const*) (1 samples, 0.33%)</title><rect x="896.0" y="995.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="899.0" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.33%)</title><rect x="896.0" y="979.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="899.0" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="899.8" y="1075.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="902.8" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="899.8" y="1059.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="902.8" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="903.7" y="1075.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.7" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="903.7" y="1059.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.7" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="903.7" y="1043.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.7" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.33%)</title><rect x="903.7" y="1027.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.7" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.33%)</title><rect x="903.7" y="1011.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="906.7" y="1022.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.239] (1 samples, 0.33%)</title><rect x="903.7" y="995.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.7" y="1006.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (4 samples, 1.31%)</title><rect x="907.6" y="1107.0" width="15.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="910.6" y="1118.0"></text>
</g>
<g>
<title>CheckCastPPNode::Value(PhaseGVN*) const (1 samples, 0.33%)</title><rect x="915.3" y="1091.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="918.3" y="1102.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.33%)</title><rect x="919.2" y="1091.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="922.2" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.33%)</title><rect x="919.2" y="1075.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="922.2" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (29 samples, 9.51%)</title><rect x="923.0" y="1107.0" width="112.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="926.0" y="1118.0">PhaseIdealLoop..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.33%)</title><rect x="923.0" y="1091.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="926.0" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.33%)</title><rect x="923.0" y="1075.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="926.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.33%)</title><rect x="923.0" y="1059.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.0" y="1070.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.33%)</title><rect x="923.0" y="1043.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.0" y="1054.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.33%)</title><rect x="926.9" y="1091.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="929.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.33%)</title><rect x="930.8" y="1091.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.8" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.98%)</title><rect x="934.7" y="1091.0" width="11.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="937.7" y="1102.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.33%)</title><rect x="942.4" y="1075.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="945.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (17 samples, 5.57%)</title><rect x="946.3" y="1091.0" width="65.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="949.3" y="1102.0">PhaseId..</text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.33%)</title><rect x="957.9" y="1075.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="960.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (13 samples, 4.26%)</title><rect x="961.7" y="1075.0" width="50.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="964.7" y="1086.0">Phase..</text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.33%)</title><rect x="969.5" y="1059.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (9 samples, 2.95%)</title><rect x="973.3" y="1059.0" width="34.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.3" y="1070.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (8 samples, 2.62%)</title><rect x="977.2" y="1043.0" width="31.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="980.2" y="1054.0">Ph..</text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.33%)</title><rect x="1008.2" y="1059.0" width="3.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1011.2" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.33%)</title><rect x="1012.0" y="1091.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1015.0" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.33%)</title><rect x="1012.0" y="1075.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1015.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (3 samples, 0.98%)</title><rect x="1015.9" y="1091.0" width="11.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.33%)</title><rect x="1023.6" y="1075.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1026.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.66%)</title><rect x="1027.5" y="1091.0" width="7.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1030.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.66%)</title><rect x="1027.5" y="1075.0" width="7.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1030.5" y="1086.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (1 samples, 0.33%)</title><rect x="1027.5" y="1059.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1030.5" y="1070.0"></text>
</g>
<g>
<title>TypeInt::filter_helper(Type const*, bool) const (1 samples, 0.33%)</title><rect x="1027.5" y="1043.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1030.5" y="1054.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.33%)</title><rect x="1027.5" y="1027.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1030.5" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.33%)</title><rect x="1031.4" y="1059.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1034.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.33%)</title><rect x="1035.2" y="1107.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1038.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 2.62%)</title><rect x="1039.1" y="1107.0" width="31.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1042.1" y="1118.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 2.62%)</title><rect x="1039.1" y="1091.0" width="31.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1042.1" y="1102.0">Ph..</text>
</g>
<g>
<title>ConPNode::Opcode() const (1 samples, 0.33%)</title><rect x="1039.1" y="1075.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.1" y="1086.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.66%)</title><rect x="1043.0" y="1075.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.66%)</title><rect x="1043.0" y="1059.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.66%)</title><rect x="1043.0" y="1043.0" width="7.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1046.0" y="1054.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.66%)</title><rect x="1043.0" y="1027.0" width="7.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1046.0" y="1038.0"></text>
</g>
<g>
<title>LShiftLNode::Identity(PhaseGVN*) (1 samples, 0.33%)</title><rect x="1050.7" y="1075.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.7" y="1086.0"></text>
</g>
<g>
<title>StoreCMNode::Value(PhaseGVN*) const (1 samples, 0.33%)</title><rect x="1054.6" y="1075.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.6" y="1086.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.98%)</title><rect x="1058.5" y="1075.0" width="11.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.5" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (3 samples, 0.98%)</title><rect x="1058.5" y="1059.0" width="11.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.5" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.98%)</title><rect x="1058.5" y="1043.0" width="11.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1061.5" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.98%)</title><rect x="1058.5" y="1027.0" width="11.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1061.5" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.98%)</title><rect x="1058.5" y="1011.0" width="11.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.5" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.98%)</title><rect x="1058.5" y="995.0" width="11.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.5" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="979.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.5" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="963.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.5" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="947.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.5" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="931.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.5" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="915.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.5" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="899.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.5" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.66%)</title><rect x="1058.5" y="883.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.5" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="867.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.5" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="851.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.5" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="835.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1061.5" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="819.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1061.5" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="803.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.5" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="787.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.5" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="771.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.5" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="755.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.5" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="739.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.5" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="723.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.5" y="734.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.33%)</title><rect x="1058.5" y="707.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.5" y="718.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.33%)</title><rect x="1058.5" y="691.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.5" y="702.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.33%)</title><rect x="1062.3" y="867.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.3" y="878.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.33%)</title><rect x="1062.3" y="851.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1065.3" y="862.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.33%)</title><rect x="1066.2" y="979.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.2" y="990.0"></text>
</g>
<g>
<title>Node::nonnull_req() const (1 samples, 0.33%)</title><rect x="1066.2" y="963.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1069.2" y="974.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.33%)</title><rect x="1070.1" y="1107.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1073.1" y="1118.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.33%)</title><rect x="1070.1" y="1091.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1073.1" y="1102.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.33%)</title><rect x="1070.1" y="1075.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.1" y="1086.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.33%)</title><rect x="1073.9" y="1123.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1076.9" y="1134.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.33%)</title><rect x="1073.9" y="1107.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.9" y="1118.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.33%)</title><rect x="1073.9" y="1091.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.9" y="1102.0"></text>
</g>
<g>
<title>PhaseStringOpts::int_getChars(GraphKit&amp;, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.33%)</title><rect x="1073.9" y="1075.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.9" y="1086.0"></text>
</g>
<g>
<title>PhaseStringOpts::getChars(GraphKit&amp;, Node*, Node*, BasicType, Node*, Node*, Node*, int) (1 samples, 0.33%)</title><rect x="1073.9" y="1059.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1076.9" y="1070.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.33%)</title><rect x="1073.9" y="1043.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.9" y="1054.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.33%)</title><rect x="1073.9" y="1027.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1076.9" y="1038.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.33%)</title><rect x="1073.9" y="1011.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1076.9" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 4.92%)</title><rect x="1077.8" y="1123.0" width="58.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.8" y="1134.0">ParseG..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 4.92%)</title><rect x="1077.8" y="1107.0" width="58.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.8" y="1118.0">Parse:..</text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 4.92%)</title><rect x="1077.8" y="1091.0" width="58.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1080.8" y="1102.0">Parse:..</text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 4.92%)</title><rect x="1077.8" y="1075.0" width="58.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.8" y="1086.0">Parse:..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 4.92%)</title><rect x="1077.8" y="1059.0" width="58.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.8" y="1070.0">Parse:..</text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.33%)</title><rect x="1077.8" y="1043.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.8" y="1054.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.33%)</title><rect x="1077.8" y="1027.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1080.8" y="1038.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.33%)</title><rect x="1077.8" y="1011.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1080.8" y="1022.0"></text>
</g>
<g>
<title>GraphKit::builtin_throw(Deoptimization::DeoptReason, Node*) (1 samples, 0.33%)</title><rect x="1077.8" y="995.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 4.26%)</title><rect x="1081.7" y="1043.0" width="50.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1084.7" y="1054.0">Parse..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 2.30%)</title><rect x="1081.7" y="1027.0" width="27.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.7" y="1038.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 2.30%)</title><rect x="1081.7" y="1011.0" width="27.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.7" y="1022.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 2.30%)</title><rect x="1081.7" y="995.0" width="27.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1084.7" y="1006.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 2.30%)</title><rect x="1081.7" y="979.0" width="27.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.7" y="990.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 2.30%)</title><rect x="1081.7" y="963.0" width="27.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.7" y="974.0">P..</text>
</g>
<g>
<title>Parse::do_call() (7 samples, 2.30%)</title><rect x="1081.7" y="947.0" width="27.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1084.7" y="958.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.64%)</title><rect x="1081.7" y="931.0" width="19.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.7" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.64%)</title><rect x="1081.7" y="915.0" width="19.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1084.7" y="926.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.33%)</title><rect x="1081.7" y="899.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1084.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 1.31%)</title><rect x="1085.5" y="899.0" width="15.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 1.31%)</title><rect x="1085.5" y="883.0" width="15.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 1.31%)</title><rect x="1085.5" y="867.0" width="15.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1085.5" y="851.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1088.5" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1085.5" y="835.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.5" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1085.5" y="819.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1088.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1085.5" y="803.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1088.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1085.5" y="787.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1085.5" y="771.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.5" y="782.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.33%)</title><rect x="1085.5" y="755.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.5" y="766.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.33%)</title><rect x="1085.5" y="739.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.5" y="750.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.33%)</title><rect x="1085.5" y="723.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.98%)</title><rect x="1089.4" y="851.0" width="11.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1092.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.66%)</title><rect x="1089.4" y="835.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1092.4" y="846.0"></text>
</g>
<g>
<title>Compile::AliasType::Init(int, TypePtr const*) (1 samples, 0.33%)</title><rect x="1089.4" y="819.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.33%)</title><rect x="1093.3" y="819.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1096.3" y="830.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.33%)</title><rect x="1093.3" y="803.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.3" y="814.0"></text>
</g>
<g>
<title>ciField::constant_value() (1 samples, 0.33%)</title><rect x="1093.3" y="787.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.33%)</title><rect x="1097.1" y="835.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.1" y="846.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.33%)</title><rect x="1097.1" y="819.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1100.1" y="830.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.33%)</title><rect x="1097.1" y="803.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.1" y="814.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.33%)</title><rect x="1097.1" y="787.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1100.1" y="798.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.33%)</title><rect x="1097.1" y="771.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.1" y="782.0"></text>
</g>
<g>
<title>IdealKit::load(Node*, Node*, Type const*, BasicType, int, bool) (1 samples, 0.33%)</title><rect x="1097.1" y="755.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.1" y="766.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.33%)</title><rect x="1097.1" y="739.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.1" y="750.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.33%)</title><rect x="1097.1" y="723.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.1" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.66%)</title><rect x="1101.0" y="931.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1104.0" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="915.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1104.0" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="899.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="883.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="867.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="851.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="835.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1104.0" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="819.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1104.0" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="803.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="787.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="771.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1104.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="755.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="739.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1104.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="723.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.0" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="707.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1104.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="691.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1104.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="675.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1104.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="659.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1104.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="643.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1104.0" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="627.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="611.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="595.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="579.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1104.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="563.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1104.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="547.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="531.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.0" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="515.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="499.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="483.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="467.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1104.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="451.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.0" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="435.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1104.0" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="419.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1101.0" y="403.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1101.0" y="387.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1104.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1101.0" y="371.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1104.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1101.0" y="355.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.0" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1101.0" y="339.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.0" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1101.0" y="323.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.33%)</title><rect x="1101.0" y="307.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1104.0" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="915.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.9" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="899.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1107.9" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="883.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="867.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="851.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="835.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="819.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.9" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="803.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.9" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="787.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.9" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="771.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1107.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="755.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="739.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="723.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="707.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1107.9" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="691.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.9" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="675.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="659.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="643.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="627.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="611.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.9" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="595.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.9" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="579.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.9" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="563.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.9" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="547.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="531.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="515.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1107.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="499.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="483.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.9" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="467.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.9" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="451.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.9" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="435.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="419.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="403.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="387.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="371.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.9" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="355.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.9" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="339.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="323.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="307.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="291.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="275.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.9" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="259.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.9" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="243.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.9" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="227.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1104.9" y="211.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.9" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1104.9" y="195.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.9" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1104.9" y="179.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1104.9" y="163.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.9" y="174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1104.9" y="147.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.9" y="158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1104.9" y="131.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.9" y="142.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.33%)</title><rect x="1104.9" y="115.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.9" y="126.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 1.97%)</title><rect x="1108.8" y="1027.0" width="23.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.8" y="1038.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.64%)</title><rect x="1108.8" y="1011.0" width="19.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.8" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.64%)</title><rect x="1108.8" y="995.0" width="19.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.64%)</title><rect x="1108.8" y="979.0" width="19.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.64%)</title><rect x="1108.8" y="963.0" width="19.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.64%)</title><rect x="1108.8" y="947.0" width="19.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.64%)</title><rect x="1108.8" y="931.0" width="19.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 1.31%)</title><rect x="1108.8" y="915.0" width="15.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1111.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 1.31%)</title><rect x="1108.8" y="899.0" width="15.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 1.31%)</title><rect x="1108.8" y="883.0" width="15.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1111.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 1.31%)</title><rect x="1108.8" y="867.0" width="15.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 1.31%)</title><rect x="1108.8" y="851.0" width="15.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 1.31%)</title><rect x="1108.8" y="835.0" width="15.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.8" y="846.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.33%)</title><rect x="1108.8" y="819.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.8" y="830.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.33%)</title><rect x="1108.8" y="803.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.8" y="814.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.33%)</title><rect x="1108.8" y="787.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.8" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.33%)</title><rect x="1108.8" y="771.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.8" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.33%)</title><rect x="1108.8" y="755.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.8" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.33%)</title><rect x="1108.8" y="739.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.8" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.33%)</title><rect x="1108.8" y="723.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1111.8" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.33%)</title><rect x="1108.8" y="707.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.66%)</title><rect x="1112.6" y="819.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.6" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.66%)</title><rect x="1112.6" y="803.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.66%)</title><rect x="1112.6" y="787.0" width="7.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1115.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.66%)</title><rect x="1112.6" y="771.0" width="7.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.66%)</title><rect x="1112.6" y="755.0" width="7.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.66%)</title><rect x="1112.6" y="739.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.6" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1112.6" y="723.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.6" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1112.6" y="707.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1112.6" y="691.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1112.6" y="675.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1112.6" y="659.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1112.6" y="643.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.6" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1112.6" y="627.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.6" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1112.6" y="611.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1112.6" y="595.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1112.6" y="579.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1115.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1112.6" y="563.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1112.6" y="547.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1112.6" y="531.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.6" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1112.6" y="515.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1112.6" y="499.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1112.6" y="483.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1112.6" y="467.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.33%)</title><rect x="1112.6" y="451.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.33%)</title><rect x="1112.6" y="435.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.6" y="446.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.33%)</title><rect x="1112.6" y="419.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="430.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.33%)</title><rect x="1112.6" y="403.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.6" y="414.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.33%)</title><rect x="1112.6" y="387.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="398.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.33%)</title><rect x="1112.6" y="371.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.6" y="382.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.33%)</title><rect x="1112.6" y="355.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="366.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.33%)</title><rect x="1112.6" y="339.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="350.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.33%)</title><rect x="1112.6" y="323.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.6" y="334.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.33%)</title><rect x="1112.6" y="307.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.6" y="318.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="291.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.6" y="302.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="275.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.6" y="286.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="259.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.6" y="270.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="243.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.6" y="254.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="227.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.6" y="238.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="211.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1115.6" y="222.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="195.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.6" y="206.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="179.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.6" y="190.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="163.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.6" y="174.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="147.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.6" y="158.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="131.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="142.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="115.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.6" y="126.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="99.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1115.6" y="110.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="83.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="94.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="67.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.6" y="78.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.33%)</title><rect x="1112.6" y="51.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1115.6" y="62.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="723.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1119.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="707.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1116.5" y="691.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1116.5" y="675.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1116.5" y="659.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1116.5" y="643.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1116.5" y="627.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.5" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="611.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1116.5" y="595.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1119.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1116.5" y="579.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1119.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1116.5" y="563.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1116.5" y="547.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1116.5" y="531.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1119.5" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="515.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.5" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1116.5" y="499.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1116.5" y="483.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1119.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1116.5" y="467.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1116.5" y="451.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1119.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1116.5" y="435.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.5" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="419.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.5" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1116.5" y="403.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1119.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1116.5" y="387.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1116.5" y="371.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1116.5" y="355.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1119.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1116.5" y="339.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.5" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1116.5" y="323.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1119.5" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1116.5" y="307.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.5" y="318.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.33%)</title><rect x="1116.5" y="291.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1119.5" y="302.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.33%)</title><rect x="1116.5" y="275.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1119.5" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="819.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="803.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="787.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="771.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="755.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="739.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="723.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="707.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.4" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="691.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="675.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="659.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="643.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="627.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.4" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="611.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.4" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="595.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="579.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="563.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="547.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="531.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.4" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="515.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="499.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="483.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="467.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="451.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="435.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.4" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="419.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.4" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="403.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="387.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="371.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="355.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="339.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.4" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="323.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.4" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="307.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="291.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="275.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="259.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="243.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.4" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="227.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.4" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="211.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="195.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="179.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="163.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1120.4" y="147.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.4" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1120.4" y="131.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.4" y="142.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1120.4" y="115.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.4" y="126.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1120.4" y="99.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.4" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1120.4" y="83.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.4" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1120.4" y="67.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.4" y="78.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.33%)</title><rect x="1120.4" y="51.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.4" y="62.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.33%)</title><rect x="1120.4" y="35.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.4" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1124.2" y="915.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.2" y="926.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1124.2" y="899.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.2" y="910.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.33%)</title><rect x="1124.2" y="883.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.2" y="894.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.33%)</title><rect x="1124.2" y="867.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.2" y="878.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.33%)</title><rect x="1124.2" y="851.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.2" y="862.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.33%)</title><rect x="1124.2" y="835.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1127.2" y="846.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long) (1 samples, 0.33%)</title><rect x="1124.2" y="819.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.2" y="830.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.33%)</title><rect x="1124.2" y="803.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1127.2" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="1011.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.1" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="995.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.1" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="979.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="963.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="947.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="931.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="915.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="899.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.1" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="883.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="867.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="851.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="835.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="819.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.1" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="803.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.1" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="787.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="771.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="755.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="739.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="723.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.1" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="707.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.1" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="691.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="675.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="659.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="643.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="627.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.1" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="611.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.1" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="595.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="579.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="563.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="547.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="531.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.1" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.33%)</title><rect x="1128.1" y="515.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.33%)</title><rect x="1128.1" y="499.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.33%)</title><rect x="1128.1" y="483.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.33%)</title><rect x="1128.1" y="467.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.33%)</title><rect x="1128.1" y="451.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.33%)</title><rect x="1128.1" y="435.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.1" y="446.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.33%)</title><rect x="1128.1" y="419.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.1" y="430.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.33%)</title><rect x="1128.1" y="403.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.1" y="414.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.33%)</title><rect x="1128.1" y="387.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.1" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.33%)</title><rect x="1128.1" y="371.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.1" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.33%)</title><rect x="1128.1" y="355.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.33%)</title><rect x="1132.0" y="1043.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.33%)</title><rect x="1132.0" y="1027.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.0" y="1038.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.33%)</title><rect x="1132.0" y="1011.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1135.0" y="1022.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.33%)</title><rect x="1132.0" y="995.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.0" y="1006.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.33%)</title><rect x="1132.0" y="979.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.0" y="990.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.33%)</title><rect x="1132.0" y="963.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.0" y="974.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.33%)</title><rect x="1132.0" y="947.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.0" y="958.0"></text>
</g>
<g>
<title>GraphKit::memory(unsigned int) (1 samples, 0.33%)</title><rect x="1132.0" y="931.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.0" y="942.0"></text>
</g>
<g>
<title>MergeMemNode::memory_at(unsigned int) const (1 samples, 0.33%)</title><rect x="1132.0" y="915.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1135.0" y="926.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 1.31%)</title><rect x="1135.8" y="1123.0" width="15.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.8" y="1134.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.98%)</title><rect x="1135.8" y="1107.0" width="11.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.8" y="1118.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.33%)</title><rect x="1147.4" y="1107.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.4" y="1118.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.33%)</title><rect x="1151.3" y="1123.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.3" y="1134.0"></text>
</g>
<g>
<title>MethodCounters::highest_comp_level() const (1 samples, 0.33%)</title><rect x="1151.3" y="1107.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.3" y="1118.0"></text>
</g>
<g>
<title>[tid=5998] (5 samples, 1.64%)</title><rect x="1155.2" y="1283.0" width="19.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1158.2" y="1294.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.64%)</title><rect x="1155.2" y="1267.0" width="19.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1158.2" y="1278.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.64%)</title><rect x="1155.2" y="1251.0" width="19.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1158.2" y="1262.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.64%)</title><rect x="1155.2" y="1235.0" width="19.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.2" y="1246.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 1.64%)</title><rect x="1155.2" y="1219.0" width="19.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.2" y="1230.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 1.64%)</title><rect x="1155.2" y="1203.0" width="19.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.2" y="1214.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 1.64%)</title><rect x="1155.2" y="1187.0" width="19.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.2" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 1.64%)</title><rect x="1155.2" y="1171.0" width="19.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.2" y="1182.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 0.33%)</title><rect x="1155.2" y="1155.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.2" y="1166.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.33%)</title><rect x="1155.2" y="1139.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.2" y="1150.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.33%)</title><rect x="1155.2" y="1123.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.2" y="1134.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.33%)</title><rect x="1155.2" y="1107.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.2" y="1118.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 1.31%)</title><rect x="1159.0" y="1155.0" width="15.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.0" y="1166.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 1.31%)</title><rect x="1159.0" y="1139.0" width="15.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.0" y="1150.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 1.31%)</title><rect x="1159.0" y="1123.0" width="15.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.0" y="1134.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 1.31%)</title><rect x="1159.0" y="1107.0" width="15.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.0" y="1118.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (3 samples, 0.98%)</title><rect x="1159.0" y="1091.0" width="11.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.0" y="1102.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.33%)</title><rect x="1159.0" y="1075.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.0" y="1086.0"></text>
</g>
<g>
<title>ValueMap::kill_memory() (1 samples, 0.33%)</title><rect x="1159.0" y="1059.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.0" y="1070.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.66%)</title><rect x="1162.9" y="1075.0" width="7.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.9" y="1086.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.66%)</title><rect x="1162.9" y="1059.0" width="7.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.9" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.66%)</title><rect x="1162.9" y="1043.0" width="7.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.33%)</title><rect x="1162.9" y="1027.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.9" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.33%)</title><rect x="1162.9" y="1011.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.9" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.33%)</title><rect x="1162.9" y="995.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.9" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="979.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="963.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.33%)</title><rect x="1162.9" y="947.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.9" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.33%)</title><rect x="1162.9" y="931.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.9" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.33%)</title><rect x="1162.9" y="915.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="899.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.33%)</title><rect x="1162.9" y="883.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="867.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.9" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="851.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.33%)</title><rect x="1162.9" y="835.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.33%)</title><rect x="1162.9" y="819.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.33%)</title><rect x="1162.9" y="803.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="787.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.33%)</title><rect x="1162.9" y="771.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="755.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.33%)</title><rect x="1162.9" y="739.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.9" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.33%)</title><rect x="1162.9" y="723.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.33%)</title><rect x="1162.9" y="707.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.9" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.33%)</title><rect x="1162.9" y="691.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="702.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.33%)</title><rect x="1162.9" y="675.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.33%)</title><rect x="1162.9" y="659.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.9" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.33%)</title><rect x="1162.9" y="643.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="654.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.33%)</title><rect x="1162.9" y="627.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.9" y="638.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.33%)</title><rect x="1162.9" y="611.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="622.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.33%)</title><rect x="1162.9" y="595.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.9" y="606.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.33%)</title><rect x="1162.9" y="579.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.9" y="590.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.33%)</title><rect x="1162.9" y="563.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.9" y="574.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.33%)</title><rect x="1162.9" y="547.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.9" y="558.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.33%)</title><rect x="1162.9" y="531.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1165.9" y="542.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(IRScope*, ValueStack*) (1 samples, 0.33%)</title><rect x="1166.8" y="1027.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.8" y="1038.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.33%)</title><rect x="1170.7" y="1091.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.7" y="1102.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.33%)</title><rect x="1170.7" y="1075.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.7" y="1086.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.33%)</title><rect x="1170.7" y="1059.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.7" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::stack2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.33%)</title><rect x="1170.7" y="1043.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.7" y="1054.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.33%)</title><rect x="1170.7" y="1027.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.7" y="1038.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.33%)</title><rect x="1170.7" y="1011.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.7" y="1022.0"></text>
</g>
<g>
<title>Assembler::emit_compressed_disp_byte(int&amp;) (1 samples, 0.33%)</title><rect x="1170.7" y="995.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.7" y="1006.0"></text>
</g>
<g>
<title>[tid=6000] (1 samples, 0.33%)</title><rect x="1174.5" y="1283.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1177.5" y="1294.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.33%)</title><rect x="1174.5" y="1267.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1177.5" y="1278.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.33%)</title><rect x="1174.5" y="1251.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1177.5" y="1262.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.33%)</title><rect x="1174.5" y="1235.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.5" y="1246.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.33%)</title><rect x="1174.5" y="1219.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.5" y="1230.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.33%)</title><rect x="1174.5" y="1203.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.5" y="1214.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.33%)</title><rect x="1174.5" y="1187.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.5" y="1198.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.33%)</title><rect x="1174.5" y="1171.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.5" y="1182.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.33%)</title><rect x="1174.5" y="1155.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.5" y="1166.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.33%)</title><rect x="1174.5" y="1139.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.5" y="1150.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.33%)</title><rect x="1174.5" y="1123.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.5" y="1134.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.33%)</title><rect x="1174.5" y="1107.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.5" y="1118.0"></text>
</g>
<g>
<title>[tid=6001] (3 samples, 0.98%)</title><rect x="1178.4" y="1283.0" width="11.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1181.4" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.33%)</title><rect x="1178.4" y="1267.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1181.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1251.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1181.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1235.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1181.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1219.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1181.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1203.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1181.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1187.0" width="3.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1181.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1171.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1181.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1155.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1181.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="1178.4" y="1139.0" width="3.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1181.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.33%)</title><rect x="1182.3" y="1267.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1185.3" y="1278.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.33%)</title><rect x="1186.1" y="1267.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1189.1" y="1278.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.33%)</title><rect x="1186.1" y="1251.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1189.1" y="1262.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.33%)</title><rect x="1186.1" y="1235.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.1" y="1246.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.33%)</title><rect x="1186.1" y="1219.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.1" y="1230.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.33%)</title><rect x="1186.1" y="1203.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.1" y="1214.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.33%)</title><rect x="1186.1" y="1187.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.1" y="1198.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.33%)</title><rect x="1186.1" y="1171.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="1182.0"></text>
</g>
</g>
</svg>
