<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (9,661 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32114] (173 samples, 1.79%)</title><rect x="10.0" y="899.0" width="21.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="910.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="10.5" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="10.5" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="10.5" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (163 samples, 1.69%)</title><rect x="11.2" y="883.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (49 samples, 0.51%)</title><rect x="11.6" y="867.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.47%)</title><rect x="12.1" y="851.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="12.7" y="835.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="15.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="12.8" y="819.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="15.8" y="830.0"></text>
</g>
<g>
<title>epoll_wait (35 samples, 0.36%)</title><rect x="13.2" y="819.0" width="4.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="13.3" y="803.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="16.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="13.3" y="787.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="13.8" y="771.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="16.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="13.8" y="755.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="16.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="13.8" y="739.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="16.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="14.6" y="723.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="17.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="15.5" y="707.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="18.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="16.5" y="691.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="19.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="16.5" y="675.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="19.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="17.0" y="659.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="20.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (111 samples, 1.15%)</title><rect x="17.6" y="867.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (111 samples, 1.15%)</title><rect x="17.6" y="851.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (86 samples, 0.89%)</title><rect x="17.6" y="835.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (71 samples, 0.73%)</title><rect x="17.9" y="819.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (71 samples, 0.73%)</title><rect x="17.9" y="803.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.9" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (70 samples, 0.72%)</title><rect x="17.9" y="787.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.09%)</title><rect x="17.9" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.04%)</title><rect x="18.3" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.04%)</title><rect x="18.3" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (61 samples, 0.63%)</title><rect x="19.0" y="771.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (57 samples, 0.59%)</title><rect x="19.4" y="755.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (57 samples, 0.59%)</title><rect x="19.4" y="739.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 0.59%)</title><rect x="19.4" y="723.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (57 samples, 0.59%)</title><rect x="19.4" y="707.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (50 samples, 0.52%)</title><rect x="19.4" y="691.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="19.4" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="19.4" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="19.4" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (45 samples, 0.47%)</title><rect x="20.0" y="675.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (45 samples, 0.47%)</title><rect x="20.0" y="659.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (45 samples, 0.47%)</title><rect x="20.0" y="643.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 0.47%)</title><rect x="20.0" y="627.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 0.46%)</title><rect x="20.1" y="611.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.1" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.11%)</title><rect x="20.3" y="595.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="23.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.03%)</title><rect x="20.9" y="579.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="23.9" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (30 samples, 0.31%)</title><rect x="21.8" y="595.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="24.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="22.5" y="579.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="25.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="22.5" y="563.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="25.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="22.9" y="547.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="25.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="22.9" y="531.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="25.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="22.9" y="515.0" width="2.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="25.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="23.2" y="499.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="26.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="23.4" y="483.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="26.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="23.6" y="467.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="26.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="25.5" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="25.5" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="25.5" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.06%)</title><rect x="26.6" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="26.7" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="26.7" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="26.7" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="26.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="27.7" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="27.7" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 0.26%)</title><rect x="28.1" y="835.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.24%)</title><rect x="28.3" y="819.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="28.3" y="803.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="31.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="28.3" y="787.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="31.3" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.08%)</title><rect x="28.3" y="771.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="31.3" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="28.9" y="755.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="31.9" y="766.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 0.14%)</title><rect x="29.4" y="803.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="32.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="787.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="771.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="32.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="755.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="32.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="739.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="32.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="723.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="32.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="707.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="32.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="29.4" y="691.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="32.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="29.5" y="675.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="32.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="29.8" y="659.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="32.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="30.3" y="643.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="33.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="30.6" y="627.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="33.6" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32121] (170 samples, 1.76%)</title><rect x="31.1" y="899.0" width="20.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="31.1" y="883.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="34.1" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="31.6" y="883.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="34.6" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (160 samples, 1.66%)</title><rect x="32.4" y="883.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.37%)</title><rect x="32.6" y="867.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 0.37%)</title><rect x="32.6" y="851.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="33.0" y="835.0" width="4.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="36.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.32%)</title><rect x="33.2" y="819.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="36.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="33.8" y="803.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="36.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="33.8" y="787.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="36.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="33.8" y="771.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="36.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="33.8" y="755.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="36.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="33.8" y="739.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="36.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="34.3" y="723.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="37.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="34.8" y="707.0" width="2.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="37.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="35.3" y="691.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="38.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="35.3" y="675.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="38.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="35.9" y="659.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="38.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (122 samples, 1.26%)</title><rect x="37.0" y="867.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 1.26%)</title><rect x="37.0" y="851.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (88 samples, 0.91%)</title><rect x="37.0" y="835.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.0" y="846.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="37.6" y="819.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="40.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (73 samples, 0.76%)</title><rect x="38.1" y="819.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (73 samples, 0.76%)</title><rect x="38.1" y="803.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.1" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (72 samples, 0.75%)</title><rect x="38.1" y="787.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.04%)</title><rect x="38.1" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (68 samples, 0.70%)</title><rect x="38.6" y="771.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (6 samples, 0.06%)</title><rect x="38.6" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.04%)</title><rect x="38.7" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.04%)</title><rect x="38.7" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="38.8" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (60 samples, 0.62%)</title><rect x="39.3" y="755.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (60 samples, 0.62%)</title><rect x="39.3" y="739.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (60 samples, 0.62%)</title><rect x="39.3" y="723.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (60 samples, 0.62%)</title><rect x="39.3" y="707.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (52 samples, 0.54%)</title><rect x="39.3" y="691.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="39.3" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="39.3" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="39.3" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (47 samples, 0.49%)</title><rect x="39.9" y="675.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (47 samples, 0.49%)</title><rect x="39.9" y="659.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (47 samples, 0.49%)</title><rect x="39.9" y="643.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (47 samples, 0.49%)</title><rect x="39.9" y="627.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 0.49%)</title><rect x="39.9" y="611.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.09%)</title><rect x="39.9" y="595.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="42.9" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="40.0" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="43.0" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.03%)</title><rect x="40.4" y="579.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="43.4" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (36 samples, 0.37%)</title><rect x="41.3" y="595.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="44.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="41.9" y="579.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="44.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="41.9" y="563.0" width="3.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="44.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="42.4" y="547.0" width="3.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="45.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="42.4" y="531.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="45.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="42.4" y="515.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="45.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="42.6" y="499.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="43.3" y="483.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="46.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="43.5" y="467.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="46.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.07%)</title><rect x="45.7" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.07%)</title><rect x="45.7" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.07%)</title><rect x="45.7" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="47.0" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.03%)</title><rect x="47.7" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 0.32%)</title><rect x="48.1" y="835.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (31 samples, 0.32%)</title><rect x="48.1" y="819.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="48.1" y="803.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="51.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="48.1" y="787.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="51.1" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.07%)</title><rect x="48.1" y="771.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.05%)</title><rect x="48.1" y="755.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>__GI___recv (24 samples, 0.25%)</title><rect x="49.0" y="803.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="52.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="49.1" y="787.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="52.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="49.1" y="771.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="52.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="49.3" y="755.0" width="2.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="52.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="49.3" y="739.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="52.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="49.5" y="723.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="49.5" y="707.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="52.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="49.7" y="691.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="52.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="49.9" y="675.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="52.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="50.3" y="659.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="53.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="50.7" y="643.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="53.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="51.2" y="627.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="54.2" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32122] (173 samples, 1.79%)</title><rect x="51.9" y="899.0" width="21.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="54.9" y="910.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="51.9" y="883.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="54.9" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.04%)</title><rect x="52.4" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="55.4" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.08%)</title><rect x="52.9" y="883.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="55.9" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.04%)</title><rect x="53.2" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.2" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.04%)</title><rect x="53.2" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="56.2" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="53.2" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="56.2" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (155 samples, 1.60%)</title><rect x="54.1" y="883.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 0.30%)</title><rect x="54.5" y="867.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 0.30%)</title><rect x="54.5" y="851.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="54.8" y="835.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="57.8" y="846.0"></text>
</g>
<g>
<title>epoll_wait (24 samples, 0.25%)</title><rect x="55.1" y="819.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="58.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="55.2" y="803.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="58.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="55.2" y="787.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="58.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="55.2" y="771.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="58.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="55.2" y="755.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="58.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="55.3" y="739.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="58.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="55.6" y="723.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="55.9" y="707.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="56.8" y="691.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="59.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="56.9" y="675.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="59.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="57.3" y="659.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="60.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (122 samples, 1.26%)</title><rect x="58.0" y="867.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 1.26%)</title><rect x="58.0" y="851.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (91 samples, 0.94%)</title><rect x="58.0" y="835.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (77 samples, 0.80%)</title><rect x="58.2" y="819.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (77 samples, 0.80%)</title><rect x="58.2" y="803.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.2" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (74 samples, 0.77%)</title><rect x="58.2" y="787.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.07%)</title><rect x="58.2" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="58.2" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="58.2" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (67 samples, 0.69%)</title><rect x="59.1" y="771.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (64 samples, 0.66%)</title><rect x="59.2" y="755.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (64 samples, 0.66%)</title><rect x="59.2" y="739.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 0.66%)</title><rect x="59.2" y="723.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 0.66%)</title><rect x="59.2" y="707.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (59 samples, 0.61%)</title><rect x="59.2" y="691.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="59.2" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="59.2" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="59.2" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (54 samples, 0.56%)</title><rect x="59.8" y="675.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (54 samples, 0.56%)</title><rect x="59.8" y="659.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (54 samples, 0.56%)</title><rect x="59.8" y="643.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 0.56%)</title><rect x="59.8" y="627.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (53 samples, 0.55%)</title><rect x="60.0" y="611.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.14%)</title><rect x="60.0" y="595.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="63.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.03%)</title><rect x="60.2" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="63.2" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.03%)</title><rect x="60.8" y="579.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="63.8" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (38 samples, 0.39%)</title><rect x="61.8" y="595.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="64.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="62.2" y="579.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="65.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="62.2" y="563.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="65.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="62.3" y="547.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="65.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="62.3" y="531.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="65.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="62.4" y="515.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="65.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="63.1" y="499.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="66.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="63.3" y="483.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="66.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="63.5" y="467.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="66.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.04%)</title><rect x="66.4" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.04%)</title><rect x="66.4" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.04%)</title><rect x="66.4" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.09%)</title><rect x="67.7" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.04%)</title><rect x="67.8" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.04%)</title><rect x="67.8" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.04%)</title><rect x="67.8" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.04%)</title><rect x="67.8" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="68.3" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.31%)</title><rect x="69.2" y="835.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 0.29%)</title><rect x="69.5" y="819.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="69.5" y="803.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="72.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="69.5" y="787.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="72.5" y="798.0"></text>
</g>
<g>
<title>__GI___recv (24 samples, 0.25%)</title><rect x="70.0" y="803.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="73.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="70.1" y="787.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="73.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="70.1" y="771.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="73.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="70.5" y="755.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="73.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="70.5" y="739.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="73.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="70.6" y="723.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="70.8" y="707.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="70.8" y="691.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="73.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.14%)</title><rect x="71.2" y="675.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="74.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="71.3" y="659.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="74.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="71.8" y="643.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="74.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="71.8" y="627.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="74.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="72.3" y="611.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="75.3" y="622.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32105] (319 samples, 3.30%)</title><rect x="73.0" y="899.0" width="39.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="76.0" y="910.0">[NI..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.21%)</title><rect x="73.6" y="883.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="76.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.20%)</title><rect x="73.8" y="867.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="76.8" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (3 samples, 0.03%)</title><rect x="73.9" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="76.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (14 samples, 0.14%)</title><rect x="74.4" y="851.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="77.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.07%)</title><rect x="74.6" y="835.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="77.6" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.03%)</title><rect x="74.7" y="819.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="77.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="74.7" y="803.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="77.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="74.7" y="787.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="77.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="74.7" y="771.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="77.7" y="782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.03%)</title><rect x="75.7" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="78.7" y="846.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.03%)</title><rect x="76.1" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="79.1" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.04%)</title><rect x="76.8" y="883.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="79.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.07%)</title><rect x="77.3" y="883.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="80.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="867.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="80.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="851.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="80.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="835.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="80.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="819.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="80.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="803.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="80.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.5" y="787.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="80.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="77.8" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="80.8" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.03%)</title><rect x="78.2" y="883.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="81.2" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (274 samples, 2.84%)</title><rect x="78.5" y="883.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.5" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (62 samples, 0.64%)</title><rect x="79.4" y="867.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (62 samples, 0.64%)</title><rect x="79.4" y="851.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="79.6" y="835.0" width="7.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="82.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (56 samples, 0.58%)</title><rect x="79.9" y="819.0" width="6.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="82.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="80.2" y="803.0" width="6.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="83.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="80.2" y="787.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="83.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="80.4" y="771.0" width="6.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="83.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="80.4" y="755.0" width="6.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="83.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="80.6" y="739.0" width="6.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="83.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="81.7" y="723.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="84.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="83.4" y="707.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="86.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="84.0" y="691.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="87.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="84.6" y="675.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="87.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="85.7" y="659.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="88.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (205 samples, 2.12%)</title><rect x="86.9" y="867.0" width="25.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.9" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (204 samples, 2.11%)</title><rect x="87.1" y="851.0" width="24.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.1" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (141 samples, 1.46%)</title><rect x="87.1" y="835.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (121 samples, 1.25%)</title><rect x="87.8" y="819.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121 samples, 1.25%)</title><rect x="87.8" y="803.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.8" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (115 samples, 1.19%)</title><rect x="87.8" y="787.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.12%)</title><rect x="87.8" y="771.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.04%)</title><rect x="87.8" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.04%)</title><rect x="87.8" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.05%)</title><rect x="88.7" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (103 samples, 1.07%)</title><rect x="89.3" y="771.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (4 samples, 0.04%)</title><rect x="89.5" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (97 samples, 1.00%)</title><rect x="90.0" y="755.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (97 samples, 1.00%)</title><rect x="90.0" y="739.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (96 samples, 0.99%)</title><rect x="90.1" y="723.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (82 samples, 0.85%)</title><rect x="90.1" y="707.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.09%)</title><rect x="90.1" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.09%)</title><rect x="90.1" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.09%)</title><rect x="90.1" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (73 samples, 0.76%)</title><rect x="91.2" y="691.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (73 samples, 0.76%)</title><rect x="91.2" y="675.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (73 samples, 0.76%)</title><rect x="91.2" y="659.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (73 samples, 0.76%)</title><rect x="91.2" y="643.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (72 samples, 0.75%)</title><rect x="91.3" y="627.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.3" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.18%)</title><rect x="91.8" y="611.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="94.8" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (49 samples, 0.51%)</title><rect x="94.2" y="611.0" width="5.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="97.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="95.0" y="595.0" width="5.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="98.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="95.0" y="579.0" width="5.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="98.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="95.6" y="563.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="98.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="95.6" y="547.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="98.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="95.6" y="531.0" width="4.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="98.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="96.4" y="515.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="99.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="97.2" y="499.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="100.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="97.3" y="483.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="100.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (14 samples, 0.14%)</title><rect x="100.1" y="707.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (14 samples, 0.14%)</title><rect x="100.1" y="691.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (14 samples, 0.14%)</title><rect x="100.1" y="675.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.05%)</title><rect x="102.0" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="102.1" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="102.2" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.06%)</title><rect x="102.6" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="102.8" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="102.8" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="102.8" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="102.8" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.06%)</title><rect x="103.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.06%)</title><rect x="103.6" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.05%)</title><rect x="103.7" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="103.9" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (62 samples, 0.64%)</title><rect x="104.4" y="835.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (59 samples, 0.61%)</title><rect x="104.8" y="819.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="105.4" y="803.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="108.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="105.4" y="787.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="108.4" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.07%)</title><rect x="105.4" y="771.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.4" y="782.0"></text>
</g>
<g>
<title>__GI___recv (44 samples, 0.46%)</title><rect x="106.6" y="803.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="109.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="107.2" y="787.0" width="4.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="110.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="107.2" y="771.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="110.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="107.6" y="755.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="110.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="107.6" y="739.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="110.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="108.0" y="723.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="111.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="108.0" y="707.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="111.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="108.0" y="691.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="111.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="108.8" y="675.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="111.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="109.5" y="659.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="112.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="110.8" y="643.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="113.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="111.3" y="627.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="114.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="111.4" y="611.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="114.4" y="622.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32116] (309 samples, 3.20%)</title><rect x="112.0" y="899.0" width="37.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.0" y="910.0">[NI..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="112.5" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="115.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="112.5" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="115.5" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="112.5" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="115.5" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="112.5" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="115.5" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.04%)</title><rect x="113.1" y="883.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="116.1" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (296 samples, 3.06%)</title><rect x="113.6" y="883.0" width="36.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.6" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (77 samples, 0.80%)</title><rect x="114.2" y="867.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (77 samples, 0.80%)</title><rect x="114.2" y="851.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.71%)</title><rect x="114.7" y="835.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="117.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (66 samples, 0.68%)</title><rect x="115.0" y="819.0" width="8.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="118.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="115.7" y="803.0" width="7.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="118.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="115.7" y="787.0" width="7.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="118.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="116.3" y="771.0" width="6.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="119.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="116.3" y="755.0" width="6.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="119.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.56%)</title><rect x="116.5" y="739.0" width="6.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="119.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="117.6" y="723.0" width="5.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="120.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="118.7" y="707.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="121.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="119.9" y="691.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="120.3" y="675.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="123.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="120.9" y="659.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="123.9" y="670.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.03%)</title><rect x="123.2" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="126.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (212 samples, 2.19%)</title><rect x="123.6" y="867.0" width="25.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.6" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (210 samples, 2.17%)</title><rect x="123.8" y="851.0" width="25.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.8" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (153 samples, 1.58%)</title><rect x="123.8" y="835.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.8" y="846.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="124.8" y="819.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="127.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (125 samples, 1.29%)</title><rect x="125.2" y="819.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (122 samples, 1.26%)</title><rect x="125.5" y="803.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.5" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (118 samples, 1.22%)</title><rect x="125.5" y="787.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.07%)</title><rect x="125.5" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (111 samples, 1.15%)</title><rect x="126.4" y="771.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (5 samples, 0.05%)</title><rect x="126.5" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.05%)</title><rect x="126.5" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.05%)</title><rect x="126.5" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="126.8" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (102 samples, 1.06%)</title><rect x="127.1" y="755.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (102 samples, 1.06%)</title><rect x="127.1" y="739.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 1.06%)</title><rect x="127.1" y="723.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (102 samples, 1.06%)</title><rect x="127.1" y="707.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (90 samples, 0.93%)</title><rect x="127.1" y="691.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.04%)</title><rect x="127.1" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.04%)</title><rect x="127.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.04%)</title><rect x="127.1" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (86 samples, 0.89%)</title><rect x="127.6" y="675.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (86 samples, 0.89%)</title><rect x="127.6" y="659.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (86 samples, 0.89%)</title><rect x="127.6" y="643.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (86 samples, 0.89%)</title><rect x="127.6" y="627.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (85 samples, 0.88%)</title><rect x="127.7" y="611.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.16%)</title><rect x="128.4" y="595.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="131.4" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.04%)</title><rect x="129.5" y="579.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="132.5" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (63 samples, 0.65%)</title><rect x="130.4" y="595.0" width="7.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="133.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="130.9" y="579.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="133.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="130.9" y="563.0" width="7.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="133.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="131.7" y="547.0" width="6.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="131.7" y="531.0" width="6.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="131.8" y="515.0" width="6.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="134.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="132.3" y="499.0" width="5.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="135.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="133.0" y="483.0" width="5.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="136.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="133.7" y="467.0" width="4.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="136.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.09%)</title><rect x="138.1" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.09%)</title><rect x="138.1" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.09%)</title><rect x="138.1" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.03%)</title><rect x="139.6" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="139.6" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="139.6" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="139.6" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.03%)</title><rect x="140.0" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.03%)</title><rect x="140.0" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="140.0" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.08%)</title><rect x="140.4" y="819.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="140.6" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="140.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="140.9" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="140.9" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.03%)</title><rect x="141.4" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="142.0" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="142.0" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="142.0" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="142.0" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.03%)</title><rect x="142.2" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 0.58%)</title><rect x="142.6" y="835.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (56 samples, 0.58%)</title><rect x="142.6" y="819.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="143.0" y="803.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="146.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="143.0" y="787.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="146.0" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.05%)</title><rect x="143.0" y="771.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="146.0" y="782.0"></text>
</g>
<g>
<title>__GI___recv (46 samples, 0.48%)</title><rect x="143.9" y="803.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="146.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="144.2" y="787.0" width="5.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="147.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="144.2" y="771.0" width="5.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="147.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="144.6" y="755.0" width="4.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="147.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="144.6" y="739.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="147.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="145.0" y="723.0" width="4.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="148.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="145.1" y="707.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="148.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="145.2" y="691.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="148.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="145.9" y="675.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="148.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="146.7" y="659.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="149.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="147.7" y="643.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="150.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="148.3" y="627.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="151.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="149.0" y="611.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="152.0" y="622.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32106] (320 samples, 3.31%)</title><rect x="149.7" y="899.0" width="39.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="152.7" y="910.0">[NI..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="149.9" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="152.9" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="149.9" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="152.9" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="149.9" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="152.9" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.21%)</title><rect x="150.2" y="883.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="153.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (20 samples, 0.21%)</title><rect x="150.2" y="867.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="153.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (17 samples, 0.18%)</title><rect x="150.6" y="851.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="153.6" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.12%)</title><rect x="151.1" y="835.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="154.1" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.03%)</title><rect x="151.4" y="819.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="154.4" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="152.2" y="819.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="155.2" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.03%)</title><rect x="152.7" y="883.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="155.7" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="152.7" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="155.7" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.03%)</title><rect x="152.7" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="155.7" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.03%)</title><rect x="153.1" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="156.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (16 samples, 0.17%)</title><rect x="153.6" y="883.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="156.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="154.2" y="867.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="157.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="154.2" y="851.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="157.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="154.4" y="835.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="157.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="154.6" y="819.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="157.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="154.6" y="803.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="157.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="154.7" y="787.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="157.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="154.9" y="771.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="157.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="155.2" y="755.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="158.2" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (270 samples, 2.79%)</title><rect x="155.8" y="883.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.8" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="156.3" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="156.3" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.03%)</title><rect x="156.3" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 0.61%)</title><rect x="156.7" y="867.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 0.61%)</title><rect x="156.7" y="851.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.7" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.04%)</title><rect x="156.9" y="835.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="159.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="157.4" y="835.0" width="6.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="160.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (49 samples, 0.51%)</title><rect x="157.9" y="819.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="160.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="158.3" y="803.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="161.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="158.3" y="787.0" width="5.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="161.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="159.0" y="771.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="162.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="159.0" y="755.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="162.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="159.1" y="739.0" width="4.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="162.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="159.6" y="723.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="160.6" y="707.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="163.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="161.0" y="691.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="164.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="161.6" y="675.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="164.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="162.4" y="659.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="165.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="163.5" y="643.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="166.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="163.5" y="627.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="166.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="163.5" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="166.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="163.5" y="595.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="166.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="163.5" y="579.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="166.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (203 samples, 2.10%)</title><rect x="163.9" y="867.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.9" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 2.10%)</title><rect x="163.9" y="851.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.9" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (137 samples, 1.42%)</title><rect x="164.0" y="835.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (109 samples, 1.13%)</title><rect x="164.8" y="819.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (109 samples, 1.13%)</title><rect x="164.8" y="803.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.8" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (101 samples, 1.05%)</title><rect x="164.8" y="787.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.07%)</title><rect x="164.8" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (94 samples, 0.97%)</title><rect x="165.6" y="771.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (4 samples, 0.04%)</title><rect x="165.7" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.03%)</title><rect x="165.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.03%)</title><rect x="165.9" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="165.9" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (87 samples, 0.90%)</title><rect x="166.2" y="755.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 0.89%)</title><rect x="166.2" y="739.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (85 samples, 0.88%)</title><rect x="166.2" y="723.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (69 samples, 0.71%)</title><rect x="166.2" y="707.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.09%)</title><rect x="166.2" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.09%)</title><rect x="166.2" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.09%)</title><rect x="166.2" y="659.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (59 samples, 0.61%)</title><rect x="167.4" y="691.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (59 samples, 0.61%)</title><rect x="167.4" y="675.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (59 samples, 0.61%)</title><rect x="167.4" y="659.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.61%)</title><rect x="167.4" y="643.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (58 samples, 0.60%)</title><rect x="167.6" y="627.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.07%)</title><rect x="167.9" y="611.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="170.9" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (45 samples, 0.47%)</title><rect x="169.1" y="611.0" width="5.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="172.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="169.8" y="595.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="172.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="169.8" y="579.0" width="4.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="172.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="170.4" y="563.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="173.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="170.5" y="547.0" width="4.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="173.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="170.6" y="531.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="173.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.29%)</title><rect x="171.2" y="515.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="174.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="172.3" y="499.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="175.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="172.6" y="483.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="175.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.16%)</title><rect x="174.6" y="707.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.16%)</title><rect x="174.6" y="691.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 0.16%)</title><rect x="174.6" y="675.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.03%)</title><rect x="177.1" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.03%)</title><rect x="177.1" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.05%)</title><rect x="177.5" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="177.5" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="177.5" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.16%)</title><rect x="178.1" y="819.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.04%)</title><rect x="178.1" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.09%)</title><rect x="178.6" y="803.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.09%)</title><rect x="178.6" y="787.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.08%)</title><rect x="178.7" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.07%)</title><rect x="178.8" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="180.0" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="180.4" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="180.4" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (65 samples, 0.67%)</title><rect x="180.8" y="835.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (64 samples, 0.66%)</title><rect x="180.9" y="819.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="181.0" y="803.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="184.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="181.0" y="787.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="184.0" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.14%)</title><rect x="181.0" y="771.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="184.0" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.06%)</title><rect x="181.7" y="755.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="184.7" y="766.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 0.04%)</title><rect x="182.7" y="771.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="185.7" y="782.0"></text>
</g>
<g>
<title>__GI___recv (40 samples, 0.41%)</title><rect x="183.4" y="803.0" width="4.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="186.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="183.6" y="787.0" width="4.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="186.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="183.6" y="771.0" width="4.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="186.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="184.2" y="755.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="187.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="184.3" y="739.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="187.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="184.5" y="723.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="187.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="184.7" y="707.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="187.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="185.0" y="691.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="188.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="186.0" y="675.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="189.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="186.1" y="659.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="189.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="186.9" y="643.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="189.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="187.5" y="627.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="190.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="188.0" y="611.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="191.0" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.03%)</title><rect x="188.3" y="803.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="191.3" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32117] (171 samples, 1.77%)</title><rect x="188.8" y="899.0" width="20.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="191.8" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="188.8" y="883.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="191.8" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="188.8" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="191.8" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="188.8" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="191.8" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="188.8" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="191.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="188.8" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="191.8" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (164 samples, 1.70%)</title><rect x="189.7" y="883.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (48 samples, 0.50%)</title><rect x="189.9" y="867.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 0.49%)</title><rect x="190.0" y="851.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="190.5" y="835.0" width="5.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="193.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (41 samples, 0.42%)</title><rect x="190.8" y="819.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="193.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="191.0" y="803.0" width="4.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="194.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="191.0" y="787.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="194.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="191.0" y="771.0" width="4.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="194.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="191.0" y="755.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="194.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="191.3" y="739.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="194.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="192.0" y="723.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="195.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="193.2" y="707.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="196.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="193.9" y="691.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="196.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="194.6" y="675.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="197.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="195.2" y="659.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="198.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (114 samples, 1.18%)</title><rect x="195.8" y="867.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (114 samples, 1.18%)</title><rect x="195.8" y="851.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 0.85%)</title><rect x="196.0" y="835.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (71 samples, 0.73%)</title><rect x="196.3" y="819.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 0.71%)</title><rect x="196.5" y="803.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.5" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (67 samples, 0.69%)</title><rect x="196.5" y="787.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.05%)</title><rect x="196.5" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (62 samples, 0.64%)</title><rect x="197.1" y="771.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (58 samples, 0.60%)</title><rect x="197.5" y="755.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (58 samples, 0.60%)</title><rect x="197.5" y="739.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (58 samples, 0.60%)</title><rect x="197.5" y="723.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (58 samples, 0.60%)</title><rect x="197.5" y="707.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (51 samples, 0.53%)</title><rect x="197.5" y="691.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (49 samples, 0.51%)</title><rect x="197.7" y="675.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (49 samples, 0.51%)</title><rect x="197.7" y="659.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (49 samples, 0.51%)</title><rect x="197.7" y="643.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.51%)</title><rect x="197.7" y="627.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 0.51%)</title><rect x="197.7" y="611.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.08%)</title><rect x="197.9" y="595.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="200.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="198.8" y="595.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="201.8" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (36 samples, 0.37%)</title><rect x="199.3" y="595.0" width="4.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="202.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="199.8" y="579.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="202.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="199.8" y="563.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="202.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="200.1" y="547.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="203.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="200.1" y="531.0" width="3.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="203.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="200.2" y="515.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="203.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="200.4" y="499.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="203.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="200.8" y="483.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="203.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="200.9" y="467.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="203.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.03%)</title><rect x="203.7" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.03%)</title><rect x="203.7" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.03%)</title><rect x="203.7" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.06%)</title><rect x="204.9" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="204.9" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 0.30%)</title><rect x="206.2" y="835.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 0.29%)</title><rect x="206.3" y="819.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="206.3" y="803.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="206.3" y="787.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="209.3" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.08%)</title><rect x="206.3" y="771.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="209.3" y="782.0"></text>
</g>
<g>
<title>__GI___recv (18 samples, 0.19%)</title><rect x="207.5" y="803.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="210.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="207.5" y="787.0" width="2.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="210.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="207.5" y="771.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="210.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="207.7" y="755.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="210.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="207.7" y="739.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="210.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="207.7" y="723.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="210.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="207.9" y="707.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="210.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="207.9" y="691.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="210.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="208.2" y="675.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="211.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="208.5" y="659.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="211.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="209.0" y="643.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="212.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="209.2" y="627.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="212.2" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32124] (308 samples, 3.19%)</title><rect x="209.7" y="899.0" width="37.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="212.7" y="910.0">[NI..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.04%)</title><rect x="209.8" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="212.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="210.3" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="213.3" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="210.3" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="213.3" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="210.3" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="213.3" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.03%)</title><rect x="210.9" y="883.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="213.9" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (295 samples, 3.05%)</title><rect x="211.3" y="883.0" width="36.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.3" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (53 samples, 0.55%)</title><rect x="211.9" y="867.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (53 samples, 0.55%)</title><rect x="211.9" y="851.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="212.3" y="835.0" width="5.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="215.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 0.48%)</title><rect x="212.5" y="819.0" width="5.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="215.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="212.9" y="803.0" width="5.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="215.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="212.9" y="787.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="215.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="213.6" y="771.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="213.6" y="755.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="213.7" y="739.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="216.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="214.8" y="723.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="217.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="215.9" y="707.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="218.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="216.7" y="691.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="219.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="216.9" y="675.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="219.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="217.4" y="659.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="220.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (236 samples, 2.44%)</title><rect x="218.4" y="867.0" width="28.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.4" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (235 samples, 2.43%)</title><rect x="218.5" y="851.0" width="28.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.5" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (159 samples, 1.65%)</title><rect x="218.6" y="835.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.6" y="846.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="219.3" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="222.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (130 samples, 1.35%)</title><rect x="219.7" y="819.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (127 samples, 1.31%)</title><rect x="220.1" y="803.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.1" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (123 samples, 1.27%)</title><rect x="220.1" y="787.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.09%)</title><rect x="220.2" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.07%)</title><rect x="220.2" y="755.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.06%)</title><rect x="220.3" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (113 samples, 1.17%)</title><rect x="221.3" y="771.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (109 samples, 1.13%)</title><rect x="221.4" y="755.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (109 samples, 1.13%)</title><rect x="221.4" y="739.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (109 samples, 1.13%)</title><rect x="221.4" y="723.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (109 samples, 1.13%)</title><rect x="221.4" y="707.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (99 samples, 1.02%)</title><rect x="221.4" y="691.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.07%)</title><rect x="221.4" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.07%)</title><rect x="221.4" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.07%)</title><rect x="221.4" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (92 samples, 0.95%)</title><rect x="222.3" y="675.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 0.95%)</title><rect x="222.3" y="659.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 0.95%)</title><rect x="222.3" y="643.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (92 samples, 0.95%)</title><rect x="222.3" y="627.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (90 samples, 0.93%)</title><rect x="222.5" y="611.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.5" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.21%)</title><rect x="222.6" y="595.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="225.6" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.03%)</title><rect x="222.9" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="225.9" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.04%)</title><rect x="223.6" y="579.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="226.6" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.05%)</title><rect x="224.1" y="579.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="227.1" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (66 samples, 0.68%)</title><rect x="225.5" y="595.0" width="8.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="228.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="226.2" y="579.0" width="7.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="229.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="226.2" y="563.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="229.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="226.2" y="547.0" width="7.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="229.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="226.2" y="531.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="229.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="226.6" y="515.0" width="6.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="229.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="227.0" y="499.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="230.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="227.8" y="483.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="230.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="228.1" y="467.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="231.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="233.2" y="451.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="233.2" y="435.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="236.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="233.2" y="419.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="236.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="233.2" y="403.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="233.2" y="387.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="236.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.09%)</title><rect x="233.5" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.09%)</title><rect x="233.5" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.09%)</title><rect x="233.5" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.03%)</title><rect x="234.7" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="234.7" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="234.7" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="234.7" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.13%)</title><rect x="235.6" y="819.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.04%)</title><rect x="235.8" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.07%)</title><rect x="236.3" y="803.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="236.6" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="237.5" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="237.5" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="237.7" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="237.7" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (75 samples, 0.78%)</title><rect x="238.0" y="835.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (74 samples, 0.77%)</title><rect x="238.2" y="819.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="238.9" y="803.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="241.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="238.9" y="787.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="241.9" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (23 samples, 0.24%)</title><rect x="238.9" y="771.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="241.9" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.04%)</title><rect x="239.0" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="242.0" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.05%)</title><rect x="239.7" y="755.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="242.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.09%)</title><rect x="240.4" y="755.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="243.4" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.04%)</title><rect x="240.8" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="243.8" y="750.0"></text>
</g>
<g>
<title>__GI___recv (43 samples, 0.45%)</title><rect x="241.9" y="803.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="244.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="242.3" y="787.0" width="4.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="245.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="242.3" y="771.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="245.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="243.5" y="755.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="246.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="243.7" y="739.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="246.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="243.9" y="723.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="246.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="244.3" y="707.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="247.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="244.3" y="691.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="247.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="244.6" y="675.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="247.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="245.1" y="659.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="248.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="245.6" y="643.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="248.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="246.5" y="627.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="249.5" y="638.0"></text>
</g>
<g>
<title>[asyncWorker tid=32182] (1,068 samples, 11.05%)</title><rect x="247.3" y="899.0" width="130.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="250.3" y="910.0">[asyncWorker tid..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.07%)</title><rect x="247.3" y="883.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="250.3" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.07%)</title><rect x="247.3" y="867.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="250.3" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.07%)</title><rect x="247.3" y="851.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="250.3" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.07%)</title><rect x="247.3" y="835.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="250.3" y="846.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (4 samples, 0.04%)</title><rect x="247.7" y="819.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="250.7" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (24 samples, 0.25%)</title><rect x="248.7" y="883.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="251.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="251.2" y="867.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="254.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="251.2" y="851.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="254.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="251.2" y="835.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="254.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="251.2" y="819.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="254.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,033 samples, 10.69%)</title><rect x="251.6" y="883.0" width="126.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.6" y="894.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,033 samples, 10.69%)</title><rect x="251.6" y="867.0" width="126.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.6" y="878.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,033 samples, 10.69%)</title><rect x="251.6" y="851.0" width="126.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.6" y="862.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (65 samples, 0.67%)</title><rect x="251.7" y="835.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (64 samples, 0.66%)</title><rect x="251.7" y="819.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.48%)</title><rect x="251.8" y="803.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.43%)</title><rect x="252.3" y="787.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.42%)</title><rect x="252.4" y="771.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.4" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.16%)</title><rect x="252.8" y="755.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="255.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="252.9" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="255.9" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.06%)</title><rect x="253.5" y="739.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="256.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="253.7" y="723.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="256.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="253.7" y="707.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="256.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="254.6" y="755.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="257.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.11%)</title><rect x="254.6" y="739.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="255.1" y="723.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="258.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="255.1" y="707.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="258.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="255.3" y="691.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="258.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="255.4" y="675.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="258.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="255.5" y="659.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="258.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="255.5" y="643.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="258.5" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (7 samples, 0.07%)</title><rect x="256.1" y="739.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="259.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.17%)</title><rect x="257.6" y="803.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.17%)</title><rect x="257.6" y="787.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.17%)</title><rect x="257.6" y="771.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.17%)</title><rect x="257.6" y="755.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.11%)</title><rect x="258.2" y="739.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.03%)</title><rect x="258.2" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="261.2" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.08%)</title><rect x="258.6" y="723.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="261.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="258.7" y="707.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="261.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="258.7" y="691.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="261.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="675.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="261.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="659.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="261.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="643.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="261.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="627.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="261.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="611.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="261.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="258.8" y="595.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="261.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (967 samples, 10.01%)</title><rect x="259.7" y="835.0" width="118.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.7" y="846.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (967 samples, 10.01%)</title><rect x="259.7" y="819.0" width="118.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.7" y="830.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.08%)</title><rect x="259.9" y="803.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.06%)</title><rect x="260.1" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.05%)</title><rect x="260.1" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.05%)</title><rect x="260.1" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.05%)</title><rect x="260.1" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="260.4" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="263.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.03%)</title><rect x="260.4" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="263.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (3 samples, 0.03%)</title><rect x="260.4" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="263.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (51 samples, 0.53%)</title><rect x="261.2" y="803.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (45 samples, 0.47%)</title><rect x="261.5" y="787.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.03%)</title><rect x="261.9" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (37 samples, 0.38%)</title><rect x="262.5" y="771.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (33 samples, 0.34%)</title><rect x="262.6" y="755.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (32 samples, 0.33%)</title><rect x="262.7" y="739.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (26 samples, 0.27%)</title><rect x="263.0" y="723.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (17 samples, 0.18%)</title><rect x="263.1" y="707.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/32017212.accept (17 samples, 0.18%)</title><rect x="263.1" y="691.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (16 samples, 0.17%)</title><rect x="263.2" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (16 samples, 0.17%)</title><rect x="263.2" y="659.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.11%)</title><rect x="263.4" y="643.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.11%)</title><rect x="263.4" y="627.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.4" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.07%)</title><rect x="263.4" y="611.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="266.4" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.04%)</title><rect x="264.3" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="267.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (8 samples, 0.08%)</title><rect x="265.2" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.03%)</title><rect x="265.5" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.isParallel (3 samples, 0.03%)</title><rect x="267.0" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (24 samples, 0.25%)</title><rect x="267.6" y="803.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (24 samples, 0.25%)</title><rect x="267.6" y="787.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (24 samples, 0.25%)</title><rect x="267.6" y="771.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (24 samples, 0.25%)</title><rect x="267.6" y="755.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.20%)</title><rect x="267.8" y="739.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (19 samples, 0.20%)</title><rect x="267.8" y="723.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (17 samples, 0.18%)</title><rect x="267.8" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (13 samples, 0.13%)</title><rect x="268.3" y="691.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.3" y="702.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (13 samples, 0.13%)</title><rect x="268.3" y="675.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.3" y="686.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (13 samples, 0.13%)</title><rect x="268.3" y="659.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.3" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (13 samples, 0.13%)</title><rect x="268.3" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.13%)</title><rect x="268.3" y="627.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (11 samples, 0.11%)</title><rect x="268.6" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (11 samples, 0.11%)</title><rect x="268.6" y="595.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (10 samples, 0.10%)</title><rect x="268.7" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (10 samples, 0.10%)</title><rect x="268.7" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (9 samples, 0.09%)</title><rect x="268.8" y="547.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (4 samples, 0.04%)</title><rect x="268.8" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (4 samples, 0.04%)</title><rect x="268.8" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.05%)</title><rect x="269.3" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="269.4" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="269.4" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (130 samples, 1.35%)</title><rect x="270.6" y="803.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (129 samples, 1.34%)</title><rect x="270.6" y="787.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="270.6" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="270.8" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.05%)</title><rect x="270.8" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.05%)</title><rect x="270.8" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 1.27%)</title><rect x="271.4" y="771.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 1.27%)</title><rect x="271.4" y="755.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (123 samples, 1.27%)</title><rect x="271.4" y="739.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (123 samples, 1.27%)</title><rect x="271.4" y="723.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="271.5" y="707.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="274.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="271.5" y="691.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="274.5" y="702.0"></text>
</g>
<g>
<title>__send (118 samples, 1.22%)</title><rect x="272.0" y="707.0" width="14.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="275.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.20%)</title><rect x="272.2" y="691.0" width="14.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="275.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.20%)</title><rect x="272.2" y="675.0" width="14.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="272.4" y="659.0" width="14.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="275.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="272.4" y="643.0" width="14.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="275.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.17%)</title><rect x="272.6" y="627.0" width="13.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="275.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.17%)</title><rect x="272.6" y="611.0" width="13.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="275.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="272.7" y="595.0" width="13.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="275.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="272.7" y="579.0" width="13.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="275.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.12%)</title><rect x="273.2" y="563.0" width="13.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="276.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="273.7" y="547.0" width="12.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="276.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.04%)</title><rect x="274.2" y="531.0" width="12.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="277.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.97%)</title><rect x="274.9" y="515.0" width="11.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="277.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 0.93%)</title><rect x="275.4" y="499.0" width="11.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="278.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 0.89%)</title><rect x="275.9" y="483.0" width="10.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="278.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 0.88%)</title><rect x="276.0" y="467.0" width="10.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="279.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 0.87%)</title><rect x="276.1" y="451.0" width="10.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="279.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="276.5" y="435.0" width="9.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="279.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.80%)</title><rect x="277.0" y="419.0" width="9.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="280.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="277.5" y="403.0" width="8.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="280.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.72%)</title><rect x="277.9" y="387.0" width="8.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="280.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.65%)</title><rect x="278.7" y="371.0" width="7.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="281.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="279.1" y="355.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="282.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.57%)</title><rect x="279.7" y="339.0" width="6.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="282.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.56%)</title><rect x="279.8" y="323.0" width="6.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="282.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="280.1" y="307.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="283.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="280.2" y="291.0" width="6.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="283.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="280.3" y="275.0" width="6.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="283.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="280.5" y="259.0" width="5.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="283.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="280.7" y="243.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="280.8" y="227.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="283.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="280.9" y="211.0" width="5.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="283.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="281.0" y="195.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="284.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="281.4" y="179.0" width="5.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="284.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="281.6" y="163.0" width="4.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="284.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="281.9" y="147.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="284.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="282.1" y="131.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="285.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="283.1" y="115.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="286.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="283.6" y="99.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="286.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="283.6" y="83.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="286.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (747 samples, 7.73%)</title><rect x="286.5" y="803.0" width="91.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.5" y="814.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.03%)</title><rect x="287.1" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (154 samples, 1.59%)</title><rect x="287.5" y="787.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (154 samples, 1.59%)</title><rect x="287.5" y="771.0" width="18.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (154 samples, 1.59%)</title><rect x="287.5" y="755.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (140 samples, 1.45%)</title><rect x="287.6" y="739.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (140 samples, 1.45%)</title><rect x="287.6" y="723.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.12%)</title><rect x="288.0" y="707.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.09%)</title><rect x="288.1" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="288.1" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="288.1" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="288.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="288.1" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="288.1" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.06%)</title><rect x="288.5" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.06%)</title><rect x="288.5" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.06%)</title><rect x="288.5" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.06%)</title><rect x="288.5" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="288.5" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="288.5" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="288.5" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="288.8" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="288.8" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (124 samples, 1.28%)</title><rect x="289.5" y="707.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (28 samples, 0.29%)</title><rect x="289.5" y="691.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.18%)</title><rect x="289.5" y="675.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.18%)</title><rect x="289.5" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.04%)</title><rect x="289.6" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (4 samples, 0.04%)</title><rect x="289.6" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.6" y="638.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="289.7" y="611.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="292.7" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.12%)</title><rect x="290.1" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.12%)</title><rect x="290.1" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.11%)</title><rect x="290.2" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.2" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.11%)</title><rect x="290.2" y="595.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.11%)</title><rect x="290.2" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.11%)</title><rect x="290.2" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.09%)</title><rect x="290.2" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.03%)</title><rect x="290.2" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="290.6" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="290.6" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (6 samples, 0.06%)</title><rect x="290.6" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (4 samples, 0.04%)</title><rect x="290.8" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="290.9" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (11 samples, 0.11%)</title><rect x="291.5" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.11%)</title><rect x="291.5" y="659.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.11%)</title><rect x="291.5" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="291.5" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="291.5" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.5" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.07%)</title><rect x="292.0" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.07%)</title><rect x="292.0" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.0" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.07%)</title><rect x="292.0" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.0" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.07%)</title><rect x="292.0" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.07%)</title><rect x="292.0" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.07%)</title><rect x="292.0" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.04%)</title><rect x="292.0" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="292.0" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="292.0" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (4 samples, 0.04%)</title><rect x="292.0" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="292.5" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="292.5" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (96 samples, 0.99%)</title><rect x="292.9" y="691.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (29 samples, 0.30%)</title><rect x="293.9" y="675.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.04%)</title><rect x="294.0" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.04%)</title><rect x="294.0" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.04%)</title><rect x="294.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.03%)</title><rect x="294.0" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="294.0" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (22 samples, 0.23%)</title><rect x="294.7" y="659.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.05%)</title><rect x="295.2" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="295.3" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.04%)</title><rect x="295.3" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (12 samples, 0.12%)</title><rect x="295.9" y="643.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.12%)</title><rect x="295.9" y="627.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.12%)</title><rect x="295.9" y="611.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (12 samples, 0.12%)</title><rect x="295.9" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (4 samples, 0.04%)</title><rect x="295.9" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.08%)</title><rect x="296.4" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.08%)</title><rect x="296.4" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.07%)</title><rect x="296.5" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.07%)</title><rect x="296.5" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="296.5" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="296.5" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.5" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.06%)</title><rect x="296.5" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (59 samples, 0.61%)</title><rect x="297.4" y="675.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (58 samples, 0.60%)</title><rect x="297.5" y="659.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (58 samples, 0.60%)</title><rect x="297.5" y="643.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.21%)</title><rect x="297.5" y="627.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.5" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.19%)</title><rect x="297.8" y="611.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="299.4" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (38 samples, 0.39%)</title><rect x="300.0" y="627.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.0" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (9 samples, 0.09%)</title><rect x="300.0" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.0" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (9 samples, 0.09%)</title><rect x="300.0" y="595.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (9 samples, 0.09%)</title><rect x="300.0" y="579.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (9 samples, 0.09%)</title><rect x="300.0" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.14%)</title><rect x="301.1" y="611.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.14%)</title><rect x="301.1" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="301.2" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.2" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="301.3" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="301.3" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="301.3" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.3" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="301.7" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="301.7" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="301.7" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="302.2" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.2" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="302.2" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.12%)</title><rect x="302.8" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.8" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.12%)</title><rect x="302.8" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.8" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="302.8" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.8" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="302.8" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="302.8" y="547.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="302.8" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.8" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="302.9" y="515.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.9" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.08%)</title><rect x="303.1" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.08%)</title><rect x="303.1" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="303.7" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="303.7" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (13 samples, 0.13%)</title><rect x="304.7" y="739.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (11 samples, 0.11%)</title><rect x="305.0" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="305.1" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.1" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.07%)</title><rect x="305.1" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.1" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.07%)</title><rect x="305.1" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.1" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="305.1" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.1" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="305.2" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="305.9" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (570 samples, 5.90%)</title><rect x="306.3" y="787.0" width="69.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.3" y="798.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 5.89%)</title><rect x="306.4" y="771.0" width="69.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.4" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 5.89%)</title><rect x="306.4" y="755.0" width="69.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.4" y="766.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.07%)</title><rect x="307.3" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.07%)</title><rect x="307.3" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.07%)</title><rect x="307.3" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="307.8" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (129 samples, 1.34%)</title><rect x="308.1" y="739.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 0.86%)</title><rect x="313.6" y="723.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="313.9" y="707.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="316.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="313.9" y="691.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="316.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.12%)</title><rect x="313.9" y="675.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="316.9" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.03%)</title><rect x="314.6" y="659.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="317.6" y="670.0"></text>
</g>
<g>
<title>__GI___recv (67 samples, 0.69%)</title><rect x="315.5" y="707.0" width="8.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="318.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="315.6" y="691.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="318.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="315.6" y="675.0" width="8.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="318.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.65%)</title><rect x="316.0" y="659.0" width="7.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="319.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="316.1" y="643.0" width="7.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="319.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="316.7" y="627.0" width="7.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="319.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.57%)</title><rect x="316.9" y="611.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="319.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="317.2" y="595.0" width="6.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="320.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="318.3" y="579.0" width="5.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="321.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="320.1" y="563.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="323.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="321.3" y="547.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="324.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="322.1" y="531.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="325.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="322.8" y="515.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="325.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (35 samples, 0.36%)</title><rect x="323.9" y="739.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="324.1" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="324.1" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="324.1" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (28 samples, 0.29%)</title><rect x="324.5" y="723.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.14%)</title><rect x="326.2" y="707.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.14%)</title><rect x="326.2" y="691.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (15 samples, 0.16%)</title><rect x="328.2" y="739.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.09%)</title><rect x="328.5" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="328.8" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="329.2" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="329.2" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="329.6" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (42 samples, 0.43%)</title><rect x="330.1" y="739.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.1" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (38 samples, 0.39%)</title><rect x="330.6" y="723.0" width="4.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="333.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="331.0" y="707.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="334.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="331.0" y="691.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="334.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="331.7" y="675.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="334.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="331.7" y="659.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="334.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="332.0" y="643.0" width="3.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="335.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="332.6" y="627.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="335.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="332.9" y="611.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="335.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="333.3" y="595.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="336.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="334.2" y="579.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="337.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="334.8" y="563.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="337.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="334.9" y="547.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="337.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (330 samples, 3.42%)</title><rect x="335.3" y="739.0" width="40.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.3" y="750.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (18 samples, 0.19%)</title><rect x="335.9" y="723.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="338.9" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.07%)</title><rect x="336.5" y="707.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="339.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.05%)</title><rect x="337.5" y="707.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="340.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title><rect x="337.7" y="691.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="340.7" y="702.0"></text>
</g>
<g>
<title>__send (301 samples, 3.12%)</title><rect x="338.6" y="723.0" width="36.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="341.6" y="734.0">__s..</text>
</g>
<g>
<title>[unknown] (300 samples, 3.11%)</title><rect x="338.7" y="707.0" width="36.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="341.7" y="718.0">[un..</text>
</g>
<g>
<title>[unknown] (300 samples, 3.11%)</title><rect x="338.7" y="691.0" width="36.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="341.7" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (292 samples, 3.02%)</title><rect x="339.7" y="675.0" width="35.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="342.7" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (291 samples, 3.01%)</title><rect x="339.8" y="659.0" width="35.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.8" y="670.0">[un..</text>
</g>
<g>
<title>[unknown] (289 samples, 2.99%)</title><rect x="340.0" y="643.0" width="35.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="343.0" y="654.0">[un..</text>
</g>
<g>
<title>[unknown] (284 samples, 2.94%)</title><rect x="340.6" y="627.0" width="34.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="343.6" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (281 samples, 2.91%)</title><rect x="341.0" y="611.0" width="34.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="344.0" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (280 samples, 2.90%)</title><rect x="341.1" y="595.0" width="34.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="344.1" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (259 samples, 2.68%)</title><rect x="343.7" y="579.0" width="31.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="346.7" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (248 samples, 2.57%)</title><rect x="345.0" y="563.0" width="30.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="348.0" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (242 samples, 2.50%)</title><rect x="345.8" y="547.0" width="29.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="348.8" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (225 samples, 2.33%)</title><rect x="347.8" y="531.0" width="27.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="350.8" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.19%)</title><rect x="349.4" y="515.0" width="25.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="352.4" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (208 samples, 2.15%)</title><rect x="349.9" y="499.0" width="25.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="352.9" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.12%)</title><rect x="350.3" y="483.0" width="25.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="353.3" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (201 samples, 2.08%)</title><rect x="350.8" y="467.0" width="24.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="353.8" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.06%)</title><rect x="351.0" y="451.0" width="24.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="354.0" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (190 samples, 1.97%)</title><rect x="352.1" y="435.0" width="23.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="355.1" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (185 samples, 1.91%)</title><rect x="352.7" y="419.0" width="22.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="355.7" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 1.79%)</title><rect x="354.2" y="403.0" width="21.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="357.2" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (155 samples, 1.60%)</title><rect x="356.4" y="387.0" width="18.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="359.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (148 samples, 1.53%)</title><rect x="357.2" y="371.0" width="18.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="360.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (144 samples, 1.49%)</title><rect x="357.7" y="355.0" width="17.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="360.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.43%)</title><rect x="358.5" y="339.0" width="16.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="361.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.40%)</title><rect x="358.8" y="323.0" width="16.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="361.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.39%)</title><rect x="359.0" y="307.0" width="16.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="362.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="359.2" y="291.0" width="16.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="362.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.32%)</title><rect x="359.7" y="275.0" width="15.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="362.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.25%)</title><rect x="360.5" y="259.0" width="14.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="363.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.22%)</title><rect x="360.9" y="243.0" width="14.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="363.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.22%)</title><rect x="360.9" y="227.0" width="14.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.20%)</title><rect x="361.2" y="211.0" width="14.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="364.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.12%)</title><rect x="362.1" y="195.0" width="13.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="365.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="363.4" y="179.0" width="11.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 0.96%)</title><rect x="364.0" y="163.0" width="11.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="367.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="366.0" y="147.0" width="9.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="369.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.66%)</title><rect x="367.5" y="131.0" width="7.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="370.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="367.9" y="115.0" width="7.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="370.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="368.0" y="99.0" width="7.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="371.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="374.3" y="83.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="377.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="374.3" y="67.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="377.3" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="374.7" y="51.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="377.7" y="62.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.03%)</title><rect x="375.6" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (14 samples, 0.14%)</title><rect x="376.1" y="787.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.08%)</title><rect x="376.3" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.08%)</title><rect x="376.3" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.06%)</title><rect x="376.5" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.04%)</title><rect x="376.8" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.binSearch (4 samples, 0.04%)</title><rect x="377.3" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.3" y="782.0"></text>
</g>
<g>
<title>[asyncWorker tid=32183] (1,065 samples, 11.02%)</title><rect x="377.8" y="899.0" width="130.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="380.8" y="910.0">[asyncWorker tid..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.06%)</title><rect x="377.8" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="380.8" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.06%)</title><rect x="377.8" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="380.8" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.06%)</title><rect x="377.8" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="380.8" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.06%)</title><rect x="377.8" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="380.8" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (18 samples, 0.19%)</title><rect x="378.7" y="883.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="381.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.04%)</title><rect x="380.5" y="867.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="383.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="380.5" y="851.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="383.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="380.5" y="835.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="383.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="380.5" y="819.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="383.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="380.5" y="803.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="383.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="380.5" y="787.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="383.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="380.6" y="771.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="383.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,039 samples, 10.75%)</title><rect x="380.9" y="883.0" width="126.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.9" y="894.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,039 samples, 10.75%)</title><rect x="380.9" y="867.0" width="126.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.9" y="878.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,039 samples, 10.75%)</title><rect x="380.9" y="851.0" width="126.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.9" y="862.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (73 samples, 0.76%)</title><rect x="381.6" y="835.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (68 samples, 0.70%)</title><rect x="382.0" y="819.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 0.52%)</title><rect x="382.2" y="803.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="382.4" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.45%)</title><rect x="383.0" y="787.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 0.45%)</title><rect x="383.0" y="771.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (19 samples, 0.20%)</title><rect x="383.1" y="755.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="386.1" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.08%)</title><rect x="383.4" y="739.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="386.4" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.05%)</title><rect x="384.5" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="387.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="384.6" y="723.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="387.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="384.6" y="707.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="387.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="384.6" y="691.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="387.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="384.7" y="675.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="387.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="384.7" y="659.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="387.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="385.5" y="755.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="388.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (22 samples, 0.23%)</title><rect x="385.5" y="739.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="388.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="387.4" y="723.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="390.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="387.4" y="707.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="390.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="387.5" y="691.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="390.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="387.5" y="675.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="390.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="387.5" y="659.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="390.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="387.5" y="643.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="390.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="387.7" y="627.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="390.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.16%)</title><rect x="388.5" y="803.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.16%)</title><rect x="388.5" y="787.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.16%)</title><rect x="388.5" y="771.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.16%)</title><rect x="388.5" y="755.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.12%)</title><rect x="388.9" y="739.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.03%)</title><rect x="389.1" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="392.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.07%)</title><rect x="389.5" y="723.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="392.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="707.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="392.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="691.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="392.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="675.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="392.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="659.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="392.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="643.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="392.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="627.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="392.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="611.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="392.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="389.6" y="595.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="392.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (961 samples, 9.95%)</title><rect x="390.5" y="835.0" width="117.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.5" y="846.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (961 samples, 9.95%)</title><rect x="390.5" y="819.0" width="117.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.5" y="830.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.12%)</title><rect x="391.1" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.12%)</title><rect x="391.1" y="787.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (11 samples, 0.11%)</title><rect x="391.1" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (11 samples, 0.11%)</title><rect x="391.1" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (11 samples, 0.11%)</title><rect x="391.1" y="739.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="391.6" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="394.6" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.05%)</title><rect x="391.7" y="707.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="394.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (3 samples, 0.03%)</title><rect x="392.5" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (37 samples, 0.38%)</title><rect x="393.3" y="803.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (33 samples, 0.34%)</title><rect x="393.3" y="787.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (27 samples, 0.28%)</title><rect x="394.0" y="771.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (23 samples, 0.24%)</title><rect x="394.0" y="755.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (23 samples, 0.24%)</title><rect x="394.0" y="739.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (18 samples, 0.19%)</title><rect x="394.0" y="723.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (14 samples, 0.14%)</title><rect x="394.3" y="707.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/32017212.accept (14 samples, 0.14%)</title><rect x="394.3" y="691.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (14 samples, 0.14%)</title><rect x="394.3" y="675.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (13 samples, 0.13%)</title><rect x="394.4" y="659.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.07%)</title><rect x="394.9" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.07%)</title><rect x="394.9" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.9" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.05%)</title><rect x="395.0" y="611.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="398.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (3 samples, 0.03%)</title><rect x="396.5" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (4 samples, 0.04%)</title><rect x="397.8" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (4 samples, 0.04%)</title><rect x="397.8" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (4 samples, 0.04%)</title><rect x="397.8" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (24 samples, 0.25%)</title><rect x="398.3" y="803.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (24 samples, 0.25%)</title><rect x="398.3" y="787.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (24 samples, 0.25%)</title><rect x="398.3" y="771.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (24 samples, 0.25%)</title><rect x="398.3" y="755.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.22%)</title><rect x="398.3" y="739.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (20 samples, 0.21%)</title><rect x="398.4" y="723.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (17 samples, 0.18%)</title><rect x="398.5" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (15 samples, 0.16%)</title><rect x="398.8" y="691.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.8" y="702.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (15 samples, 0.16%)</title><rect x="398.8" y="675.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.8" y="686.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (15 samples, 0.16%)</title><rect x="398.8" y="659.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (15 samples, 0.16%)</title><rect x="398.8" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.8" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.16%)</title><rect x="398.8" y="627.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.8" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (13 samples, 0.13%)</title><rect x="399.0" y="611.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (13 samples, 0.13%)</title><rect x="399.0" y="595.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (13 samples, 0.13%)</title><rect x="399.0" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (13 samples, 0.13%)</title><rect x="399.0" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (13 samples, 0.13%)</title><rect x="399.0" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (9 samples, 0.09%)</title><rect x="399.0" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (9 samples, 0.09%)</title><rect x="399.0" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.04%)</title><rect x="400.1" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="400.1" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="400.1" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (153 samples, 1.58%)</title><rect x="401.3" y="803.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (151 samples, 1.56%)</title><rect x="401.3" y="787.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.08%)</title><rect x="401.3" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="401.9" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="401.9" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="401.9" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 1.48%)</title><rect x="402.3" y="771.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 1.48%)</title><rect x="402.3" y="755.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (143 samples, 1.48%)</title><rect x="402.3" y="739.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (143 samples, 1.48%)</title><rect x="402.3" y="723.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="402.4" y="707.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="405.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="402.4" y="691.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="405.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="402.4" y="675.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="405.4" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.03%)</title><rect x="402.4" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="405.4" y="670.0"></text>
</g>
<g>
<title>__send (137 samples, 1.42%)</title><rect x="403.0" y="707.0" width="16.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="406.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.42%)</title><rect x="403.0" y="691.0" width="16.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="406.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.42%)</title><rect x="403.0" y="675.0" width="16.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="406.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.40%)</title><rect x="403.3" y="659.0" width="16.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="406.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.40%)</title><rect x="403.3" y="643.0" width="16.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="406.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="403.7" y="627.0" width="16.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="406.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="404.0" y="611.0" width="15.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="407.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="404.3" y="595.0" width="15.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="407.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.29%)</title><rect x="404.5" y="579.0" width="15.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="407.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.25%)</title><rect x="405.0" y="563.0" width="14.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="408.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="405.7" y="547.0" width="14.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="408.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.11%)</title><rect x="406.7" y="531.0" width="13.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="409.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.05%)</title><rect x="407.4" y="515.0" width="12.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="410.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 0.99%)</title><rect x="408.1" y="499.0" width="11.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="411.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.97%)</title><rect x="408.3" y="483.0" width="11.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="411.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="408.7" y="467.0" width="11.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="411.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.92%)</title><rect x="408.9" y="451.0" width="10.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="411.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.92%)</title><rect x="408.9" y="435.0" width="10.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="411.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="409.9" y="419.0" width="9.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="412.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.82%)</title><rect x="410.1" y="403.0" width="9.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="413.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.78%)</title><rect x="410.6" y="387.0" width="9.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="413.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="412.2" y="371.0" width="7.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="415.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="412.6" y="355.0" width="7.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="415.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="412.7" y="339.0" width="7.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="415.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="412.9" y="323.0" width="6.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="415.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.56%)</title><rect x="413.2" y="307.0" width="6.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="416.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="413.4" y="291.0" width="6.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="416.4" y="302.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="413.4" y="275.0" width="6.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="416.4" y="286.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="413.8" y="259.0" width="6.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="416.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="414.0" y="243.0" width="5.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="417.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="414.2" y="227.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="417.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="414.2" y="211.0" width="5.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="417.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="414.3" y="195.0" width="5.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="417.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="415.0" y="179.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="418.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="415.3" y="163.0" width="4.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="418.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="415.6" y="147.0" width="4.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="418.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.29%)</title><rect x="416.4" y="131.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="419.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="417.2" y="115.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="420.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="417.3" y="99.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="420.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="417.6" y="83.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="420.6" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="419.4" y="67.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="422.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (719 samples, 7.44%)</title><rect x="420.0" y="803.0" width="87.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.0" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.04%)</title><rect x="420.9" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (165 samples, 1.71%)</title><rect x="421.4" y="787.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (165 samples, 1.71%)</title><rect x="421.4" y="771.0" width="20.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (165 samples, 1.71%)</title><rect x="421.4" y="755.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (155 samples, 1.60%)</title><rect x="421.5" y="739.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (154 samples, 1.59%)</title><rect x="421.6" y="723.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.03%)</title><rect x="421.6" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.6" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="421.6" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.13%)</title><rect x="422.0" y="707.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.09%)</title><rect x="422.1" y="691.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="422.1" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="422.1" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.06%)</title><rect x="422.5" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.06%)</title><rect x="422.5" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.06%)</title><rect x="422.5" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.06%)</title><rect x="422.5" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="422.5" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="422.5" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="422.5" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="422.5" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="422.5" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (3 samples, 0.03%)</title><rect x="422.5" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="422.8" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="422.8" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (137 samples, 1.42%)</title><rect x="423.6" y="707.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (35 samples, 0.36%)</title><rect x="423.6" y="691.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (20 samples, 0.21%)</title><rect x="423.6" y="675.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.21%)</title><rect x="423.6" y="659.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.16%)</title><rect x="424.1" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.16%)</title><rect x="424.1" y="627.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 0.16%)</title><rect x="424.1" y="611.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 0.16%)</title><rect x="424.1" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.16%)</title><rect x="424.1" y="579.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.14%)</title><rect x="424.2" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.09%)</title><rect x="424.2" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.03%)</title><rect x="424.2" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="424.5" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="424.5" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (6 samples, 0.06%)</title><rect x="424.5" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (5 samples, 0.05%)</title><rect x="425.3" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (5 samples, 0.05%)</title><rect x="425.3" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="425.3" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.16%)</title><rect x="426.0" y="675.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.14%)</title><rect x="426.1" y="659.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.14%)</title><rect x="426.1" y="643.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.1" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="426.1" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="426.1" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.04%)</title><rect x="426.1" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="426.1" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="426.1" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (4 samples, 0.04%)</title><rect x="426.1" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (4 samples, 0.04%)</title><rect x="426.1" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="426.3" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.10%)</title><rect x="426.6" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.10%)</title><rect x="426.6" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.6" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.10%)</title><rect x="426.6" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.6" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.10%)</title><rect x="426.6" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.10%)</title><rect x="426.6" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.10%)</title><rect x="426.6" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.04%)</title><rect x="426.6" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (6 samples, 0.06%)</title><rect x="427.1" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (6 samples, 0.06%)</title><rect x="427.1" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="427.1" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.1" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="427.2" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (102 samples, 1.06%)</title><rect x="427.8" y="691.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.04%)</title><rect x="428.6" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (29 samples, 0.30%)</title><rect x="429.1" y="675.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.07%)</title><rect x="429.1" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.07%)</title><rect x="429.1" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.07%)</title><rect x="429.1" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.1" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.03%)</title><rect x="429.4" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="429.4" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (21 samples, 0.22%)</title><rect x="430.0" y="659.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.03%)</title><rect x="430.3" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (3 samples, 0.03%)</title><rect x="430.3" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.03%)</title><rect x="430.3" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="430.3" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="430.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.05%)</title><rect x="430.8" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.05%)</title><rect x="430.8" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.03%)</title><rect x="431.0" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.03%)</title><rect x="431.0" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (10 samples, 0.10%)</title><rect x="431.4" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.10%)</title><rect x="431.4" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.10%)</title><rect x="431.4" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.10%)</title><rect x="431.4" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (4 samples, 0.04%)</title><rect x="431.4" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.03%)</title><rect x="431.5" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="431.5" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="431.5" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="431.5" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="431.9" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="431.9" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.05%)</title><rect x="432.0" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.05%)</title><rect x="432.0" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="432.0" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="432.0" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="432.0" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (63 samples, 0.65%)</title><rect x="432.6" y="675.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (61 samples, 0.63%)</title><rect x="432.7" y="659.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (61 samples, 0.63%)</title><rect x="432.7" y="643.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.23%)</title><rect x="433.0" y="627.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.0" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.20%)</title><rect x="433.3" y="611.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="434.8" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (37 samples, 0.38%)</title><rect x="435.7" y="627.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (8 samples, 0.08%)</title><rect x="436.5" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="436.6" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (7 samples, 0.07%)</title><rect x="436.6" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (7 samples, 0.07%)</title><rect x="436.6" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.6" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.14%)</title><rect x="437.5" y="611.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.14%)</title><rect x="437.5" y="595.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (14 samples, 0.14%)</title><rect x="437.5" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="437.6" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="437.6" y="547.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="437.6" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.6" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="438.1" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="438.1" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="438.2" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="438.2" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="438.6" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.6" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="438.6" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.07%)</title><rect x="439.2" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.2" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.05%)</title><rect x="439.4" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.4" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="439.4" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.4" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="439.4" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="439.4" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="439.4" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="439.6" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.6" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="439.6" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.6" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="439.6" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="439.7" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (9 samples, 0.09%)</title><rect x="440.4" y="739.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (6 samples, 0.06%)</title><rect x="440.8" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="441.2" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (532 samples, 5.51%)</title><rect x="441.5" y="787.0" width="65.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.5" y="798.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (531 samples, 5.50%)</title><rect x="441.6" y="771.0" width="64.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.6" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (531 samples, 5.50%)</title><rect x="441.6" y="755.0" width="64.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.6" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (131 samples, 1.36%)</title><rect x="442.9" y="739.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (99 samples, 1.02%)</title><rect x="446.8" y="723.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="447.6" y="707.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="450.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="447.6" y="691.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="450.6" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.11%)</title><rect x="447.6" y="675.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="450.6" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.04%)</title><rect x="448.0" y="659.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="451.0" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="448.6" y="659.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="451.6" y="670.0"></text>
</g>
<g>
<title>__GI___recv (80 samples, 0.83%)</title><rect x="449.1" y="707.0" width="9.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="452.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="449.6" y="691.0" width="9.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="452.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="449.6" y="675.0" width="9.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="452.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="450.0" y="659.0" width="8.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="453.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="450.1" y="643.0" width="8.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="453.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="450.1" y="627.0" width="8.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="453.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.72%)</title><rect x="450.3" y="611.0" width="8.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="453.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.71%)</title><rect x="450.4" y="595.0" width="8.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="453.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="451.4" y="579.0" width="7.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="454.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="452.5" y="563.0" width="6.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="455.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="454.0" y="547.0" width="4.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="457.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="456.1" y="531.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="459.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="457.4" y="515.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="460.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="458.4" y="499.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="461.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (24 samples, 0.25%)</title><rect x="458.9" y="739.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 0.10%)</title><rect x="459.7" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.07%)</title><rect x="460.1" y="707.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.07%)</title><rect x="460.1" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.07%)</title><rect x="460.9" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="461.1" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="461.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (18 samples, 0.19%)</title><rect x="461.8" y="739.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.16%)</title><rect x="462.2" y="723.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="462.2" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.05%)</title><rect x="462.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.07%)</title><rect x="463.1" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.07%)</title><rect x="463.1" y="691.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="463.6" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.08%)</title><rect x="464.0" y="739.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="464.2" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="464.2" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (58 samples, 0.60%)</title><rect x="465.0" y="739.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.0" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (3 samples, 0.03%)</title><rect x="465.5" y="723.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="468.5" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (50 samples, 0.52%)</title><rect x="466.0" y="723.0" width="6.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="469.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="466.9" y="707.0" width="5.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="469.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="466.9" y="691.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="469.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="467.9" y="675.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="470.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="467.9" y="659.0" width="4.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="470.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="468.4" y="643.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="469.4" y="627.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="472.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="469.7" y="611.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="472.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="470.8" y="595.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="473.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="471.6" y="579.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="474.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (278 samples, 2.88%)</title><rect x="472.1" y="739.0" width="33.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.1" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.05%)</title><rect x="472.3" y="723.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="475.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="472.4" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="475.4" y="718.0"></text>
</g>
<g>
<title>__send (268 samples, 2.77%)</title><rect x="473.3" y="723.0" width="32.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="476.3" y="734.0">__..</text>
</g>
<g>
<title>[unknown] (264 samples, 2.73%)</title><rect x="473.8" y="707.0" width="32.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.8" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (264 samples, 2.73%)</title><rect x="473.8" y="691.0" width="32.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.8" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (255 samples, 2.64%)</title><rect x="474.9" y="675.0" width="31.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="477.9" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (255 samples, 2.64%)</title><rect x="474.9" y="659.0" width="31.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="477.9" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (253 samples, 2.62%)</title><rect x="475.1" y="643.0" width="30.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="478.1" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (252 samples, 2.61%)</title><rect x="475.2" y="627.0" width="30.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="478.2" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (248 samples, 2.57%)</title><rect x="475.7" y="611.0" width="30.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="478.7" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (248 samples, 2.57%)</title><rect x="475.7" y="595.0" width="30.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="478.7" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (237 samples, 2.45%)</title><rect x="477.1" y="579.0" width="28.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="480.1" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (231 samples, 2.39%)</title><rect x="477.8" y="563.0" width="28.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="480.8" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (222 samples, 2.30%)</title><rect x="478.9" y="547.0" width="27.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="481.9" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (213 samples, 2.20%)</title><rect x="480.0" y="531.0" width="26.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="483.0" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (203 samples, 2.10%)</title><rect x="481.2" y="515.0" width="24.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="484.2" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.05%)</title><rect x="481.8" y="499.0" width="24.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="484.8" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (197 samples, 2.04%)</title><rect x="482.0" y="483.0" width="24.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="485.0" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (192 samples, 1.99%)</title><rect x="482.6" y="467.0" width="23.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="485.6" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (189 samples, 1.96%)</title><rect x="482.9" y="451.0" width="23.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="485.9" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (185 samples, 1.91%)</title><rect x="483.4" y="435.0" width="22.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="486.4" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (178 samples, 1.84%)</title><rect x="484.3" y="419.0" width="21.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="487.3" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (172 samples, 1.78%)</title><rect x="485.0" y="403.0" width="21.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="488.0" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (151 samples, 1.56%)</title><rect x="487.6" y="387.0" width="18.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="490.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (148 samples, 1.53%)</title><rect x="487.9" y="371.0" width="18.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="490.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.45%)</title><rect x="488.9" y="355.0" width="17.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="491.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.39%)</title><rect x="489.6" y="339.0" width="16.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="492.6" y="350.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="489.9" y="323.0" width="16.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="492.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="489.9" y="307.0" width="16.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="492.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="490.0" y="291.0" width="16.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="493.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.28%)</title><rect x="490.9" y="275.0" width="15.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="493.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="491.7" y="259.0" width="14.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="494.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="491.7" y="243.0" width="14.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="494.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="492.0" y="227.0" width="14.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="495.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="492.0" y="211.0" width="14.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="495.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.11%)</title><rect x="492.9" y="195.0" width="13.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="495.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="494.0" y="179.0" width="12.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="497.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 0.96%)</title><rect x="494.7" y="163.0" width="11.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="497.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.80%)</title><rect x="496.6" y="147.0" width="9.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="499.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="497.7" y="131.0" width="8.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="500.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.67%)</title><rect x="498.1" y="115.0" width="7.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="501.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="498.4" y="99.0" width="7.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="501.4" y="110.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="505.3" y="83.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="508.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="505.4" y="67.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="508.4" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="505.4" y="51.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="508.4" y="62.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.04%)</title><rect x="506.0" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (10 samples, 0.10%)</title><rect x="506.6" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.07%)</title><rect x="506.7" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.07%)</title><rect x="506.7" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.06%)</title><rect x="506.9" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.9" y="750.0"></text>
</g>
<g>
<title>[asyncWorker tid=32184] (1,070 samples, 11.08%)</title><rect x="507.8" y="899.0" width="130.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="510.8" y="910.0">[asyncWorker tid..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.08%)</title><rect x="508.1" y="883.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="511.1" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.07%)</title><rect x="508.2" y="867.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="511.2" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.07%)</title><rect x="508.2" y="851.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="511.2" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.07%)</title><rect x="508.2" y="835.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="511.2" y="846.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (3 samples, 0.03%)</title><rect x="508.7" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="511.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="509.1" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="512.1" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="509.1" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="512.1" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="509.1" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="512.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="509.1" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="512.1" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="509.6" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="512.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="509.6" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="512.6" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.33%)</title><rect x="510.2" y="883.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="513.2" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.07%)</title><rect x="513.2" y="867.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="516.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="513.2" y="851.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="516.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="513.2" y="835.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="516.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="513.2" y="819.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="516.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="513.2" y="803.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="516.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="513.2" y="787.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="513.5" y="771.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="516.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="513.5" y="755.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="516.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="513.6" y="739.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="516.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,018 samples, 10.54%)</title><rect x="514.1" y="883.0" width="124.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.1" y="894.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,018 samples, 10.54%)</title><rect x="514.1" y="867.0" width="124.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.1" y="878.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,018 samples, 10.54%)</title><rect x="514.1" y="851.0" width="124.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.1" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.04%)</title><rect x="514.2" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.04%)</title><rect x="514.2" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (46 samples, 0.48%)</title><rect x="514.7" y="835.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 0.46%)</title><rect x="514.9" y="819.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.36%)</title><rect x="515.1" y="803.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.31%)</title><rect x="515.7" y="787.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 0.31%)</title><rect x="515.7" y="771.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 0.19%)</title><rect x="515.7" y="755.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="518.7" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.05%)</title><rect x="515.8" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="518.8" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.03%)</title><rect x="516.5" y="739.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="519.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="516.5" y="723.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="519.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="516.5" y="707.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="519.5" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.03%)</title><rect x="517.1" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="520.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="517.9" y="755.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="520.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.09%)</title><rect x="518.0" y="739.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="521.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="518.3" y="723.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="521.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="518.3" y="707.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="521.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="518.3" y="691.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="521.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="518.6" y="675.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="521.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="518.6" y="659.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="521.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="518.7" y="643.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="521.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="519.3" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="519.3" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="519.3" y="771.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="519.3" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="519.9" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (967 samples, 10.01%)</title><rect x="520.3" y="835.0" width="118.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.3" y="846.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (966 samples, 10.00%)</title><rect x="520.4" y="819.0" width="118.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.4" y="830.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.04%)</title><rect x="520.8" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.04%)</title><rect x="520.8" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (43 samples, 0.45%)</title><rect x="521.5" y="803.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.37%)</title><rect x="521.6" y="787.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (30 samples, 0.31%)</title><rect x="522.4" y="771.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (25 samples, 0.26%)</title><rect x="522.6" y="755.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (23 samples, 0.24%)</title><rect x="522.6" y="739.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.6" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (20 samples, 0.21%)</title><rect x="522.6" y="723.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (16 samples, 0.17%)</title><rect x="522.6" y="707.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/32017212.accept (16 samples, 0.17%)</title><rect x="522.6" y="691.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (16 samples, 0.17%)</title><rect x="522.6" y="675.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (16 samples, 0.17%)</title><rect x="522.6" y="659.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.11%)</title><rect x="523.1" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.11%)</title><rect x="523.1" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.1" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (10 samples, 0.10%)</title><rect x="523.2" y="611.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="526.2" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.04%)</title><rect x="523.4" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="526.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.04%)</title><rect x="524.0" y="595.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="527.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (4 samples, 0.04%)</title><rect x="524.6" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.03%)</title><rect x="524.7" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$74/109133345.accept (3 samples, 0.03%)</title><rect x="524.7" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="524.7" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="524.7" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="524.7" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="524.7" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$Box.get (3 samples, 0.03%)</title><rect x="525.7" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (5 samples, 0.05%)</title><rect x="526.2" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.&lt;init&gt; (5 samples, 0.05%)</title><rect x="526.2" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.&lt;init&gt; (5 samples, 0.05%)</title><rect x="526.2" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (22 samples, 0.23%)</title><rect x="527.0" y="803.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (22 samples, 0.23%)</title><rect x="527.0" y="787.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.22%)</title><rect x="527.1" y="771.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (21 samples, 0.22%)</title><rect x="527.1" y="755.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.20%)</title><rect x="527.1" y="739.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (19 samples, 0.20%)</title><rect x="527.1" y="723.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (19 samples, 0.20%)</title><rect x="527.1" y="707.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (12 samples, 0.12%)</title><rect x="528.0" y="691.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.0" y="702.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (12 samples, 0.12%)</title><rect x="528.0" y="675.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.0" y="686.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (12 samples, 0.12%)</title><rect x="528.0" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.0" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (12 samples, 0.12%)</title><rect x="528.0" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.0" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.12%)</title><rect x="528.0" y="627.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.0" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (12 samples, 0.12%)</title><rect x="528.0" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (12 samples, 0.12%)</title><rect x="528.0" y="595.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (12 samples, 0.12%)</title><rect x="528.0" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (12 samples, 0.12%)</title><rect x="528.0" y="563.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (12 samples, 0.12%)</title><rect x="528.0" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (6 samples, 0.06%)</title><rect x="528.0" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (6 samples, 0.06%)</title><rect x="528.0" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.06%)</title><rect x="528.7" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="528.7" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="528.7" y="499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (163 samples, 1.69%)</title><rect x="529.7" y="803.0" width="19.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (163 samples, 1.69%)</title><rect x="529.7" y="787.0" width="19.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="529.7" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="530.0" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.05%)</title><rect x="530.0" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.05%)</title><rect x="530.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 1.61%)</title><rect x="530.6" y="771.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 1.61%)</title><rect x="530.6" y="755.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (156 samples, 1.61%)</title><rect x="530.6" y="739.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (156 samples, 1.61%)</title><rect x="530.6" y="723.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="530.7" y="707.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="533.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="530.7" y="691.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="533.7" y="702.0"></text>
</g>
<g>
<title>__send (150 samples, 1.55%)</title><rect x="531.3" y="707.0" width="18.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="534.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (148 samples, 1.53%)</title><rect x="531.5" y="691.0" width="18.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="534.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (148 samples, 1.53%)</title><rect x="531.5" y="675.0" width="18.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="534.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="531.8" y="659.0" width="17.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="534.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="531.8" y="643.0" width="17.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="531.8" y="627.0" width="17.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="534.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="531.8" y="611.0" width="17.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="534.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (145 samples, 1.50%)</title><rect x="531.9" y="595.0" width="17.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="534.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (145 samples, 1.50%)</title><rect x="531.9" y="579.0" width="17.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="534.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.39%)</title><rect x="533.3" y="563.0" width="16.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="536.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.32%)</title><rect x="534.0" y="547.0" width="15.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="537.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.29%)</title><rect x="534.3" y="531.0" width="15.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="537.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.22%)</title><rect x="535.2" y="515.0" width="14.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="538.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.20%)</title><rect x="535.4" y="499.0" width="14.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="538.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.19%)</title><rect x="535.6" y="483.0" width="14.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="538.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="535.9" y="467.0" width="13.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="538.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.15%)</title><rect x="536.1" y="451.0" width="13.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="539.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.15%)</title><rect x="536.1" y="435.0" width="13.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="539.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="536.9" y="419.0" width="12.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="539.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.06%)</title><rect x="537.2" y="403.0" width="12.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="540.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 0.99%)</title><rect x="537.9" y="387.0" width="11.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="540.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 0.87%)</title><rect x="539.4" y="371.0" width="10.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="542.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.83%)</title><rect x="539.8" y="355.0" width="9.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="542.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.80%)</title><rect x="540.2" y="339.0" width="9.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="543.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.73%)</title><rect x="540.9" y="323.0" width="8.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="543.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.71%)</title><rect x="541.2" y="307.0" width="8.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="544.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="541.3" y="291.0" width="8.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="544.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.69%)</title><rect x="541.4" y="275.0" width="8.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="544.4" y="286.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="542.0" y="259.0" width="7.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="545.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="542.4" y="243.0" width="7.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="545.4" y="254.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="542.5" y="227.0" width="7.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="545.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="542.5" y="211.0" width="7.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="545.5" y="222.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="542.7" y="195.0" width="6.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="545.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="543.4" y="179.0" width="6.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="546.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="543.9" y="163.0" width="5.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="546.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="544.5" y="147.0" width="5.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="547.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="545.2" y="131.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="548.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="545.7" y="115.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="548.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="545.7" y="99.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="548.7" y="110.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="545.7" y="83.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="548.7" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="549.3" y="67.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="552.3" y="78.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="549.3" y="51.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="552.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (727 samples, 7.53%)</title><rect x="549.6" y="803.0" width="88.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.6" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (149 samples, 1.54%)</title><rect x="550.3" y="787.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (149 samples, 1.54%)</title><rect x="550.3" y="771.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (149 samples, 1.54%)</title><rect x="550.3" y="755.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (139 samples, 1.44%)</title><rect x="550.3" y="739.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (139 samples, 1.44%)</title><rect x="550.3" y="723.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.16%)</title><rect x="550.3" y="707.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.11%)</title><rect x="550.5" y="691.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="550.7" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="550.7" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.04%)</title><rect x="550.7" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="550.7" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="550.7" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="550.8" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="550.8" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.8" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.05%)</title><rect x="551.2" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.05%)</title><rect x="551.2" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.05%)</title><rect x="551.2" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.05%)</title><rect x="551.2" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="551.2" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="551.2" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="551.3" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (124 samples, 1.28%)</title><rect x="552.2" y="707.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (36 samples, 0.37%)</title><rect x="552.2" y="691.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 0.29%)</title><rect x="552.3" y="675.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.29%)</title><rect x="552.3" y="659.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (25 samples, 0.26%)</title><rect x="552.7" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (25 samples, 0.26%)</title><rect x="552.7" y="627.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 0.25%)</title><rect x="552.8" y="611.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.8" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 0.25%)</title><rect x="552.8" y="595.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.25%)</title><rect x="552.8" y="579.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.25%)</title><rect x="552.8" y="563.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (18 samples, 0.19%)</title><rect x="552.8" y="547.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.04%)</title><rect x="552.8" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (14 samples, 0.14%)</title><rect x="553.3" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (14 samples, 0.14%)</title><rect x="553.3" y="515.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (13 samples, 0.13%)</title><rect x="553.4" y="499.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.06%)</title><rect x="553.6" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.8" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.8" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.05%)</title><rect x="553.8" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.8" y="382.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.03%)</title><rect x="554.0" y="355.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="557.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (4 samples, 0.04%)</title><rect x="554.5" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="554.5" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="554.5" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (6 samples, 0.06%)</title><rect x="555.0" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (6 samples, 0.06%)</title><rect x="555.0" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="555.0" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="555.4" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.07%)</title><rect x="555.7" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.07%)</title><rect x="555.7" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.07%)</title><rect x="555.7" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.05%)</title><rect x="556.0" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.05%)</title><rect x="556.0" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.0" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="556.1" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.1" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="556.1" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="556.1" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="556.1" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (88 samples, 0.91%)</title><rect x="556.6" y="691.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="556.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (23 samples, 0.24%)</title><rect x="557.3" y="675.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.07%)</title><rect x="557.4" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.07%)</title><rect x="557.4" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.07%)</title><rect x="557.4" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.04%)</title><rect x="557.8" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.04%)</title><rect x="557.8" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.03%)</title><rect x="557.9" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (6 samples, 0.06%)</title><rect x="558.3" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.06%)</title><rect x="558.3" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="558.3" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.06%)</title><rect x="558.3" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.04%)</title><rect x="558.5" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (9 samples, 0.09%)</title><rect x="559.0" y="659.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (6 samples, 0.06%)</title><rect x="559.4" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="559.4" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="559.4" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="559.4" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.03%)</title><rect x="559.4" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.03%)</title><rect x="559.8" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.03%)</title><rect x="559.8" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (59 samples, 0.61%)</title><rect x="560.1" y="675.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (59 samples, 0.61%)</title><rect x="560.1" y="659.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (59 samples, 0.61%)</title><rect x="560.1" y="643.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.14%)</title><rect x="560.6" y="627.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.6" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.12%)</title><rect x="560.6" y="611.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.6" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="561.5" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (41 samples, 0.42%)</title><rect x="562.3" y="627.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (10 samples, 0.10%)</title><rect x="563.3" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (8 samples, 0.08%)</title><rect x="563.5" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (8 samples, 0.08%)</title><rect x="563.5" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (8 samples, 0.08%)</title><rect x="563.5" y="563.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.5" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.08%)</title><rect x="564.5" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.08%)</title><rect x="564.5" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="564.5" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="564.5" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="564.5" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="564.5" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="564.9" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.9" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="565.0" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.0" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="565.0" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.12%)</title><rect x="565.5" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.11%)</title><rect x="565.6" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.6" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="565.7" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.7" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="565.7" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="565.7" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="565.7" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.7" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="566.2" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="566.6" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.6" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="566.6" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (10 samples, 0.10%)</title><rect x="567.3" y="739.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (3 samples, 0.03%)</title><rect x="567.3" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/113199660.invoke (3 samples, 0.03%)</title><rect x="567.3" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/596171409.invokeStatic (3 samples, 0.03%)</title><rect x="567.3" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.03%)</title><rect x="567.3" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (3 samples, 0.03%)</title><rect x="567.3" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (6 samples, 0.06%)</title><rect x="567.8" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.8" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="567.8" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="567.8" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="567.8" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.8" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="567.8" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="568.2" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (560 samples, 5.80%)</title><rect x="568.7" y="787.0" width="68.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.7" y="798.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (558 samples, 5.78%)</title><rect x="568.9" y="771.0" width="68.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.9" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (558 samples, 5.78%)</title><rect x="568.9" y="755.0" width="68.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.9" y="766.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.09%)</title><rect x="570.1" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.09%)</title><rect x="570.1" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.09%)</title><rect x="570.1" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (135 samples, 1.40%)</title><rect x="571.2" y="739.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (93 samples, 0.96%)</title><rect x="576.2" y="723.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="577.0" y="707.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="580.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="577.0" y="691.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="580.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.12%)</title><rect x="577.0" y="675.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="580.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.05%)</title><rect x="577.8" y="659.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="580.8" y="670.0"></text>
</g>
<g>
<title>__GI___recv (75 samples, 0.78%)</title><rect x="578.4" y="707.0" width="9.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="581.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="578.8" y="691.0" width="8.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="581.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="578.8" y="675.0" width="8.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="581.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="579.3" y="659.0" width="8.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="582.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="579.3" y="643.0" width="8.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="582.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.69%)</title><rect x="579.4" y="627.0" width="8.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="582.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="579.5" y="611.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="582.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="579.5" y="595.0" width="8.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="582.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="581.1" y="579.0" width="6.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="584.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="582.4" y="563.0" width="5.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="585.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="583.4" y="547.0" width="4.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="586.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="585.3" y="531.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="588.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="586.9" y="515.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="589.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="587.2" y="499.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="590.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (25 samples, 0.26%)</title><rect x="587.7" y="739.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.04%)</title><rect x="588.1" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.04%)</title><rect x="588.1" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="588.6" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="588.6" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="588.6" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.09%)</title><rect x="589.1" y="723.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="589.6" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="589.6" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.04%)</title><rect x="590.2" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="590.2" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="590.2" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.10%)</title><rect x="590.8" y="739.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.07%)</title><rect x="590.9" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="591.1" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="591.1" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="591.4" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (51 samples, 0.53%)</title><rect x="592.4" y="739.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.4" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (50 samples, 0.52%)</title><rect x="592.5" y="723.0" width="6.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="595.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="593.6" y="707.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="596.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="593.6" y="691.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="596.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.29%)</title><rect x="595.2" y="675.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="598.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.29%)</title><rect x="595.2" y="659.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="598.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="595.7" y="643.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="598.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="596.2" y="627.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="596.5" y="611.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="599.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="597.3" y="595.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="600.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="598.1" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="601.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (306 samples, 3.17%)</title><rect x="598.6" y="739.0" width="37.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.6" y="750.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (9 samples, 0.09%)</title><rect x="598.8" y="723.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="601.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="599.3" y="707.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="602.3" y="718.0"></text>
</g>
<g>
<title>__send (295 samples, 3.05%)</title><rect x="599.9" y="723.0" width="36.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="602.9" y="734.0">__s..</text>
</g>
<g>
<title>[unknown] (293 samples, 3.03%)</title><rect x="600.2" y="707.0" width="35.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="603.2" y="718.0">[un..</text>
</g>
<g>
<title>[unknown] (293 samples, 3.03%)</title><rect x="600.2" y="691.0" width="35.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="603.2" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (283 samples, 2.93%)</title><rect x="601.4" y="675.0" width="34.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="604.4" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (282 samples, 2.92%)</title><rect x="601.5" y="659.0" width="34.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="604.5" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (282 samples, 2.92%)</title><rect x="601.5" y="643.0" width="34.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="604.5" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (280 samples, 2.90%)</title><rect x="601.8" y="627.0" width="34.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="604.8" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (280 samples, 2.90%)</title><rect x="601.8" y="611.0" width="34.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="604.8" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (278 samples, 2.88%)</title><rect x="602.0" y="595.0" width="34.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="605.0" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (271 samples, 2.81%)</title><rect x="602.9" y="579.0" width="33.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="605.9" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (262 samples, 2.71%)</title><rect x="604.0" y="563.0" width="32.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="607.0" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (247 samples, 2.56%)</title><rect x="605.8" y="547.0" width="30.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="608.8" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (234 samples, 2.42%)</title><rect x="607.4" y="531.0" width="28.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="610.4" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.25%)</title><rect x="609.5" y="515.0" width="26.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="612.5" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.19%)</title><rect x="610.1" y="499.0" width="25.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="613.1" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (208 samples, 2.15%)</title><rect x="610.6" y="483.0" width="25.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="613.6" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (206 samples, 2.13%)</title><rect x="610.8" y="467.0" width="25.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="613.8" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (204 samples, 2.11%)</title><rect x="611.1" y="451.0" width="24.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="614.1" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.05%)</title><rect x="611.8" y="435.0" width="24.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="614.8" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (192 samples, 1.99%)</title><rect x="612.5" y="419.0" width="23.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="615.5" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 1.85%)</title><rect x="614.1" y="403.0" width="21.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="617.1" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 1.68%)</title><rect x="616.2" y="387.0" width="19.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="619.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (152 samples, 1.57%)</title><rect x="617.4" y="371.0" width="18.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="620.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="618.1" y="355.0" width="17.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="621.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.46%)</title><rect x="618.7" y="339.0" width="17.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="621.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.43%)</title><rect x="619.1" y="323.0" width="16.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="622.1" y="334.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.41%)</title><rect x="619.4" y="307.0" width="16.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="622.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.39%)</title><rect x="619.6" y="291.0" width="16.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="622.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="620.0" y="275.0" width="16.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="623.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="620.0" y="259.0" width="16.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="623.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="620.0" y="243.0" width="16.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="623.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="620.2" y="227.0" width="15.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="623.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="620.2" y="211.0" width="15.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="623.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.28%)</title><rect x="620.8" y="195.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="623.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="621.7" y="179.0" width="14.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="624.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.13%)</title><rect x="622.7" y="163.0" width="13.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="625.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 0.99%)</title><rect x="624.2" y="147.0" width="11.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="627.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 0.85%)</title><rect x="626.0" y="131.0" width="10.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="629.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.78%)</title><rect x="626.8" y="115.0" width="9.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="629.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="627.2" y="99.0" width="8.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="630.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="635.4" y="83.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="638.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="635.4" y="67.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="638.4" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="635.5" y="51.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="638.5" y="62.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (7 samples, 0.07%)</title><rect x="636.0" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (10 samples, 0.10%)</title><rect x="637.2" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.08%)</title><rect x="637.2" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.08%)</title><rect x="637.2" y="755.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.06%)</title><rect x="637.4" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.03%)</title><rect x="637.7" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.7" y="734.0"></text>
</g>
<g>
<title>[asyncWorker tid=32185] (1,067 samples, 11.04%)</title><rect x="638.5" y="899.0" width="130.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="641.5" y="910.0">[asyncWorker tid..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.04%)</title><rect x="638.8" y="883.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="641.8" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="638.9" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="641.9" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="638.9" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="641.9" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="638.9" y="835.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="641.9" y="846.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (3 samples, 0.03%)</title><rect x="638.9" y="819.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="641.9" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="639.4" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="642.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="639.4" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="642.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="639.4" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="642.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="639.4" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="642.4" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (27 samples, 0.28%)</title><rect x="639.8" y="883.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="642.8" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.07%)</title><rect x="642.2" y="867.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="645.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="642.2" y="851.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="645.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="642.2" y="835.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="645.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="642.2" y="819.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="645.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="642.2" y="803.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="645.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="642.2" y="787.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="645.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="642.3" y="771.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="645.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="642.3" y="755.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="645.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="642.4" y="739.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="645.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,030 samples, 10.66%)</title><rect x="643.1" y="883.0" width="125.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="894.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,030 samples, 10.66%)</title><rect x="643.1" y="867.0" width="125.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.1" y="878.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,030 samples, 10.66%)</title><rect x="643.1" y="851.0" width="125.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.1" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51 samples, 0.53%)</title><rect x="643.7" y="835.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (48 samples, 0.50%)</title><rect x="644.0" y="819.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.39%)</title><rect x="644.2" y="803.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.34%)</title><rect x="644.8" y="787.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.34%)</title><rect x="644.8" y="771.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.17%)</title><rect x="645.0" y="755.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="648.0" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.05%)</title><rect x="645.6" y="739.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="648.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="645.6" y="723.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="648.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="645.6" y="707.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="648.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="645.7" y="691.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="648.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="645.7" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="648.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="645.9" y="659.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="648.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="647.0" y="755.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="650.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 0.13%)</title><rect x="647.0" y="739.0" width="1.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="650.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="647.5" y="723.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="650.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="647.5" y="707.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="650.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="647.6" y="691.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="650.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="647.8" y="675.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="650.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="648.1" y="659.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="651.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="648.1" y="643.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="651.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="648.9" y="803.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="648.9" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="648.9" y="771.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="648.9" y="755.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="649.5" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (974 samples, 10.08%)</title><rect x="649.9" y="835.0" width="119.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.9" y="846.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (974 samples, 10.08%)</title><rect x="649.9" y="819.0" width="119.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.9" y="830.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.10%)</title><rect x="650.5" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.10%)</title><rect x="650.5" y="787.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (7 samples, 0.07%)</title><rect x="650.7" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (7 samples, 0.07%)</title><rect x="650.7" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (7 samples, 0.07%)</title><rect x="650.7" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.7" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="651.0" y="723.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="654.0" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (3 samples, 0.03%)</title><rect x="651.1" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="654.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (3 samples, 0.03%)</title><rect x="652.0" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (3 samples, 0.03%)</title><rect x="652.0" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (3 samples, 0.03%)</title><rect x="652.0" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (47 samples, 0.49%)</title><rect x="652.3" y="803.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (43 samples, 0.45%)</title><rect x="652.5" y="787.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.03%)</title><rect x="652.8" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (36 samples, 0.37%)</title><rect x="653.3" y="771.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (31 samples, 0.32%)</title><rect x="653.4" y="755.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (29 samples, 0.30%)</title><rect x="653.7" y="739.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (19 samples, 0.20%)</title><rect x="653.7" y="723.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (14 samples, 0.14%)</title><rect x="653.9" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$36/32017212.accept (14 samples, 0.14%)</title><rect x="653.9" y="691.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (13 samples, 0.13%)</title><rect x="654.0" y="675.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (12 samples, 0.12%)</title><rect x="654.2" y="659.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.10%)</title><rect x="654.3" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (10 samples, 0.10%)</title><rect x="654.3" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.3" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.07%)</title><rect x="654.5" y="611.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="657.5" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.03%)</title><rect x="654.7" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="657.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.03%)</title><rect x="655.6" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (3 samples, 0.03%)</title><rect x="656.2" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (3 samples, 0.03%)</title><rect x="656.9" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$Box.get (3 samples, 0.03%)</title><rect x="657.3" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3 samples, 0.03%)</title><rect x="658.1" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (3 samples, 0.03%)</title><rect x="658.1" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (3 samples, 0.03%)</title><rect x="658.1" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (34 samples, 0.35%)</title><rect x="658.4" y="803.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (34 samples, 0.35%)</title><rect x="658.4" y="787.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.35%)</title><rect x="658.4" y="771.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (34 samples, 0.35%)</title><rect x="658.4" y="755.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (28 samples, 0.29%)</title><rect x="658.7" y="739.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (25 samples, 0.26%)</title><rect x="659.1" y="723.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (24 samples, 0.25%)</title><rect x="659.2" y="707.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (18 samples, 0.19%)</title><rect x="659.9" y="691.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.9" y="702.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$85/239371241.apply (18 samples, 0.19%)</title><rect x="659.9" y="675.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.9" y="686.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (18 samples, 0.19%)</title><rect x="659.9" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.9" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$84/1153304128.compare (18 samples, 0.19%)</title><rect x="659.9" y="643.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.9" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.18%)</title><rect x="660.0" y="627.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.0" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/321811406.compare (3 samples, 0.03%)</title><rect x="660.2" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingInt$7b0bb60$1 (3 samples, 0.03%)</title><rect x="660.2" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/165058142.compare (13 samples, 0.13%)</title><rect x="660.5" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (13 samples, 0.13%)</title><rect x="660.5" y="595.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$82/1712879234.applyAsLong (13 samples, 0.13%)</title><rect x="660.5" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$5 (13 samples, 0.13%)</title><rect x="660.5" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (13 samples, 0.13%)</title><rect x="660.5" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.07%)</title><rect x="660.6" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.07%)</title><rect x="660.6" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.05%)</title><rect x="661.5" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="661.6" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="661.6" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (3 samples, 0.03%)</title><rect x="662.1" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (164 samples, 1.70%)</title><rect x="662.6" y="803.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (163 samples, 1.69%)</title><rect x="662.6" y="787.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.13%)</title><rect x="662.6" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="663.6" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.05%)</title><rect x="663.6" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.05%)</title><rect x="663.6" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 1.55%)</title><rect x="664.2" y="771.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 1.55%)</title><rect x="664.2" y="755.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (150 samples, 1.55%)</title><rect x="664.2" y="739.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (150 samples, 1.55%)</title><rect x="664.2" y="723.0" width="18.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="664.3" y="707.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="667.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="664.3" y="691.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="667.3" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="664.3" y="675.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="667.3" y="686.0"></text>
</g>
<g>
<title>__send (145 samples, 1.50%)</title><rect x="664.8" y="707.0" width="17.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="667.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.47%)</title><rect x="665.2" y="691.0" width="17.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="668.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.47%)</title><rect x="665.2" y="675.0" width="17.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="668.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.45%)</title><rect x="665.4" y="659.0" width="17.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="668.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.43%)</title><rect x="665.7" y="643.0" width="16.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="668.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.43%)</title><rect x="665.7" y="627.0" width="16.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="668.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.43%)</title><rect x="665.7" y="611.0" width="16.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="668.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.42%)</title><rect x="665.8" y="595.0" width="16.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="668.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.41%)</title><rect x="665.9" y="579.0" width="16.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="668.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.30%)</title><rect x="667.1" y="563.0" width="15.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="668.2" y="547.0" width="14.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="671.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.17%)</title><rect x="668.7" y="531.0" width="13.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="671.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="669.1" y="515.0" width="13.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="672.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.09%)</title><rect x="669.7" y="499.0" width="12.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="672.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.09%)</title><rect x="669.7" y="483.0" width="12.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="672.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.02%)</title><rect x="670.4" y="467.0" width="12.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="673.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.00%)</title><rect x="670.7" y="451.0" width="11.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="673.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.00%)</title><rect x="670.7" y="435.0" width="11.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="673.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 0.96%)</title><rect x="671.1" y="419.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="674.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 0.95%)</title><rect x="671.3" y="403.0" width="11.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="674.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="671.9" y="387.0" width="10.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="674.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="673.2" y="371.0" width="9.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="676.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.77%)</title><rect x="673.5" y="355.0" width="9.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="676.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.71%)</title><rect x="674.1" y="339.0" width="8.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="677.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="674.4" y="323.0" width="8.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="677.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.67%)</title><rect x="674.6" y="307.0" width="7.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="677.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.65%)</title><rect x="674.8" y="291.0" width="7.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="677.8" y="302.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.65%)</title><rect x="674.8" y="275.0" width="7.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="677.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="674.9" y="259.0" width="7.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="677.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="675.1" y="243.0" width="7.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="678.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="675.2" y="227.0" width="7.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="678.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="675.3" y="211.0" width="7.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="678.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="675.4" y="195.0" width="7.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="678.4" y="206.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="676.0" y="179.0" width="6.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="679.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="676.3" y="163.0" width="6.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="679.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="676.8" y="147.0" width="5.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="679.8" y="158.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="677.0" y="131.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="680.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="678.4" y="115.0" width="4.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="681.4" y="126.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="678.6" y="99.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="681.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="679.0" y="83.0" width="3.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="682.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (706 samples, 7.31%)</title><rect x="682.6" y="803.0" width="86.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.6" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.05%)</title><rect x="683.5" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.04%)</title><rect x="684.1" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$62/1457494899.action (162 samples, 1.68%)</title><rect x="684.6" y="787.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$2 (161 samples, 1.67%)</title><rect x="684.7" y="771.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (160 samples, 1.66%)</title><rect x="684.7" y="755.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (153 samples, 1.58%)</title><rect x="684.7" y="739.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (152 samples, 1.57%)</title><rect x="684.8" y="723.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.14%)</title><rect x="685.1" y="707.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.09%)</title><rect x="685.4" y="691.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="685.4" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.4" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="685.4" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="685.4" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.06%)</title><rect x="685.8" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.06%)</title><rect x="685.8" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.06%)</title><rect x="685.8" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.06%)</title><rect x="685.8" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="685.8" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="685.8" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (4 samples, 0.04%)</title><rect x="686.0" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (4 samples, 0.04%)</title><rect x="686.0" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="686.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.0" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="686.0" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (136 samples, 1.41%)</title><rect x="686.8" y="707.0" width="16.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (33 samples, 0.34%)</title><rect x="686.8" y="691.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.26%)</title><rect x="686.8" y="675.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (25 samples, 0.26%)</title><rect x="686.8" y="659.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (22 samples, 0.23%)</title><rect x="687.1" y="643.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (22 samples, 0.23%)</title><rect x="687.1" y="627.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 0.21%)</title><rect x="687.4" y="611.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.4" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 0.21%)</title><rect x="687.4" y="595.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.21%)</title><rect x="687.4" y="579.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.21%)</title><rect x="687.4" y="563.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.09%)</title><rect x="687.4" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="687.9" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="687.9" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (5 samples, 0.05%)</title><rect x="687.9" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (11 samples, 0.11%)</title><rect x="688.5" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (11 samples, 0.11%)</title><rect x="688.5" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.06%)</title><rect x="688.5" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.06%)</title><rect x="688.5" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.04%)</title><rect x="689.3" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.3" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="689.5" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="689.5" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="689.5" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.08%)</title><rect x="689.8" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="689.8" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.08%)</title><rect x="689.8" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.05%)</title><rect x="689.8" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.05%)</title><rect x="689.8" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.8" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.05%)</title><rect x="689.8" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="690.0" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="690.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="690.0" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="690.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="690.4" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="690.4" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (103 samples, 1.07%)</title><rect x="690.8" y="691.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (29 samples, 0.30%)</title><rect x="692.2" y="675.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.03%)</title><rect x="692.3" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.03%)</title><rect x="692.3" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="692.3" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (23 samples, 0.24%)</title><rect x="692.9" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.03%)</title><rect x="692.9" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.08%)</title><rect x="693.3" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="693.3" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.08%)</title><rect x="693.3" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.05%)</title><rect x="693.6" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.05%)</title><rect x="693.6" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="693.6" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (10 samples, 0.10%)</title><rect x="694.5" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.10%)</title><rect x="694.5" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (9 samples, 0.09%)</title><rect x="694.6" y="611.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (9 samples, 0.09%)</title><rect x="694.6" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="695.0" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="695.0" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.06%)</title><rect x="695.0" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.06%)</title><rect x="695.0" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.06%)</title><rect x="695.0" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.06%)</title><rect x="695.0" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.06%)</title><rect x="695.0" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (63 samples, 0.65%)</title><rect x="695.7" y="675.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (62 samples, 0.64%)</title><rect x="695.8" y="659.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (62 samples, 0.64%)</title><rect x="695.8" y="643.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.20%)</title><rect x="696.6" y="627.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.6" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.19%)</title><rect x="696.7" y="611.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (37 samples, 0.38%)</title><rect x="698.9" y="627.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (8 samples, 0.08%)</title><rect x="699.6" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="699.7" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (7 samples, 0.07%)</title><rect x="699.7" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (7 samples, 0.07%)</title><rect x="699.7" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.7" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.16%)</title><rect x="700.6" y="611.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.14%)</title><rect x="700.7" y="595.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.7" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (14 samples, 0.14%)</title><rect x="700.7" y="579.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.7" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (14 samples, 0.14%)</title><rect x="700.7" y="563.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.14%)</title><rect x="700.7" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.14%)</title><rect x="700.7" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.7" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="701.2" y="515.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.06%)</title><rect x="701.3" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.3" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.06%)</title><rect x="701.3" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (8 samples, 0.08%)</title><rect x="702.4" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.08%)</title><rect x="702.4" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="702.4" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.4" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="702.4" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="702.4" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="702.5" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="702.7" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.06%)</title><rect x="702.7" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.06%)</title><rect x="702.7" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="703.0" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (7 samples, 0.07%)</title><rect x="703.4" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (3 samples, 0.03%)</title><rect x="703.9" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.9" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="703.9" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="703.9" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.9" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="703.9" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="703.9" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (515 samples, 5.33%)</title><rect x="704.4" y="787.0" width="62.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.4" y="798.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (514 samples, 5.32%)</title><rect x="704.5" y="771.0" width="62.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.5" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (514 samples, 5.32%)</title><rect x="704.5" y="755.0" width="62.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.5" y="766.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.03%)</title><rect x="705.3" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="705.3" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="705.3" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (129 samples, 1.34%)</title><rect x="705.7" y="739.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (94 samples, 0.97%)</title><rect x="710.0" y="723.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="710.4" y="707.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="713.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="710.4" y="691.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="713.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.12%)</title><rect x="710.4" y="675.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="713.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.04%)</title><rect x="711.1" y="659.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="714.1" y="670.0"></text>
</g>
<g>
<title>__GI___recv (77 samples, 0.80%)</title><rect x="711.9" y="707.0" width="9.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.77%)</title><rect x="712.3" y="691.0" width="9.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="715.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.77%)</title><rect x="712.3" y="675.0" width="9.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="715.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="712.4" y="659.0" width="8.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="715.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="712.4" y="643.0" width="8.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="715.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.72%)</title><rect x="712.8" y="627.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="715.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="713.3" y="611.0" width="8.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="716.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="713.9" y="595.0" width="7.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="716.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.56%)</title><rect x="714.8" y="579.0" width="6.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="717.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="715.9" y="563.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.39%)</title><rect x="716.7" y="547.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="719.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="718.7" y="531.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="721.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="720.1" y="515.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="723.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (30 samples, 0.31%)</title><rect x="721.5" y="739.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (16 samples, 0.17%)</title><rect x="722.2" y="723.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.10%)</title><rect x="722.9" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.10%)</title><rect x="722.9" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.06%)</title><rect x="724.4" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="724.4" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="724.4" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (14 samples, 0.14%)</title><rect x="725.1" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.10%)</title><rect x="725.4" y="723.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="725.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="726.1" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="726.1" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.03%)</title><rect x="727.1" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (39 samples, 0.40%)</title><rect x="727.5" y="739.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.5" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (35 samples, 0.36%)</title><rect x="727.9" y="723.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="730.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="728.3" y="707.0" width="3.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="731.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="728.3" y="691.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="731.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="729.4" y="675.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="732.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="729.4" y="659.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="732.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="729.7" y="643.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="732.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="729.9" y="627.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="732.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.13%)</title><rect x="730.6" y="611.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="733.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="731.2" y="595.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="734.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="731.7" y="579.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="734.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (285 samples, 2.95%)</title><rect x="732.2" y="739.0" width="34.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.2" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (9 samples, 0.09%)</title><rect x="732.6" y="723.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="735.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="733.1" y="707.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="736.1" y="718.0"></text>
</g>
<g>
<title>__send (270 samples, 2.79%)</title><rect x="734.0" y="723.0" width="33.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="737.0" y="734.0">__..</text>
</g>
<g>
<title>[unknown] (264 samples, 2.73%)</title><rect x="734.8" y="707.0" width="32.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="737.8" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (264 samples, 2.73%)</title><rect x="734.8" y="691.0" width="32.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="737.8" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (262 samples, 2.71%)</title><rect x="735.0" y="675.0" width="32.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="738.0" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (260 samples, 2.69%)</title><rect x="735.3" y="659.0" width="31.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="738.3" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (258 samples, 2.67%)</title><rect x="735.5" y="643.0" width="31.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="738.5" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (257 samples, 2.66%)</title><rect x="735.6" y="627.0" width="31.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="738.6" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (253 samples, 2.62%)</title><rect x="736.1" y="611.0" width="30.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="739.1" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (252 samples, 2.61%)</title><rect x="736.2" y="595.0" width="30.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="739.2" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (242 samples, 2.50%)</title><rect x="737.5" y="579.0" width="29.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="740.5" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (232 samples, 2.40%)</title><rect x="738.7" y="563.0" width="28.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="741.7" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (222 samples, 2.30%)</title><rect x="739.9" y="547.0" width="27.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="742.9" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (213 samples, 2.20%)</title><rect x="741.0" y="531.0" width="26.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="744.0" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.12%)</title><rect x="742.0" y="515.0" width="25.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="745.0" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (203 samples, 2.10%)</title><rect x="742.2" y="499.0" width="24.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="745.2" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.05%)</title><rect x="742.8" y="483.0" width="24.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="745.8" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (194 samples, 2.01%)</title><rect x="743.3" y="467.0" width="23.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="746.3" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (191 samples, 1.98%)</title><rect x="743.7" y="451.0" width="23.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="746.7" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (181 samples, 1.87%)</title><rect x="744.9" y="435.0" width="22.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="747.9" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (176 samples, 1.82%)</title><rect x="745.5" y="419.0" width="21.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="748.5" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (163 samples, 1.69%)</title><rect x="747.1" y="403.0" width="19.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="750.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.45%)</title><rect x="749.9" y="387.0" width="17.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="752.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.40%)</title><rect x="750.5" y="371.0" width="16.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="753.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.30%)</title><rect x="751.6" y="355.0" width="15.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="754.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.25%)</title><rect x="752.2" y="339.0" width="14.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="755.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.23%)</title><rect x="752.5" y="323.0" width="14.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="755.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="752.7" y="307.0" width="14.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="755.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.17%)</title><rect x="753.2" y="291.0" width="13.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="756.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.13%)</title><rect x="753.7" y="275.0" width="13.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="756.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.10%)</title><rect x="754.1" y="259.0" width="12.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="757.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.09%)</title><rect x="754.2" y="243.0" width="12.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="757.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.09%)</title><rect x="754.2" y="227.0" width="12.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="757.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="754.3" y="211.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="757.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.02%)</title><rect x="754.9" y="195.0" width="12.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="757.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.97%)</title><rect x="755.5" y="179.0" width="11.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="758.5" y="190.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 0.93%)</title><rect x="756.0" y="163.0" width="11.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="759.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.83%)</title><rect x="757.3" y="147.0" width="9.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="760.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.66%)</title><rect x="759.2" y="131.0" width="7.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="762.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="759.7" y="115.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="762.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="760.1" y="99.0" width="6.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="763.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="765.8" y="83.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="768.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="766.1" y="67.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="769.1" y="78.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="766.2" y="51.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="769.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (11 samples, 0.11%)</title><rect x="767.5" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.08%)</title><rect x="767.8" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.08%)</title><rect x="767.8" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.04%)</title><rect x="768.2" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.03%)</title><rect x="768.2" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.2" y="734.0"></text>
</g>
<g>
<title>[asyncWorker tid=32186] (397 samples, 4.11%)</title><rect x="768.9" y="899.0" width="48.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="771.9" y="910.0">[asy..</text>
</g>
<g>
<title>[unknown_Java] (15 samples, 0.16%)</title><rect x="769.2" y="883.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="772.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (379 samples, 3.92%)</title><rect x="771.1" y="883.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.1" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (379 samples, 3.92%)</title><rect x="771.1" y="867.0" width="46.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.1" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (379 samples, 3.92%)</title><rect x="771.1" y="851.0" width="46.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.1" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (67 samples, 0.69%)</title><rect x="771.2" y="835.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (63 samples, 0.65%)</title><rect x="771.5" y="819.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (52 samples, 0.54%)</title><rect x="771.7" y="803.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="771.8" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.05%)</title><rect x="772.4" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="772.4" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (41 samples, 0.42%)</title><rect x="773.0" y="787.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.42%)</title><rect x="773.0" y="771.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (19 samples, 0.20%)</title><rect x="773.3" y="755.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="776.3" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.04%)</title><rect x="773.7" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="776.7" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.05%)</title><rect x="774.5" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="777.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="774.7" y="723.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="777.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="774.7" y="707.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="777.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="775.6" y="755.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="778.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.11%)</title><rect x="775.7" y="739.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="778.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="776.2" y="723.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="779.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="776.2" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="779.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="776.3" y="691.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="779.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="776.3" y="675.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="779.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="776.3" y="659.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="779.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="776.3" y="643.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="779.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="776.7" y="627.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="779.7" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="777.0" y="739.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="780.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (4 samples, 0.04%)</title><rect x="777.4" y="739.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="780.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.10%)</title><rect x="778.0" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.10%)</title><rect x="778.0" y="787.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.10%)</title><rect x="778.0" y="771.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.10%)</title><rect x="778.0" y="755.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.08%)</title><rect x="778.3" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.06%)</title><rect x="778.5" y="723.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="781.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="707.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="781.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="691.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="781.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="675.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="781.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="659.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="781.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="643.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="781.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="627.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="781.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="611.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="781.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="778.6" y="595.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="781.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (311 samples, 3.22%)</title><rect x="779.4" y="835.0" width="37.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.4" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (311 samples, 3.22%)</title><rect x="779.4" y="819.0" width="37.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.4" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (171 samples, 1.77%)</title><rect x="779.4" y="803.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (169 samples, 1.75%)</title><rect x="779.4" y="787.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="779.4" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (164 samples, 1.70%)</title><rect x="780.0" y="771.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (163 samples, 1.69%)</title><rect x="780.1" y="755.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (162 samples, 1.68%)</title><rect x="780.1" y="739.0" width="19.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (161 samples, 1.67%)</title><rect x="780.2" y="723.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="780.3" y="707.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="783.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="780.3" y="691.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="783.3" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.05%)</title><rect x="780.3" y="675.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="783.3" y="686.0"></text>
</g>
<g>
<title>__send (153 samples, 1.58%)</title><rect x="781.2" y="707.0" width="18.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="784.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (150 samples, 1.55%)</title><rect x="781.6" y="691.0" width="18.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="784.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (150 samples, 1.55%)</title><rect x="781.6" y="675.0" width="18.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="784.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="782.1" y="659.0" width="17.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="785.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 1.51%)</title><rect x="782.1" y="643.0" width="17.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="785.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (145 samples, 1.50%)</title><rect x="782.2" y="627.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="785.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.46%)</title><rect x="782.7" y="611.0" width="17.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="785.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.44%)</title><rect x="782.9" y="595.0" width="17.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="785.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.42%)</title><rect x="783.1" y="579.0" width="16.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="786.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="784.1" y="563.0" width="15.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="787.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.26%)</title><rect x="785.0" y="547.0" width="14.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="788.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.22%)</title><rect x="785.5" y="531.0" width="14.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.12%)</title><rect x="786.7" y="515.0" width="13.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="789.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.06%)</title><rect x="787.4" y="499.0" width="12.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="790.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="787.9" y="483.0" width="12.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="790.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.00%)</title><rect x="788.0" y="467.0" width="11.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="791.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.00%)</title><rect x="788.0" y="451.0" width="11.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="788.8" y="435.0" width="11.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="791.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 0.91%)</title><rect x="789.1" y="419.0" width="10.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="792.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="789.3" y="403.0" width="10.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="792.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="790.0" y="387.0" width="9.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="793.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="791.0" y="371.0" width="8.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="794.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="791.6" y="355.0" width="8.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="794.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="792.7" y="339.0" width="7.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="795.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="792.8" y="323.0" width="7.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="795.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="793.0" y="307.0" width="6.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="796.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="793.0" y="291.0" width="6.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="796.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="793.0" y="275.0" width="6.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="796.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="793.5" y="259.0" width="6.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="796.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="793.7" y="243.0" width="6.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="796.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="793.8" y="227.0" width="6.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="796.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="793.9" y="211.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="796.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="794.1" y="195.0" width="5.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="797.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.45%)</title><rect x="794.6" y="179.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="795.0" y="163.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="798.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="795.1" y="147.0" width="4.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="798.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="796.0" y="131.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="799.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="796.7" y="115.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="799.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="797.2" y="99.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="800.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.20%)</title><rect x="797.6" y="83.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="800.6" y="94.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="799.4" y="67.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="802.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (140 samples, 1.45%)</title><rect x="800.2" y="803.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (140 samples, 1.45%)</title><rect x="800.2" y="787.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (140 samples, 1.45%)</title><rect x="800.2" y="771.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (128 samples, 1.32%)</title><rect x="800.2" y="755.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (128 samples, 1.32%)</title><rect x="800.2" y="739.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.14%)</title><rect x="800.4" y="723.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.09%)</title><rect x="800.6" y="707.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.6" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="800.6" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.6" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="800.6" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.04%)</title><rect x="800.6" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="800.6" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="800.7" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="800.7" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="800.7" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.7" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.05%)</title><rect x="801.1" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.05%)</title><rect x="801.1" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="801.2" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.03%)</title><rect x="801.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="801.3" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="801.3" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (113 samples, 1.17%)</title><rect x="802.1" y="723.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (22 samples, 0.23%)</title><rect x="802.1" y="707.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18 samples, 0.19%)</title><rect x="802.1" y="691.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.19%)</title><rect x="802.1" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.17%)</title><rect x="802.3" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.17%)</title><rect x="802.3" y="643.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (3 samples, 0.03%)</title><rect x="802.3" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.3" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.13%)</title><rect x="802.7" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.13%)</title><rect x="802.7" y="611.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="802.7" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="802.7" y="579.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.10%)</title><rect x="802.7" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.06%)</title><rect x="802.7" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="803.4" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="803.4" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (4 samples, 0.04%)</title><rect x="803.4" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (3 samples, 0.03%)</title><rect x="803.5" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="803.9" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="803.9" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.04%)</title><rect x="804.3" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="804.3" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="804.3" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="804.4" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="804.4" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.03%)</title><rect x="804.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.4" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.03%)</title><rect x="804.4" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="804.4" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="804.4" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (91 samples, 0.94%)</title><rect x="804.8" y="707.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (6 samples, 0.06%)</title><rect x="804.9" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (6 samples, 0.06%)</title><rect x="804.9" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (5 samples, 0.05%)</title><rect x="805.0" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.04%)</title><rect x="805.1" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (27 samples, 0.28%)</title><rect x="805.9" y="691.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.08%)</title><rect x="806.0" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.08%)</title><rect x="806.0" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.08%)</title><rect x="806.0" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (6 samples, 0.06%)</title><rect x="806.2" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.06%)</title><rect x="806.2" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (5 samples, 0.05%)</title><rect x="806.4" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (18 samples, 0.19%)</title><rect x="807.0" y="675.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.03%)</title><rect x="807.2" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (3 samples, 0.03%)</title><rect x="807.2" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.03%)</title><rect x="807.2" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="807.2" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="807.6" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="807.6" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="807.6" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.05%)</title><rect x="807.7" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.05%)</title><rect x="807.7" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="807.8" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (7 samples, 0.07%)</title><rect x="808.3" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="808.3" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="808.3" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="808.3" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.03%)</title><rect x="808.3" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.03%)</title><rect x="808.7" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.03%)</title><rect x="808.7" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.03%)</title><rect x="808.7" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="808.7" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="808.7" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="808.7" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.7" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="808.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (55 samples, 0.57%)</title><rect x="809.2" y="691.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (54 samples, 0.56%)</title><rect x="809.2" y="675.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (54 samples, 0.56%)</title><rect x="809.2" y="659.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.16%)</title><rect x="809.7" y="643.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.16%)</title><rect x="809.7" y="627.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="811.0" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (35 samples, 0.36%)</title><rect x="811.5" y="643.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.5" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.05%)</title><rect x="811.7" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.05%)</title><rect x="811.7" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (5 samples, 0.05%)</title><rect x="811.7" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (5 samples, 0.05%)</title><rect x="811.7" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.7" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.17%)</title><rect x="812.3" y="627.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.16%)</title><rect x="812.5" y="611.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="812.5" y="595.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.5" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="812.7" y="579.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="812.7" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="812.7" y="547.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="813.2" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.2" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="813.2" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="813.2" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.2" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="813.6" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.6" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="813.6" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.09%)</title><rect x="814.3" y="627.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.08%)</title><rect x="814.4" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="814.4" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.4" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="814.4" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="814.4" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="814.4" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="814.7" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.7" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.05%)</title><rect x="814.7" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="814.9" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (12 samples, 0.12%)</title><rect x="815.9" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (9 samples, 0.09%)</title><rect x="816.2" y="739.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.2" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="816.2" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="816.2" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.2" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="816.2" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.2" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="816.2" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="816.6" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="816.6" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="816.7" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="816.7" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.7" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="816.7" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.7" y="670.0"></text>
</g>
<g>
<title>[asyncWorker tid=32187] (392 samples, 4.06%)</title><rect x="817.3" y="899.0" width="47.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="820.3" y="910.0">[asy..</text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.09%)</title><rect x="818.0" y="883.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="821.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (377 samples, 3.90%)</title><rect x="819.2" y="883.0" width="46.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.2" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (377 samples, 3.90%)</title><rect x="819.2" y="867.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.2" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (377 samples, 3.90%)</title><rect x="819.2" y="851.0" width="46.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.2" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (79 samples, 0.82%)</title><rect x="819.4" y="835.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (75 samples, 0.78%)</title><rect x="819.9" y="819.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 0.63%)</title><rect x="820.2" y="803.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.07%)</title><rect x="821.0" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="821.0" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="821.5" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="821.5" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="821.5" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.49%)</title><rect x="821.9" y="787.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.49%)</title><rect x="821.9" y="771.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.23%)</title><rect x="822.2" y="755.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="825.2" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.05%)</title><rect x="822.6" y="739.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="825.6" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.11%)</title><rect x="823.2" y="739.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="826.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="823.5" y="723.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="826.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="823.5" y="707.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="826.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="823.8" y="691.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="826.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="823.8" y="675.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="826.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="824.1" y="659.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="827.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="824.9" y="755.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="827.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.20%)</title><rect x="824.9" y="739.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="827.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="825.8" y="723.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="828.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="825.8" y="707.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="828.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="826.1" y="691.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="829.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="826.1" y="675.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="829.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="826.3" y="659.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="829.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="826.4" y="643.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="829.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="826.6" y="627.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="829.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.11%)</title><rect x="827.7" y="803.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.11%)</title><rect x="827.7" y="787.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.11%)</title><rect x="827.7" y="771.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.11%)</title><rect x="827.7" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.08%)</title><rect x="828.1" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.1" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.08%)</title><rect x="828.1" y="723.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="831.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="828.2" y="707.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="831.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="828.2" y="691.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="831.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="828.2" y="675.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="831.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="828.2" y="659.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="831.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="828.2" y="643.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="831.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="828.3" y="627.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="831.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="828.3" y="611.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="831.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="828.5" y="595.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="831.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (296 samples, 3.06%)</title><rect x="829.1" y="835.0" width="36.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.1" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (296 samples, 3.06%)</title><rect x="829.1" y="819.0" width="36.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.1" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (135 samples, 1.40%)</title><rect x="829.2" y="803.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (128 samples, 1.32%)</title><rect x="829.6" y="787.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="829.6" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="829.9" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="829.9" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="829.9" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (121 samples, 1.25%)</title><rect x="830.4" y="771.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (121 samples, 1.25%)</title><rect x="830.4" y="755.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (121 samples, 1.25%)</title><rect x="830.4" y="739.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (120 samples, 1.24%)</title><rect x="830.5" y="723.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="830.7" y="707.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="833.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="830.7" y="691.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="833.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="830.7" y="675.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="833.7" y="686.0"></text>
</g>
<g>
<title>__send (112 samples, 1.16%)</title><rect x="831.5" y="707.0" width="13.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="834.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="831.8" y="691.0" width="13.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="834.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="831.8" y="675.0" width="13.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="834.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.11%)</title><rect x="832.1" y="659.0" width="13.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="835.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.11%)</title><rect x="832.1" y="643.0" width="13.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="835.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.11%)</title><rect x="832.1" y="627.0" width="13.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="835.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="832.5" y="611.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="835.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="832.5" y="595.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="835.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="832.5" y="579.0" width="12.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="835.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.04%)</title><rect x="833.0" y="563.0" width="12.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="836.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 0.98%)</title><rect x="833.6" y="547.0" width="11.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="836.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="834.1" y="531.0" width="11.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="837.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 0.87%)</title><rect x="834.9" y="515.0" width="10.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="837.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.82%)</title><rect x="835.5" y="499.0" width="9.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="838.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.78%)</title><rect x="836.0" y="483.0" width="9.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.77%)</title><rect x="836.2" y="467.0" width="9.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="839.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="836.3" y="451.0" width="8.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="839.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="836.4" y="435.0" width="8.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="839.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.73%)</title><rect x="836.5" y="419.0" width="8.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="839.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="836.9" y="403.0" width="8.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="839.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.65%)</title><rect x="837.5" y="387.0" width="7.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="840.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.55%)</title><rect x="838.7" y="371.0" width="6.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="841.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="839.0" y="355.0" width="6.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="842.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="839.3" y="339.0" width="5.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="842.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="839.6" y="323.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="842.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="839.6" y="307.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="842.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="839.6" y="291.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="842.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="839.7" y="275.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="839.7" y="259.0" width="5.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="842.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="839.7" y="243.0" width="5.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="842.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="839.7" y="227.0" width="5.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="842.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="839.7" y="211.0" width="5.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="842.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="839.8" y="195.0" width="5.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="842.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.41%)</title><rect x="840.3" y="179.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="843.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.38%)</title><rect x="840.7" y="163.0" width="4.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="843.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="841.3" y="147.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="844.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="841.5" y="131.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="844.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="842.1" y="115.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="842.3" y="99.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="845.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="842.4" y="83.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="845.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="844.6" y="67.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="847.6" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="844.7" y="51.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="847.7" y="62.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="844.7" y="35.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="847.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="845.2" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="845.2" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="845.2" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (160 samples, 1.66%)</title><rect x="845.7" y="803.0" width="19.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (160 samples, 1.66%)</title><rect x="845.7" y="787.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (160 samples, 1.66%)</title><rect x="845.7" y="771.0" width="19.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (149 samples, 1.54%)</title><rect x="845.7" y="755.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (149 samples, 1.54%)</title><rect x="845.7" y="739.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.08%)</title><rect x="845.8" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.05%)</title><rect x="845.8" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.04%)</title><rect x="845.9" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.04%)</title><rect x="845.9" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="845.9" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="845.9" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="845.9" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="845.9" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="846.1" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="846.1" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (137 samples, 1.42%)</title><rect x="846.8" y="723.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (30 samples, 0.31%)</title><rect x="846.8" y="707.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.28%)</title><rect x="846.8" y="691.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 0.28%)</title><rect x="846.8" y="675.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 0.25%)</title><rect x="847.2" y="659.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 0.25%)</title><rect x="847.2" y="643.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (23 samples, 0.24%)</title><rect x="847.3" y="627.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (23 samples, 0.24%)</title><rect x="847.3" y="611.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="847.5" y="595.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="847.5" y="579.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (18 samples, 0.19%)</title><rect x="847.5" y="563.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.08%)</title><rect x="847.6" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="847.9" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (9 samples, 0.09%)</title><rect x="848.6" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (9 samples, 0.09%)</title><rect x="848.6" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (8 samples, 0.08%)</title><rect x="848.7" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="849.7" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="849.7" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.03%)</title><rect x="850.1" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (107 samples, 1.11%)</title><rect x="850.4" y="707.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.04%)</title><rect x="850.9" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="851.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (42 samples, 0.43%)</title><rect x="851.4" y="691.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.10%)</title><rect x="851.7" y="675.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.10%)</title><rect x="851.7" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.10%)</title><rect x="851.7" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (8 samples, 0.08%)</title><rect x="851.9" y="627.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (8 samples, 0.08%)</title><rect x="851.9" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (6 samples, 0.06%)</title><rect x="852.2" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (6 samples, 0.06%)</title><rect x="852.9" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.04%)</title><rect x="853.1" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="853.1" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="853.1" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.03%)</title><rect x="853.1" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (24 samples, 0.25%)</title><rect x="853.6" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.04%)</title><rect x="853.7" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (4 samples, 0.04%)</title><rect x="853.7" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.04%)</title><rect x="853.7" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.04%)</title><rect x="853.7" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.08%)</title><rect x="854.2" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="854.2" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.08%)</title><rect x="854.2" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.05%)</title><rect x="854.6" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.05%)</title><rect x="854.6" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="854.6" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (10 samples, 0.10%)</title><rect x="855.3" y="659.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.10%)</title><rect x="855.3" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.10%)</title><rect x="855.3" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.10%)</title><rect x="855.3" y="611.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.08%)</title><rect x="855.6" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.08%)</title><rect x="855.6" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.07%)</title><rect x="855.7" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.07%)</title><rect x="855.7" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="855.7" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="855.7" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.7" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.06%)</title><rect x="855.8" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (57 samples, 0.59%)</title><rect x="856.6" y="691.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (57 samples, 0.59%)</title><rect x="856.6" y="675.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (57 samples, 0.59%)</title><rect x="856.6" y="659.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.21%)</title><rect x="856.9" y="643.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.9" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.14%)</title><rect x="857.4" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="858.5" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (34 samples, 0.35%)</title><rect x="859.4" y="643.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.4" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.04%)</title><rect x="860.2" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.04%)</title><rect x="860.2" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (4 samples, 0.04%)</title><rect x="860.2" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (4 samples, 0.04%)</title><rect x="860.2" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.2" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.11%)</title><rect x="860.7" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.10%)</title><rect x="860.8" y="611.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.8" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="860.8" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.8" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="860.8" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="860.8" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="860.8" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="861.1" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.1" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="861.1" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="861.1" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="861.4" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.4" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="861.4" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.12%)</title><rect x="862.1" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.11%)</title><rect x="862.2" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.2" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.11%)</title><rect x="862.2" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.2" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="862.3" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="862.3" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="862.3" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="862.4" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.4" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.06%)</title><rect x="862.7" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.05%)</title><rect x="862.8" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="863.5" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.5" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="863.5" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (11 samples, 0.11%)</title><rect x="863.9" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (8 samples, 0.08%)</title><rect x="864.3" y="739.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.3" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="864.3" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="864.3" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.3" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="864.3" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.3" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="864.3" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="864.7" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.7" y="734.0"></text>
</g>
<g>
<title>[asyncWorker tid=32188] (392 samples, 4.06%)</title><rect x="865.2" y="899.0" width="47.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="868.2" y="910.0">[asy..</text>
</g>
<g>
<title>[unknown_Java] (15 samples, 0.16%)</title><rect x="865.5" y="883.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="868.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (375 samples, 3.88%)</title><rect x="867.3" y="883.0" width="45.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="870.3" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (375 samples, 3.88%)</title><rect x="867.3" y="867.0" width="45.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.3" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (375 samples, 3.88%)</title><rect x="867.3" y="851.0" width="45.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (62 samples, 0.64%)</title><rect x="867.4" y="835.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 0.63%)</title><rect x="867.5" y="819.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (51 samples, 0.53%)</title><rect x="867.5" y="803.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="870.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="867.7" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.04%)</title><rect x="868.2" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.04%)</title><rect x="868.2" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.43%)</title><rect x="868.6" y="787.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.43%)</title><rect x="868.6" y="771.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.14%)</title><rect x="868.8" y="755.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="871.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="869.1" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="872.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.28%)</title><rect x="870.5" y="755.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="873.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.21%)</title><rect x="870.6" y="739.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="873.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="871.7" y="723.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="874.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="871.7" y="707.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="874.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="872.1" y="691.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="875.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="872.1" y="675.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="875.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="872.1" y="659.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="875.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="872.1" y="643.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="875.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="872.4" y="627.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="875.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="872.4" y="611.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="875.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="872.4" y="595.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="875.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="874.0" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="874.0" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="874.0" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="874.0" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="874.4" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.4" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.04%)</title><rect x="874.5" y="723.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="877.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="874.5" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="877.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="874.5" y="691.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="877.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="874.5" y="675.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="874.5" y="659.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="877.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="874.5" y="643.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="877.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="874.6" y="627.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="877.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="874.6" y="611.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="877.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="874.6" y="595.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="877.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (312 samples, 3.23%)</title><rect x="875.0" y="835.0" width="38.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.0" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (311 samples, 3.22%)</title><rect x="875.1" y="819.0" width="38.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.1" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (151 samples, 1.56%)</title><rect x="875.1" y="803.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (144 samples, 1.49%)</title><rect x="875.2" y="787.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="875.2" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (140 samples, 1.45%)</title><rect x="875.7" y="771.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (140 samples, 1.45%)</title><rect x="875.7" y="755.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (138 samples, 1.43%)</title><rect x="875.7" y="739.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (137 samples, 1.42%)</title><rect x="875.9" y="723.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="876.0" y="707.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="879.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="876.0" y="691.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="879.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.05%)</title><rect x="876.0" y="675.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="879.0" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.05%)</title><rect x="876.0" y="659.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="879.0" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.04%)</title><rect x="876.1" y="643.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="879.1" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.04%)</title><rect x="876.1" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="879.1" y="638.0"></text>
</g>
<g>
<title>__send (130 samples, 1.35%)</title><rect x="876.7" y="707.0" width="15.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="879.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="877.1" y="691.0" width="15.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="880.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="877.1" y="675.0" width="15.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="880.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="877.1" y="659.0" width="15.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="880.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="877.1" y="643.0" width="15.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="880.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.30%)</title><rect x="877.2" y="627.0" width="15.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="880.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.28%)</title><rect x="877.4" y="611.0" width="15.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="880.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.24%)</title><rect x="877.9" y="595.0" width="14.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="880.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.22%)</title><rect x="878.2" y="579.0" width="14.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="881.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.15%)</title><rect x="879.0" y="563.0" width="13.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="882.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.10%)</title><rect x="879.6" y="547.0" width="13.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="882.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.06%)</title><rect x="880.1" y="531.0" width="12.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="883.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 0.98%)</title><rect x="881.0" y="515.0" width="11.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="884.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 0.91%)</title><rect x="881.8" y="499.0" width="10.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="884.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="882.0" y="483.0" width="10.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="885.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 0.89%)</title><rect x="882.1" y="467.0" width="10.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="885.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 0.89%)</title><rect x="882.1" y="451.0" width="10.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="885.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 0.86%)</title><rect x="882.5" y="435.0" width="10.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="885.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.80%)</title><rect x="883.2" y="419.0" width="9.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="886.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.78%)</title><rect x="883.4" y="403.0" width="9.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="886.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.73%)</title><rect x="883.9" y="387.0" width="8.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="886.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.64%)</title><rect x="885.0" y="371.0" width="7.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="888.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="885.1" y="355.0" width="7.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="888.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.57%)</title><rect x="885.9" y="339.0" width="6.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="888.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.56%)</title><rect x="886.0" y="323.0" width="6.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="889.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="886.2" y="307.0" width="6.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="889.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="886.6" y="291.0" width="6.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="889.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="886.6" y="275.0" width="6.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="889.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="886.7" y="259.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="889.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="886.7" y="243.0" width="5.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="889.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="887.0" y="227.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="890.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="887.0" y="211.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="890.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="887.1" y="195.0" width="5.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="890.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.40%)</title><rect x="887.8" y="179.0" width="4.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="890.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="888.3" y="163.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="891.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.33%)</title><rect x="888.7" y="147.0" width="3.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="891.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="888.8" y="131.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="891.8" y="142.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="889.8" y="115.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="892.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="889.8" y="99.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="892.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="889.9" y="83.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="892.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.06%)</title><rect x="892.8" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="893.2" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="893.2" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (160 samples, 1.66%)</title><rect x="893.6" y="803.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (160 samples, 1.66%)</title><rect x="893.6" y="787.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (160 samples, 1.66%)</title><rect x="893.6" y="771.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (151 samples, 1.56%)</title><rect x="893.6" y="755.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (151 samples, 1.56%)</title><rect x="893.6" y="739.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.05%)</title><rect x="893.7" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="893.8" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="893.8" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.8" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="893.8" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (145 samples, 1.50%)</title><rect x="894.3" y="723.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (30 samples, 0.31%)</title><rect x="894.3" y="707.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.22%)</title><rect x="894.3" y="691.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 0.22%)</title><rect x="894.3" y="675.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.03%)</title><rect x="894.7" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.16%)</title><rect x="895.0" y="659.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.16%)</title><rect x="895.0" y="643.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.14%)</title><rect x="895.2" y="627.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.2" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.14%)</title><rect x="895.2" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.14%)</title><rect x="895.2" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.14%)</title><rect x="895.2" y="579.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.11%)</title><rect x="895.2" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.06%)</title><rect x="895.2" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="895.9" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="895.9" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (5 samples, 0.05%)</title><rect x="895.9" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (4 samples, 0.04%)</title><rect x="896.0" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="896.0" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="896.0" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="896.5" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="896.5" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.09%)</title><rect x="896.9" y="691.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.09%)</title><rect x="896.9" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.09%)</title><rect x="896.9" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.9" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.05%)</title><rect x="896.9" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.05%)</title><rect x="896.9" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.9" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.05%)</title><rect x="896.9" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="896.9" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="897.1" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.1" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.04%)</title><rect x="897.5" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.04%)</title><rect x="897.5" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="897.5" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.5" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="897.5" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="897.5" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="897.5" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (4 samples, 0.04%)</title><rect x="897.5" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (4 samples, 0.04%)</title><rect x="897.5" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="897.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="897.5" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (115 samples, 1.19%)</title><rect x="898.0" y="707.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.03%)</title><rect x="898.6" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="898.6" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (3 samples, 0.03%)</title><rect x="898.6" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.03%)</title><rect x="898.6" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.03%)</title><rect x="898.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.04%)</title><rect x="898.9" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="898.9" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.04%)</title><rect x="898.9" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.03%)</title><rect x="898.9" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.03%)</title><rect x="898.9" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (38 samples, 0.39%)</title><rect x="899.4" y="691.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.10%)</title><rect x="899.7" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.10%)</title><rect x="899.7" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.09%)</title><rect x="899.8" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (7 samples, 0.07%)</title><rect x="899.9" y="627.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (7 samples, 0.07%)</title><rect x="899.9" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (7 samples, 0.07%)</title><rect x="899.9" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (23 samples, 0.24%)</title><rect x="901.3" y="675.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.10%)</title><rect x="902.0" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (9 samples, 0.09%)</title><rect x="902.1" y="643.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (9 samples, 0.09%)</title><rect x="902.1" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="902.5" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="902.5" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="902.5" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (7 samples, 0.07%)</title><rect x="903.2" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.07%)</title><rect x="903.2" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.07%)</title><rect x="903.2" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.07%)</title><rect x="903.2" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.07%)</title><rect x="903.2" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.07%)</title><rect x="903.2" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.07%)</title><rect x="903.2" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.07%)</title><rect x="903.2" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="903.2" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="903.2" y="515.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.2" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="903.3" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (65 samples, 0.67%)</title><rect x="904.1" y="691.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (65 samples, 0.67%)</title><rect x="904.1" y="675.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (65 samples, 0.67%)</title><rect x="904.1" y="659.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.26%)</title><rect x="904.3" y="643.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.3" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (24 samples, 0.25%)</title><rect x="904.4" y="627.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="906.4" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="906.4" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.03%)</title><rect x="907.0" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (38 samples, 0.39%)</title><rect x="907.4" y="643.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.4" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.13%)</title><rect x="908.3" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.13%)</title><rect x="908.3" y="611.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (13 samples, 0.13%)</title><rect x="908.3" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (13 samples, 0.13%)</title><rect x="908.3" y="579.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.06%)</title><rect x="909.9" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="910.2" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.2" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="910.2" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.2" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10 samples, 0.10%)</title><rect x="910.7" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.09%)</title><rect x="910.8" y="611.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.8" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="910.8" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.8" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="910.8" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="910.8" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="910.8" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="911.2" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.05%)</title><rect x="911.2" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.05%)</title><rect x="911.2" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.05%)</title><rect x="911.2" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.2" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="911.3" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (9 samples, 0.09%)</title><rect x="912.0" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (6 samples, 0.06%)</title><rect x="912.4" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="912.6" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="912.6" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="912.6" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="912.6" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="912.6" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.6" y="670.0"></text>
</g>
<g>
<title>[asyncWorker tid=32189] (389 samples, 4.03%)</title><rect x="913.1" y="899.0" width="47.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="916.1" y="910.0">[asy..</text>
</g>
<g>
<title>[unknown_Java] (11 samples, 0.11%)</title><rect x="913.7" y="883.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="916.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (373 samples, 3.86%)</title><rect x="915.1" y="883.0" width="45.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.1" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (373 samples, 3.86%)</title><rect x="915.1" y="867.0" width="45.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.1" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (373 samples, 3.86%)</title><rect x="915.1" y="851.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.1" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (63 samples, 0.65%)</title><rect x="915.2" y="835.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 0.63%)</title><rect x="915.4" y="819.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 0.55%)</title><rect x="915.4" y="803.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.06%)</title><rect x="915.9" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="916.6" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="916.6" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.40%)</title><rect x="917.0" y="787.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.40%)</title><rect x="917.0" y="771.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.25%)</title><rect x="917.0" y="755.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="920.0" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.08%)</title><rect x="917.1" y="739.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="920.1" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.08%)</title><rect x="918.2" y="739.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="921.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="918.5" y="723.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="921.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="918.5" y="707.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="921.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="918.7" y="691.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="921.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="918.7" y="675.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="921.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="918.7" y="659.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="921.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.16%)</title><rect x="919.9" y="755.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="922.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.11%)</title><rect x="920.1" y="739.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="923.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="920.6" y="723.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="923.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="920.6" y="707.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="923.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="920.6" y="691.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="923.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="920.8" y="675.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="923.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="920.8" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="923.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="920.8" y="643.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="923.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="920.9" y="627.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="923.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="921.0" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="924.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="921.0" y="595.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="924.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="921.9" y="803.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="921.9" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="921.9" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="921.9" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="922.3" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.05%)</title><rect x="922.3" y="723.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="707.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="925.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="691.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="925.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="675.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="925.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="659.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="925.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="643.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="925.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="922.3" y="627.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="925.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="922.4" y="611.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="925.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="922.4" y="595.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="925.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (309 samples, 3.20%)</title><rect x="922.9" y="835.0" width="37.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.9" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (309 samples, 3.20%)</title><rect x="922.9" y="819.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.9" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (158 samples, 1.64%)</title><rect x="923.0" y="803.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="926.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (153 samples, 1.58%)</title><rect x="923.2" y="787.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="923.2" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="926.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="923.7" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="923.7" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="923.7" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 1.51%)</title><rect x="924.1" y="771.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 1.51%)</title><rect x="924.1" y="755.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (144 samples, 1.49%)</title><rect x="924.2" y="739.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (143 samples, 1.48%)</title><rect x="924.3" y="723.0" width="17.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="924.7" y="707.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="927.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="924.7" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="927.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="924.7" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>__send (136 samples, 1.41%)</title><rect x="925.2" y="707.0" width="16.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="928.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="925.7" y="691.0" width="16.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="928.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.37%)</title><rect x="925.7" y="675.0" width="16.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="928.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="925.8" y="659.0" width="16.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="928.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.35%)</title><rect x="925.9" y="643.0" width="15.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="928.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="926.1" y="627.0" width="15.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="929.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="926.1" y="611.0" width="15.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="929.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.32%)</title><rect x="926.2" y="595.0" width="15.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="929.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="926.3" y="579.0" width="15.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="929.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.27%)</title><rect x="926.8" y="563.0" width="15.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="929.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.21%)</title><rect x="927.5" y="547.0" width="14.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="930.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.17%)</title><rect x="928.0" y="531.0" width="13.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="931.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.12%)</title><rect x="928.6" y="515.0" width="13.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="931.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.04%)</title><rect x="929.6" y="499.0" width="12.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="932.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.97%)</title><rect x="930.3" y="483.0" width="11.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="933.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 0.95%)</title><rect x="930.6" y="467.0" width="11.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="933.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="930.7" y="451.0" width="11.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="933.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.92%)</title><rect x="930.9" y="435.0" width="10.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="933.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 0.91%)</title><rect x="931.1" y="419.0" width="10.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="934.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 0.86%)</title><rect x="931.7" y="403.0" width="10.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="934.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="932.5" y="387.0" width="9.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="935.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.72%)</title><rect x="933.3" y="371.0" width="8.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="936.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.69%)</title><rect x="933.6" y="355.0" width="8.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="936.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="933.7" y="339.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="936.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="933.7" y="323.0" width="8.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="936.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.67%)</title><rect x="933.9" y="307.0" width="7.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="936.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.66%)</title><rect x="934.0" y="291.0" width="7.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="937.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.66%)</title><rect x="934.0" y="275.0" width="7.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="937.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="934.5" y="259.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="937.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="934.6" y="243.0" width="7.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.6" y="254.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="934.6" y="227.0" width="7.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="937.6" y="238.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.60%)</title><rect x="934.7" y="211.0" width="7.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="937.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="935.0" y="195.0" width="6.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="938.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="935.7" y="179.0" width="6.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="938.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="936.1" y="163.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="939.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="936.4" y="147.0" width="5.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="939.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="937.4" y="131.0" width="4.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="940.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="938.6" y="115.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="941.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="938.8" y="99.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="941.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="938.9" y="83.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="941.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="941.3" y="67.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="944.3" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="941.3" y="51.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="944.3" y="62.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="941.4" y="35.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="944.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (149 samples, 1.54%)</title><rect x="942.3" y="803.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (149 samples, 1.54%)</title><rect x="942.3" y="787.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (149 samples, 1.54%)</title><rect x="942.3" y="771.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (137 samples, 1.42%)</title><rect x="942.4" y="755.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (137 samples, 1.42%)</title><rect x="942.4" y="739.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.09%)</title><rect x="942.4" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.07%)</title><rect x="942.5" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.5" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="942.5" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.5" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="942.5" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="942.5" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="942.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="942.5" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="942.5" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="942.5" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.5" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.04%)</title><rect x="942.9" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.04%)</title><rect x="942.9" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="942.9" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="942.9" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="942.9" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="942.9" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="943.0" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (128 samples, 1.32%)</title><rect x="943.5" y="723.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (36 samples, 0.37%)</title><rect x="943.6" y="707.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.30%)</title><rect x="943.6" y="691.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (29 samples, 0.30%)</title><rect x="943.6" y="675.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.03%)</title><rect x="943.9" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (3 samples, 0.03%)</title><rect x="943.9" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.03%)</title><rect x="944.3" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 0.22%)</title><rect x="944.6" y="659.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 0.22%)</title><rect x="944.6" y="643.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.22%)</title><rect x="944.6" y="627.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.22%)</title><rect x="944.6" y="611.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="944.6" y="595.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="944.6" y="579.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.13%)</title><rect x="944.7" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.08%)</title><rect x="944.7" y="547.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.03%)</title><rect x="945.2" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="945.7" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="945.7" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (5 samples, 0.05%)</title><rect x="945.7" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (7 samples, 0.07%)</title><rect x="946.3" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (7 samples, 0.07%)</title><rect x="946.3" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="946.8" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.07%)</title><rect x="947.2" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.07%)</title><rect x="947.2" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.07%)</title><rect x="947.2" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.05%)</title><rect x="947.4" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.05%)</title><rect x="947.4" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.05%)</title><rect x="947.4" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.4" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.05%)</title><rect x="947.4" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="947.4" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="947.4" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="947.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="947.4" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="947.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (91 samples, 0.94%)</title><rect x="948.0" y="707.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (28 samples, 0.29%)</title><rect x="948.9" y="691.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.08%)</title><rect x="948.9" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.08%)</title><rect x="948.9" y="659.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.08%)</title><rect x="948.9" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (5 samples, 0.05%)</title><rect x="949.3" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.05%)</title><rect x="949.3" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (19 samples, 0.20%)</title><rect x="950.0" y="675.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.03%)</title><rect x="950.2" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.08%)</title><rect x="950.6" y="659.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="950.6" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.08%)</title><rect x="950.6" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="950.8" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="950.8" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="950.8" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (6 samples, 0.06%)</title><rect x="951.6" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="951.6" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="951.6" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="951.6" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="951.6" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="951.6" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.04%)</title><rect x="951.8" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="951.8" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="951.8" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="951.8" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.8" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="951.8" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (56 samples, 0.58%)</title><rect x="952.3" y="691.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (55 samples, 0.57%)</title><rect x="952.4" y="675.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (55 samples, 0.57%)</title><rect x="952.4" y="659.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.14%)</title><rect x="952.9" y="643.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.9" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.14%)</title><rect x="952.9" y="627.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="953.9" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (37 samples, 0.38%)</title><rect x="954.6" y="643.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.6" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (10 samples, 0.10%)</title><rect x="955.4" y="627.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (9 samples, 0.09%)</title><rect x="955.5" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (9 samples, 0.09%)</title><rect x="955.5" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (9 samples, 0.09%)</title><rect x="955.5" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.16%)</title><rect x="956.6" y="627.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.16%)</title><rect x="956.6" y="611.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="956.6" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.6" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="956.6" y="579.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="956.6" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="956.6" y="547.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="959.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="957.4" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.4" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="957.8" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="957.8" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="958.4" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="958.4" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="958.4" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.4" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="958.4" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="958.4" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="958.4" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="958.5" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (11 samples, 0.11%)</title><rect x="959.2" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="959.3" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.3" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="959.3" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (7 samples, 0.07%)</title><rect x="959.6" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="959.9" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.05%)</title><rect x="959.9" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="962.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="959.9" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="959.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.9" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="959.9" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="960.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="960.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="963.1" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="960.1" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.1" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=32190] (394 samples, 4.08%)</title><rect x="960.6" y="899.0" width="48.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="963.6" y="910.0">[asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.04%)</title><rect x="960.6" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.6" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.04%)</title><rect x="960.6" y="867.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="963.6" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.04%)</title><rect x="960.6" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="963.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="960.6" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="963.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.04%)</title><rect x="960.6" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="963.6" y="830.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.03%)</title><rect x="960.7" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.7" y="814.0"></text>
</g>
<g>
<title>[unknown_Java] (18 samples, 0.19%)</title><rect x="961.1" y="883.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="964.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (372 samples, 3.85%)</title><rect x="963.3" y="883.0" width="45.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.3" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (372 samples, 3.85%)</title><rect x="963.3" y="867.0" width="45.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.3" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (372 samples, 3.85%)</title><rect x="963.3" y="851.0" width="45.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (68 samples, 0.70%)</title><rect x="963.4" y="835.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 0.67%)</title><rect x="963.8" y="819.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (54 samples, 0.56%)</title><rect x="963.8" y="803.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="964.3" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="964.3" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.48%)</title><rect x="964.7" y="787.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (45 samples, 0.47%)</title><rect x="964.8" y="771.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.25%)</title><rect x="965.1" y="755.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="968.1" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.06%)</title><rect x="965.7" y="739.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.7" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.11%)</title><rect x="966.6" y="739.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="969.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="967.0" y="723.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="970.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="967.0" y="707.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="970.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="968.1" y="755.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="971.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 0.14%)</title><rect x="968.1" y="739.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="971.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="968.8" y="723.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="971.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="968.8" y="707.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="971.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="968.9" y="691.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="971.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="968.9" y="675.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="971.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="969.0" y="659.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="972.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="969.2" y="643.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="972.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="969.4" y="627.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="972.4" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.03%)</title><rect x="969.9" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="972.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.10%)</title><rect x="970.5" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.10%)</title><rect x="970.5" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.10%)</title><rect x="970.5" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.10%)</title><rect x="970.5" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="970.9" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.9" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.06%)</title><rect x="971.0" y="723.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="974.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="971.2" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="974.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="971.2" y="691.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="974.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="971.2" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="974.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="971.2" y="659.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="974.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="971.2" y="643.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="974.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="971.4" y="627.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="974.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (303 samples, 3.14%)</title><rect x="971.7" y="835.0" width="37.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.7" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (302 samples, 3.13%)</title><rect x="971.9" y="819.0" width="36.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.9" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 1.65%)</title><rect x="971.9" y="803.0" width="19.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (156 samples, 1.61%)</title><rect x="972.2" y="787.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="972.2" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.06%)</title><rect x="972.3" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.06%)</title><rect x="972.3" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.06%)</title><rect x="972.3" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 1.54%)</title><rect x="973.1" y="771.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 1.54%)</title><rect x="973.1" y="755.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (147 samples, 1.52%)</title><rect x="973.1" y="739.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (145 samples, 1.50%)</title><rect x="973.3" y="723.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="973.4" y="707.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="976.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="973.4" y="691.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="976.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.09%)</title><rect x="973.4" y="675.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="976.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="974.1" y="659.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="977.1" y="670.0"></text>
</g>
<g>
<title>__send (134 samples, 1.39%)</title><rect x="974.7" y="707.0" width="16.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="977.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="975.0" y="691.0" width="16.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="978.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.36%)</title><rect x="975.0" y="675.0" width="16.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="978.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.35%)</title><rect x="975.2" y="659.0" width="15.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="978.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.35%)</title><rect x="975.2" y="643.0" width="15.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="978.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="975.3" y="627.0" width="15.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="978.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.30%)</title><rect x="975.6" y="611.0" width="15.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="978.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.27%)</title><rect x="976.0" y="595.0" width="15.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="979.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.26%)</title><rect x="976.1" y="579.0" width="14.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="979.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.18%)</title><rect x="977.1" y="563.0" width="13.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="980.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.10%)</title><rect x="978.1" y="547.0" width="12.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="981.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="978.3" y="531.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="981.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.05%)</title><rect x="978.7" y="515.0" width="12.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="981.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="979.1" y="499.0" width="11.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="982.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.97%)</title><rect x="979.6" y="483.0" width="11.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="982.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 0.96%)</title><rect x="979.7" y="467.0" width="11.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="982.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="979.9" y="451.0" width="11.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="982.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="980.4" y="435.0" width="10.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="983.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 0.88%)</title><rect x="980.7" y="419.0" width="10.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="983.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 0.86%)</title><rect x="980.9" y="403.0" width="10.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="983.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.79%)</title><rect x="981.8" y="387.0" width="9.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="984.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="983.7" y="371.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="986.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.58%)</title><rect x="984.2" y="355.0" width="6.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="987.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.57%)</title><rect x="984.3" y="339.0" width="6.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="987.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="984.7" y="323.0" width="6.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="987.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="984.8" y="307.0" width="6.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="987.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="984.8" y="291.0" width="6.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="987.8" y="302.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="984.9" y="275.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="987.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.50%)</title><rect x="985.2" y="259.0" width="5.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="988.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="985.3" y="243.0" width="5.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="988.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="985.5" y="227.0" width="5.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="988.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="985.5" y="211.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="988.5" y="222.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="985.5" y="195.0" width="5.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="988.5" y="206.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="986.0" y="179.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="989.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="987.0" y="163.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="990.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.29%)</title><rect x="987.6" y="147.0" width="3.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="990.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="987.9" y="131.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="990.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="988.3" y="115.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="991.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="988.8" y="99.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="991.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="989.0" y="83.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="992.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (142 samples, 1.47%)</title><rect x="991.3" y="803.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (142 samples, 1.47%)</title><rect x="991.3" y="787.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (142 samples, 1.47%)</title><rect x="991.3" y="771.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (135 samples, 1.40%)</title><rect x="991.4" y="755.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (134 samples, 1.39%)</title><rect x="991.5" y="739.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.09%)</title><rect x="991.5" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="991.6" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.6" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="991.8" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.8" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="991.8" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.03%)</title><rect x="991.8" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.03%)</title><rect x="991.8" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="991.8" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="991.8" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (125 samples, 1.29%)</title><rect x="992.6" y="723.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (24 samples, 0.25%)</title><rect x="992.6" y="707.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (16 samples, 0.17%)</title><rect x="992.6" y="691.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16 samples, 0.17%)</title><rect x="992.6" y="675.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="995.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.16%)</title><rect x="992.7" y="659.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.16%)</title><rect x="992.7" y="643.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.14%)</title><rect x="992.9" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="995.9" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.13%)</title><rect x="993.0" y="611.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="993.0" y="595.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="993.0" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.12%)</title><rect x="993.0" y="563.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.06%)</title><rect x="993.1" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="993.1" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="993.8" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (5 samples, 0.05%)</title><rect x="993.8" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (4 samples, 0.04%)</title><rect x="994.0" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.08%)</title><rect x="994.6" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="994.6" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.08%)</title><rect x="994.6" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.6" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.07%)</title><rect x="994.6" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.07%)</title><rect x="994.6" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.06%)</title><rect x="994.7" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (101 samples, 1.05%)</title><rect x="995.6" y="707.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.03%)</title><rect x="995.9" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="995.9" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.03%)</title><rect x="996.3" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="996.3" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (27 samples, 0.28%)</title><rect x="996.7" y="691.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="999.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.05%)</title><rect x="996.8" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.05%)</title><rect x="996.8" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.05%)</title><rect x="996.8" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.04%)</title><rect x="996.9" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.04%)</title><rect x="996.9" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (19 samples, 0.20%)</title><rect x="997.6" y="675.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.04%)</title><rect x="997.8" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (3 samples, 0.03%)</title><rect x="997.9" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.03%)</title><rect x="997.9" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="997.9" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.08%)</title><rect x="998.2" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.08%)</title><rect x="998.2" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.08%)</title><rect x="998.2" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="998.5" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="998.5" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="998.5" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.03%)</title><rect x="998.9" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="998.9" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (6 samples, 0.06%)</title><rect x="999.2" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="999.2" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="999.2" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="999.2" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.04%)</title><rect x="999.5" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.04%)</title><rect x="999.5" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.04%)</title><rect x="999.5" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="999.5" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="999.5" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="999.5" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="999.6" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (65 samples, 0.67%)</title><rect x="999.9" y="691.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (64 samples, 0.66%)</title><rect x="1000.1" y="675.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (64 samples, 0.66%)</title><rect x="1000.1" y="659.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.23%)</title><rect x="1000.4" y="643.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (20 samples, 0.21%)</title><rect x="1000.7" y="627.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="1001.8" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="1002.1" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (5 samples, 0.05%)</title><rect x="1002.5" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (39 samples, 0.40%)</title><rect x="1003.1" y="643.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="1004.1" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="1004.1" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (7 samples, 0.07%)</title><rect x="1004.1" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (7 samples, 0.07%)</title><rect x="1004.1" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.1" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (17 samples, 0.18%)</title><rect x="1005.0" y="627.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.0" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.18%)</title><rect x="1005.0" y="611.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.0" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1005.2" y="595.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.2" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1005.2" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1005.2" y="563.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1005.2" y="547.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1005.8" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.8" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.05%)</title><rect x="1006.3" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.3" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.05%)</title><rect x="1006.3" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.07%)</title><rect x="1007.0" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.0" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1007.3" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1007.3" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1007.4" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1007.4" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1007.4" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1007.4" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (6 samples, 0.06%)</title><rect x="1007.9" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (3 samples, 0.03%)</title><rect x="1008.3" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.3" y="750.0"></text>
</g>
<g>
<title>[asyncWorker tid=32191] (393 samples, 4.07%)</title><rect x="1008.7" y="899.0" width="48.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1011.7" y="910.0">[asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.05%)</title><rect x="1008.9" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.9" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.05%)</title><rect x="1008.9" y="867.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1011.9" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.05%)</title><rect x="1008.9" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.9" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="1008.9" y="835.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.9" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="1009.0" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.0" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.17%)</title><rect x="1009.8" y="883.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1012.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (368 samples, 3.81%)</title><rect x="1011.8" y="883.0" width="44.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.8" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (368 samples, 3.81%)</title><rect x="1011.8" y="867.0" width="44.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.8" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (368 samples, 3.81%)</title><rect x="1011.8" y="851.0" width="44.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.8" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (63 samples, 0.65%)</title><rect x="1012.0" y="835.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (62 samples, 0.64%)</title><rect x="1012.2" y="819.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 0.55%)</title><rect x="1012.3" y="803.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.51%)</title><rect x="1012.8" y="787.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.51%)</title><rect x="1012.8" y="771.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.23%)</title><rect x="1012.9" y="755.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1015.9" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.04%)</title><rect x="1013.6" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1016.6" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.05%)</title><rect x="1014.2" y="739.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1017.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1014.4" y="723.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1017.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1014.4" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1017.4" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="1015.2" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1018.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.27%)</title><rect x="1015.6" y="755.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1018.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.21%)</title><rect x="1015.7" y="739.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1018.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="1016.7" y="723.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1019.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="1016.7" y="707.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1019.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1016.9" y="691.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1016.9" y="675.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1019.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1016.9" y="659.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1019.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1016.9" y="643.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1019.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1017.3" y="627.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1020.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="1017.4" y="611.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1020.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="1017.4" y="595.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1020.4" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.03%)</title><rect x="1018.3" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1021.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="1018.9" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="1018.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="1018.9" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="1018.9" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="1019.0" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.0" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.05%)</title><rect x="1019.1" y="723.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1022.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1019.1" y="707.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1022.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1019.1" y="691.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1022.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1019.2" y="675.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1022.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1019.2" y="659.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1022.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1019.2" y="643.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1022.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1019.4" y="627.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1022.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (303 samples, 3.14%)</title><rect x="1019.7" y="835.0" width="37.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.7" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (303 samples, 3.14%)</title><rect x="1019.7" y="819.0" width="37.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.7" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (144 samples, 1.49%)</title><rect x="1019.7" y="803.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (137 samples, 1.42%)</title><rect x="1020.0" y="787.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="1020.0" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="1020.3" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="1020.3" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1020.3" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (131 samples, 1.36%)</title><rect x="1020.7" y="771.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (131 samples, 1.36%)</title><rect x="1020.7" y="755.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (130 samples, 1.35%)</title><rect x="1020.7" y="739.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (130 samples, 1.35%)</title><rect x="1020.7" y="723.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="1021.2" y="707.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1024.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.11%)</title><rect x="1021.2" y="691.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1024.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.10%)</title><rect x="1021.2" y="675.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1024.2" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.04%)</title><rect x="1021.3" y="659.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1024.3" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.05%)</title><rect x="1021.8" y="659.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1024.8" y="670.0"></text>
</g>
<g>
<title>__send (115 samples, 1.19%)</title><rect x="1022.5" y="707.0" width="14.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1025.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.18%)</title><rect x="1022.7" y="691.0" width="13.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1025.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.18%)</title><rect x="1022.7" y="675.0" width="13.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1025.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="1022.9" y="659.0" width="13.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1025.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="1022.9" y="643.0" width="13.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1025.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.16%)</title><rect x="1022.9" y="627.0" width="13.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1025.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.15%)</title><rect x="1023.0" y="611.0" width="13.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1026.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="1023.2" y="595.0" width="13.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1026.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="1023.2" y="579.0" width="13.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1026.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="1023.9" y="563.0" width="12.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1026.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.05%)</title><rect x="1024.3" y="547.0" width="12.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1027.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="1024.6" y="531.0" width="12.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1027.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.94%)</title><rect x="1025.5" y="515.0" width="11.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1028.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.83%)</title><rect x="1026.8" y="499.0" width="9.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1029.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.78%)</title><rect x="1027.4" y="483.0" width="9.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1030.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="1027.8" y="467.0" width="8.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1030.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="1027.8" y="451.0" width="8.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1030.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.73%)</title><rect x="1027.9" y="435.0" width="8.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1030.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.70%)</title><rect x="1028.3" y="419.0" width="8.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1031.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="1029.1" y="403.0" width="7.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1032.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="1029.6" y="387.0" width="7.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1032.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="1030.4" y="371.0" width="6.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.49%)</title><rect x="1030.9" y="355.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1033.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="1031.1" y="339.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1034.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="1031.1" y="323.0" width="5.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1034.1" y="334.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="1031.2" y="307.0" width="5.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1034.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.46%)</title><rect x="1031.2" y="291.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1034.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="1031.6" y="275.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1034.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.39%)</title><rect x="1032.0" y="259.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1035.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="1032.2" y="243.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1035.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="1032.2" y="227.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1035.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.37%)</title><rect x="1032.2" y="211.0" width="4.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1035.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.36%)</title><rect x="1032.3" y="195.0" width="4.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1035.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="1032.6" y="179.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1035.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.32%)</title><rect x="1032.8" y="163.0" width="3.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1035.8" y="174.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.31%)</title><rect x="1032.9" y="147.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1035.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.25%)</title><rect x="1033.7" y="131.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1036.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="1034.0" y="115.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1037.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="1034.4" y="99.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1037.4" y="110.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="1034.5" y="83.0" width="2.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1037.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1036.2" y="67.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1039.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1036.2" y="51.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1039.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1036.2" y="35.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1039.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="1036.7" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (159 samples, 1.65%)</title><rect x="1037.3" y="803.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (159 samples, 1.65%)</title><rect x="1037.3" y="787.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (159 samples, 1.65%)</title><rect x="1037.3" y="771.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (150 samples, 1.55%)</title><rect x="1037.7" y="755.0" width="18.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (150 samples, 1.55%)</title><rect x="1037.7" y="739.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.06%)</title><rect x="1037.8" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="1037.8" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (143 samples, 1.48%)</title><rect x="1038.5" y="723.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (46 samples, 0.48%)</title><rect x="1038.5" y="707.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 0.29%)</title><rect x="1038.5" y="691.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.29%)</title><rect x="1038.5" y="675.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.03%)</title><rect x="1038.8" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (22 samples, 0.23%)</title><rect x="1039.3" y="659.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (22 samples, 0.23%)</title><rect x="1039.3" y="643.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.22%)</title><rect x="1039.4" y="627.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.22%)</title><rect x="1039.4" y="611.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="1039.4" y="595.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.22%)</title><rect x="1039.4" y="579.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (16 samples, 0.17%)</title><rect x="1039.4" y="563.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.08%)</title><rect x="1039.5" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$66/1069096920.apply (3 samples, 0.03%)</title><rect x="1040.1" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="1040.1" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (7 samples, 0.07%)</title><rect x="1040.5" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (7 samples, 0.07%)</title><rect x="1040.5" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (7 samples, 0.07%)</title><rect x="1040.5" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (3 samples, 0.03%)</title><rect x="1041.0" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (5 samples, 0.05%)</title><rect x="1041.4" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (5 samples, 0.05%)</title><rect x="1041.4" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="1041.4" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.4" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="1041.4" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.19%)</title><rect x="1042.0" y="691.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.19%)</title><rect x="1042.0" y="675.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.19%)</title><rect x="1042.0" y="659.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.05%)</title><rect x="1042.0" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.05%)</title><rect x="1042.0" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.05%)</title><rect x="1042.0" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1042.0" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1042.0" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (4 samples, 0.04%)</title><rect x="1042.1" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="1042.2" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.13%)</title><rect x="1042.6" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.13%)</title><rect x="1042.6" y="627.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.13%)</title><rect x="1042.6" y="611.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.6" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.13%)</title><rect x="1042.6" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.12%)</title><rect x="1042.7" y="579.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.12%)</title><rect x="1042.7" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.06%)</title><rect x="1042.7" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="1042.7" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (6 samples, 0.06%)</title><rect x="1042.7" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (6 samples, 0.06%)</title><rect x="1042.7" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (3 samples, 0.03%)</title><rect x="1043.1" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (6 samples, 0.06%)</title><rect x="1043.4" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (6 samples, 0.06%)</title><rect x="1043.4" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="1043.4" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.4" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="1043.4" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.03%)</title><rect x="1043.8" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.8" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="1043.8" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="1043.8" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (97 samples, 1.00%)</title><rect x="1044.2" y="707.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.03%)</title><rect x="1044.5" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="1044.5" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (28 samples, 0.29%)</title><rect x="1045.1" y="691.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.09%)</title><rect x="1045.1" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.09%)</title><rect x="1045.1" y="659.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.09%)</title><rect x="1045.1" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.04%)</title><rect x="1045.5" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.04%)</title><rect x="1045.5" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.03%)</title><rect x="1045.6" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (4 samples, 0.04%)</title><rect x="1046.2" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.04%)</title><rect x="1046.2" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1046.4" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="1046.4" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (15 samples, 0.16%)</title><rect x="1046.7" y="675.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.07%)</title><rect x="1047.2" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1047.3" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1047.3" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.04%)</title><rect x="1047.6" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.04%)</title><rect x="1047.6" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (61 samples, 0.63%)</title><rect x="1048.6" y="691.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (60 samples, 0.62%)</title><rect x="1048.7" y="675.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (60 samples, 0.62%)</title><rect x="1048.7" y="659.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.14%)</title><rect x="1049.0" y="643.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.0" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.12%)</title><rect x="1049.3" y="627.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="1050.1" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (43 samples, 0.45%)</title><rect x="1050.8" y="643.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.8" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.13%)</title><rect x="1052.0" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (13 samples, 0.13%)</title><rect x="1052.0" y="611.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (13 samples, 0.13%)</title><rect x="1052.0" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (13 samples, 0.13%)</title><rect x="1052.0" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.0" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.08%)</title><rect x="1053.6" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1053.6" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1053.6" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.6" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1053.6" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1053.6" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1053.6" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1053.9" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.9" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1054.1" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1054.1" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.12%)</title><rect x="1054.5" y="627.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.5" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="611.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="595.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.5" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="547.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1054.5" y="531.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.5" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.08%)</title><rect x="1055.0" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.0" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.08%)</title><rect x="1055.0" y="499.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (6 samples, 0.06%)</title><rect x="1056.0" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (3 samples, 0.03%)</title><rect x="1056.4" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.4" y="750.0"></text>
</g>
<g>
<title>[asyncWorker tid=32192] (392 samples, 4.06%)</title><rect x="1056.7" y="899.0" width="47.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1059.7" y="910.0">[asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.04%)</title><rect x="1056.9" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1059.9" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="1057.0" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="1057.0" y="851.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1060.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1057.0" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1060.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="1057.0" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1060.0" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (11 samples, 0.11%)</title><rect x="1057.6" y="883.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1060.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (374 samples, 3.87%)</title><rect x="1058.9" y="883.0" width="45.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (374 samples, 3.87%)</title><rect x="1058.9" y="867.0" width="45.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.9" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (374 samples, 3.87%)</title><rect x="1058.9" y="851.0" width="45.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.9" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (68 samples, 0.70%)</title><rect x="1059.1" y="835.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (67 samples, 0.69%)</title><rect x="1059.2" y="819.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (54 samples, 0.56%)</title><rect x="1059.4" y="803.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="1059.7" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="1059.7" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.49%)</title><rect x="1060.0" y="787.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.49%)</title><rect x="1060.0" y="771.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.25%)</title><rect x="1060.2" y="755.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1063.2" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.08%)</title><rect x="1060.4" y="739.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1063.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.03%)</title><rect x="1060.9" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.9" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.03%)</title><rect x="1061.4" y="739.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1064.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1061.4" y="723.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1064.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1061.4" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1064.4" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.06%)</title><rect x="1062.4" y="739.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1065.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="1063.1" y="755.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1066.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (15 samples, 0.16%)</title><rect x="1063.2" y="739.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1066.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="1064.1" y="723.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1067.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.08%)</title><rect x="1064.1" y="707.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1067.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="1064.3" y="691.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1067.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="1064.3" y="675.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1067.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="1064.3" y="659.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1067.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1064.4" y="643.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1067.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1064.7" y="627.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1067.7" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="1065.1" y="739.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1068.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.10%)</title><rect x="1066.1" y="803.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.10%)</title><rect x="1066.1" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.10%)</title><rect x="1066.1" y="771.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.10%)</title><rect x="1066.1" y="755.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="1066.6" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.6" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.05%)</title><rect x="1066.8" y="723.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1069.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="707.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1069.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="691.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1069.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="675.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1069.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="659.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1069.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="643.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1069.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1066.8" y="627.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1069.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1066.9" y="611.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1069.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1066.9" y="595.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1069.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (305 samples, 3.16%)</title><rect x="1067.4" y="835.0" width="37.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.4" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (305 samples, 3.16%)</title><rect x="1067.4" y="819.0" width="37.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.4" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (156 samples, 1.61%)</title><rect x="1067.4" y="803.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.03%)</title><rect x="1067.7" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="1067.7" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="1067.7" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (149 samples, 1.54%)</title><rect x="1068.1" y="787.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="1068.1" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="1068.2" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.05%)</title><rect x="1068.2" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.05%)</title><rect x="1068.2" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 1.48%)</title><rect x="1068.8" y="771.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 1.48%)</title><rect x="1068.8" y="755.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (141 samples, 1.46%)</title><rect x="1069.0" y="739.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (140 samples, 1.45%)</title><rect x="1069.1" y="723.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1069.4" y="707.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1072.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1069.4" y="691.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1072.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.06%)</title><rect x="1069.4" y="675.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1072.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.04%)</title><rect x="1069.6" y="659.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1072.6" y="670.0"></text>
</g>
<g>
<title>__send (129 samples, 1.34%)</title><rect x="1070.4" y="707.0" width="15.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1073.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.29%)</title><rect x="1070.9" y="691.0" width="15.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1073.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.29%)</title><rect x="1070.9" y="675.0" width="15.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1073.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.27%)</title><rect x="1071.2" y="659.0" width="15.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1074.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.27%)</title><rect x="1071.2" y="643.0" width="15.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1074.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.25%)</title><rect x="1071.4" y="627.0" width="14.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1074.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.24%)</title><rect x="1071.5" y="611.0" width="14.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1074.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.24%)</title><rect x="1071.5" y="595.0" width="14.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1074.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.24%)</title><rect x="1071.5" y="579.0" width="14.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1074.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.20%)</title><rect x="1072.0" y="563.0" width="14.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1075.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.13%)</title><rect x="1072.9" y="547.0" width="13.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1075.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="1073.5" y="531.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1076.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.01%)</title><rect x="1074.2" y="515.0" width="12.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1077.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="1075.6" y="499.0" width="10.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1078.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 0.88%)</title><rect x="1075.8" y="483.0" width="10.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1078.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="1076.3" y="467.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1079.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="1076.3" y="451.0" width="9.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1079.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="1076.3" y="435.0" width="9.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1079.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.81%)</title><rect x="1076.7" y="419.0" width="9.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1079.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="1077.3" y="403.0" width="8.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1080.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.76%)</title><rect x="1077.3" y="387.0" width="8.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1080.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.67%)</title><rect x="1078.2" y="371.0" width="8.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1081.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.63%)</title><rect x="1078.7" y="355.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1081.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.57%)</title><rect x="1079.5" y="339.0" width="6.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1082.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.54%)</title><rect x="1079.8" y="323.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1082.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="1080.0" y="307.0" width="6.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1083.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="1080.0" y="291.0" width="6.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1083.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="1080.0" y="275.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1083.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="1080.1" y="259.0" width="6.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1083.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="1080.2" y="243.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1083.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="1080.6" y="227.0" width="5.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1083.6" y="238.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="1080.6" y="211.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1083.6" y="222.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="1080.6" y="195.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1083.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.42%)</title><rect x="1081.2" y="179.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1084.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="1082.0" y="163.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1085.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.30%)</title><rect x="1082.6" y="147.0" width="3.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1085.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="1083.7" y="131.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1086.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="1084.1" y="115.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1087.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="1084.2" y="99.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1087.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="1084.2" y="83.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1087.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (149 samples, 1.54%)</title><rect x="1086.4" y="803.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (149 samples, 1.54%)</title><rect x="1086.4" y="787.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (149 samples, 1.54%)</title><rect x="1086.4" y="771.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (142 samples, 1.47%)</title><rect x="1086.7" y="755.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (142 samples, 1.47%)</title><rect x="1086.7" y="739.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.10%)</title><rect x="1086.9" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.06%)</title><rect x="1087.0" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.04%)</title><rect x="1087.3" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.04%)</title><rect x="1087.3" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="1087.3" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="1087.3" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="1087.4" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="1087.4" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (130 samples, 1.35%)</title><rect x="1088.1" y="723.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (30 samples, 0.31%)</title><rect x="1088.1" y="707.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (15 samples, 0.16%)</title><rect x="1088.1" y="691.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1088.1" y="675.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.11%)</title><rect x="1088.6" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.11%)</title><rect x="1088.6" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.11%)</title><rect x="1088.6" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.11%)</title><rect x="1088.6" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.11%)</title><rect x="1088.6" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.11%)</title><rect x="1088.6" y="579.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.08%)</title><rect x="1088.6" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.05%)</title><rect x="1088.7" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="1089.6" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="1089.6" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.16%)</title><rect x="1090.0" y="691.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1090.0" y="675.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.16%)</title><rect x="1090.0" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.09%)</title><rect x="1090.1" y="643.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.09%)</title><rect x="1090.1" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.08%)</title><rect x="1090.2" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.07%)</title><rect x="1090.3" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.07%)</title><rect x="1090.3" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (7 samples, 0.07%)</title><rect x="1090.3" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (7 samples, 0.07%)</title><rect x="1090.3" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.06%)</title><rect x="1090.5" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.5" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="1090.7" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.05%)</title><rect x="1091.2" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.05%)</title><rect x="1091.2" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.2" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.05%)</title><rect x="1091.2" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.2" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.05%)</title><rect x="1091.2" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1091.2" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1091.2" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="1091.2" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (100 samples, 1.04%)</title><rect x="1091.8" y="707.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.03%)</title><rect x="1091.9" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="1091.9" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (3 samples, 0.03%)</title><rect x="1091.9" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (29 samples, 0.30%)</title><rect x="1092.5" y="691.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.09%)</title><rect x="1092.5" y="675.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.09%)</title><rect x="1092.5" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.09%)</title><rect x="1092.5" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (5 samples, 0.05%)</title><rect x="1093.0" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.05%)</title><rect x="1093.0" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (4 samples, 0.04%)</title><rect x="1093.1" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (3 samples, 0.03%)</title><rect x="1093.9" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.03%)</title><rect x="1093.9" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1093.9" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="1093.9" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (15 samples, 0.16%)</title><rect x="1094.2" y="675.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.05%)</title><rect x="1094.5" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1094.5" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1094.5" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1094.5" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (7 samples, 0.07%)</title><rect x="1095.2" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.06%)</title><rect x="1095.3" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1095.3" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1095.3" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.06%)</title><rect x="1095.3" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="1095.3" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.05%)</title><rect x="1095.5" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.05%)</title><rect x="1095.5" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="1095.5" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="1095.5" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="1095.5" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (65 samples, 0.67%)</title><rect x="1096.1" y="691.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (63 samples, 0.65%)</title><rect x="1096.3" y="675.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (62 samples, 0.64%)</title><rect x="1096.4" y="659.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.14%)</title><rect x="1096.7" y="643.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.14%)</title><rect x="1096.7" y="627.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="1097.7" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (46 samples, 0.48%)</title><rect x="1098.4" y="643.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.4" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (11 samples, 0.11%)</title><rect x="1098.9" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (10 samples, 0.10%)</title><rect x="1099.0" y="611.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (10 samples, 0.10%)</title><rect x="1099.0" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (10 samples, 0.10%)</title><rect x="1099.0" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.0" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.14%)</title><rect x="1100.2" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.2" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.13%)</title><rect x="1100.3" y="611.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1103.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.13%)</title><rect x="1100.3" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 0.11%)</title><rect x="1100.6" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.11%)</title><rect x="1100.6" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.11%)</title><rect x="1100.6" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="1101.0" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.0" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1101.4" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.4" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1101.4" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14 samples, 0.14%)</title><rect x="1101.9" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.13%)</title><rect x="1102.1" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1102.2" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.2" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1102.2" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1102.2" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.12%)</title><rect x="1102.2" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="1102.4" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.4" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="1102.9" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.9" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="1102.9" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.9" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1103.3" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.3" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1103.3" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (5 samples, 0.05%)</title><rect x="1104.0" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (3 samples, 0.03%)</title><rect x="1104.3" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.3" y="750.0"></text>
</g>
<g>
<title>[asyncWorker tid=32193] (387 samples, 4.01%)</title><rect x="1104.6" y="899.0" width="47.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1107.6" y="910.0">[asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.05%)</title><rect x="1104.7" y="883.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.7" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.09%)</title><rect x="1105.5" y="883.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1108.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (371 samples, 3.84%)</title><rect x="1106.6" y="883.0" width="45.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.6" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (371 samples, 3.84%)</title><rect x="1106.6" y="867.0" width="45.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.6" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (371 samples, 3.84%)</title><rect x="1106.6" y="851.0" width="45.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.6" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (65 samples, 0.67%)</title><rect x="1106.8" y="835.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1109.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (64 samples, 0.66%)</title><rect x="1106.9" y="819.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (55 samples, 0.57%)</title><rect x="1107.1" y="803.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.04%)</title><rect x="1107.6" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.04%)</title><rect x="1107.6" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.04%)</title><rect x="1107.6" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.04%)</title><rect x="1107.6" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.04%)</title><rect x="1107.6" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.6" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.04%)</title><rect x="1107.6" y="707.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1110.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="691.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1110.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="675.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1110.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="659.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1110.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="643.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1110.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="627.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1110.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1110.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="595.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1110.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1107.6" y="579.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1110.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.48%)</title><rect x="1108.0" y="787.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.48%)</title><rect x="1108.0" y="771.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (21 samples, 0.22%)</title><rect x="1108.4" y="755.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1111.4" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.10%)</title><rect x="1108.4" y="739.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.4" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.05%)</title><rect x="1109.8" y="739.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1112.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1109.9" y="723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1112.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1109.9" y="707.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1112.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1110.0" y="691.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1113.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1110.0" y="675.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1113.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1110.0" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1113.0" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.03%)</title><rect x="1110.4" y="739.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1113.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="1111.0" y="755.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1114.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.20%)</title><rect x="1111.0" y="739.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1114.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1112.1" y="723.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1115.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.10%)</title><rect x="1112.1" y="707.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1115.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="1112.2" y="691.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1115.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="1112.2" y="675.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1115.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.09%)</title><rect x="1112.2" y="659.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1115.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1112.4" y="643.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1115.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1112.8" y="627.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1115.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="1113.8" y="803.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="1113.8" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="1113.8" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="1113.8" y="755.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="1114.2" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.05%)</title><rect x="1114.2" y="723.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1117.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1114.3" y="707.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1117.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="1114.3" y="691.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1117.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (304 samples, 3.15%)</title><rect x="1114.8" y="835.0" width="37.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.8" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (304 samples, 3.15%)</title><rect x="1114.8" y="819.0" width="37.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.8" y="830.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (158 samples, 1.64%)</title><rect x="1114.8" y="803.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (154 samples, 1.59%)</title><rect x="1115.0" y="787.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (152 samples, 1.57%)</title><rect x="1115.2" y="771.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (152 samples, 1.57%)</title><rect x="1115.2" y="755.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (148 samples, 1.53%)</title><rect x="1115.6" y="739.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (146 samples, 1.51%)</title><rect x="1115.9" y="723.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1116.5" y="707.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1119.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.07%)</title><rect x="1116.5" y="691.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1119.5" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="1116.5" y="675.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1119.5" y="686.0"></text>
</g>
<g>
<title>__send (134 samples, 1.39%)</title><rect x="1117.3" y="707.0" width="16.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1120.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.35%)</title><rect x="1117.8" y="691.0" width="15.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1120.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.35%)</title><rect x="1117.8" y="675.0" width="15.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1120.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="1117.9" y="659.0" width="15.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1120.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.34%)</title><rect x="1117.9" y="643.0" width="15.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1120.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.31%)</title><rect x="1118.2" y="627.0" width="15.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.30%)</title><rect x="1118.3" y="611.0" width="15.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1121.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.29%)</title><rect x="1118.4" y="595.0" width="15.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.28%)</title><rect x="1118.5" y="579.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1121.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.23%)</title><rect x="1119.2" y="563.0" width="14.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1122.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.18%)</title><rect x="1119.8" y="547.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1122.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.14%)</title><rect x="1120.3" y="531.0" width="13.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1123.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.08%)</title><rect x="1121.0" y="515.0" width="12.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1124.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.00%)</title><rect x="1121.8" y="499.0" width="11.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1124.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 0.95%)</title><rect x="1122.5" y="483.0" width="11.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1125.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.92%)</title><rect x="1122.8" y="467.0" width="10.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1125.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="1123.1" y="451.0" width="10.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1126.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.90%)</title><rect x="1123.1" y="435.0" width="10.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1126.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 0.88%)</title><rect x="1123.3" y="419.0" width="10.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1126.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.84%)</title><rect x="1123.8" y="403.0" width="9.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1126.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.82%)</title><rect x="1124.0" y="387.0" width="9.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1127.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.75%)</title><rect x="1124.9" y="371.0" width="8.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1127.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.68%)</title><rect x="1125.6" y="355.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1128.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.62%)</title><rect x="1126.4" y="339.0" width="7.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1129.4" y="350.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.61%)</title><rect x="1126.5" y="323.0" width="7.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1129.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.59%)</title><rect x="1126.7" y="307.0" width="7.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1129.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.53%)</title><rect x="1127.5" y="291.0" width="6.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1130.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.52%)</title><rect x="1127.6" y="275.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1130.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.51%)</title><rect x="1127.7" y="259.0" width="6.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="1128.1" y="243.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1131.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.48%)</title><rect x="1128.1" y="227.0" width="5.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1131.1" y="238.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="1128.2" y="211.0" width="5.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1131.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.47%)</title><rect x="1128.2" y="195.0" width="5.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1131.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.43%)</title><rect x="1128.6" y="179.0" width="5.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1131.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.35%)</title><rect x="1129.5" y="163.0" width="4.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1132.5" y="174.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.34%)</title><rect x="1129.7" y="147.0" width="4.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1132.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.26%)</title><rect x="1130.6" y="131.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1133.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.21%)</title><rect x="1131.3" y="115.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="1131.5" y="99.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1134.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="1131.5" y="83.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1134.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1133.1" y="67.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1136.1" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1133.1" y="51.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1136.1" y="62.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1133.3" y="35.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1136.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$67/1929761341.action (145 samples, 1.50%)</title><rect x="1134.1" y="803.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$1 (145 samples, 1.50%)</title><rect x="1134.1" y="787.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.get (145 samples, 1.50%)</title><rect x="1134.1" y="771.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (132 samples, 1.37%)</title><rect x="1134.2" y="755.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (132 samples, 1.37%)</title><rect x="1134.2" y="739.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.10%)</title><rect x="1134.3" y="723.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.3" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.08%)</title><rect x="1134.3" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.3" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="1134.3" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="1134.3" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="1134.4" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.04%)</title><rect x="1134.8" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.8" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.04%)</title><rect x="1134.8" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.04%)</title><rect x="1134.8" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.04%)</title><rect x="1134.8" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="1134.8" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="1134.8" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="1134.9" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="1134.9" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (121 samples, 1.25%)</title><rect x="1135.5" y="723.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (33 samples, 0.34%)</title><rect x="1135.6" y="707.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18 samples, 0.19%)</title><rect x="1135.6" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.19%)</title><rect x="1135.6" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.16%)</title><rect x="1136.0" y="659.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.16%)</title><rect x="1136.0" y="643.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.13%)</title><rect x="1136.3" y="627.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.3" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.13%)</title><rect x="1136.3" y="611.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="1136.3" y="595.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.13%)</title><rect x="1136.3" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.09%)</title><rect x="1136.4" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.04%)</title><rect x="1136.5" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="1137.0" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (4 samples, 0.04%)</title><rect x="1137.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (4 samples, 0.04%)</title><rect x="1137.0" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (3 samples, 0.03%)</title><rect x="1137.5" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (3 samples, 0.03%)</title><rect x="1137.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.16%)</title><rect x="1137.8" y="691.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.16%)</title><rect x="1137.8" y="675.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.16%)</title><rect x="1137.8" y="659.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.8" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.07%)</title><rect x="1137.8" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.07%)</title><rect x="1137.8" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.07%)</title><rect x="1137.8" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.07%)</title><rect x="1137.8" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.06%)</title><rect x="1138.0" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (5 samples, 0.05%)</title><rect x="1138.1" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (5 samples, 0.05%)</title><rect x="1138.1" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.05%)</title><rect x="1138.1" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="1138.2" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="1138.2" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1138.2" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.3" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.3" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.3" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.3" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.3" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.3" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.3" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.08%)</title><rect x="1138.7" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.08%)</title><rect x="1138.7" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.08%)</title><rect x="1138.7" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.7" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.08%)</title><rect x="1138.7" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.08%)</title><rect x="1138.7" y="579.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.08%)</title><rect x="1138.7" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.04%)</title><rect x="1138.7" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="1138.8" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.next (3 samples, 0.03%)</title><rect x="1138.8" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getRowAt (3 samples, 0.03%)</title><rect x="1138.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$64/693383183.compare (4 samples, 0.04%)</title><rect x="1139.2" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (4 samples, 0.04%)</title><rect x="1139.2" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="1139.2" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.2" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="1139.2" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (87 samples, 0.90%)</title><rect x="1139.7" y="707.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1140.0" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.03%)</title><rect x="1140.8" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1140.8" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (21 samples, 0.22%)</title><rect x="1141.1" y="691.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.05%)</title><rect x="1141.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.05%)</title><rect x="1141.3" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.05%)</title><rect x="1141.3" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.04%)</title><rect x="1141.3" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.04%)</title><rect x="1141.3" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (14 samples, 0.14%)</title><rect x="1142.0" y="675.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.07%)</title><rect x="1142.1" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.07%)</title><rect x="1142.1" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.07%)</title><rect x="1142.1" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.05%)</title><rect x="1142.4" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.05%)</title><rect x="1142.4" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.05%)</title><rect x="1142.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (5 samples, 0.05%)</title><rect x="1143.1" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.05%)</title><rect x="1143.1" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1143.1" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1143.1" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.03%)</title><rect x="1143.1" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.iterator (54 samples, 0.56%)</title><rect x="1143.7" y="691.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$1.&lt;init&gt; (54 samples, 0.56%)</title><rect x="1143.7" y="675.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getOffsetsIndex (54 samples, 0.56%)</title><rect x="1143.7" y="659.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.20%)</title><rect x="1144.0" y="643.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1147.0" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.19%)</title><rect x="1144.1" y="627.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.getKeyAt (33 samples, 0.34%)</title><rect x="1146.3" y="643.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.3" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="1146.8" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.8" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (7 samples, 0.07%)</title><rect x="1146.8" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (7 samples, 0.07%)</title><rect x="1146.8" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (7 samples, 0.07%)</title><rect x="1146.8" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.8" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.12%)</title><rect x="1147.6" y="627.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.10%)</title><rect x="1147.9" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.10%)</title><rect x="1147.9" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1148.0" y="579.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1148.0" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1148.1" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1148.7" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.09%)</title><rect x="1149.1" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1149.1" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1149.1" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.1" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1149.1" y="579.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1149.1" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1149.1" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1149.2" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (12 samples, 0.12%)</title><rect x="1150.3" y="755.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632102151.linkToTargetMethod (3 samples, 0.03%)</title><rect x="1150.3" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/113199660.invoke (3 samples, 0.03%)</title><rect x="1150.3" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (8 samples, 0.08%)</title><rect x="1150.8" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.8" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="1150.8" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.8" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="1150.8" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.8" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1150.8" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="1151.2" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1151.3" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1151.4" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1151.4" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1151.4" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="1151.4" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="1151.4" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="1151.4" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.4" y="622.0"></text>
</g>
<g>
<title>[tid=32085] (13 samples, 0.13%)</title><rect x="1151.9" y="899.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1154.9" y="910.0"></text>
</g>
<g>
<title>start_thread (13 samples, 0.13%)</title><rect x="1151.9" y="883.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1154.9" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 0.13%)</title><rect x="1151.9" y="867.0" width="1.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1154.9" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 0.13%)</title><rect x="1151.9" y="851.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.9" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 0.13%)</title><rect x="1151.9" y="835.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.9" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 0.12%)</title><rect x="1152.0" y="819.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.0" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.03%)</title><rect x="1152.0" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.0" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1152.4" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.4" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1152.4" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.06%)</title><rect x="1152.7" y="803.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.7" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.04%)</title><rect x="1152.7" y="787.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.7" y="798.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1152.9" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.9" y="782.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1152.9" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.9" y="766.0"></text>
</g>
<g>
<title>[tid=32090] (12 samples, 0.12%)</title><rect x="1153.6" y="899.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1156.6" y="910.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.10%)</title><rect x="1153.8" y="883.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1156.8" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.10%)</title><rect x="1153.8" y="867.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1156.8" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.10%)</title><rect x="1153.8" y="851.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.8" y="862.0"></text>
</g>
<g>
<title>VMThread::run() (10 samples, 0.10%)</title><rect x="1153.8" y="835.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.8" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (10 samples, 0.10%)</title><rect x="1153.8" y="819.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.8" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.04%)</title><rect x="1153.8" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.8" y="814.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (6 samples, 0.06%)</title><rect x="1154.3" y="803.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.3" y="814.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (6 samples, 0.06%)</title><rect x="1154.3" y="787.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.3" y="798.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (6 samples, 0.06%)</title><rect x="1154.3" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.3" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (5 samples, 0.05%)</title><rect x="1154.3" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.3" y="766.0"></text>
</g>
<g>
<title>[tid=32094] (233 samples, 2.41%)</title><rect x="1155.1" y="899.0" width="28.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1158.1" y="910.0">[t..</text>
</g>
<g>
<title>start_thread (228 samples, 2.36%)</title><rect x="1155.6" y="883.0" width="27.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1158.6" y="894.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (228 samples, 2.36%)</title><rect x="1155.6" y="867.0" width="27.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1158.6" y="878.0">t..</text>
</g>
<g>
<title>Thread::call_run() (228 samples, 2.36%)</title><rect x="1155.6" y="851.0" width="27.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.6" y="862.0">T..</text>
</g>
<g>
<title>JavaThread::run() (228 samples, 2.36%)</title><rect x="1155.6" y="835.0" width="27.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.6" y="846.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (228 samples, 2.36%)</title><rect x="1155.6" y="819.0" width="27.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.6" y="830.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (228 samples, 2.36%)</title><rect x="1155.6" y="803.0" width="27.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.6" y="814.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (227 samples, 2.35%)</title><rect x="1155.6" y="787.0" width="27.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.6" y="798.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (227 samples, 2.35%)</title><rect x="1155.6" y="771.0" width="27.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="782.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (227 samples, 2.35%)</title><rect x="1155.6" y="755.0" width="27.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="766.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (145 samples, 1.50%)</title><rect x="1155.6" y="739.0" width="17.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.6" y="750.0"></text>
</g>
<g>
<title>Compile::Output() (8 samples, 0.08%)</title><rect x="1155.6" y="723.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.6" y="734.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (4 samples, 0.04%)</title><rect x="1155.6" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.6" y="718.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.03%)</title><rect x="1156.0" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.0" y="718.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.03%)</title><rect x="1156.0" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.0" y="702.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (3 samples, 0.03%)</title><rect x="1156.0" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.0" y="686.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.04%)</title><rect x="1156.5" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="734.0"></text>
</g>
<g>
<title>Matcher::match() (14 samples, 0.14%)</title><rect x="1157.0" y="723.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.0" y="734.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.04%)</title><rect x="1157.0" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.0" y="718.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (9 samples, 0.09%)</title><rect x="1157.5" y="707.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.5" y="718.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.03%)</title><rect x="1157.6" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.6" y="702.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.05%)</title><rect x="1158.0" y="691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.0" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (15 samples, 0.16%)</title><rect x="1158.9" y="723.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.9" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (15 samples, 0.16%)</title><rect x="1158.9" y="707.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.9" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.03%)</title><rect x="1158.9" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.9" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.03%)</title><rect x="1159.2" y="691.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.2" y="702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.04%)</title><rect x="1160.1" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (103 samples, 1.07%)</title><rect x="1160.7" y="723.0" width="12.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.7" y="734.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.04%)</title><rect x="1161.1" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.1" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (7 samples, 0.07%)</title><rect x="1161.5" y="707.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (4 samples, 0.04%)</title><rect x="1161.9" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.9" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.03%)</title><rect x="1162.4" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.4" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.11%)</title><rect x="1162.8" y="707.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (21 samples, 0.22%)</title><rect x="1164.1" y="707.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.1" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (6 samples, 0.06%)</title><rect x="1164.7" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.7" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.06%)</title><rect x="1165.4" y="691.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.4" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.04%)</title><rect x="1166.2" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (3 samples, 0.03%)</title><rect x="1166.9" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.9" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.06%)</title><rect x="1167.3" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.3" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (3 samples, 0.03%)</title><rect x="1168.0" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.0" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (11 samples, 0.11%)</title><rect x="1168.5" y="707.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.5" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (5 samples, 0.05%)</title><rect x="1169.1" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.1" y="702.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.04%)</title><rect x="1169.8" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.8" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (4 samples, 0.04%)</title><rect x="1170.3" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="718.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.03%)</title><rect x="1170.5" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.5" y="702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (15 samples, 0.16%)</title><rect x="1170.8" y="707.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.8" y="718.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.03%)</title><rect x="1171.9" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>Compile::Optimize() (60 samples, 0.62%)</title><rect x="1173.3" y="739.0" width="7.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.3" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.03%)</title><rect x="1173.6" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.6" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.03%)</title><rect x="1173.6" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.6" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (42 samples, 0.43%)</title><rect x="1174.2" y="723.0" width="5.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.04%)</title><rect x="1174.5" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.5" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.03%)</title><rect x="1175.0" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.0" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (13 samples, 0.13%)</title><rect x="1175.3" y="707.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (7 samples, 0.07%)</title><rect x="1176.0" y="691.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.0" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (5 samples, 0.05%)</title><rect x="1176.1" y="675.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.1" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (3 samples, 0.03%)</title><rect x="1176.3" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.3" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.04%)</title><rect x="1176.9" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.9" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (10 samples, 0.10%)</title><rect x="1177.4" y="707.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (6 samples, 0.06%)</title><rect x="1177.9" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.9" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (3 samples, 0.03%)</title><rect x="1178.0" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.0" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.04%)</title><rect x="1178.6" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.6" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.04%)</title><rect x="1178.6" y="691.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.6" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.07%)</title><rect x="1179.6" y="723.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.05%)</title><rect x="1179.7" y="707.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (22 samples, 0.23%)</title><rect x="1180.6" y="739.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (22 samples, 0.23%)</title><rect x="1180.6" y="723.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.23%)</title><rect x="1180.6" y="707.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.23%)</title><rect x="1180.6" y="691.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.23%)</title><rect x="1180.6" y="675.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.22%)</title><rect x="1180.6" y="659.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.6" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.13%)</title><rect x="1180.7" y="643.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.13%)</title><rect x="1180.7" y="627.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.13%)</title><rect x="1180.7" y="611.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.13%)</title><rect x="1180.7" y="595.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.13%)</title><rect x="1180.7" y="579.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.11%)</title><rect x="1180.7" y="563.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.7" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1180.8" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.8" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="1180.8" y="531.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="1180.8" y="515.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="1180.8" y="499.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.05%)</title><rect x="1180.8" y="483.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.04%)</title><rect x="1180.8" y="467.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1180.8" y="451.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1180.8" y="435.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1180.8" y="419.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1180.8" y="403.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.03%)</title><rect x="1180.8" y="387.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.8" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1181.5" y="547.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.5" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1181.5" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.5" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1181.5" y="515.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1181.5" y="499.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1181.5" y="483.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.03%)</title><rect x="1181.5" y="467.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="1181.5" y="451.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1181.5" y="435.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.5" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1181.5" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1181.5" y="403.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1181.5" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.03%)</title><rect x="1181.5" y="371.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="1181.5" y="355.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.5" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1181.5" y="339.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1181.5" y="323.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1181.5" y="307.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1181.5" y="291.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.03%)</title><rect x="1181.5" y="275.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.5" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.07%)</title><rect x="1182.3" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1182.3" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.3" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="1182.3" y="611.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="1182.3" y="595.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="1182.3" y="579.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.05%)</title><rect x="1182.3" y="563.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.05%)</title><rect x="1182.3" y="547.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.3" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1182.3" y="531.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.3" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="1182.3" y="515.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="1182.3" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="1182.3" y="483.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.05%)</title><rect x="1182.3" y="467.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.05%)</title><rect x="1182.3" y="451.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.04%)</title><rect x="1182.3" y="435.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.3" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.04%)</title><rect x="1182.3" y="419.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.04%)</title><rect x="1182.3" y="403.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.04%)</title><rect x="1182.3" y="387.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.04%)</title><rect x="1182.3" y="371.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.3" y="382.0"></text>
</g>
<g>
<title>[tid=32095] (13 samples, 0.13%)</title><rect x="1183.5" y="899.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1186.5" y="910.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.12%)</title><rect x="1183.6" y="883.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.12%)</title><rect x="1183.6" y="867.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 0.12%)</title><rect x="1183.6" y="851.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (12 samples, 0.12%)</title><rect x="1183.6" y="835.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (12 samples, 0.12%)</title><rect x="1183.6" y="819.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (12 samples, 0.12%)</title><rect x="1183.6" y="803.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 0.12%)</title><rect x="1183.6" y="787.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.6" y="798.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (12 samples, 0.12%)</title><rect x="1183.6" y="771.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.6" y="782.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (12 samples, 0.12%)</title><rect x="1183.6" y="755.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>Compilation::compile_method() (12 samples, 0.12%)</title><rect x="1183.6" y="739.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (11 samples, 0.11%)</title><rect x="1183.6" y="723.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (5 samples, 0.05%)</title><rect x="1183.6" y="707.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.05%)</title><rect x="1183.6" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.05%)</title><rect x="1183.6" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.6" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.05%)</title><rect x="1183.6" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.6" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.05%)</title><rect x="1183.6" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.6" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.05%)</title><rect x="1183.6" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.6" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.05%)</title><rect x="1183.6" y="611.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.04%)</title><rect x="1183.8" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.04%)</title><rect x="1183.8" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.04%)</title><rect x="1183.8" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.04%)</title><rect x="1183.8" y="547.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.04%)</title><rect x="1183.8" y="531.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.03%)</title><rect x="1183.8" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="526.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (6 samples, 0.06%)</title><rect x="1184.3" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 0.04%)</title><rect x="1184.5" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.5" y="702.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (4 samples, 0.04%)</title><rect x="1184.5" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.5" y="686.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (4 samples, 0.04%)</title><rect x="1184.5" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.5" y="670.0"></text>
</g>
<g>
<title>[tid=32097] (3 samples, 0.03%)</title><rect x="1185.1" y="899.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1188.1" y="910.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.03%)</title><rect x="1185.1" y="883.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.1" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.03%)</title><rect x="1185.1" y="867.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1188.1" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.03%)</title><rect x="1185.1" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.1" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.03%)</title><rect x="1185.1" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.03%)</title><rect x="1185.1" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="830.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.03%)</title><rect x="1185.1" y="803.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.03%)</title><rect x="1185.1" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 0.03%)</title><rect x="1185.1" y="771.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>[tid=32110] (11 samples, 0.11%)</title><rect x="1185.7" y="899.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.10%)</title><rect x="1185.8" y="883.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1188.8" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.10%)</title><rect x="1185.8" y="867.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1188.8" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.10%)</title><rect x="1185.8" y="851.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.10%)</title><rect x="1185.8" y="835.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.08%)</title><rect x="1186.0" y="819.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.03%)</title><rect x="1186.0" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.0" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1186.3" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1186.5" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.03%)</title><rect x="1186.5" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.03%)</title><rect x="1186.5" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.03%)</title><rect x="1186.5" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.03%)</title><rect x="1186.5" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>[tid=32111] (13 samples, 0.13%)</title><rect x="1187.1" y="899.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>start_thread (13 samples, 0.13%)</title><rect x="1187.1" y="883.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 0.13%)</title><rect x="1187.1" y="867.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 0.13%)</title><rect x="1187.1" y="851.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 0.13%)</title><rect x="1187.1" y="835.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 0.12%)</title><rect x="1187.1" y="819.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.04%)</title><rect x="1187.1" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="1187.2" y="787.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1190.2" y="798.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1187.6" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1187.6" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.04%)</title><rect x="1187.6" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.6" y="782.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.04%)</title><rect x="1187.6" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.04%)</title><rect x="1187.6" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.04%)</title><rect x="1187.6" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.6" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1188.0" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.04%)</title><rect x="1188.0" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="798.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.04%)</title><rect x="1188.0" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.04%)</title><rect x="1188.0" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="766.0"></text>
</g>
<g>
<title>[tid=32112] (11 samples, 0.11%)</title><rect x="1188.7" y="899.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.11%)</title><rect x="1188.7" y="883.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.11%)</title><rect x="1188.7" y="867.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.11%)</title><rect x="1188.7" y="851.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.11%)</title><rect x="1188.7" y="835.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.08%)</title><rect x="1188.8" y="819.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1189.0" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1189.0" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.03%)</title><rect x="1189.0" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.03%)</title><rect x="1189.0" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.0" y="766.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.03%)</title><rect x="1189.0" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.0" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.03%)</title><rect x="1189.0" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.0" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1189.0" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.0" y="718.0"></text>
</g>
</g>
</svg>
