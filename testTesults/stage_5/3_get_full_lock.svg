<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (44,700 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32103] (9,774 samples, 21.87%)</title><rect x="10.0" y="355.0" width="258.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="366.0">[NIO Selector #0 tid=32103]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,774 samples, 21.87%)</title><rect x="10.0" y="339.0" width="258.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (9,774 samples, 21.87%)</title><rect x="10.0" y="323.0" width="258.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (114 samples, 0.26%)</title><rect x="10.0" y="307.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (114 samples, 0.26%)</title><rect x="10.0" y="291.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 0.26%)</title><rect x="10.0" y="275.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 0.26%)</title><rect x="10.0" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (114 samples, 0.26%)</title><rect x="10.0" y="243.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (114 samples, 0.26%)</title><rect x="10.0" y="227.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (114 samples, 0.26%)</title><rect x="10.0" y="211.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (114 samples, 0.26%)</title><rect x="10.0" y="195.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (114 samples, 0.26%)</title><rect x="10.0" y="179.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (113 samples, 0.25%)</title><rect x="10.0" y="163.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (113 samples, 0.25%)</title><rect x="10.0" y="147.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (113 samples, 0.25%)</title><rect x="10.0" y="131.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (113 samples, 0.25%)</title><rect x="10.0" y="115.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (113 samples, 0.25%)</title><rect x="10.0" y="99.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (113 samples, 0.25%)</title><rect x="10.0" y="83.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (113 samples, 0.25%)</title><rect x="10.0" y="67.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (113 samples, 0.25%)</title><rect x="10.0" y="51.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (9,660 samples, 21.61%)</title><rect x="13.0" y="307.0" width="255.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.0" y="318.0">ru.mail.polis.service.igorlo.Stora..</text>
</g>
<g>
<title>[NIO Selector #0 tid=32114] (86 samples, 0.19%)</title><rect x="268.0" y="355.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 0.19%)</title><rect x="268.0" y="339.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (86 samples, 0.19%)</title><rect x="268.0" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (11 samples, 0.02%)</title><rect x="268.0" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 0.02%)</title><rect x="268.0" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.02%)</title><rect x="268.0" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.02%)</title><rect x="268.0" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (11 samples, 0.02%)</title><rect x="268.0" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (11 samples, 0.02%)</title><rect x="268.0" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (11 samples, 0.02%)</title><rect x="268.0" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (11 samples, 0.02%)</title><rect x="268.0" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.02%)</title><rect x="268.0" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.02%)</title><rect x="268.0" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (75 samples, 0.17%)</title><rect x="268.3" y="307.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="271.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=32121] (148 samples, 0.33%)</title><rect x="270.3" y="355.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="273.3" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (148 samples, 0.33%)</title><rect x="270.3" y="339.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (148 samples, 0.33%)</title><rect x="270.3" y="323.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (23 samples, 0.05%)</title><rect x="270.3" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 0.05%)</title><rect x="270.3" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.05%)</title><rect x="270.3" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.05%)</title><rect x="270.3" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.3" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (23 samples, 0.05%)</title><rect x="270.3" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (23 samples, 0.05%)</title><rect x="270.3" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (23 samples, 0.05%)</title><rect x="270.3" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (23 samples, 0.05%)</title><rect x="270.3" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.05%)</title><rect x="270.3" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.05%)</title><rect x="270.3" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.04%)</title><rect x="270.3" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.04%)</title><rect x="270.3" y="131.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.04%)</title><rect x="270.3" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.04%)</title><rect x="270.3" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.04%)</title><rect x="270.3" y="83.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.04%)</title><rect x="270.3" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.04%)</title><rect x="270.3" y="51.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.04%)</title><rect x="270.3" y="35.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="273.3" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (125 samples, 0.28%)</title><rect x="270.9" y="307.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="273.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32104] (10,086 samples, 22.56%)</title><rect x="274.2" y="355.0" width="266.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="277.2" y="366.0">[NIO Selector #1 tid=32104]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,086 samples, 22.56%)</title><rect x="274.2" y="339.0" width="266.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.2" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (10,086 samples, 22.56%)</title><rect x="274.2" y="323.0" width="266.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.2" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (86 samples, 0.19%)</title><rect x="274.2" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (86 samples, 0.19%)</title><rect x="274.2" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (86 samples, 0.19%)</title><rect x="274.2" y="275.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (86 samples, 0.19%)</title><rect x="274.2" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.2" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (86 samples, 0.19%)</title><rect x="274.2" y="243.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (86 samples, 0.19%)</title><rect x="274.2" y="227.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (86 samples, 0.19%)</title><rect x="274.2" y="211.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 0.19%)</title><rect x="274.2" y="195.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (86 samples, 0.19%)</title><rect x="274.2" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (86 samples, 0.19%)</title><rect x="274.2" y="163.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (86 samples, 0.19%)</title><rect x="274.2" y="147.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (86 samples, 0.19%)</title><rect x="274.2" y="131.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (86 samples, 0.19%)</title><rect x="274.2" y="115.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (86 samples, 0.19%)</title><rect x="274.2" y="99.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (86 samples, 0.19%)</title><rect x="274.2" y="83.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (86 samples, 0.19%)</title><rect x="274.2" y="67.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (86 samples, 0.19%)</title><rect x="274.2" y="51.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="277.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (10,000 samples, 22.37%)</title><rect x="276.5" y="307.0" width="263.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.5" y="318.0">ru.mail.polis.service.igorlo.Storag..</text>
</g>
<g>
<title>[NIO Selector #1 tid=32122] (142 samples, 0.32%)</title><rect x="540.4" y="355.0" width="3.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="543.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (142 samples, 0.32%)</title><rect x="540.4" y="339.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (142 samples, 0.32%)</title><rect x="540.4" y="323.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (22 samples, 0.05%)</title><rect x="540.4" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 0.05%)</title><rect x="540.4" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.05%)</title><rect x="540.4" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.05%)</title><rect x="540.4" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (22 samples, 0.05%)</title><rect x="540.4" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (22 samples, 0.05%)</title><rect x="540.4" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (22 samples, 0.05%)</title><rect x="540.4" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (22 samples, 0.05%)</title><rect x="540.4" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.05%)</title><rect x="540.4" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.05%)</title><rect x="540.4" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (22 samples, 0.05%)</title><rect x="540.4" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.05%)</title><rect x="540.4" y="131.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.05%)</title><rect x="540.4" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.05%)</title><rect x="540.4" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.05%)</title><rect x="540.4" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.05%)</title><rect x="540.4" y="67.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.05%)</title><rect x="540.4" y="51.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.05%)</title><rect x="540.4" y="35.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="543.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (120 samples, 0.27%)</title><rect x="541.0" y="307.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="544.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32105] (10,050 samples, 22.48%)</title><rect x="544.2" y="355.0" width="265.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="547.2" y="366.0">[NIO Selector #2 tid=32105]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,050 samples, 22.48%)</title><rect x="544.2" y="339.0" width="265.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.2" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (10,050 samples, 22.48%)</title><rect x="544.2" y="323.0" width="265.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.2" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (114 samples, 0.26%)</title><rect x="544.2" y="307.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (114 samples, 0.26%)</title><rect x="544.2" y="291.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 0.26%)</title><rect x="544.2" y="275.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 0.26%)</title><rect x="544.2" y="259.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.2" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (114 samples, 0.26%)</title><rect x="544.2" y="243.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (114 samples, 0.26%)</title><rect x="544.2" y="227.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (114 samples, 0.26%)</title><rect x="544.2" y="211.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (114 samples, 0.26%)</title><rect x="544.2" y="195.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (114 samples, 0.26%)</title><rect x="544.2" y="179.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (114 samples, 0.26%)</title><rect x="544.2" y="163.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (114 samples, 0.26%)</title><rect x="544.2" y="147.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (114 samples, 0.26%)</title><rect x="544.2" y="131.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (114 samples, 0.26%)</title><rect x="544.2" y="115.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (114 samples, 0.26%)</title><rect x="544.2" y="99.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (114 samples, 0.26%)</title><rect x="544.2" y="83.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (114 samples, 0.26%)</title><rect x="544.2" y="67.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (114 samples, 0.26%)</title><rect x="544.2" y="51.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="547.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (9,936 samples, 22.23%)</title><rect x="547.2" y="307.0" width="262.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="550.2" y="318.0">ru.mail.polis.service.igorlo.Storag..</text>
</g>
<g>
<title>[NIO Selector #2 tid=32116] (168 samples, 0.38%)</title><rect x="809.5" y="355.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="812.5" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (168 samples, 0.38%)</title><rect x="809.5" y="339.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (168 samples, 0.38%)</title><rect x="809.5" y="323.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 0.09%)</title><rect x="809.5" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (39 samples, 0.09%)</title><rect x="809.5" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 0.09%)</title><rect x="809.5" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39 samples, 0.09%)</title><rect x="809.5" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.5" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (39 samples, 0.09%)</title><rect x="809.5" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (39 samples, 0.09%)</title><rect x="809.5" y="227.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (39 samples, 0.09%)</title><rect x="809.5" y="211.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (39 samples, 0.09%)</title><rect x="809.5" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.09%)</title><rect x="809.5" y="179.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (39 samples, 0.09%)</title><rect x="809.5" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (36 samples, 0.08%)</title><rect x="809.5" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (36 samples, 0.08%)</title><rect x="809.5" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (36 samples, 0.08%)</title><rect x="809.5" y="115.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (36 samples, 0.08%)</title><rect x="809.5" y="99.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (36 samples, 0.08%)</title><rect x="809.5" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (36 samples, 0.08%)</title><rect x="809.5" y="67.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (36 samples, 0.08%)</title><rect x="809.5" y="51.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (36 samples, 0.08%)</title><rect x="809.5" y="35.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="812.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (129 samples, 0.29%)</title><rect x="810.5" y="307.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="813.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32106] (9,461 samples, 21.17%)</title><rect x="813.9" y="355.0" width="249.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="816.9" y="366.0">[NIO Selector #3 tid=32106]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,461 samples, 21.17%)</title><rect x="813.9" y="339.0" width="249.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (9,461 samples, 21.17%)</title><rect x="813.9" y="323.0" width="249.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.9" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (105 samples, 0.23%)</title><rect x="813.9" y="307.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (105 samples, 0.23%)</title><rect x="813.9" y="291.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (105 samples, 0.23%)</title><rect x="813.9" y="275.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (105 samples, 0.23%)</title><rect x="813.9" y="259.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.9" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (105 samples, 0.23%)</title><rect x="813.9" y="243.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (105 samples, 0.23%)</title><rect x="813.9" y="227.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (105 samples, 0.23%)</title><rect x="813.9" y="211.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.23%)</title><rect x="813.9" y="195.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (105 samples, 0.23%)</title><rect x="813.9" y="179.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (104 samples, 0.23%)</title><rect x="813.9" y="163.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (104 samples, 0.23%)</title><rect x="813.9" y="147.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (104 samples, 0.23%)</title><rect x="813.9" y="131.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (104 samples, 0.23%)</title><rect x="813.9" y="115.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (104 samples, 0.23%)</title><rect x="813.9" y="99.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (104 samples, 0.23%)</title><rect x="813.9" y="83.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (104 samples, 0.23%)</title><rect x="813.9" y="67.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (104 samples, 0.23%)</title><rect x="813.9" y="51.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="816.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (9,356 samples, 20.93%)</title><rect x="816.7" y="307.0" width="247.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="819.7" y="318.0">ru.mail.polis.service.igorlo.Stor..</text>
</g>
<g>
<title>[NIO Selector #3 tid=32117] (87 samples, 0.19%)</title><rect x="1063.7" y="355.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1066.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 0.19%)</title><rect x="1063.7" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (87 samples, 0.19%)</title><rect x="1063.7" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16 samples, 0.04%)</title><rect x="1063.7" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 0.04%)</title><rect x="1063.7" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.04%)</title><rect x="1063.7" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.04%)</title><rect x="1063.7" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.7" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (16 samples, 0.04%)</title><rect x="1063.7" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (16 samples, 0.04%)</title><rect x="1063.7" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (16 samples, 0.04%)</title><rect x="1063.7" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (16 samples, 0.04%)</title><rect x="1063.7" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.04%)</title><rect x="1063.7" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.04%)</title><rect x="1063.7" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.03%)</title><rect x="1063.7" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (15 samples, 0.03%)</title><rect x="1063.7" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (15 samples, 0.03%)</title><rect x="1063.7" y="115.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (15 samples, 0.03%)</title><rect x="1063.7" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.03%)</title><rect x="1063.7" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.03%)</title><rect x="1063.7" y="67.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.03%)</title><rect x="1063.7" y="51.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (15 samples, 0.03%)</title><rect x="1063.7" y="35.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1066.7" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (71 samples, 0.16%)</title><rect x="1064.1" y="307.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1067.1" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32124] (255 samples, 0.57%)</title><rect x="1066.0" y="355.0" width="6.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1069.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (255 samples, 0.57%)</title><rect x="1066.0" y="339.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (255 samples, 0.57%)</title><rect x="1066.0" y="323.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 0.08%)</title><rect x="1066.0" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 0.08%)</title><rect x="1066.0" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 0.08%)</title><rect x="1066.0" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.08%)</title><rect x="1066.0" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (36 samples, 0.08%)</title><rect x="1066.0" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (36 samples, 0.08%)</title><rect x="1066.0" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeGet (36 samples, 0.08%)</title><rect x="1066.0" y="211.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeAsync (36 samples, 0.08%)</title><rect x="1066.0" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.08%)</title><rect x="1066.0" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.08%)</title><rect x="1066.0" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.07%)</title><rect x="1066.0" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.07%)</title><rect x="1066.0" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.07%)</title><rect x="1066.0" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.07%)</title><rect x="1066.0" y="99.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.07%)</title><rect x="1066.0" y="83.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.07%)</title><rect x="1066.0" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.07%)</title><rect x="1066.0" y="51.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.07%)</title><rect x="1066.0" y="35.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1069.0" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (219 samples, 0.49%)</title><rect x="1066.9" y="307.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1069.9" y="318.0"></text>
</g>
<g>
<title>[asyncWorker tid=32182] (616 samples, 1.38%)</title><rect x="1072.7" y="355.0" width="16.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1075.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (616 samples, 1.38%)</title><rect x="1072.7" y="339.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (616 samples, 1.38%)</title><rect x="1072.7" y="323.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (616 samples, 1.38%)</title><rect x="1072.7" y="307.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (331 samples, 0.74%)</title><rect x="1072.7" y="291.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (331 samples, 0.74%)</title><rect x="1072.7" y="275.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 0.14%)</title><rect x="1072.7" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (61 samples, 0.14%)</title><rect x="1072.7" y="243.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (61 samples, 0.14%)</title><rect x="1072.7" y="227.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 0.14%)</title><rect x="1072.7" y="211.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (61 samples, 0.14%)</title><rect x="1072.7" y="195.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (61 samples, 0.14%)</title><rect x="1072.7" y="179.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1075.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (270 samples, 0.60%)</title><rect x="1074.3" y="259.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (270 samples, 0.60%)</title><rect x="1074.3" y="243.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (270 samples, 0.60%)</title><rect x="1074.3" y="227.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (270 samples, 0.60%)</title><rect x="1074.3" y="211.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (270 samples, 0.60%)</title><rect x="1074.3" y="195.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (270 samples, 0.60%)</title><rect x="1074.3" y="179.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (270 samples, 0.60%)</title><rect x="1074.3" y="163.0" width="7.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1077.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (285 samples, 0.64%)</title><rect x="1081.5" y="291.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (285 samples, 0.64%)</title><rect x="1081.5" y="275.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (284 samples, 0.64%)</title><rect x="1081.5" y="259.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (284 samples, 0.64%)</title><rect x="1081.5" y="243.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (284 samples, 0.64%)</title><rect x="1081.5" y="227.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (284 samples, 0.64%)</title><rect x="1081.5" y="211.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.5" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (137 samples, 0.31%)</title><rect x="1081.5" y="195.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.5" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (137 samples, 0.31%)</title><rect x="1081.5" y="179.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1084.5" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (147 samples, 0.33%)</title><rect x="1085.1" y="195.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.1" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (147 samples, 0.33%)</title><rect x="1085.1" y="179.0" width="3.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1088.1" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32183] (623 samples, 1.39%)</title><rect x="1089.0" y="355.0" width="16.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1092.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (623 samples, 1.39%)</title><rect x="1089.0" y="339.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (623 samples, 1.39%)</title><rect x="1089.0" y="323.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (623 samples, 1.39%)</title><rect x="1089.0" y="307.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (346 samples, 0.77%)</title><rect x="1089.0" y="291.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (346 samples, 0.77%)</title><rect x="1089.0" y="275.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (71 samples, 0.16%)</title><rect x="1089.0" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (71 samples, 0.16%)</title><rect x="1089.0" y="243.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (71 samples, 0.16%)</title><rect x="1089.0" y="227.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (71 samples, 0.16%)</title><rect x="1089.0" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (71 samples, 0.16%)</title><rect x="1089.0" y="195.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (71 samples, 0.16%)</title><rect x="1089.0" y="179.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1092.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (275 samples, 0.62%)</title><rect x="1090.8" y="259.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (275 samples, 0.62%)</title><rect x="1090.8" y="243.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (275 samples, 0.62%)</title><rect x="1090.8" y="227.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (275 samples, 0.62%)</title><rect x="1090.8" y="211.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (275 samples, 0.62%)</title><rect x="1090.8" y="195.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (275 samples, 0.62%)</title><rect x="1090.8" y="179.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (275 samples, 0.62%)</title><rect x="1090.8" y="163.0" width="7.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1093.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (277 samples, 0.62%)</title><rect x="1098.1" y="291.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (277 samples, 0.62%)</title><rect x="1098.1" y="275.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (274 samples, 0.61%)</title><rect x="1098.2" y="259.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (274 samples, 0.61%)</title><rect x="1098.2" y="243.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (274 samples, 0.61%)</title><rect x="1098.2" y="227.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (274 samples, 0.61%)</title><rect x="1098.2" y="211.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.2" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (138 samples, 0.31%)</title><rect x="1098.2" y="195.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.2" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (138 samples, 0.31%)</title><rect x="1098.2" y="179.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1101.2" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (136 samples, 0.30%)</title><rect x="1101.8" y="195.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.8" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (136 samples, 0.30%)</title><rect x="1101.8" y="179.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1104.8" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32184] (606 samples, 1.36%)</title><rect x="1105.4" y="355.0" width="16.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1108.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (606 samples, 1.36%)</title><rect x="1105.4" y="339.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (606 samples, 1.36%)</title><rect x="1105.4" y="323.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (606 samples, 1.36%)</title><rect x="1105.4" y="307.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (323 samples, 0.72%)</title><rect x="1105.4" y="291.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (323 samples, 0.72%)</title><rect x="1105.4" y="275.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (69 samples, 0.15%)</title><rect x="1105.4" y="259.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (69 samples, 0.15%)</title><rect x="1105.4" y="243.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (69 samples, 0.15%)</title><rect x="1105.4" y="227.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.15%)</title><rect x="1105.4" y="211.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.15%)</title><rect x="1105.4" y="195.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (69 samples, 0.15%)</title><rect x="1105.4" y="179.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1108.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (254 samples, 0.57%)</title><rect x="1107.2" y="259.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (254 samples, 0.57%)</title><rect x="1107.2" y="243.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (254 samples, 0.57%)</title><rect x="1107.2" y="227.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (254 samples, 0.57%)</title><rect x="1107.2" y="211.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (254 samples, 0.57%)</title><rect x="1107.2" y="195.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (254 samples, 0.57%)</title><rect x="1107.2" y="179.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (254 samples, 0.57%)</title><rect x="1107.2" y="163.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1110.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (283 samples, 0.63%)</title><rect x="1113.9" y="291.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (283 samples, 0.63%)</title><rect x="1113.9" y="275.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (280 samples, 0.63%)</title><rect x="1114.0" y="259.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (280 samples, 0.63%)</title><rect x="1114.0" y="243.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (280 samples, 0.63%)</title><rect x="1114.0" y="227.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (280 samples, 0.63%)</title><rect x="1114.0" y="211.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.0" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (131 samples, 0.29%)</title><rect x="1114.0" y="195.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (131 samples, 0.29%)</title><rect x="1114.0" y="179.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1117.0" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (149 samples, 0.33%)</title><rect x="1117.5" y="195.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.5" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (149 samples, 0.33%)</title><rect x="1117.5" y="179.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1120.5" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32185] (625 samples, 1.40%)</title><rect x="1121.4" y="355.0" width="16.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1124.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (625 samples, 1.40%)</title><rect x="1121.4" y="339.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (625 samples, 1.40%)</title><rect x="1121.4" y="323.0" width="16.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (625 samples, 1.40%)</title><rect x="1121.4" y="307.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (332 samples, 0.74%)</title><rect x="1121.4" y="291.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (332 samples, 0.74%)</title><rect x="1121.4" y="275.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.13%)</title><rect x="1121.4" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.13%)</title><rect x="1121.4" y="243.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.13%)</title><rect x="1121.4" y="227.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.13%)</title><rect x="1121.4" y="211.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.13%)</title><rect x="1121.4" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.13%)</title><rect x="1121.4" y="179.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1124.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (273 samples, 0.61%)</title><rect x="1123.0" y="259.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (273 samples, 0.61%)</title><rect x="1123.0" y="243.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (273 samples, 0.61%)</title><rect x="1123.0" y="227.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (273 samples, 0.61%)</title><rect x="1123.0" y="211.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (273 samples, 0.61%)</title><rect x="1123.0" y="195.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (273 samples, 0.61%)</title><rect x="1123.0" y="179.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (273 samples, 0.61%)</title><rect x="1123.0" y="163.0" width="7.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1126.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$61/1718354551.run (293 samples, 0.66%)</title><rect x="1130.2" y="291.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeGet$6 (293 samples, 0.66%)</title><rect x="1130.2" y="275.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.executeReplication (289 samples, 0.65%)</title><rect x="1130.3" y="259.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.proxy (289 samples, 0.65%)</title><rect x="1130.3" y="243.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (289 samples, 0.65%)</title><rect x="1130.3" y="227.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (289 samples, 0.65%)</title><rect x="1130.3" y="211.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.3" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (146 samples, 0.33%)</title><rect x="1130.3" y="195.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (146 samples, 0.33%)</title><rect x="1130.3" y="179.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1133.3" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (143 samples, 0.32%)</title><rect x="1134.1" y="195.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.1" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (143 samples, 0.32%)</title><rect x="1134.1" y="179.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1137.1" y="190.0"></text>
</g>
<g>
<title>[asyncWorker tid=32186] (228 samples, 0.51%)</title><rect x="1137.9" y="355.0" width="6.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1140.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (228 samples, 0.51%)</title><rect x="1137.9" y="339.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (228 samples, 0.51%)</title><rect x="1137.9" y="323.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (228 samples, 0.51%)</title><rect x="1137.9" y="307.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (179 samples, 0.40%)</title><rect x="1137.9" y="291.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (179 samples, 0.40%)</title><rect x="1137.9" y="275.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 0.09%)</title><rect x="1137.9" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1140.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (41 samples, 0.09%)</title><rect x="1137.9" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (41 samples, 0.09%)</title><rect x="1137.9" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (41 samples, 0.09%)</title><rect x="1137.9" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.09%)</title><rect x="1137.9" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (41 samples, 0.09%)</title><rect x="1137.9" y="179.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1140.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (138 samples, 0.31%)</title><rect x="1139.0" y="259.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (138 samples, 0.31%)</title><rect x="1139.0" y="243.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (138 samples, 0.31%)</title><rect x="1139.0" y="227.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (138 samples, 0.31%)</title><rect x="1139.0" y="211.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (138 samples, 0.31%)</title><rect x="1139.0" y="195.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 0.31%)</title><rect x="1139.0" y="179.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (138 samples, 0.31%)</title><rect x="1139.0" y="163.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1142.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (49 samples, 0.11%)</title><rect x="1142.6" y="291.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (49 samples, 0.11%)</title><rect x="1142.6" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 0.11%)</title><rect x="1142.6" y="259.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (49 samples, 0.11%)</title><rect x="1142.6" y="243.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1145.6" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32187] (298 samples, 0.67%)</title><rect x="1143.9" y="355.0" width="7.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1146.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (298 samples, 0.67%)</title><rect x="1143.9" y="339.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (298 samples, 0.67%)</title><rect x="1143.9" y="323.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (298 samples, 0.67%)</title><rect x="1143.9" y="307.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (234 samples, 0.52%)</title><rect x="1143.9" y="291.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (234 samples, 0.52%)</title><rect x="1143.9" y="275.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.09%)</title><rect x="1143.9" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.09%)</title><rect x="1143.9" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.09%)</title><rect x="1143.9" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.09%)</title><rect x="1143.9" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.09%)</title><rect x="1143.9" y="195.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (38 samples, 0.09%)</title><rect x="1143.9" y="179.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1146.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (196 samples, 0.44%)</title><rect x="1144.9" y="259.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (196 samples, 0.44%)</title><rect x="1144.9" y="243.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (196 samples, 0.44%)</title><rect x="1144.9" y="227.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (196 samples, 0.44%)</title><rect x="1144.9" y="211.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (196 samples, 0.44%)</title><rect x="1144.9" y="195.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (196 samples, 0.44%)</title><rect x="1144.9" y="179.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (196 samples, 0.44%)</title><rect x="1144.9" y="163.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1147.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (64 samples, 0.14%)</title><rect x="1150.1" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (64 samples, 0.14%)</title><rect x="1150.1" y="275.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 0.14%)</title><rect x="1150.1" y="259.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (64 samples, 0.14%)</title><rect x="1150.1" y="243.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1153.1" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32188] (241 samples, 0.54%)</title><rect x="1151.8" y="355.0" width="6.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1154.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (241 samples, 0.54%)</title><rect x="1151.8" y="339.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (241 samples, 0.54%)</title><rect x="1151.8" y="323.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (241 samples, 0.54%)</title><rect x="1151.8" y="307.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (166 samples, 0.37%)</title><rect x="1151.8" y="291.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (166 samples, 0.37%)</title><rect x="1151.8" y="275.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 0.10%)</title><rect x="1151.8" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (43 samples, 0.10%)</title><rect x="1151.8" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1154.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (43 samples, 0.10%)</title><rect x="1151.8" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.10%)</title><rect x="1151.8" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 0.10%)</title><rect x="1151.8" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (43 samples, 0.10%)</title><rect x="1151.8" y="179.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1154.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (123 samples, 0.28%)</title><rect x="1152.9" y="259.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (123 samples, 0.28%)</title><rect x="1152.9" y="243.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (123 samples, 0.28%)</title><rect x="1152.9" y="227.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (123 samples, 0.28%)</title><rect x="1152.9" y="211.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (123 samples, 0.28%)</title><rect x="1152.9" y="195.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (123 samples, 0.28%)</title><rect x="1152.9" y="179.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (123 samples, 0.28%)</title><rect x="1152.9" y="163.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1155.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (75 samples, 0.17%)</title><rect x="1156.2" y="291.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (75 samples, 0.17%)</title><rect x="1156.2" y="275.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (75 samples, 0.17%)</title><rect x="1156.2" y="259.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.2" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (75 samples, 0.17%)</title><rect x="1156.2" y="243.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1159.2" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32189] (252 samples, 0.56%)</title><rect x="1158.2" y="355.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1161.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (252 samples, 0.56%)</title><rect x="1158.2" y="339.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (252 samples, 0.56%)</title><rect x="1158.2" y="323.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (252 samples, 0.56%)</title><rect x="1158.2" y="307.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (197 samples, 0.44%)</title><rect x="1158.2" y="291.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (197 samples, 0.44%)</title><rect x="1158.2" y="275.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 0.12%)</title><rect x="1158.2" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (53 samples, 0.12%)</title><rect x="1158.2" y="243.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (53 samples, 0.12%)</title><rect x="1158.2" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (53 samples, 0.12%)</title><rect x="1158.2" y="211.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (53 samples, 0.12%)</title><rect x="1158.2" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (53 samples, 0.12%)</title><rect x="1158.2" y="179.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1161.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (144 samples, 0.32%)</title><rect x="1159.6" y="259.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (144 samples, 0.32%)</title><rect x="1159.6" y="243.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (144 samples, 0.32%)</title><rect x="1159.6" y="227.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (144 samples, 0.32%)</title><rect x="1159.6" y="211.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (144 samples, 0.32%)</title><rect x="1159.6" y="195.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (144 samples, 0.32%)</title><rect x="1159.6" y="179.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (144 samples, 0.32%)</title><rect x="1159.6" y="163.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1162.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (55 samples, 0.12%)</title><rect x="1163.4" y="291.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (55 samples, 0.12%)</title><rect x="1163.4" y="275.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 0.12%)</title><rect x="1163.4" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (55 samples, 0.12%)</title><rect x="1163.4" y="243.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1166.4" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32190] (261 samples, 0.58%)</title><rect x="1164.8" y="355.0" width="6.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1167.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (261 samples, 0.58%)</title><rect x="1164.8" y="339.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (261 samples, 0.58%)</title><rect x="1164.8" y="323.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (261 samples, 0.58%)</title><rect x="1164.8" y="307.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (201 samples, 0.45%)</title><rect x="1164.8" y="291.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (201 samples, 0.45%)</title><rect x="1164.8" y="275.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.09%)</title><rect x="1164.8" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.09%)</title><rect x="1164.8" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.09%)</title><rect x="1164.8" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.09%)</title><rect x="1164.8" y="211.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.09%)</title><rect x="1164.8" y="195.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (38 samples, 0.09%)</title><rect x="1164.8" y="179.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1167.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (163 samples, 0.36%)</title><rect x="1165.8" y="259.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (163 samples, 0.36%)</title><rect x="1165.8" y="243.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (163 samples, 0.36%)</title><rect x="1165.8" y="227.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (163 samples, 0.36%)</title><rect x="1165.8" y="211.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (163 samples, 0.36%)</title><rect x="1165.8" y="195.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (163 samples, 0.36%)</title><rect x="1165.8" y="179.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (163 samples, 0.36%)</title><rect x="1165.8" y="163.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1168.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (60 samples, 0.13%)</title><rect x="1170.1" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (60 samples, 0.13%)</title><rect x="1170.1" y="275.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (60 samples, 0.13%)</title><rect x="1170.1" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (60 samples, 0.13%)</title><rect x="1170.1" y="243.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1173.1" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32191] (228 samples, 0.51%)</title><rect x="1171.7" y="355.0" width="6.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1174.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (228 samples, 0.51%)</title><rect x="1171.7" y="339.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (228 samples, 0.51%)</title><rect x="1171.7" y="323.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (228 samples, 0.51%)</title><rect x="1171.7" y="307.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (176 samples, 0.39%)</title><rect x="1171.7" y="291.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (176 samples, 0.39%)</title><rect x="1171.7" y="275.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.07%)</title><rect x="1171.7" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.07%)</title><rect x="1171.7" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.07%)</title><rect x="1171.7" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.07%)</title><rect x="1171.7" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.07%)</title><rect x="1171.7" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1174.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.07%)</title><rect x="1171.7" y="179.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1174.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (144 samples, 0.32%)</title><rect x="1172.6" y="259.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (144 samples, 0.32%)</title><rect x="1172.6" y="243.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (144 samples, 0.32%)</title><rect x="1172.6" y="227.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (144 samples, 0.32%)</title><rect x="1172.6" y="211.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (144 samples, 0.32%)</title><rect x="1172.6" y="195.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (144 samples, 0.32%)</title><rect x="1172.6" y="179.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (144 samples, 0.32%)</title><rect x="1172.6" y="163.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1175.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (52 samples, 0.12%)</title><rect x="1176.4" y="291.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (52 samples, 0.12%)</title><rect x="1176.4" y="275.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 0.12%)</title><rect x="1176.4" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (52 samples, 0.12%)</title><rect x="1176.4" y="243.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1179.4" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32192] (238 samples, 0.53%)</title><rect x="1177.7" y="355.0" width="6.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1180.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (238 samples, 0.53%)</title><rect x="1177.7" y="339.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (238 samples, 0.53%)</title><rect x="1177.7" y="323.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (238 samples, 0.53%)</title><rect x="1177.7" y="307.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (161 samples, 0.36%)</title><rect x="1177.7" y="291.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (161 samples, 0.36%)</title><rect x="1177.7" y="275.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 0.10%)</title><rect x="1177.7" y="259.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (44 samples, 0.10%)</title><rect x="1177.7" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (44 samples, 0.10%)</title><rect x="1177.7" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (44 samples, 0.10%)</title><rect x="1177.7" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (44 samples, 0.10%)</title><rect x="1177.7" y="195.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (44 samples, 0.10%)</title><rect x="1177.7" y="179.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1180.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (117 samples, 0.26%)</title><rect x="1178.9" y="259.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (117 samples, 0.26%)</title><rect x="1178.9" y="243.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (117 samples, 0.26%)</title><rect x="1178.9" y="227.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (117 samples, 0.26%)</title><rect x="1178.9" y="211.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (117 samples, 0.26%)</title><rect x="1178.9" y="195.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (117 samples, 0.26%)</title><rect x="1178.9" y="179.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (117 samples, 0.26%)</title><rect x="1178.9" y="163.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1181.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (77 samples, 0.17%)</title><rect x="1182.0" y="291.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (77 samples, 0.17%)</title><rect x="1182.0" y="275.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 0.17%)</title><rect x="1182.0" y="259.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (77 samples, 0.17%)</title><rect x="1182.0" y="243.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1185.0" y="254.0"></text>
</g>
<g>
<title>[asyncWorker tid=32193] (227 samples, 0.51%)</title><rect x="1184.0" y="355.0" width="6.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1187.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (227 samples, 0.51%)</title><rect x="1184.0" y="339.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (227 samples, 0.51%)</title><rect x="1184.0" y="323.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (227 samples, 0.51%)</title><rect x="1184.0" y="307.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (165 samples, 0.37%)</title><rect x="1184.0" y="291.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (165 samples, 0.37%)</title><rect x="1184.0" y="275.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.08%)</title><rect x="1184.0" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (35 samples, 0.08%)</title><rect x="1184.0" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (35 samples, 0.08%)</title><rect x="1184.0" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.08%)</title><rect x="1184.0" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.08%)</title><rect x="1184.0" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (35 samples, 0.08%)</title><rect x="1184.0" y="179.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1187.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (130 samples, 0.29%)</title><rect x="1184.9" y="259.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (130 samples, 0.29%)</title><rect x="1184.9" y="243.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (130 samples, 0.29%)</title><rect x="1184.9" y="227.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (130 samples, 0.29%)</title><rect x="1184.9" y="211.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (130 samples, 0.29%)</title><rect x="1184.9" y="195.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (130 samples, 0.29%)</title><rect x="1184.9" y="179.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (130 samples, 0.29%)</title><rect x="1184.9" y="163.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1187.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator$$Lambda$70/1569338697.run (62 samples, 0.14%)</title><rect x="1188.4" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicator.lambda$executeAsync$0 (62 samples, 0.14%)</title><rect x="1188.4" y="275.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (62 samples, 0.14%)</title><rect x="1188.4" y="259.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (62 samples, 0.14%)</title><rect x="1188.4" y="243.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1191.4" y="254.0"></text>
</g>
</g>
</svg>
