<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2229"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2229"> </text>
<g id="frames">
<g>
<title>all (1,764 samples, 100.00%)</title><rect x="10.0" y="2195.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2206.0">all</text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-3 tid=13378] (45 samples, 2.55%)</title><rect x="10.0" y="2179.0" width="30.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="2190.0">[F..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="10.0" y="2163.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (44 samples, 2.49%)</title><rect x="10.7" y="2163.0" width="29.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.7" y="2174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (44 samples, 2.49%)</title><rect x="10.7" y="2147.0" width="29.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.7" y="2158.0">ja..</text>
</g>
<g>
<title>java/lang/System.currentTimeMillis (1 samples, 0.06%)</title><rect x="12.7" y="2131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.7" y="2142.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="12.7" y="2115.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.7" y="2126.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="12.7" y="2099.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.7" y="2110.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="12.7" y="2083.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.7" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (32 samples, 1.81%)</title><rect x="13.3" y="2131.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.3" y="2142.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (2 samples, 0.11%)</title><rect x="15.4" y="2115.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.4" y="2126.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (2 samples, 0.11%)</title><rect x="15.4" y="2099.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.4" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (26 samples, 1.47%)</title><rect x="16.7" y="2115.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.06%)</title><rect x="16.7" y="2099.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.7" y="2110.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (1 samples, 0.06%)</title><rect x="16.7" y="2083.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.7" y="2094.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (1 samples, 0.06%)</title><rect x="16.7" y="2067.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (25 samples, 1.42%)</title><rect x="17.4" y="2099.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.4" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (6 samples, 0.34%)</title><rect x="17.4" y="2083.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.4" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5 samples, 0.28%)</title><rect x="18.0" y="2067.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="18.0" y="2051.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.0" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="18.0" y="2035.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.0" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="18.0" y="2019.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="18.0" y="2003.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="18.0" y="1987.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="18.0" y="1971.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="18.0" y="1955.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="18.0" y="1939.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="18.0" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="18.0" y="1907.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.0" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="18.0" y="1891.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1875.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1859.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="21.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1843.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1827.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1811.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1795.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1779.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="21.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="18.0" y="1763.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="21.0" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (4 samples, 0.23%)</title><rect x="18.7" y="2051.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.7" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (3 samples, 0.17%)</title><rect x="19.4" y="2035.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (3 samples, 0.17%)</title><rect x="19.4" y="2019.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.4" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (3 samples, 0.17%)</title><rect x="19.4" y="2003.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.4" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.11%)</title><rect x="20.0" y="1987.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="20.0" y="1971.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.0" y="1982.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="20.0" y="1955.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="20.0" y="1939.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="20.0" y="1923.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="20.0" y="1907.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.0" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="20.7" y="1971.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="20.7" y="1955.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.7" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="20.7" y="1939.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.7" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.06%)</title><rect x="20.7" y="1923.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.06%)</title><rect x="20.7" y="1907.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.06%)</title><rect x="20.7" y="1891.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19 samples, 1.08%)</title><rect x="21.4" y="2083.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.4" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.34%)</title><rect x="21.4" y="2067.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.23%)</title><rect x="21.4" y="2051.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.4" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="21.4" y="2035.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.4" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.23%)</title><rect x="21.4" y="2019.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.23%)</title><rect x="21.4" y="2003.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.23%)</title><rect x="21.4" y="1987.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.23%)</title><rect x="21.4" y="1971.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.23%)</title><rect x="21.4" y="1955.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.23%)</title><rect x="21.4" y="1939.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.23%)</title><rect x="21.4" y="1923.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="21.4" y="1907.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="21.4" y="1891.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.4" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="21.4" y="1875.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.4" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="21.4" y="1859.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.4" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="21.4" y="1843.0" width="2.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="24.4" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="21.4" y="1827.0" width="2.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="21.4" y="1811.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="24.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="21.4" y="1795.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="24.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="22.0" y="1779.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="25.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="22.0" y="1763.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="25.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="22.0" y="1747.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="25.0" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (2 samples, 0.11%)</title><rect x="24.0" y="2051.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.0" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (2 samples, 0.11%)</title><rect x="24.0" y="2035.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.0" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (2 samples, 0.11%)</title><rect x="24.0" y="2019.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.0" y="2030.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.11%)</title><rect x="24.0" y="2003.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.0" y="2014.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="24.0" y="1987.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="24.0" y="1971.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.0" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.06%)</title><rect x="24.0" y="1955.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="24.0" y="1939.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.0" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="24.0" y="1923.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.0" y="1934.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="24.0" y="1907.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="27.0" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="24.7" y="1987.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.7" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="24.7" y="1971.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.7" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="24.7" y="1955.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="24.7" y="1939.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.7" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="24.7" y="1923.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.74%)</title><rect x="25.4" y="2067.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.34%)</title><rect x="25.4" y="2051.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.4" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.34%)</title><rect x="25.4" y="2035.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.4" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.23%)</title><rect x="25.4" y="2019.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.23%)</title><rect x="25.4" y="2003.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.23%)</title><rect x="25.4" y="1987.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.23%)</title><rect x="25.4" y="1971.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.23%)</title><rect x="25.4" y="1955.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.23%)</title><rect x="25.4" y="1939.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="26.1" y="1923.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="26.1" y="1907.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.1" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.17%)</title><rect x="26.1" y="1891.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="29.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1875.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1859.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="29.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1843.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="29.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1827.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="29.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1811.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="29.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1795.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="29.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1779.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="29.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="26.7" y="1763.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="29.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.11%)</title><rect x="28.1" y="2019.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="28.7" y="2003.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.7" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="28.7" y="1987.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.7" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="28.7" y="1971.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.7" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="28.7" y="1955.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.7" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.40%)</title><rect x="29.4" y="2051.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.4" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.accept (1 samples, 0.06%)</title><rect x="29.4" y="2035.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$11 (1 samples, 0.06%)</title><rect x="29.4" y="2019.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="29.4" y="2003.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="29.4" y="1987.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="29.4" y="1971.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="29.4" y="1955.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="29.4" y="1939.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.4" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (6 samples, 0.34%)</title><rect x="30.1" y="2035.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.1" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (6 samples, 0.34%)</title><rect x="30.1" y="2019.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.1" y="2030.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (1 samples, 0.06%)</title><rect x="30.1" y="2003.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.1" y="2014.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (1 samples, 0.06%)</title><rect x="30.1" y="1987.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.1" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="30.1" y="1971.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="30.1" y="1955.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.1" y="1966.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.get$Lambda (1 samples, 0.06%)</title><rect x="30.1" y="1939.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.1" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.06%)</title><rect x="30.7" y="2003.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.7" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.06%)</title><rect x="30.7" y="1987.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.7" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="30.7" y="1971.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.7" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.06%)</title><rect x="30.7" y="1955.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.7" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="30.7" y="1939.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.7" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="30.7" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.7" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="30.7" y="1907.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.7" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.06%)</title><rect x="30.7" y="1891.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.7" y="1902.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (1 samples, 0.06%)</title><rect x="30.7" y="1875.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.7" y="1886.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.06%)</title><rect x="30.7" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.7" y="1870.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (1 samples, 0.06%)</title><rect x="30.7" y="1843.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.7" y="1854.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.06%)</title><rect x="30.7" y="1827.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.7" y="1838.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (1 samples, 0.06%)</title><rect x="30.7" y="1811.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.7" y="1822.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.06%)</title><rect x="30.7" y="1795.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.7" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (1 samples, 0.06%)</title><rect x="30.7" y="1779.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.7" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (1 samples, 0.06%)</title><rect x="30.7" y="1763.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.7" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (1 samples, 0.06%)</title><rect x="30.7" y="1747.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="30.7" y="1731.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.7" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (4 samples, 0.23%)</title><rect x="31.4" y="2003.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.4" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.23%)</title><rect x="31.4" y="1987.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.23%)</title><rect x="31.4" y="1971.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.4" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="31.4" y="1955.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.4" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="31.4" y="1939.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.4" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.23%)</title><rect x="31.4" y="1923.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.4" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.23%)</title><rect x="31.4" y="1907.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.4" y="1918.0"></text>
</g>
<g>
<title>__send (3 samples, 0.17%)</title><rect x="32.1" y="1891.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="35.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1875.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1859.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="35.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1843.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1827.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="35.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1811.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="35.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1795.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="35.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1779.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="35.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1763.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="35.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1747.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1731.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1715.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="35.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1699.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="35.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="32.1" y="1683.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="35.1" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1667.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="35.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1651.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="35.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1635.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="35.7" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1619.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1603.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="35.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1587.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1571.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="35.7" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1555.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="35.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1539.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.7" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1523.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1507.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="35.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1491.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="35.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1475.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="35.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="32.7" y="1459.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="35.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1443.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="36.4" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1427.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="36.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1411.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1395.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="36.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1379.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="36.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1363.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="36.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1347.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="36.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="33.4" y="1331.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="36.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="34.1" y="2115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.1" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="34.1" y="2099.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.1" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="34.1" y="2083.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.1" y="2094.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="34.1" y="2067.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="2051.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="37.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="2035.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="37.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="2019.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="37.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="2003.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="37.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="1987.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="1971.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="1955.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="34.1" y="1939.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.23%)</title><rect x="34.8" y="2131.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.8" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.06%)</title><rect x="34.8" y="2115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.17%)</title><rect x="35.4" y="2115.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.4" y="2126.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="35.4" y="2099.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="38.4" y="2110.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="35.4" y="2083.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.4" y="2094.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="36.1" y="2083.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="36.8" y="2099.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="39.8" y="2110.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="36.8" y="2083.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="39.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (4 samples, 0.23%)</title><rect x="37.4" y="2131.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.23%)</title><rect x="37.4" y="2115.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.4" y="2126.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="37.4" y="2099.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="40.4" y="2110.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="37.4" y="2083.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="40.4" y="2094.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="38.1" y="2083.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="41.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="38.8" y="2099.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="41.8" y="2110.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="38.8" y="2083.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="41.8" y="2094.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="39.4" y="2099.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="42.4" y="2110.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-5 tid=13380] (47 samples, 2.66%)</title><rect x="40.1" y="2179.0" width="31.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="43.1" y="2190.0">[F..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="40.1" y="2163.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="43.1" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (46 samples, 2.61%)</title><rect x="40.8" y="2163.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.8" y="2174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (46 samples, 2.61%)</title><rect x="40.8" y="2147.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.8" y="2158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (31 samples, 1.76%)</title><rect x="42.1" y="2131.0" width="20.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.1" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (26 samples, 1.47%)</title><rect x="44.8" y="2115.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.8" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.06%)</title><rect x="44.8" y="2099.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.8" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (25 samples, 1.42%)</title><rect x="45.5" y="2099.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.5" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (4 samples, 0.23%)</title><rect x="46.1" y="2083.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.1" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.23%)</title><rect x="46.1" y="2067.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.1" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="46.1" y="2051.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.1" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="46.1" y="2035.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.1" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="46.1" y="2019.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="46.1" y="2003.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="46.1" y="1987.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="46.1" y="1971.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="46.1" y="1955.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="46.1" y="1939.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="46.1" y="1923.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="46.1" y="1907.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.1" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="46.1" y="1891.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1875.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="49.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1859.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="49.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1843.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="49.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1827.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1811.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="49.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1795.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="49.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1779.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="49.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="46.1" y="1763.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="49.1" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (3 samples, 0.17%)</title><rect x="46.8" y="2051.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.8" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (3 samples, 0.17%)</title><rect x="46.8" y="2035.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.8" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (3 samples, 0.17%)</title><rect x="46.8" y="2019.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.8" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (3 samples, 0.17%)</title><rect x="46.8" y="2003.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.8" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (3 samples, 0.17%)</title><rect x="46.8" y="1987.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.8" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (3 samples, 0.17%)</title><rect x="46.8" y="1971.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.8" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (3 samples, 0.17%)</title><rect x="46.8" y="1955.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.8" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (3 samples, 0.17%)</title><rect x="46.8" y="1939.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.06%)</title><rect x="46.8" y="1923.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="46.8" y="1907.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="46.8" y="1891.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.8" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (2 samples, 0.11%)</title><rect x="47.5" y="1923.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.5" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (2 samples, 0.11%)</title><rect x="47.5" y="1907.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.5" y="1918.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.11%)</title><rect x="47.5" y="1891.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.5" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="47.5" y="1875.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.5" y="1886.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.06%)</title><rect x="48.1" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19 samples, 1.08%)</title><rect x="48.8" y="2083.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.45%)</title><rect x="48.8" y="2067.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.8" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.28%)</title><rect x="48.8" y="2051.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.28%)</title><rect x="48.8" y="2035.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.8" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.28%)</title><rect x="48.8" y="2019.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.28%)</title><rect x="48.8" y="2003.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.28%)</title><rect x="48.8" y="1987.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.23%)</title><rect x="48.8" y="1971.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.8" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.23%)</title><rect x="48.8" y="1955.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.23%)</title><rect x="48.8" y="1939.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.23%)</title><rect x="48.8" y="1923.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="48.8" y="1907.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="48.8" y="1891.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.8" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="48.8" y="1875.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="51.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="48.8" y="1859.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="51.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="48.8" y="1843.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="51.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1827.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="52.5" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1811.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="52.5" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1795.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="52.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1779.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="52.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1763.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="52.5" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="49.5" y="1747.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="52.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="51.5" y="1971.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="51.5" y="1955.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.06%)</title><rect x="51.5" y="1939.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.weakCompareAndSetInt (1 samples, 0.06%)</title><rect x="51.5" y="1923.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.5" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (3 samples, 0.17%)</title><rect x="52.1" y="2051.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.1" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (3 samples, 0.17%)</title><rect x="52.1" y="2035.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="52.1" y="2019.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.1" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (2 samples, 0.11%)</title><rect x="52.8" y="2019.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.8" y="2030.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="53.5" y="2003.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="53.5" y="1987.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="53.5" y="1971.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.5" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="53.5" y="1955.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (1 samples, 0.06%)</title><rect x="53.5" y="1939.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.62%)</title><rect x="54.1" y="2067.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.1" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="54.1" y="2051.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.1" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="54.1" y="2035.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.1" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="54.1" y="2019.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="54.1" y="2003.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="54.1" y="1987.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="54.1" y="1971.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="54.1" y="1955.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="54.1" y="1939.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="54.1" y="1923.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="54.1" y="1907.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.1" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="54.1" y="1891.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="57.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="54.1" y="1875.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="57.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="54.1" y="1859.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="57.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="54.1" y="1843.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="57.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="54.1" y="1827.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="57.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="54.1" y="1811.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="57.1" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.57%)</title><rect x="54.8" y="2051.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="54.8" y="2035.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="54.8" y="2019.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="54.8" y="2003.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="54.8" y="1987.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="54.8" y="1971.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.8" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="54.8" y="1955.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="54.8" y="1939.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="54.8" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="54.8" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="54.8" y="1891.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.8" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.accept (1 samples, 0.06%)</title><rect x="54.8" y="1875.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$127/1375197982.accept (1 samples, 0.06%)</title><rect x="55.5" y="2035.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.accept (1 samples, 0.06%)</title><rect x="56.2" y="2035.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.2" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$11 (1 samples, 0.06%)</title><rect x="56.2" y="2019.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="56.2" y="2003.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="56.2" y="1987.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.2" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="56.2" y="1971.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.06%)</title><rect x="56.2" y="1955.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="56.2" y="1939.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.06%)</title><rect x="56.2" y="1923.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.2" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (7 samples, 0.40%)</title><rect x="56.8" y="2035.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.8" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (7 samples, 0.40%)</title><rect x="56.8" y="2019.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.8" y="2030.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (1 samples, 0.06%)</title><rect x="56.8" y="2003.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (1 samples, 0.06%)</title><rect x="56.8" y="1987.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.8" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="56.8" y="1971.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.8" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="56.8" y="1955.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.8" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.06%)</title><rect x="57.5" y="2003.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.5" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="57.5" y="1987.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.5" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.06%)</title><rect x="57.5" y="1971.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.5" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="57.5" y="1955.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="57.5" y="1939.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.06%)</title><rect x="57.5" y="1923.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.5" y="1934.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="57.5" y="1907.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="60.5" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (5 samples, 0.28%)</title><rect x="58.2" y="2003.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.2" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.28%)</title><rect x="58.2" y="1987.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.2" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.28%)</title><rect x="58.2" y="1971.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.2" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="58.2" y="1955.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.2" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="58.2" y="1939.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.2" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.28%)</title><rect x="58.2" y="1923.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.2" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.28%)</title><rect x="58.2" y="1907.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="58.2" y="1891.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="61.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="58.2" y="1875.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="61.2" y="1886.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.06%)</title><rect x="58.2" y="1859.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="61.2" y="1870.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.06%)</title><rect x="58.2" y="1843.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="61.2" y="1854.0"></text>
</g>
<g>
<title>__send (4 samples, 0.23%)</title><rect x="58.8" y="1891.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="61.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1875.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="61.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1859.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="61.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1843.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="61.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1827.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="61.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1811.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="61.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1795.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="61.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1779.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="61.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1763.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="61.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1747.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="61.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1731.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="61.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1715.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="61.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1699.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.8" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1683.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="61.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="58.8" y="1667.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="61.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1651.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="62.5" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1635.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="62.5" y="1646.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1619.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="62.5" y="1630.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1603.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="62.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1587.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="62.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="59.5" y="1571.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="62.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1555.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="63.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1539.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="63.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1523.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="63.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1507.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="63.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1491.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="63.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1475.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="63.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1459.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="63.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1443.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="63.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1427.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="63.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1411.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="63.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1395.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="63.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1379.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="63.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1363.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="63.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1347.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="63.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1331.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="63.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1315.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="63.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1299.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="63.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="60.2" y="1283.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="63.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="60.8" y="1267.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="63.8" y="1278.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="61.5" y="2083.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="64.5" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="62.2" y="2115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.2" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="62.2" y="2099.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="62.2" y="2083.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.2" y="2094.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="62.2" y="2067.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="65.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="62.2" y="2051.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="65.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="62.2" y="2035.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="65.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="62.2" y="2019.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="65.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="62.2" y="2003.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="65.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="62.2" y="1987.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="65.2" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.45%)</title><rect x="62.8" y="2131.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.45%)</title><rect x="62.8" y="2115.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.8" y="2126.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.06%)</title><rect x="62.8" y="2099.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.8" y="2110.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="63.5" y="2099.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="66.5" y="2110.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="63.5" y="2083.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="66.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="63.5" y="2067.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="66.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="63.5" y="2051.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="66.5" y="2062.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="64.2" y="2083.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="67.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2099.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="67.9" y="2110.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.28%)</title><rect x="64.9" y="2083.0" width="3.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="67.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2067.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.9" y="2078.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2051.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="67.9" y="2062.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2035.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="67.9" y="2046.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2019.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="67.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="64.9" y="2003.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="67.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="65.5" y="1987.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="68.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="66.2" y="1971.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="69.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="67.5" y="1955.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="70.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="67.5" y="1939.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="70.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (5 samples, 0.28%)</title><rect x="68.2" y="2131.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.2" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.28%)</title><rect x="68.2" y="2115.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.2" y="2126.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="68.2" y="2099.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="71.2" y="2110.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="68.2" y="2083.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="71.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="68.2" y="2067.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="71.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="68.2" y="2051.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="71.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="68.2" y="2035.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="71.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="68.2" y="2019.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="71.2" y="2030.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="68.9" y="2083.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="71.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="69.5" y="2099.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="72.5" y="2110.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="69.5" y="2083.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="72.5" y="2094.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.11%)</title><rect x="70.2" y="2099.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="73.2" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2083.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="73.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2067.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2051.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="73.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2035.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="73.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2019.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="73.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="2003.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="73.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="70.2" y="1987.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="73.2" y="1998.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-7 tid=13379] (42 samples, 2.38%)</title><rect x="71.5" y="2179.0" width="28.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="74.5" y="2190.0">[F..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="71.5" y="2163.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="74.5" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (41 samples, 2.32%)</title><rect x="72.2" y="2163.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.2" y="2174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (41 samples, 2.32%)</title><rect x="72.2" y="2147.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.2" y="2158.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="73.5" y="2131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.5" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (28 samples, 1.59%)</title><rect x="74.2" y="2131.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.2" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (23 samples, 1.30%)</title><rect x="77.6" y="2115.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.6" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (23 samples, 1.30%)</title><rect x="77.6" y="2099.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.6" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (4 samples, 0.23%)</title><rect x="77.6" y="2083.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.6" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.23%)</title><rect x="77.6" y="2067.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.6" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="77.6" y="2051.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="77.6" y="2035.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="77.6" y="2019.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="77.6" y="2003.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="77.6" y="1987.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="77.6" y="1971.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="77.6" y="1955.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="77.6" y="1939.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="77.6" y="1923.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="77.6" y="1907.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="77.6" y="1891.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="77.6" y="1875.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="77.6" y="1859.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.6" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (3 samples, 0.17%)</title><rect x="78.2" y="2051.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (2 samples, 0.11%)</title><rect x="78.9" y="2035.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.9" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (2 samples, 0.11%)</title><rect x="78.9" y="2019.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (2 samples, 0.11%)</title><rect x="78.9" y="2003.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (2 samples, 0.11%)</title><rect x="78.9" y="1987.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.9" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (2 samples, 0.11%)</title><rect x="78.9" y="1971.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.9" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (2 samples, 0.11%)</title><rect x="78.9" y="1955.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.11%)</title><rect x="78.9" y="1939.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.06%)</title><rect x="78.9" y="1923.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="78.9" y="1907.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="78.9" y="1891.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.9" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.06%)</title><rect x="79.6" y="1923.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.6" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.06%)</title><rect x="79.6" y="1907.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.6" y="1918.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.06%)</title><rect x="79.6" y="1891.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="79.6" y="1875.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.6" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.06%)</title><rect x="79.6" y="1859.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19 samples, 1.08%)</title><rect x="80.2" y="2083.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.2" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.45%)</title><rect x="80.2" y="2067.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.2" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="80.2" y="2051.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.2" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="80.2" y="2035.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.2" y="2046.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="80.2" y="2019.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="83.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.23%)</title><rect x="80.9" y="2051.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.9" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="80.9" y="2035.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.9" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.23%)</title><rect x="80.9" y="2019.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.9" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.17%)</title><rect x="81.6" y="2003.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.17%)</title><rect x="81.6" y="1987.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.17%)</title><rect x="81.6" y="1971.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.17%)</title><rect x="81.6" y="1955.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.17%)</title><rect x="81.6" y="1939.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.17%)</title><rect x="81.6" y="1923.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="81.6" y="1907.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="81.6" y="1891.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.6" y="1902.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="81.6" y="1875.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="84.6" y="1886.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="81.6" y="1859.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="84.6" y="1870.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="82.2" y="1875.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="85.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1859.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="85.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1843.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="85.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1827.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="85.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1811.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="85.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1795.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="85.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1779.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="85.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1763.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="85.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.9" y="1747.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="85.9" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (3 samples, 0.17%)</title><rect x="83.6" y="2051.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.6" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (3 samples, 0.17%)</title><rect x="83.6" y="2035.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (1 samples, 0.06%)</title><rect x="83.6" y="2019.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (1 samples, 0.06%)</title><rect x="83.6" y="2003.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="83.6" y="1987.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.11%)</title><rect x="84.3" y="2019.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.3" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.62%)</title><rect x="85.6" y="2067.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.6" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.11%)</title><rect x="85.6" y="2051.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.6" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="85.6" y="2035.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.6" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.11%)</title><rect x="85.6" y="2019.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.6" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="85.6" y="2003.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.11%)</title><rect x="85.6" y="1987.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.11%)</title><rect x="85.6" y="1971.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.11%)</title><rect x="85.6" y="1955.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.11%)</title><rect x="85.6" y="1939.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="85.6" y="1923.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="85.6" y="1907.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.6" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="85.6" y="1891.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="88.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="85.6" y="1875.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="88.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="85.6" y="1859.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="88.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.3" y="1843.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="89.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.3" y="1827.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="89.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.3" y="1811.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="89.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.3" y="1795.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="89.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.3" y="1779.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="89.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.51%)</title><rect x="86.9" y="2051.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.9" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.accept (1 samples, 0.06%)</title><rect x="86.9" y="2035.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.9" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$11 (1 samples, 0.06%)</title><rect x="86.9" y="2019.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.9" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="86.9" y="2003.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.9" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="86.9" y="1987.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.9" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="86.9" y="1971.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="86.9" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="86.9" y="1939.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="86.9" y="1923.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="86.9" y="1907.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="86.9" y="1891.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="86.9" y="1875.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="86.9" y="1859.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="86.9" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.9" y="1854.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="86.9" y="1827.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="89.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1811.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="89.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1795.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="89.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1779.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="89.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1763.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="89.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1747.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="89.9" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1731.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="89.9" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1715.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="89.9" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="86.9" y="1699.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="89.9" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (8 samples, 0.45%)</title><rect x="87.6" y="2035.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.6" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (7 samples, 0.40%)</title><rect x="88.3" y="2019.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.3" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.getKey (1 samples, 0.06%)</title><rect x="88.3" y="2003.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.3" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.06%)</title><rect x="88.9" y="2003.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.9" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="88.9" y="1987.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.9" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.06%)</title><rect x="88.9" y="1971.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.9" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="88.9" y="1955.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.9" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="88.9" y="1939.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.9" y="1950.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="88.9" y="1923.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.9" y="1934.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.06%)</title><rect x="88.9" y="1907.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.9" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (1 samples, 0.06%)</title><rect x="88.9" y="1891.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (1 samples, 0.06%)</title><rect x="88.9" y="1875.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (1 samples, 0.06%)</title><rect x="88.9" y="1859.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.9" y="1870.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="88.9" y="1843.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.9" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.06%)</title><rect x="89.6" y="2003.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.6" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.06%)</title><rect x="89.6" y="1987.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.6" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="89.6" y="1971.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.6" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.06%)</title><rect x="89.6" y="1955.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="1966.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="89.6" y="1939.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="92.6" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (4 samples, 0.23%)</title><rect x="90.3" y="2003.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.3" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.23%)</title><rect x="90.3" y="1987.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.3" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.23%)</title><rect x="90.3" y="1971.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.3" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="90.3" y="1955.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.3" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="90.3" y="1939.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.3" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.23%)</title><rect x="90.3" y="1923.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.3" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.23%)</title><rect x="90.3" y="1907.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.3" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="90.3" y="1891.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="93.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="90.3" y="1875.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="93.3" y="1886.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.06%)</title><rect x="90.3" y="1859.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="93.3" y="1870.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="90.3" y="1843.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="93.3" y="1854.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="90.3" y="1827.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="93.3" y="1838.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="90.3" y="1811.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="93.3" y="1822.0"></text>
</g>
<g>
<title>__send (3 samples, 0.17%)</title><rect x="90.9" y="1891.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="93.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1875.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="93.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1859.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="93.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1843.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="93.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1827.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="93.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1811.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="93.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1795.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="93.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1779.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="90.9" y="1763.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="93.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="91.6" y="1747.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="94.6" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="91.6" y="1731.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="94.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="91.6" y="1715.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="94.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="91.6" y="1699.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="94.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1683.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="95.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1667.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="95.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1651.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="95.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1635.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="95.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1619.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="95.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1603.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="95.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1587.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="95.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1571.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="95.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1555.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="95.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1539.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="95.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1523.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="95.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1507.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="95.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1491.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="95.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1475.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="95.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1459.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="95.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1443.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="95.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1427.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="95.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1411.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="95.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1395.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="95.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1379.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="95.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1363.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="95.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1347.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="95.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1331.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="95.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1315.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="95.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1299.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="95.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1283.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="95.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="92.3" y="1267.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="95.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.17%)</title><rect x="92.9" y="2131.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.9" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.17%)</title><rect x="92.9" y="2115.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.9" y="2126.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="92.9" y="2099.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="95.9" y="2110.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="92.9" y="2083.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="95.9" y="2094.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="93.6" y="2083.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="96.6" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="94.3" y="2099.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="97.3" y="2110.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="94.3" y="2083.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="97.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="94.3" y="2067.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="97.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="94.3" y="2051.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="97.3" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (7 samples, 0.40%)</title><rect x="95.0" y="2131.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.0" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.40%)</title><rect x="95.0" y="2115.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.0" y="2126.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="95.0" y="2099.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="98.0" y="2110.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="95.0" y="2083.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.0" y="2094.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.28%)</title><rect x="95.6" y="2099.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="98.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="97.0" y="2083.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="100.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="97.0" y="2067.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="100.0" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="97.6" y="2051.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="100.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="97.6" y="2035.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="100.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="97.6" y="2019.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="100.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="98.3" y="2003.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="101.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="98.3" y="1987.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="101.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="98.3" y="1971.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="101.3" y="1982.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="99.0" y="2099.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="102.0" y="2110.0"></text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=13313] (128 samples, 7.26%)</title><rect x="99.6" y="2179.0" width="85.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="102.6" y="2190.0">[HttpClien..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.06%)</title><rect x="99.6" y="2163.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="102.6" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="99.6" y="2147.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.6" y="2158.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.06%)</title><rect x="100.3" y="2163.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="103.3" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="100.3" y="2147.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="103.3" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.06%)</title><rect x="100.3" y="2131.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="103.3" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.06%)</title><rect x="100.3" y="2115.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="103.3" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.06%)</title><rect x="100.3" y="2099.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="103.3" y="2110.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.17%)</title><rect x="101.0" y="2163.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="104.0" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2163.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="106.0" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="103.0" y="2147.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="106.0" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2131.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="106.0" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2115.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="106.0" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2099.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="106.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2083.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="106.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2067.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="106.0" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="103.0" y="2051.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="106.0" y="2062.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="103.7" y="2163.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="106.7" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="104.3" y="2163.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="107.3" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="104.3" y="2147.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="107.3" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="104.3" y="2131.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="107.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="104.3" y="2115.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="107.3" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="104.3" y="2099.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="107.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (120 samples, 6.80%)</title><rect x="105.0" y="2163.0" width="80.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.0" y="2174.0">jdk/inter..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="110.3" y="2147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.3" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2147.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="114.0" y="2158.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="111.0" y="2131.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="114.0" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2115.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="114.0" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2099.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="114.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2083.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="114.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2067.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="114.0" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2051.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="114.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2035.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="114.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.0" y="2019.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="114.0" y="2030.0"></text>
</g>
<g>
<title>java/lang/Thread.currentThread (2 samples, 0.11%)</title><rect x="111.7" y="2147.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.7" y="2158.0"></text>
</g>
<g>
<title>JVM_CurrentThread (2 samples, 0.11%)</title><rect x="111.7" y="2131.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="114.7" y="2142.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.11%)</title><rect x="113.0" y="2147.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.0" y="2158.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.11%)</title><rect x="113.0" y="2131.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.0" y="2142.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="113.0" y="2115.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="116.0" y="2126.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="113.0" y="2099.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="116.0" y="2110.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="113.7" y="2115.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="116.7" y="2126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.06%)</title><rect x="114.4" y="2147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.4" y="2158.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.06%)</title><rect x="115.0" y="2147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.0" y="2158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29 samples, 1.64%)</title><rect x="115.7" y="2147.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.7" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/778276218.accept (27 samples, 1.53%)</title><rect x="115.7" y="2131.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.7" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (27 samples, 1.53%)</title><rect x="115.7" y="2115.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (27 samples, 1.53%)</title><rect x="115.7" y="2099.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.7" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (27 samples, 1.53%)</title><rect x="115.7" y="2083.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.7" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (27 samples, 1.53%)</title><rect x="115.7" y="2067.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.7" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="115.7" y="2051.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.7" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="115.7" y="2035.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.7" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.06%)</title><rect x="115.7" y="2019.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (26 samples, 1.47%)</title><rect x="116.4" y="2051.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.4" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 1.47%)</title><rect x="116.4" y="2035.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.4" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 1.47%)</title><rect x="116.4" y="2019.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.4" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (26 samples, 1.47%)</title><rect x="116.4" y="2003.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (26 samples, 1.47%)</title><rect x="116.4" y="1987.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (25 samples, 1.42%)</title><rect x="117.0" y="1971.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (25 samples, 1.42%)</title><rect x="117.0" y="1955.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (5 samples, 0.28%)</title><rect x="117.0" y="1939.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (5 samples, 0.28%)</title><rect x="117.0" y="1923.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (5 samples, 0.28%)</title><rect x="117.0" y="1907.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.28%)</title><rect x="117.0" y="1891.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.28%)</title><rect x="117.0" y="1875.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.28%)</title><rect x="117.0" y="1859.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.28%)</title><rect x="117.0" y="1843.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.28%)</title><rect x="117.0" y="1827.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.28%)</title><rect x="117.0" y="1811.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.28%)</title><rect x="117.0" y="1795.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.28%)</title><rect x="117.0" y="1779.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.28%)</title><rect x="117.0" y="1763.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.28%)</title><rect x="117.0" y="1747.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.28%)</title><rect x="117.0" y="1731.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.0" y="1742.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.17%)</title><rect x="117.0" y="1715.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="120.0" y="1726.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.06%)</title><rect x="117.0" y="1699.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="120.0" y="1710.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="117.7" y="1699.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.7" y="1710.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="118.4" y="1699.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="121.4" y="1710.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="119.0" y="1715.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="122.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="119.0" y="1699.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="122.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="119.0" y="1683.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="122.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="119.0" y="1667.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="122.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="119.0" y="1651.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="122.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="119.0" y="1635.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="122.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="119.7" y="1619.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="122.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="119.7" y="1603.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="122.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="119.7" y="1587.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="122.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (20 samples, 1.13%)</title><rect x="120.4" y="1939.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.06%)</title><rect x="120.4" y="1923.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.06%)</title><rect x="120.4" y="1907.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.06%)</title><rect x="120.4" y="1891.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.4" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 1.08%)</title><rect x="121.0" y="1923.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.17%)</title><rect x="121.0" y="1907.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.17%)</title><rect x="121.0" y="1891.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.11%)</title><rect x="121.7" y="1875.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.7" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.06%)</title><rect x="122.4" y="1859.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="122.4" y="1843.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.06%)</title><rect x="122.4" y="1827.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.4" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.91%)</title><rect x="123.0" y="1907.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.0" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.91%)</title><rect x="123.0" y="1891.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.0" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.91%)</title><rect x="123.0" y="1875.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.0" y="1886.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (16 samples, 0.91%)</title><rect x="123.0" y="1859.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.0" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (16 samples, 0.91%)</title><rect x="123.0" y="1843.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.0" y="1854.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.06%)</title><rect x="123.0" y="1827.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="126.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.74%)</title><rect x="123.7" y="1827.0" width="8.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="126.7" y="1838.0"></text>
</g>
<g>
<title>read (13 samples, 0.74%)</title><rect x="123.7" y="1811.0" width="8.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="126.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="124.4" y="1795.0" width="8.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="127.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="124.4" y="1779.0" width="8.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="127.4" y="1790.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="125.1" y="1763.0" width="7.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="128.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="125.1" y="1747.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="128.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="125.1" y="1731.0" width="7.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="128.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="125.7" y="1715.0" width="6.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="128.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="125.7" y="1699.0" width="6.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="128.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.51%)</title><rect x="126.4" y="1683.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="129.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.51%)</title><rect x="126.4" y="1667.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="129.4" y="1678.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="127.1" y="1651.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="130.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="127.1" y="1635.0" width="5.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="130.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="127.1" y="1619.0" width="5.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="130.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1603.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="131.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1587.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="131.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1571.0" width="4.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="131.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1555.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="131.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1539.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="131.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1523.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="131.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1507.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="131.4" y="1518.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="128.4" y="1491.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="131.4" y="1502.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="129.1" y="1475.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="132.1" y="1486.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="129.1" y="1459.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="132.1" y="1470.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="129.7" y="1443.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="132.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="129.7" y="1427.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="132.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="129.7" y="1411.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="132.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="129.7" y="1395.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="132.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1379.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="133.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1363.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="133.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1347.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="133.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1331.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="133.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1315.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="133.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1299.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="133.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1283.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="133.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1267.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="133.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1251.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="133.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="130.4" y="1235.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="133.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="131.1" y="1219.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="134.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="131.1" y="1203.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="134.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="131.1" y="1187.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="134.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="131.7" y="1171.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="134.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="131.7" y="1155.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="134.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="131.7" y="1139.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="134.7" y="1150.0"></text>
</g>
<g>
<title>__GI___errno_location (2 samples, 0.11%)</title><rect x="132.4" y="1827.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="135.4" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1608485788.accept (1 samples, 0.06%)</title><rect x="133.8" y="2131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.06%)</title><rect x="133.8" y="2115.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.run (1 samples, 0.06%)</title><rect x="133.8" y="2099.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.06%)</title><rect x="133.8" y="2083.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.06%)</title><rect x="133.8" y="2067.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.8" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.06%)</title><rect x="133.8" y="2051.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.8" y="2062.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (1 samples, 0.06%)</title><rect x="133.8" y="2035.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.getAndSet (1 samples, 0.06%)</title><rect x="133.8" y="2019.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.8" y="2030.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="133.8" y="2003.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.06%)</title><rect x="134.4" y="2131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.4" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (2 samples, 0.11%)</title><rect x="135.1" y="2147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.1" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.11%)</title><rect x="135.1" y="2131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.11%)</title><rect x="135.1" y="2115.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.11%)</title><rect x="135.1" y="2099.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.1" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.11%)</title><rect x="135.1" y="2083.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.1" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.11%)</title><rect x="135.1" y="2067.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.1" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="135.1" y="2051.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.06%)</title><rect x="135.8" y="2051.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="2062.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="135.8" y="2035.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="138.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (17 samples, 0.96%)</title><rect x="136.4" y="2147.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.4" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/651216306.run (10 samples, 0.57%)</title><rect x="137.1" y="2131.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (10 samples, 0.57%)</title><rect x="137.1" y="2115.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.1" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.channel (1 samples, 0.06%)</title><rect x="137.1" y="2099.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.1" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.51%)</title><rect x="137.8" y="2099.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.51%)</title><rect x="137.8" y="2083.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.51%)</title><rect x="137.8" y="2067.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (9 samples, 0.51%)</title><rect x="137.8" y="2051.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (9 samples, 0.51%)</title><rect x="137.8" y="2035.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9 samples, 0.51%)</title><rect x="137.8" y="2019.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 0.51%)</title><rect x="137.8" y="2003.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.06%)</title><rect x="138.4" y="1987.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.06%)</title><rect x="138.4" y="1971.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.06%)</title><rect x="138.4" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 0.40%)</title><rect x="139.1" y="1987.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.06%)</title><rect x="139.1" y="1971.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.06%)</title><rect x="139.1" y="1955.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.06%)</title><rect x="139.1" y="1939.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (6 samples, 0.34%)</title><rect x="139.8" y="1971.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.34%)</title><rect x="139.8" y="1955.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.34%)</title><rect x="139.8" y="1939.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.8" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.34%)</title><rect x="139.8" y="1923.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.34%)</title><rect x="139.8" y="1907.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.34%)</title><rect x="139.8" y="1891.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.34%)</title><rect x="139.8" y="1875.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.34%)</title><rect x="139.8" y="1859.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.34%)</title><rect x="139.8" y="1843.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.34%)</title><rect x="139.8" y="1827.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.34%)</title><rect x="139.8" y="1811.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.34%)</title><rect x="139.8" y="1795.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.8" y="1806.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.34%)</title><rect x="139.8" y="1779.0" width="4.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="142.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="139.8" y="1763.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="142.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="139.8" y="1747.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="142.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="141.1" y="1731.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="144.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="141.1" y="1715.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="144.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="141.1" y="1699.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="144.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="141.1" y="1683.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="144.1" y="1694.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="141.1" y="1667.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="144.1" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="141.8" y="1651.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="144.8" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$178/1436643968.run (6 samples, 0.34%)</title><rect x="143.8" y="2131.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (6 samples, 0.34%)</title><rect x="143.8" y="2115.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.34%)</title><rect x="143.8" y="2099.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.8" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.34%)</title><rect x="143.8" y="2083.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.34%)</title><rect x="143.8" y="2067.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.8" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.17%)</title><rect x="144.5" y="2051.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.17%)</title><rect x="144.5" y="2035.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.17%)</title><rect x="144.5" y="2019.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.5" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.17%)</title><rect x="144.5" y="2003.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="144.5" y="1987.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="144.5" y="1971.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.5" y="1982.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="144.5" y="1955.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="147.5" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="144.5" y="1939.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="147.5" y="1950.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="145.1" y="1955.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="148.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1939.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="148.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1923.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="148.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1907.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="148.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1891.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="148.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1875.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="148.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1859.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="148.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1843.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="148.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="145.1" y="1827.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="148.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.11%)</title><rect x="146.5" y="2051.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.11%)</title><rect x="146.5" y="2035.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="146.5" y="2019.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.5" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.06%)</title><rect x="146.5" y="2003.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.5" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="146.5" y="1987.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="146.5" y="1971.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.5" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="147.1" y="2019.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="147.1" y="2003.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.1" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.17%)</title><rect x="147.8" y="2147.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.8" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeMaybeRequired (1 samples, 0.06%)</title><rect x="147.8" y="2131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.11%)</title><rect x="148.5" y="2131.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.5" y="2142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="148.5" y="2115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.5" y="2126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="148.5" y="2099.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.5" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$298/2007698387.get$Lambda (1 samples, 0.06%)</title><rect x="148.5" y="2083.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1 samples, 0.06%)</title><rect x="149.1" y="2115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.1" y="2126.0"></text>
</g>
<g>
<title>java/util/LinkedList.getLast (1 samples, 0.06%)</title><rect x="149.1" y="2099.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.1" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3 samples, 0.17%)</title><rect x="149.8" y="2147.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.8" y="2158.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.11%)</title><rect x="149.8" y="2131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.8" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.11%)</title><rect x="149.8" y="2115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.8" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.06%)</title><rect x="149.8" y="2099.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.8" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (1 samples, 0.06%)</title><rect x="149.8" y="2083.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1608485788.accept (1 samples, 0.06%)</title><rect x="150.5" y="2099.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.5" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.06%)</title><rect x="151.1" y="2131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.1" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="151.1" y="2115.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="154.1" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="151.1" y="2099.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="154.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="151.1" y="2083.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="154.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="151.1" y="2067.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="154.1" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (2 samples, 0.11%)</title><rect x="151.8" y="2147.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.8" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.11%)</title><rect x="151.8" y="2131.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4 samples, 0.23%)</title><rect x="153.2" y="2147.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.2" y="2158.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.11%)</title><rect x="154.5" y="2131.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.5" y="2142.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.11%)</title><rect x="154.5" y="2115.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.11%)</title><rect x="154.5" y="2099.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.5" y="2110.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="154.5" y="2083.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="157.5" y="2094.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="154.5" y="2067.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="157.5" y="2078.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="155.2" y="2083.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="158.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (39 samples, 2.21%)</title><rect x="155.8" y="2147.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.8" y="2158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (39 samples, 2.21%)</title><rect x="155.8" y="2131.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.8" y="2142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (39 samples, 2.21%)</title><rect x="155.8" y="2115.0" width="26.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.8" y="2126.0">s..</text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="155.8" y="2099.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="158.8" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (23 samples, 1.30%)</title><rect x="156.5" y="2099.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.5" y="2110.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.08%)</title><rect x="158.5" y="2083.0" width="12.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="161.5" y="2094.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 1.08%)</title><rect x="158.5" y="2067.0" width="12.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="161.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.96%)</title><rect x="159.8" y="2051.0" width="11.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="162.8" y="2062.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.96%)</title><rect x="159.8" y="2035.0" width="11.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="162.8" y="2046.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.91%)</title><rect x="160.5" y="2019.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="163.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.91%)</title><rect x="160.5" y="2003.0" width="10.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="163.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.85%)</title><rect x="161.2" y="1987.0" width="10.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="164.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.74%)</title><rect x="162.5" y="1971.0" width="8.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="165.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="165.9" y="1955.0" width="5.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="168.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="167.9" y="1939.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="170.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="168.5" y="1923.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="171.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="169.2" y="1907.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="172.2" y="1918.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="171.2" y="2083.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="174.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (12 samples, 0.68%)</title><rect x="171.9" y="2099.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.9" y="2110.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.06%)</title><rect x="171.9" y="2083.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.9" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.62%)</title><rect x="172.6" y="2083.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.6" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (10 samples, 0.57%)</title><rect x="173.2" y="2067.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="173.2" y="2051.0" width="6.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="176.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="173.2" y="2035.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="2019.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="176.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="2003.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1987.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="176.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1971.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="176.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1955.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="176.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1939.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="176.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1923.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="176.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1907.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1891.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="176.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1875.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1859.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="176.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1843.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1827.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1811.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="176.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1795.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="176.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1779.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="176.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1763.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="176.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1747.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="176.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1731.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="176.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1715.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="176.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1699.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1683.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="176.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1667.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="176.2" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1651.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1635.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1619.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1603.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="176.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1587.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1571.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1555.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="176.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1539.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="176.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1523.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1507.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="176.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1491.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="176.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1475.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="176.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1459.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="176.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1443.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="176.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1427.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1411.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="176.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1395.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="176.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1379.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="176.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1363.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1347.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="176.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1331.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1315.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="176.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1299.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="176.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1283.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1267.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="176.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1251.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="176.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1235.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="176.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1219.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="176.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1203.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="176.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1187.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="176.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1171.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1155.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="176.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1139.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="176.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1123.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1107.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="176.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1091.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1075.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="176.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1059.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1043.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="176.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1027.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="176.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="1011.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="176.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="995.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="176.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="979.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="963.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="176.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="947.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="176.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="931.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="176.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="915.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="176.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="899.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="176.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="883.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="176.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="867.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="851.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="835.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="176.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="819.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="176.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="803.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="787.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="771.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="176.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="755.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="176.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="739.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="176.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="723.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="176.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="707.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="176.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="691.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="675.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="176.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="659.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="176.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="643.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="176.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="627.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="611.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="176.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="595.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="176.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="579.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="176.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="563.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="176.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="547.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="531.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="176.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="515.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="499.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="483.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="176.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="467.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="176.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="451.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="176.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="435.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="176.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="419.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="176.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="403.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="387.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="176.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="371.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="355.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="339.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="176.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="323.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="176.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="307.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="291.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="275.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="176.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="259.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="243.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="176.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="227.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="238.0"></text>
</g>
<g>
<title>read (1 samples, 0.06%)</title><rect x="173.2" y="211.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="176.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="195.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="179.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="163.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="176.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="147.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="176.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="131.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="115.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="99.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="176.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="83.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="176.2" y="94.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="67.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="176.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="51.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="176.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="173.2" y="35.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.2" y="46.0"></text>
</g>
<g>
<title>read (7 samples, 0.40%)</title><rect x="173.9" y="2019.0" width="4.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="176.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="173.9" y="2003.0" width="4.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="176.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="173.9" y="1987.0" width="4.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="176.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="175.2" y="1971.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="178.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="175.2" y="1955.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="178.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="175.2" y="1939.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="178.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="175.2" y="1923.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="178.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="175.2" y="1907.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="178.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="175.9" y="1891.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="178.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="177.9" y="1875.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="180.9" y="1886.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.06%)</title><rect x="178.6" y="2035.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="181.6" y="2046.0"></text>
</g>
<g>
<title>read (1 samples, 0.06%)</title><rect x="179.2" y="2035.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="182.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="2019.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="182.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="2003.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="182.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1987.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="182.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1971.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="182.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1955.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="182.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1939.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="182.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1923.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="182.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1907.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="182.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1891.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="182.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1875.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="182.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="179.2" y="1859.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="182.2" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="179.9" y="2099.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.9" y="2110.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.06%)</title><rect x="179.9" y="2083.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.9" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.06%)</title><rect x="180.6" y="2099.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.06%)</title><rect x="180.6" y="2083.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.6" y="2094.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="180.6" y="2067.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.6" y="2078.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="180.6" y="2051.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.6" y="2062.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="180.6" y="2035.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="183.6" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="181.2" y="2099.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.2" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.28%)</title><rect x="181.9" y="2147.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.9" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.28%)</title><rect x="181.9" y="2131.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.9" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.28%)</title><rect x="181.9" y="2115.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.9" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.17%)</title><rect x="181.9" y="2099.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.9" y="2110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="181.9" y="2083.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="184.9" y="2094.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.17%)</title><rect x="181.9" y="2067.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="184.9" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="182.6" y="2051.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="185.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="182.6" y="2035.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="185.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="2019.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="186.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="2003.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="186.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="1987.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="186.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="1971.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="186.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="1955.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="186.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="183.3" y="1939.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="186.3" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.06%)</title><rect x="183.9" y="2099.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.9" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="183.9" y="2083.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.9" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="183.9" y="2067.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.9" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="184.6" y="2099.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.6" y="2110.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13314] (30 samples, 1.70%)</title><rect x="185.3" y="2179.0" width="20.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="188.3" y="2190.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="185.3" y="2163.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="188.3" y="2174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29 samples, 1.64%)</title><rect x="185.9" y="2163.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.9" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.11%)</title><rect x="186.6" y="2147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.6" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.11%)</title><rect x="186.6" y="2131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.6" y="2142.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2115.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="189.6" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.11%)</title><rect x="186.6" y="2099.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="189.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2083.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="189.6" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2067.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="189.6" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2051.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="189.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2035.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="189.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="186.6" y="2019.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="189.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="187.3" y="2003.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="190.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="187.3" y="1987.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="190.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="187.3" y="1971.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="190.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="187.3" y="1955.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="190.3" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 1.47%)</title><rect x="187.9" y="2147.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.9" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (26 samples, 1.47%)</title><rect x="187.9" y="2131.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.9" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 1.36%)</title><rect x="187.9" y="2115.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.9" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 1.36%)</title><rect x="187.9" y="2099.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.9" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 1.36%)</title><rect x="187.9" y="2083.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.9" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (23 samples, 1.30%)</title><rect x="187.9" y="2067.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.9" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="187.9" y="2051.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.9" y="2062.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="187.9" y="2035.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.9" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="187.9" y="2019.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.9" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (22 samples, 1.25%)</title><rect x="188.6" y="2051.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.6" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (22 samples, 1.25%)</title><rect x="188.6" y="2035.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="188.6" y="2019.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="188.6" y="2003.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.6" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.get$Lambda (1 samples, 0.06%)</title><rect x="188.6" y="1987.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.&lt;init&gt; (1 samples, 0.06%)</title><rect x="188.6" y="1971.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.6" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (1 samples, 0.06%)</title><rect x="189.3" y="2019.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/402619484.linkToTargetMethod (1 samples, 0.06%)</title><rect x="189.3" y="2003.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.3" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1576183964.invokeStatic (1 samples, 0.06%)</title><rect x="189.3" y="1987.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.3" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.get$Lambda (1 samples, 0.06%)</title><rect x="189.3" y="1971.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.3" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (18 samples, 1.02%)</title><rect x="189.9" y="2019.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.9" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.06%)</title><rect x="190.6" y="2003.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.06%)</title><rect x="190.6" y="1987.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="190.6" y="1971.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="190.6" y="1955.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="190.6" y="1939.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="190.6" y="1923.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="190.6" y="1907.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="190.6" y="1891.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="190.6" y="1875.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="193.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1859.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="193.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1843.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="193.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1827.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="193.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1811.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="193.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1795.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="193.6" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="190.6" y="1779.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="193.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (11 samples, 0.62%)</title><rect x="191.3" y="2003.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11 samples, 0.62%)</title><rect x="191.3" y="1987.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.3" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11 samples, 0.62%)</title><rect x="191.3" y="1971.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11 samples, 0.62%)</title><rect x="191.3" y="1955.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (6 samples, 0.34%)</title><rect x="191.3" y="1939.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.3" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="191.3" y="1923.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="191.3" y="1907.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.checkTimeout (1 samples, 0.06%)</title><rect x="192.0" y="1923.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3 samples, 0.17%)</title><rect x="192.6" y="1923.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.6" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3 samples, 0.17%)</title><rect x="192.6" y="1907.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.6" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.17%)</title><rect x="192.6" y="1891.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.6" y="1902.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.17%)</title><rect x="192.6" y="1875.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="195.6" y="1886.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="192.6" y="1859.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="195.6" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.11%)</title><rect x="193.3" y="1859.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="196.3" y="1870.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.11%)</title><rect x="193.3" y="1843.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="196.3" y="1854.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="193.3" y="1827.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="196.3" y="1838.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.06%)</title><rect x="194.0" y="1827.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="197.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.06%)</title><rect x="194.6" y="1923.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (4 samples, 0.23%)</title><rect x="195.3" y="1939.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3 samples, 0.17%)</title><rect x="196.0" y="1923.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3 samples, 0.17%)</title><rect x="196.0" y="1907.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.06%)</title><rect x="196.0" y="1891.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.06%)</title><rect x="196.0" y="1875.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.langReflectAccess (1 samples, 0.06%)</title><rect x="196.0" y="1859.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.0" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.11%)</title><rect x="196.6" y="1891.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="196.6" y="1875.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.06%)</title><rect x="196.6" y="1859.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.6" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.06%)</title><rect x="196.6" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.06%)</title><rect x="196.6" y="1827.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.06%)</title><rect x="196.6" y="1811.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.6" y="1822.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="196.6" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="196.6" y="1779.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.6" y="1790.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="196.6" y="1763.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.6" y="1774.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="196.6" y="1747.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.6" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.06%)</title><rect x="197.3" y="1875.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.3" y="1886.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.06%)</title><rect x="197.3" y="1859.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="200.3" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1 samples, 0.06%)</title><rect x="198.0" y="1939.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.06%)</title><rect x="198.0" y="1923.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="198.0" y="1907.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="198.0" y="1891.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="198.0" y="1875.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="198.0" y="1859.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="198.0" y="1843.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="198.0" y="1827.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="198.0" y="1811.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="198.0" y="1795.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.0" y="1806.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="198.0" y="1779.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="201.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1763.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="201.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1747.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="201.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1731.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="201.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1715.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="201.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1699.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="201.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1683.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="201.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1667.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="201.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="198.0" y="1651.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="201.0" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (1 samples, 0.06%)</title><rect x="198.6" y="2003.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.6" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (4 samples, 0.23%)</title><rect x="199.3" y="2003.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.3" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (4 samples, 0.23%)</title><rect x="199.3" y="1987.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.3" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (4 samples, 0.23%)</title><rect x="199.3" y="1971.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.3" y="1982.0"></text>
</g>
<g>
<title>java/net/URI.create (2 samples, 0.11%)</title><rect x="199.3" y="1955.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.3" y="1966.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2 samples, 0.11%)</title><rect x="199.3" y="1939.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.3" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.11%)</title><rect x="199.3" y="1923.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.3" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.11%)</title><rect x="199.3" y="1907.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.3" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (2 samples, 0.11%)</title><rect x="199.3" y="1891.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.3" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.06%)</title><rect x="200.0" y="1875.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.0" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1 samples, 0.06%)</title><rect x="200.6" y="1955.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.6" y="1939.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="203.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.6" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (1 samples, 0.06%)</title><rect x="201.3" y="1955.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (1 samples, 0.06%)</title><rect x="201.3" y="1939.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1 samples, 0.06%)</title><rect x="201.3" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.06%)</title><rect x="201.3" y="1907.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.3" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (1 samples, 0.06%)</title><rect x="202.0" y="2019.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.0" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="202.0" y="2003.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="202.0" y="1987.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.get$Lambda (1 samples, 0.06%)</title><rect x="202.0" y="1971.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.0" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.0" y="1955.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.0" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.7" y="2019.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.7" y="2030.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.06%)</title><rect x="202.7" y="2003.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.7" y="2014.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.06%)</title><rect x="202.7" y="1987.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.7" y="1998.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.flip (1 samples, 0.06%)</title><rect x="202.7" y="1971.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.7" y="1982.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.06%)</title><rect x="202.7" y="1955.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.7" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="203.3" y="2067.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.3" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="203.3" y="2051.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.3" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="203.3" y="2035.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.3" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="204.0" y="2115.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="204.0" y="2099.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.0" y="2083.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="207.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.0" y="2067.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="207.0" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="204.0" y="2051.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="207.0" y="2062.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="204.0" y="2035.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="207.0" y="2046.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="204.7" y="2083.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="207.7" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="2067.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="207.7" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="2051.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="207.7" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="2035.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="207.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="2019.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="207.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="2003.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="207.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1987.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="207.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1971.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="207.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1955.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="207.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1939.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="207.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1923.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="207.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="204.7" y="1907.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="207.7" y="1918.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13322] (7 samples, 0.40%)</title><rect x="205.3" y="2179.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="208.3" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.40%)</title><rect x="205.3" y="2163.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.3" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.06%)</title><rect x="205.3" y="2147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.3" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.06%)</title><rect x="205.3" y="2131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2115.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="208.3" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="205.3" y="2099.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="208.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2083.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="208.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2067.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="208.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2051.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="208.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2035.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="208.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="205.3" y="2019.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="208.3" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 0.34%)</title><rect x="206.0" y="2147.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 0.34%)</title><rect x="206.0" y="2131.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.0" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.23%)</title><rect x="206.0" y="2115.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.17%)</title><rect x="206.0" y="2099.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.17%)</title><rect x="206.0" y="2083.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.0" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.11%)</title><rect x="206.0" y="2067.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.0" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2 samples, 0.11%)</title><rect x="206.0" y="2051.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.0" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (2 samples, 0.11%)</title><rect x="206.0" y="2035.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.0" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (1 samples, 0.06%)</title><rect x="206.0" y="2019.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.0" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (1 samples, 0.06%)</title><rect x="206.0" y="2003.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="206.0" y="1987.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="206.0" y="1971.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="206.0" y="1955.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="206.0" y="1939.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="206.0" y="1923.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="206.0" y="1907.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="206.0" y="1891.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="206.0" y="1875.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.0" y="1886.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="206.0" y="1859.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="209.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1843.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="209.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1827.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="209.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1811.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="209.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1795.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="209.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1779.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="209.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1763.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="209.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1747.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="209.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="206.0" y="1731.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="209.0" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="206.7" y="2019.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.7" y="2030.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.06%)</title><rect x="206.7" y="2003.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.7" y="2014.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (1 samples, 0.06%)</title><rect x="206.7" y="1987.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.7" y="1998.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.06%)</title><rect x="206.7" y="1971.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.7" y="1982.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="207.3" y="2067.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.3" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="207.3" y="2051.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="208.0" y="2099.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="208.0" y="2083.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.0" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="208.7" y="2115.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="208.7" y="2099.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.7" y="2110.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="208.7" y="2083.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="211.7" y="2094.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="209.3" y="2083.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="212.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="2067.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="212.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="2051.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="212.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="2035.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="212.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="2019.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="212.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="2003.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="212.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="1987.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="212.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="1971.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="212.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="209.3" y="1955.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="212.3" y="1966.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13330] (8 samples, 0.45%)</title><rect x="210.0" y="2179.0" width="5.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="213.0" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8 samples, 0.45%)</title><rect x="210.0" y="2163.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.0" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.17%)</title><rect x="211.3" y="2147.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.3" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.17%)</title><rect x="211.3" y="2131.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="211.3" y="2115.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="214.3" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.17%)</title><rect x="211.3" y="2099.0" width="2.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="214.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="211.3" y="2083.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="214.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="211.3" y="2067.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="214.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="212.0" y="2051.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="215.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="212.0" y="2035.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="215.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="212.0" y="2019.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="215.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="212.7" y="2003.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="215.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="212.7" y="1987.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="215.7" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.17%)</title><rect x="213.4" y="2147.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.4" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.17%)</title><rect x="213.4" y="2131.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.4" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.06%)</title><rect x="213.4" y="2115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.4" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.06%)</title><rect x="213.4" y="2099.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.4" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.06%)</title><rect x="213.4" y="2083.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.4" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.06%)</title><rect x="213.4" y="2067.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.4" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (1 samples, 0.06%)</title><rect x="213.4" y="2051.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.4" y="2062.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="213.4" y="2035.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.4" y="2046.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="213.4" y="2019.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.4" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.06%)</title><rect x="213.4" y="2003.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.4" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="214.0" y="2115.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="214.0" y="2099.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.0" y="2083.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="217.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.0" y="2067.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="217.0" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="214.0" y="2051.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="217.0" y="2062.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="214.0" y="2035.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="217.0" y="2046.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="214.0" y="2019.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="217.0" y="2030.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="214.7" y="2083.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="217.7" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="2067.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="217.7" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="2051.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="217.7" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="2035.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="217.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="2019.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="217.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="2003.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="217.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="1987.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="217.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="1971.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="217.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="1955.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="217.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="1939.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="217.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="214.7" y="1923.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="217.7" y="1934.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13315] (50 samples, 2.83%)</title><rect x="215.4" y="2179.0" width="33.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="218.4" y="2190.0">[N..</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.06%)</title><rect x="215.4" y="2163.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="218.4" y="2174.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="215.4" y="2147.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="218.4" y="2158.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="215.4" y="2131.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="218.4" y="2142.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="215.4" y="2115.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="218.4" y="2126.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="215.4" y="2099.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="218.4" y="2110.0"></text>
</g>
<g>
<title>Method::load_signature_classes(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="215.4" y="2083.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="218.4" y="2094.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="215.4" y="2067.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="218.4" y="2078.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="215.4" y="2051.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.4" y="2062.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48 samples, 2.72%)</title><rect x="216.0" y="2163.0" width="32.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.0" y="2174.0">on..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.11%)</title><rect x="220.0" y="2147.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.28%)</title><rect x="221.4" y="2147.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.4" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.23%)</title><rect x="222.1" y="2131.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.1" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="222.1" y="2115.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="225.1" y="2126.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="222.1" y="2099.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="225.1" y="2110.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.11%)</title><rect x="222.7" y="2099.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="225.7" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="223.4" y="2083.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="226.4" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="223.4" y="2067.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="226.4" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="223.4" y="2051.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="226.4" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="223.4" y="2035.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="226.4" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="223.4" y="2019.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="226.4" y="2030.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="224.1" y="2115.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="227.1" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 1.98%)</title><rect x="224.7" y="2147.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.7" y="2158.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 1.98%)</title><rect x="224.7" y="2131.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.7" y="2142.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 1.76%)</title><rect x="224.7" y="2115.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 1.70%)</title><rect x="224.7" y="2099.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.7" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 1.70%)</title><rect x="224.7" y="2083.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.7" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (29 samples, 1.64%)</title><rect x="224.7" y="2067.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.7" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (29 samples, 1.64%)</title><rect x="224.7" y="2051.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.7" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (29 samples, 1.64%)</title><rect x="224.7" y="2035.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.7" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (4 samples, 0.23%)</title><rect x="224.7" y="2019.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.7" y="2030.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.23%)</title><rect x="224.7" y="2003.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.7" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (4 samples, 0.23%)</title><rect x="224.7" y="1987.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.7" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (4 samples, 0.23%)</title><rect x="224.7" y="1971.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.23%)</title><rect x="224.7" y="1955.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.7" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.23%)</title><rect x="224.7" y="1939.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.7" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.7" y="1923.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.7" y="1907.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.17%)</title><rect x="225.4" y="1923.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.17%)</title><rect x="225.4" y="1907.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.17%)</title><rect x="225.4" y="1891.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.17%)</title><rect x="225.4" y="1875.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.4" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="225.4" y="1859.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.4" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="225.4" y="1843.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.4" y="1854.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="225.4" y="1827.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="228.4" y="1838.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="225.4" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="228.4" y="1822.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="226.1" y="1827.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="229.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1811.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="229.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1795.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="229.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1779.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="229.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1763.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="229.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1747.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="229.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1731.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="229.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1715.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="229.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="226.1" y="1699.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="229.1" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (23 samples, 1.30%)</title><rect x="227.4" y="2019.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.4" y="2030.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="228.1" y="2003.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.1" y="2014.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="228.1" y="1987.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.1" y="1998.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="228.1" y="1971.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.1" y="1982.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="228.1" y="1955.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.06%)</title><rect x="228.7" y="2003.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.7" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.06%)</title><rect x="228.7" y="1987.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.7" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="228.7" y="1971.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="228.7" y="1955.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.7" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="228.7" y="1939.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.7" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="228.7" y="1923.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="228.7" y="1907.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="228.7" y="1891.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.7" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="228.7" y="1875.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="231.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1859.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="231.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1843.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="231.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1827.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="231.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1811.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="231.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1795.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="231.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1779.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="231.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1763.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="231.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="228.7" y="1747.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="231.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.06%)</title><rect x="229.4" y="2003.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="229.4" y="1987.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.06%)</title><rect x="229.4" y="1971.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.4" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.06%)</title><rect x="229.4" y="1955.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.06%)</title><rect x="229.4" y="1939.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="229.4" y="1923.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (14 samples, 0.79%)</title><rect x="230.1" y="2003.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14 samples, 0.79%)</title><rect x="230.1" y="1987.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14 samples, 0.79%)</title><rect x="230.1" y="1971.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (14 samples, 0.79%)</title><rect x="230.1" y="1955.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="230.1" y="1939.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (6 samples, 0.34%)</title><rect x="230.7" y="1939.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.7" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="231.4" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.4" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="231.4" y="1907.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.4" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1 samples, 0.06%)</title><rect x="231.4" y="1891.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.4" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.06%)</title><rect x="231.4" y="1875.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.4" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (1 samples, 0.06%)</title><rect x="231.4" y="1859.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.4" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.06%)</title><rect x="231.4" y="1843.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.06%)</title><rect x="231.4" y="1827.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.4" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.06%)</title><rect x="231.4" y="1811.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.4" y="1822.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="231.4" y="1795.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/1306854175.test (1 samples, 0.06%)</title><rect x="231.4" y="1779.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.06%)</title><rect x="231.4" y="1763.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1386883398.test (1 samples, 0.06%)</title><rect x="231.4" y="1747.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.06%)</title><rect x="231.4" y="1731.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.4" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.06%)</title><rect x="231.4" y="1715.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2 samples, 0.11%)</title><rect x="232.1" y="1923.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.1" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2 samples, 0.11%)</title><rect x="232.1" y="1907.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.1" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="232.1" y="1891.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.1" y="1902.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="232.1" y="1875.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="235.1" y="1886.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="232.1" y="1859.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="235.1" y="1870.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="232.8" y="1859.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="235.8" y="1870.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="232.8" y="1843.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="235.8" y="1854.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.06%)</title><rect x="232.8" y="1827.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="235.8" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="232.8" y="1811.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="235.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.11%)</title><rect x="233.4" y="1923.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.4" y="1934.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.11%)</title><rect x="233.4" y="1907.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.4" y="1918.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="234.1" y="1891.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2 samples, 0.11%)</title><rect x="234.8" y="1939.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.8" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.11%)</title><rect x="234.8" y="1923.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.11%)</title><rect x="234.8" y="1907.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.06%)</title><rect x="234.8" y="1891.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/Class.getReflectionFactory (1 samples, 0.06%)</title><rect x="234.8" y="1875.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.8" y="1886.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="235.4" y="1891.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.06%)</title><rect x="235.4" y="1875.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.4" y="1886.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.06%)</title><rect x="235.4" y="1859.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="238.4" y="1870.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.06%)</title><rect x="235.4" y="1843.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="238.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.28%)</title><rect x="236.1" y="1939.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.28%)</title><rect x="236.1" y="1923.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.28%)</title><rect x="236.1" y="1907.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.28%)</title><rect x="236.1" y="1891.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.23%)</title><rect x="236.1" y="1875.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.23%)</title><rect x="236.1" y="1859.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.23%)</title><rect x="236.1" y="1843.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="236.1" y="1827.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="236.1" y="1811.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="236.1" y="1795.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.1" y="1806.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="236.1" y="1779.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="239.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1763.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="239.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1747.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="239.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1731.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="239.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1715.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1699.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="239.8" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1683.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="239.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1667.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="236.8" y="1651.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="239.8" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="238.8" y="1875.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="238.8" y="1859.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="238.8" y="1843.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.06%)</title><rect x="238.8" y="1827.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.8" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="238.8" y="1811.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.8" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.06%)</title><rect x="238.8" y="1795.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.8" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (5 samples, 0.28%)</title><rect x="239.4" y="2003.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.4" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (5 samples, 0.28%)</title><rect x="239.4" y="1987.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.4" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (5 samples, 0.28%)</title><rect x="239.4" y="1971.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.4" y="1982.0"></text>
</g>
<g>
<title>java/net/URI.create (3 samples, 0.17%)</title><rect x="239.4" y="1955.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.4" y="1966.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3 samples, 0.17%)</title><rect x="239.4" y="1939.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.4" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (3 samples, 0.17%)</title><rect x="239.4" y="1923.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.4" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3 samples, 0.17%)</title><rect x="239.4" y="1907.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.17%)</title><rect x="239.4" y="1891.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.06%)</title><rect x="239.4" y="1875.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.4" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.06%)</title><rect x="239.4" y="1859.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="239.4" y="1843.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="239.4" y="1827.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.4" y="1838.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.06%)</title><rect x="239.4" y="1811.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.4" y="1822.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.11%)</title><rect x="240.1" y="1875.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.1" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="240.8" y="1859.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.8" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (1 samples, 0.06%)</title><rect x="241.5" y="1955.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (1 samples, 0.06%)</title><rect x="241.5" y="1939.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1 samples, 0.06%)</title><rect x="241.5" y="1923.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (1 samples, 0.06%)</title><rect x="241.5" y="1907.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.5" y="1918.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (1 samples, 0.06%)</title><rect x="241.5" y="1891.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.5" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="241.5" y="1875.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.5" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="241.5" y="1859.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="241.5" y="1843.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.5" y="1854.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="241.5" y="1827.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.5" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="241.5" y="1811.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.5" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.06%)</title><rect x="242.1" y="1955.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.06%)</title><rect x="242.1" y="1939.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.06%)</title><rect x="242.1" y="1923.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="242.1" y="1907.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.1" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="242.8" y="2019.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.8" y="2030.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.06%)</title><rect x="242.8" y="2003.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.8" y="2014.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (1 samples, 0.06%)</title><rect x="242.8" y="1987.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.8" y="1998.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.06%)</title><rect x="242.8" y="1971.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.8" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (1 samples, 0.06%)</title><rect x="243.5" y="2019.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.5" y="2030.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="243.5" y="2003.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.5" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="244.1" y="2067.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.1" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="244.1" y="2051.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.1" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="244.1" y="2035.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.1" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="244.1" y="2019.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.1" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="244.8" y="2099.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.8" y="2110.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.23%)</title><rect x="245.5" y="2115.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.5" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.23%)</title><rect x="245.5" y="2099.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.5" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="245.5" y="2083.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="248.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="245.5" y="2067.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="248.5" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="245.5" y="2051.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="248.5" y="2062.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="245.5" y="2035.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="248.5" y="2046.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.17%)</title><rect x="246.1" y="2083.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="249.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="2067.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="249.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="2051.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="249.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="2035.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="249.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="2019.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="249.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="2003.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="246.1" y="1987.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="249.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="246.8" y="1971.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="249.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="247.5" y="1955.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="250.5" y="1966.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="248.1" y="2163.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="251.1" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2147.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="251.1" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2131.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="251.1" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2115.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="251.1" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2099.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="251.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2083.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="251.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2067.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="251.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2051.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="251.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="248.1" y="2035.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="251.1" y="2046.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13323] (7 samples, 0.40%)</title><rect x="248.8" y="2179.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="251.8" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.40%)</title><rect x="248.8" y="2163.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.8" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.06%)</title><rect x="249.5" y="2147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.5" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.06%)</title><rect x="249.5" y="2131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.5" y="2142.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="249.5" y="2115.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="252.5" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 0.28%)</title><rect x="250.1" y="2147.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.1" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.28%)</title><rect x="250.1" y="2131.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.1" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.23%)</title><rect x="250.1" y="2115.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.1" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.17%)</title><rect x="250.1" y="2099.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.1" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.17%)</title><rect x="250.1" y="2083.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.1" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.17%)</title><rect x="250.1" y="2067.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.1" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (3 samples, 0.17%)</title><rect x="250.1" y="2051.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.1" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (3 samples, 0.17%)</title><rect x="250.1" y="2035.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.1" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (3 samples, 0.17%)</title><rect x="250.1" y="2019.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.1" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (3 samples, 0.17%)</title><rect x="250.1" y="2003.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.17%)</title><rect x="250.1" y="1987.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.17%)</title><rect x="250.1" y="1971.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.11%)</title><rect x="250.1" y="1955.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="250.1" y="1939.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="250.1" y="1923.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="250.1" y="1907.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="250.1" y="1891.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="250.1" y="1875.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.1" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="250.1" y="1859.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="253.1" y="1870.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="250.8" y="1859.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="253.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1843.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="253.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1827.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="253.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1811.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="253.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1795.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="253.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1779.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="253.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1763.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="253.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1747.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="253.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="250.8" y="1731.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="253.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="251.5" y="1955.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="251.5" y="1939.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="251.5" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="251.5" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="251.5" y="1891.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.5" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="252.2" y="2099.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.2" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="252.2" y="2083.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.2" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.06%)</title><rect x="252.8" y="2115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.8" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.06%)</title><rect x="252.8" y="2099.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.8" y="2110.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="252.8" y="2083.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="255.8" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="2067.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.8" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="2051.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="255.8" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="2035.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="255.8" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="2019.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="255.8" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="2003.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="255.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="1987.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="255.8" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="1971.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="255.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="1955.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="255.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="252.8" y="1939.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.8" y="1950.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13331] (4 samples, 0.23%)</title><rect x="253.5" y="2179.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="256.5" y="2190.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="253.5" y="2163.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="256.5" y="2174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="253.5" y="2147.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="256.5" y="2158.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="253.5" y="2131.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="256.5" y="2142.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="253.5" y="2115.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="256.5" y="2126.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="253.5" y="2099.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="256.5" y="2110.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3 samples, 0.17%)</title><rect x="254.2" y="2163.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.2" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.17%)</title><rect x="254.2" y="2147.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.2" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.17%)</title><rect x="254.2" y="2131.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.2" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.11%)</title><rect x="254.2" y="2115.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.06%)</title><rect x="254.2" y="2099.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.2" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.06%)</title><rect x="254.2" y="2083.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.2" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.06%)</title><rect x="254.2" y="2067.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.2" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (1 samples, 0.06%)</title><rect x="254.2" y="2051.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.2" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (1 samples, 0.06%)</title><rect x="254.2" y="2035.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.2" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (1 samples, 0.06%)</title><rect x="254.2" y="2019.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.2" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (1 samples, 0.06%)</title><rect x="254.2" y="2003.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="254.2" y="1987.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.2" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="254.2" y="1971.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="254.2" y="1955.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="254.2" y="1939.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.2" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="254.2" y="1923.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="254.2" y="1907.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="254.2" y="1891.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="254.2" y="1875.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.2" y="1886.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="254.2" y="1859.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1843.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="257.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1827.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="257.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1811.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="257.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1795.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="257.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1779.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="257.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1763.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="257.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1747.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="257.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.2" y="1731.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="257.2" y="1742.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.06%)</title><rect x="254.8" y="2099.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.8" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="254.8" y="2083.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.8" y="2094.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="254.8" y="2067.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.8" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="2051.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="257.8" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="2035.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="257.8" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="2019.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="257.8" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="2003.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="257.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="1987.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="257.8" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="1971.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="257.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="1955.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="257.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="1939.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="257.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="254.8" y="1923.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="257.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.06%)</title><rect x="255.5" y="2115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.5" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.06%)</title><rect x="255.5" y="2099.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.5" y="2110.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="255.5" y="2083.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="258.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="2067.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="258.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="2051.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="258.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="2035.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="258.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="2019.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="258.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="2003.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="258.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="1987.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="258.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="255.5" y="1971.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="258.5" y="1982.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13316] (26 samples, 1.47%)</title><rect x="256.2" y="2179.0" width="17.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="259.2" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (26 samples, 1.47%)</title><rect x="256.2" y="2163.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.2" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.23%)</title><rect x="256.2" y="2147.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.2" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.23%)</title><rect x="256.2" y="2131.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.2" y="2142.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.06%)</title><rect x="256.8" y="2115.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="259.8" y="2126.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2115.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="260.5" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.11%)</title><rect x="257.5" y="2099.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="260.5" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2083.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="260.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2067.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="260.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2051.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="260.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2035.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="260.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2019.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="260.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="2003.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="260.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="1987.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="260.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="1971.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="260.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="1955.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="260.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="257.5" y="1939.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="260.5" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (22 samples, 1.25%)</title><rect x="258.8" y="2147.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.8" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (22 samples, 1.25%)</title><rect x="258.8" y="2131.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.8" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 1.02%)</title><rect x="258.8" y="2115.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.8" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 1.02%)</title><rect x="258.8" y="2099.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.8" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 1.02%)</title><rect x="258.8" y="2083.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.8" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (18 samples, 1.02%)</title><rect x="258.8" y="2067.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.8" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (18 samples, 1.02%)</title><rect x="258.8" y="2051.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.8" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (17 samples, 0.96%)</title><rect x="258.8" y="2035.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.8" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (16 samples, 0.91%)</title><rect x="258.8" y="2019.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.11%)</title><rect x="260.2" y="2003.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.11%)</title><rect x="260.2" y="1987.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.2" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.11%)</title><rect x="260.2" y="1971.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.11%)</title><rect x="260.2" y="1955.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.11%)</title><rect x="260.2" y="1939.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.2" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.11%)</title><rect x="260.2" y="1923.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="260.2" y="1907.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="260.2" y="1891.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.2" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="260.2" y="1875.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="263.2" y="1886.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="260.9" y="1875.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="263.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1859.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="263.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1843.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="263.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1827.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="263.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1811.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="263.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1795.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="263.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1779.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="263.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1763.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="263.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="260.9" y="1747.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="263.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (8 samples, 0.45%)</title><rect x="261.5" y="2003.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 0.45%)</title><rect x="261.5" y="1987.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 0.45%)</title><rect x="261.5" y="1971.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 0.45%)</title><rect x="261.5" y="1955.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5 samples, 0.28%)</title><rect x="261.5" y="1939.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.checkTimeout (1 samples, 0.06%)</title><rect x="261.5" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.5" y="1934.0"></text>
</g>
<g>
<title>java/time/Duration.equals (1 samples, 0.06%)</title><rect x="261.5" y="1907.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4 samples, 0.23%)</title><rect x="262.2" y="1923.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.2" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4 samples, 0.23%)</title><rect x="262.2" y="1907.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.2" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.23%)</title><rect x="262.2" y="1891.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.2" y="1902.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="262.2" y="1875.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="265.2" y="1886.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="262.2" y="1859.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.2" y="1870.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="262.9" y="1859.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="265.9" y="1870.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.11%)</title><rect x="263.5" y="1875.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="1886.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1 samples, 0.06%)</title><rect x="264.2" y="1859.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.2" y="1870.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.06%)</title><rect x="264.2" y="1843.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.06%)</title><rect x="264.2" y="1827.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.2" y="1838.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="264.2" y="1811.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.2" y="1822.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.06%)</title><rect x="264.2" y="1795.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.2" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="264.2" y="1779.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3 samples, 0.17%)</title><rect x="264.9" y="1939.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.11%)</title><rect x="265.5" y="1923.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.11%)</title><rect x="265.5" y="1907.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.5" y="1918.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="265.5" y="1891.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.5" y="1902.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="265.5" y="1875.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.06%)</title><rect x="265.5" y="1859.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.5" y="1870.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (1 samples, 0.06%)</title><rect x="266.2" y="1891.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.2" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (4 samples, 0.23%)</title><rect x="266.9" y="2003.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (4 samples, 0.23%)</title><rect x="266.9" y="1987.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.9" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (4 samples, 0.23%)</title><rect x="266.9" y="1971.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.11%)</title><rect x="266.9" y="1955.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (2 samples, 0.11%)</title><rect x="266.9" y="1939.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (2 samples, 0.11%)</title><rect x="266.9" y="1923.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.11%)</title><rect x="266.9" y="1907.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.06%)</title><rect x="266.9" y="1891.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.9" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.06%)</title><rect x="267.5" y="1891.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1875.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="270.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1859.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="270.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1843.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="270.5" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1827.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="270.5" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1811.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="270.5" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1795.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="270.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1779.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="270.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="267.5" y="1763.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="270.5" y="1774.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.06%)</title><rect x="268.2" y="1955.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.2" y="1966.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.06%)</title><rect x="268.2" y="1939.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.2" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.06%)</title><rect x="268.2" y="1923.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.2" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.06%)</title><rect x="268.2" y="1907.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.2" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1 samples, 0.06%)</title><rect x="268.2" y="1891.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.2" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.06%)</title><rect x="268.2" y="1875.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.2" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1 samples, 0.06%)</title><rect x="268.9" y="1955.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="268.9" y="1939.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="268.9" y="1923.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (1 samples, 0.06%)</title><rect x="269.5" y="2019.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.5" y="2030.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="269.5" y="2003.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.5" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="269.5" y="1987.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.5" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="269.5" y="1971.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.5" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (1 samples, 0.06%)</title><rect x="270.2" y="2035.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.2" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="270.2" y="2019.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.2" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="270.2" y="2003.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.2" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.23%)</title><rect x="270.9" y="2115.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.9" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.23%)</title><rect x="270.9" y="2099.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.9" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="270.9" y="2083.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="273.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="270.9" y="2067.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="273.9" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="270.9" y="2051.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="273.9" y="2062.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="270.9" y="2035.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="273.9" y="2046.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="270.9" y="2019.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="273.9" y="2030.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.17%)</title><rect x="271.6" y="2083.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="274.6" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="271.6" y="2067.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="274.6" y="2078.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="271.6" y="2051.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="274.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="272.2" y="2035.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="275.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="272.2" y="2019.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="275.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="272.2" y="2003.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="275.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="272.2" y="1987.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="275.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="272.2" y="1971.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="275.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="272.9" y="1955.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="275.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="272.9" y="1939.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="275.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="272.9" y="1923.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="275.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="272.9" y="1907.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="275.9" y="1918.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13324] (14 samples, 0.79%)</title><rect x="273.6" y="2179.0" width="9.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="276.6" y="2190.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="273.6" y="2163.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="276.6" y="2174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="273.6" y="2147.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="276.6" y="2158.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="273.6" y="2131.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="276.6" y="2142.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="273.6" y="2115.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="276.6" y="2126.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.06%)</title><rect x="273.6" y="2099.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="276.6" y="2110.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 0.74%)</title><rect x="274.2" y="2163.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.2" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.17%)</title><rect x="274.2" y="2147.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.2" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.17%)</title><rect x="274.2" y="2131.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.2" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2115.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="277.2" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.17%)</title><rect x="274.2" y="2099.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="277.2" y="2110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2083.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="277.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2067.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="277.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2051.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="277.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2035.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="277.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="274.2" y="2019.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="277.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="274.9" y="2003.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="277.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="275.6" y="1987.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="278.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="275.6" y="1971.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="278.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="275.6" y="1955.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="278.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="275.6" y="1939.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="278.6" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 0.57%)</title><rect x="276.2" y="2147.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.2" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 0.57%)</title><rect x="276.2" y="2131.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.2" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.34%)</title><rect x="276.9" y="2115.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.9" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.28%)</title><rect x="276.9" y="2099.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.9" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.28%)</title><rect x="276.9" y="2083.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.9" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 0.23%)</title><rect x="276.9" y="2067.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.9" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (4 samples, 0.23%)</title><rect x="276.9" y="2051.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.9" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (4 samples, 0.23%)</title><rect x="276.9" y="2035.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.9" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (2 samples, 0.11%)</title><rect x="276.9" y="2019.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.9" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (2 samples, 0.11%)</title><rect x="276.9" y="2003.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.9" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.11%)</title><rect x="276.9" y="1987.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.9" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.11%)</title><rect x="276.9" y="1971.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.11%)</title><rect x="276.9" y="1955.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="276.9" y="1939.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="276.9" y="1923.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="276.9" y="1907.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="276.9" y="1891.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="276.9" y="1875.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.9" y="1886.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="276.9" y="1859.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="279.9" y="1870.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="276.9" y="1843.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="279.9" y="1854.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="277.6" y="1859.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="280.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1843.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="280.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1827.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="280.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1811.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="280.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1795.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="280.6" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1779.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="280.6" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1763.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="280.6" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1747.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="280.6" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="277.6" y="1731.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="280.6" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (2 samples, 0.11%)</title><rect x="278.2" y="2019.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.2" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="279.6" y="2067.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.6" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="279.6" y="2051.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.6" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="279.6" y="2035.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="279.6" y="2019.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.6" y="2030.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="279.6" y="2003.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="282.6" y="2014.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="280.2" y="2099.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.2" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="280.2" y="2083.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="2094.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="280.2" y="2067.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="280.2" y="2051.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.2" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="280.2" y="2035.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.2" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.17%)</title><rect x="280.9" y="2115.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.9" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.17%)</title><rect x="280.9" y="2099.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.9" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="280.9" y="2083.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="283.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="280.9" y="2067.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="283.9" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.11%)</title><rect x="280.9" y="2051.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="283.9" y="2062.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.06%)</title><rect x="281.6" y="2035.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="284.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="2019.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="284.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="2003.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="284.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1987.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="284.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1971.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="284.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1955.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="284.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1939.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="284.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1923.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="284.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="281.6" y="1907.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="284.6" y="1918.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="282.3" y="2083.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="285.3" y="2094.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13332] (10 samples, 0.57%)</title><rect x="282.9" y="2179.0" width="6.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="285.9" y="2190.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="282.9" y="2163.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="285.9" y="2174.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="282.9" y="2147.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="285.9" y="2158.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="282.9" y="2131.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="285.9" y="2142.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="282.9" y="2115.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="285.9" y="2126.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="282.9" y="2099.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="285.9" y="2110.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9 samples, 0.51%)</title><rect x="283.6" y="2163.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.6" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.23%)</title><rect x="283.6" y="2147.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.6" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.23%)</title><rect x="283.6" y="2131.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.6" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="284.3" y="2115.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="287.3" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.17%)</title><rect x="284.3" y="2099.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="287.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="284.3" y="2083.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="287.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="284.3" y="2067.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="287.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="284.9" y="2051.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="287.9" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="284.9" y="2035.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="287.9" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="284.9" y="2019.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="287.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="284.9" y="2003.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="287.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="285.6" y="1987.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="288.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="285.6" y="1971.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="288.6" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 0.28%)</title><rect x="286.3" y="2147.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.3" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.28%)</title><rect x="286.3" y="2131.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.3" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.17%)</title><rect x="286.3" y="2115.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.3" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.17%)</title><rect x="286.3" y="2099.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.3" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.17%)</title><rect x="286.3" y="2083.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.3" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.17%)</title><rect x="286.3" y="2067.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.3" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="286.3" y="2051.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.3" y="2062.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="286.3" y="2035.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.3" y="2046.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="286.3" y="2019.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2 samples, 0.11%)</title><rect x="286.9" y="2051.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.9" y="2062.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="286.9" y="2035.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.9" y="2046.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="286.9" y="2019.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.9" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.06%)</title><rect x="286.9" y="2003.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (1 samples, 0.06%)</title><rect x="287.6" y="2035.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.6" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (1 samples, 0.06%)</title><rect x="287.6" y="2019.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.6" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (1 samples, 0.06%)</title><rect x="287.6" y="2003.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="287.6" y="1987.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="287.6" y="1971.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="287.6" y="1955.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="287.6" y="1939.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="287.6" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="287.6" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="287.6" y="1891.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="287.6" y="1875.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.6" y="1886.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="287.6" y="1859.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="290.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1843.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="290.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1827.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="290.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1811.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="290.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1795.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="290.6" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1779.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="290.6" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="287.6" y="1763.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="290.6" y="1774.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="288.3" y="2115.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.3" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="288.3" y="2099.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.3" y="2110.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="288.9" y="2083.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="291.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="2067.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="291.9" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="2051.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="291.9" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="2035.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="291.9" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="2019.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="291.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="2003.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="291.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="1987.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="291.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="1971.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="291.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="1955.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="291.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="288.9" y="1939.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="291.9" y="1950.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13317] (25 samples, 1.42%)</title><rect x="289.6" y="2179.0" width="16.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="292.6" y="2190.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="289.6" y="2163.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="292.6" y="2174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24 samples, 1.36%)</title><rect x="290.3" y="2163.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.3" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.06%)</title><rect x="291.0" y="2147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.28%)</title><rect x="291.6" y="2147.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.6" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.28%)</title><rect x="291.6" y="2131.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.6" y="2142.0"></text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.06%)</title><rect x="293.0" y="2115.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="296.0" y="2126.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="293.0" y="2099.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="296.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="293.6" y="2115.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="296.6" y="2126.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="293.6" y="2099.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="296.6" y="2110.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="294.3" y="2099.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="297.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2083.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="297.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2067.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="297.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2051.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="297.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2035.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="297.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2019.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="297.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="294.3" y="2003.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="297.3" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (17 samples, 0.96%)</title><rect x="295.0" y="2147.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17 samples, 0.96%)</title><rect x="295.0" y="2131.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.0" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 0.85%)</title><rect x="295.0" y="2115.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.79%)</title><rect x="295.0" y="2099.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.79%)</title><rect x="295.0" y="2083.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.0" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (13 samples, 0.74%)</title><rect x="295.0" y="2067.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.0" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (13 samples, 0.74%)</title><rect x="295.0" y="2051.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.0" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (13 samples, 0.74%)</title><rect x="295.0" y="2035.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.0" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (1 samples, 0.06%)</title><rect x="295.0" y="2019.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.0" y="2030.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="295.0" y="2003.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.0" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (1 samples, 0.06%)</title><rect x="295.0" y="1987.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (1 samples, 0.06%)</title><rect x="295.0" y="1971.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.06%)</title><rect x="295.0" y="1955.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="295.0" y="1939.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.06%)</title><rect x="295.0" y="1923.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="295.0" y="1907.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.0" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (8 samples, 0.45%)</title><rect x="295.6" y="2019.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.6" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (6 samples, 0.34%)</title><rect x="297.0" y="2003.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6 samples, 0.34%)</title><rect x="297.0" y="1987.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6 samples, 0.34%)</title><rect x="297.0" y="1971.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6 samples, 0.34%)</title><rect x="297.0" y="1955.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5 samples, 0.28%)</title><rect x="297.0" y="1939.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.0" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.11%)</title><rect x="297.0" y="1923.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.0" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.11%)</title><rect x="297.0" y="1907.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.11%)</title><rect x="297.0" y="1891.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.0" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.11%)</title><rect x="297.0" y="1875.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (2 samples, 0.11%)</title><rect x="297.0" y="1859.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.0" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.11%)</title><rect x="297.0" y="1843.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="1854.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.11%)</title><rect x="297.0" y="1827.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.0" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.11%)</title><rect x="297.0" y="1811.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.0" y="1822.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.11%)</title><rect x="297.0" y="1795.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/1306854175.test (2 samples, 0.11%)</title><rect x="297.0" y="1779.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.06%)</title><rect x="297.6" y="1763.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3 samples, 0.17%)</title><rect x="298.3" y="1923.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.3" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3 samples, 0.17%)</title><rect x="298.3" y="1907.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.3" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.17%)</title><rect x="298.3" y="1891.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.3" y="1902.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="298.3" y="1875.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.3" y="1886.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="299.0" y="1875.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="302.0" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="299.0" y="1859.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="302.0" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.06%)</title><rect x="299.0" y="1843.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="302.0" y="1854.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="299.6" y="1859.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="302.6" y="1870.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="299.6" y="1843.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="302.6" y="1854.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="299.6" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="302.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="300.3" y="1939.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="300.3" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="300.3" y="1907.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.3" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="300.3" y="1891.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.3" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$122/1728418660.get$Lambda (1 samples, 0.06%)</title><rect x="300.3" y="1875.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.3" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$122/1728418660.&lt;init&gt; (1 samples, 0.06%)</title><rect x="300.3" y="1859.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.3" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="301.0" y="2019.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.0" y="2030.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (1 samples, 0.06%)</title><rect x="301.0" y="2003.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.0" y="2014.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (1 samples, 0.06%)</title><rect x="301.0" y="1987.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.0" y="1971.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.0" y="1955.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.0" y="1966.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (2 samples, 0.11%)</title><rect x="301.7" y="2003.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.7" y="2014.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (2 samples, 0.11%)</title><rect x="301.7" y="1987.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.7" y="1998.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (2 samples, 0.11%)</title><rect x="301.7" y="1971.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.7" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (1 samples, 0.06%)</title><rect x="303.0" y="2019.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.0" y="2030.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.06%)</title><rect x="303.0" y="2003.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="303.7" y="2067.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.7" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="303.7" y="2051.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.7" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="303.7" y="2035.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="303.7" y="2019.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.7" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.06%)</title><rect x="304.3" y="2099.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.3" y="2110.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="305.0" y="2115.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.0" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="305.0" y="2099.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.0" y="2083.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="308.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.0" y="2067.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="308.0" y="2078.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="305.0" y="2051.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.0" y="2062.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="305.0" y="2035.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="308.0" y="2046.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="305.7" y="2083.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="308.7" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="2067.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="308.7" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="2051.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="308.7" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="2035.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="308.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="2019.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="308.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="2003.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="308.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1987.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="308.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1971.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="308.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1955.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="308.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1939.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="308.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1923.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="308.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="305.7" y="1907.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="308.7" y="1918.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13325] (5 samples, 0.28%)</title><rect x="306.3" y="2179.0" width="3.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="309.3" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5 samples, 0.28%)</title><rect x="306.3" y="2163.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.3" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.06%)</title><rect x="306.3" y="2147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.3" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.06%)</title><rect x="306.3" y="2131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="306.3" y="2115.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="309.3" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="306.3" y="2099.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="309.3" y="2110.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4 samples, 0.23%)</title><rect x="307.0" y="2147.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.17%)</title><rect x="307.7" y="2131.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.7" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.06%)</title><rect x="307.7" y="2115.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.06%)</title><rect x="307.7" y="2099.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.7" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.06%)</title><rect x="307.7" y="2083.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="307.7" y="2067.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.7" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="307.7" y="2051.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.7" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="307.7" y="2035.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.7" y="2019.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.7" y="2030.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="307.7" y="2003.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="310.7" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="308.3" y="2115.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.3" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="308.3" y="2099.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.3" y="2110.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.11%)</title><rect x="308.3" y="2083.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="311.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="2067.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="2051.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="311.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="2035.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="311.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="2019.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="311.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="2003.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="311.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="1987.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="311.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="308.3" y="1971.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="311.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.0" y="1955.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.0" y="1939.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.0" y="1923.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="312.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.0" y="1907.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="312.0" y="1918.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13333] (7 samples, 0.40%)</title><rect x="309.7" y="2179.0" width="4.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="312.7" y="2190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.40%)</title><rect x="309.7" y="2163.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.7" y="2174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.06%)</title><rect x="309.7" y="2147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.7" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.06%)</title><rect x="309.7" y="2131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.7" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2115.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="312.7" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="309.7" y="2099.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="312.7" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2083.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="312.7" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2067.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="312.7" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2051.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="312.7" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2035.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="312.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2019.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="2003.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="312.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="309.7" y="1987.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="312.7" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 0.34%)</title><rect x="310.4" y="2147.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.4" y="2158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 0.34%)</title><rect x="310.4" y="2131.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.4" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.28%)</title><rect x="310.4" y="2115.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.4" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.11%)</title><rect x="310.4" y="2099.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.4" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.11%)</title><rect x="310.4" y="2083.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.4" y="2094.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.11%)</title><rect x="310.4" y="2067.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.4" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (2 samples, 0.11%)</title><rect x="310.4" y="2051.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.4" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (2 samples, 0.11%)</title><rect x="310.4" y="2035.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (2 samples, 0.11%)</title><rect x="310.4" y="2019.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.4" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (2 samples, 0.11%)</title><rect x="310.4" y="2003.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.11%)</title><rect x="310.4" y="1987.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.11%)</title><rect x="310.4" y="1971.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="310.4" y="1955.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="311.0" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="311.0" y="1939.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="311.0" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="311.0" y="1907.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.0" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.06%)</title><rect x="311.7" y="2099.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.7" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="311.7" y="2083.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="311.7" y="2067.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.7" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="312.4" y="2099.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.4" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="313.0" y="2099.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="313.0" y="2083.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.0" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.06%)</title><rect x="313.7" y="2115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.06%)</title><rect x="313.7" y="2099.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.7" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="313.7" y="2083.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="316.7" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="313.7" y="2067.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="316.7" y="2078.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.06%)</title><rect x="313.7" y="2051.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="316.7" y="2062.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13374] (99 samples, 5.61%)</title><rect x="314.4" y="2179.0" width="66.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="317.4" y="2190.0">[asyncH..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.11%)</title><rect x="314.4" y="2163.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="317.4" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.11%)</title><rect x="314.4" y="2147.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="317.4" y="2158.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="314.4" y="2131.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="317.4" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.06%)</title><rect x="315.0" y="2131.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="318.0" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.06%)</title><rect x="315.0" y="2115.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="318.0" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.06%)</title><rect x="315.0" y="2099.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="318.0" y="2110.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.17%)</title><rect x="315.7" y="2163.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="318.7" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.17%)</title><rect x="315.7" y="2147.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="318.7" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="315.7" y="2131.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="318.7" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.11%)</title><rect x="315.7" y="2115.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="318.7" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.06%)</title><rect x="317.0" y="2131.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="320.0" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.06%)</title><rect x="317.0" y="2115.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="320.0" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.06%)</title><rect x="317.0" y="2099.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="320.0" y="2110.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.06%)</title><rect x="317.7" y="2163.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="320.7" y="2174.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.06%)</title><rect x="317.7" y="2147.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="320.7" y="2158.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="318.4" y="2163.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="321.4" y="2174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="318.4" y="2147.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="321.4" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2131.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="321.4" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2115.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="321.4" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2099.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="321.4" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2083.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="321.4" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2067.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="321.4" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2051.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="321.4" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2035.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="321.4" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="318.4" y="2019.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="321.4" y="2030.0"></text>
</g>
<g>
<title>java/lang/Thread.run (92 samples, 5.22%)</title><rect x="319.0" y="2163.0" width="61.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.0" y="2174.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (92 samples, 5.22%)</title><rect x="319.0" y="2147.0" width="61.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.0" y="2158.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (92 samples, 5.22%)</title><rect x="319.0" y="2131.0" width="61.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.0" y="2142.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (33 samples, 1.87%)</title><rect x="319.7" y="2115.0" width="22.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.7" y="2126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 1.81%)</title><rect x="320.4" y="2099.0" width="21.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.4" y="2110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32 samples, 1.81%)</title><rect x="320.4" y="2083.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.4" y="2094.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (32 samples, 1.81%)</title><rect x="320.4" y="2067.0" width="21.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.4" y="2078.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (32 samples, 1.81%)</title><rect x="320.4" y="2051.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.4" y="2062.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (32 samples, 1.81%)</title><rect x="320.4" y="2035.0" width="21.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.4" y="2046.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (27 samples, 1.53%)</title><rect x="320.4" y="2019.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.4" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (27 samples, 1.53%)</title><rect x="320.4" y="2003.0" width="18.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (27 samples, 1.53%)</title><rect x="320.4" y="1987.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="320.4" y="1971.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="320.4" y="1955.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.get$Lambda (1 samples, 0.06%)</title><rect x="320.4" y="1939.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.&lt;init&gt; (1 samples, 0.06%)</title><rect x="320.4" y="1923.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (12 samples, 0.68%)</title><rect x="321.1" y="1971.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (12 samples, 0.68%)</title><rect x="321.1" y="1955.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.68%)</title><rect x="321.1" y="1939.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (12 samples, 0.68%)</title><rect x="321.1" y="1923.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (12 samples, 0.68%)</title><rect x="321.1" y="1907.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (12 samples, 0.68%)</title><rect x="321.1" y="1891.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (12 samples, 0.68%)</title><rect x="321.1" y="1875.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (12 samples, 0.68%)</title><rect x="321.1" y="1859.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.1" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (12 samples, 0.68%)</title><rect x="321.1" y="1843.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="321.1" y="1827.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="321.1" y="1811.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.1" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="321.1" y="1795.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.1" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="321.1" y="1779.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.1" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.62%)</title><rect x="321.7" y="1827.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.7" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.62%)</title><rect x="321.7" y="1811.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (11 samples, 0.62%)</title><rect x="321.7" y="1795.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (11 samples, 0.62%)</title><rect x="321.7" y="1779.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="321.7" y="1763.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="321.7" y="1747.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="321.7" y="1731.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="321.7" y="1715.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.7" y="1726.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="321.7" y="1699.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="324.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.17%)</title><rect x="322.4" y="1763.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.17%)</title><rect x="322.4" y="1747.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.4" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="322.4" y="1731.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.4" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="322.4" y="1715.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="322.4" y="1699.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.4" y="1710.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="322.4" y="1683.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="323.1" y="1731.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="323.1" y="1715.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.11%)</title><rect x="323.1" y="1699.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.11%)</title><rect x="323.1" y="1683.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.11%)</title><rect x="323.1" y="1667.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.1" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.11%)</title><rect x="323.1" y="1651.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.11%)</title><rect x="323.1" y="1635.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.11%)</title><rect x="323.1" y="1619.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.1" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.11%)</title><rect x="323.1" y="1603.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.1" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.11%)</title><rect x="323.1" y="1587.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.1" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.11%)</title><rect x="323.1" y="1571.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.1" y="1582.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.11%)</title><rect x="323.1" y="1555.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.1" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.11%)</title><rect x="323.1" y="1539.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.1" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.11%)</title><rect x="323.1" y="1523.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.1" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.11%)</title><rect x="323.1" y="1507.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.1" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.putBase (1 samples, 0.06%)</title><rect x="323.1" y="1491.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.1" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (1 samples, 0.06%)</title><rect x="323.7" y="1491.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (7 samples, 0.40%)</title><rect x="324.4" y="1763.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (6 samples, 0.34%)</title><rect x="325.1" y="1747.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.1" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.11%)</title><rect x="325.1" y="1731.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.1" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.11%)</title><rect x="325.1" y="1715.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.1" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.11%)</title><rect x="325.1" y="1699.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.1" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.11%)</title><rect x="325.1" y="1683.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.1" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.11%)</title><rect x="325.1" y="1667.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.1" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.11%)</title><rect x="325.1" y="1651.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.11%)</title><rect x="325.1" y="1635.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.1" y="1646.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.11%)</title><rect x="325.1" y="1619.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.11%)</title><rect x="325.1" y="1603.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.1" y="1614.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="325.7" y="1587.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="325.7" y="1571.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="325.7" y="1555.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.06%)</title><rect x="326.4" y="1731.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3 samples, 0.17%)</title><rect x="327.1" y="1731.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.1" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.17%)</title><rect x="327.1" y="1715.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.1" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.17%)</title><rect x="327.1" y="1699.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.1" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.17%)</title><rect x="327.1" y="1683.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.1" y="1694.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (3 samples, 0.17%)</title><rect x="327.1" y="1667.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.1" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.17%)</title><rect x="327.1" y="1651.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.1" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.11%)</title><rect x="327.1" y="1635.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.1" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.11%)</title><rect x="327.1" y="1619.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.11%)</title><rect x="327.1" y="1603.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.1" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="327.1" y="1587.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.1" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="327.1" y="1571.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.1" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1979313356.test (1 samples, 0.06%)</title><rect x="327.7" y="1587.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.7" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="328.4" y="1635.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.4" y="1646.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="328.4" y="1619.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="328.4" y="1603.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (14 samples, 0.79%)</title><rect x="329.1" y="1971.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (14 samples, 0.79%)</title><rect x="329.1" y="1955.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.62%)</title><rect x="329.1" y="1939.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 0.62%)</title><rect x="329.1" y="1923.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.62%)</title><rect x="329.1" y="1907.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (11 samples, 0.62%)</title><rect x="329.1" y="1891.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (11 samples, 0.62%)</title><rect x="329.1" y="1875.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (11 samples, 0.62%)</title><rect x="329.1" y="1859.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.11%)</title><rect x="329.1" y="1843.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.11%)</title><rect x="329.1" y="1827.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.11%)</title><rect x="329.1" y="1811.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1795.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="332.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1779.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="332.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1763.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="332.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1747.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="332.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1731.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="332.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1715.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="332.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="329.1" y="1699.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="332.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (1 samples, 0.06%)</title><rect x="329.8" y="1795.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.06%)</title><rect x="329.8" y="1779.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.06%)</title><rect x="329.8" y="1763.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.06%)</title><rect x="329.8" y="1747.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.06%)</title><rect x="329.8" y="1731.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.06%)</title><rect x="329.8" y="1715.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1 samples, 0.06%)</title><rect x="329.8" y="1699.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1 samples, 0.06%)</title><rect x="329.8" y="1683.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.8" y="1694.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="329.8" y="1667.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.8" y="1678.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="329.8" y="1651.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="332.8" y="1662.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="329.8" y="1635.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="332.8" y="1646.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="329.8" y="1619.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="332.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9 samples, 0.51%)</title><rect x="330.4" y="1843.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (9 samples, 0.51%)</title><rect x="330.4" y="1827.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.4" y="1838.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="330.4" y="1811.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.06%)</title><rect x="331.1" y="1811.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="331.1" y="1795.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="331.8" y="1811.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="331.8" y="1795.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="331.8" y="1779.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="331.8" y="1763.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.06%)</title><rect x="331.8" y="1747.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.06%)</title><rect x="331.8" y="1731.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.06%)</title><rect x="332.4" y="1811.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.06%)</title><rect x="332.4" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.06%)</title><rect x="332.4" y="1779.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.06%)</title><rect x="332.4" y="1763.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.4" y="1774.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.06%)</title><rect x="332.4" y="1747.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (5 samples, 0.28%)</title><rect x="333.1" y="1811.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.1" y="1822.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.28%)</title><rect x="333.1" y="1795.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.1" y="1806.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="333.1" y="1779.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="336.1" y="1790.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="333.1" y="1763.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="336.1" y="1774.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="333.1" y="1747.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="336.1" y="1758.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1779.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="336.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (2 samples, 0.11%)</title><rect x="334.4" y="1779.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.11%)</title><rect x="334.4" y="1763.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.4" y="1774.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.11%)</title><rect x="334.4" y="1747.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.4" y="1758.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.11%)</title><rect x="334.4" y="1731.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.4" y="1742.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.11%)</title><rect x="334.4" y="1715.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.4" y="1726.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.11%)</title><rect x="334.4" y="1699.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.4" y="1710.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.11%)</title><rect x="334.4" y="1683.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.4" y="1694.0"></text>
</g>
<g>
<title>java/net/InetAddress$CachedAddresses.get (1 samples, 0.06%)</title><rect x="334.4" y="1667.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.4" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.06%)</title><rect x="335.1" y="1667.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.1" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="335.1" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.1" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="335.1" y="1635.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.1" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="335.1" y="1619.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.1" y="1630.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="335.8" y="1779.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="338.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (1 samples, 0.06%)</title><rect x="336.4" y="1939.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.06%)</title><rect x="336.4" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.11%)</title><rect x="337.1" y="1939.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="337.1" y="1923.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="337.1" y="1907.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.06%)</title><rect x="337.8" y="1923.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.06%)</title><rect x="337.8" y="1907.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (1 samples, 0.06%)</title><rect x="337.8" y="1891.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (1 samples, 0.06%)</title><rect x="337.8" y="1875.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.8" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (1 samples, 0.06%)</title><rect x="337.8" y="1859.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.8" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="337.8" y="1843.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.8" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="337.8" y="1827.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.11%)</title><rect x="338.4" y="2019.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.4" y="2030.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.06%)</title><rect x="338.4" y="2003.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.4" y="2014.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.06%)</title><rect x="338.4" y="1987.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.4" y="1998.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.06%)</title><rect x="338.4" y="1971.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.4" y="1982.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (1 samples, 0.06%)</title><rect x="338.4" y="1955.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="338.4" y="1939.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.4" y="1950.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.06%)</title><rect x="339.1" y="2003.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.1" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.17%)</title><rect x="339.8" y="2019.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (3 samples, 0.17%)</title><rect x="339.8" y="2003.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.11%)</title><rect x="340.5" y="1987.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.5" y="1998.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.11%)</title><rect x="340.5" y="1971.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="1982.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.06%)</title><rect x="341.1" y="1955.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.85%)</title><rect x="341.8" y="2115.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.8" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.85%)</title><rect x="341.8" y="2099.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.8" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.51%)</title><rect x="341.8" y="2083.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.51%)</title><rect x="341.8" y="2067.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.51%)</title><rect x="341.8" y="2051.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.8" y="2062.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="341.8" y="2035.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="344.8" y="2046.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="342.5" y="2035.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="345.5" y="2046.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="343.1" y="2019.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="346.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="343.8" y="2035.0" width="4.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="346.8" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.34%)</title><rect x="343.8" y="2019.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="346.8" y="2030.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="345.1" y="2003.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="348.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="345.1" y="1987.0" width="2.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="348.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="345.8" y="1971.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="348.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="345.8" y="1955.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="348.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="345.8" y="1939.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="348.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="346.5" y="1923.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="349.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="346.5" y="1907.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="349.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="347.1" y="1891.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="350.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="347.1" y="1875.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="350.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.11%)</title><rect x="347.8" y="2083.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.11%)</title><rect x="347.8" y="2067.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.8" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.11%)</title><rect x="347.8" y="2051.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="347.8" y="2035.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.8" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="347.8" y="2019.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.06%)</title><rect x="347.8" y="2003.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="348.5" y="2035.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="348.5" y="2019.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.5" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="348.5" y="2003.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.23%)</title><rect x="349.1" y="2083.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.1" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.23%)</title><rect x="349.1" y="2067.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.1" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="349.1" y="2051.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.1" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="349.1" y="2035.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.1" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="349.1" y="2019.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.1" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="349.1" y="2003.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="352.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="349.1" y="1987.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="352.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="349.1" y="1971.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="352.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="349.8" y="1955.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="352.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="349.8" y="1939.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="352.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="349.8" y="1923.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="352.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="349.8" y="1907.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="352.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="351.2" y="1891.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="354.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="351.2" y="1875.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="354.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (15 samples, 0.85%)</title><rect x="351.8" y="2115.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15 samples, 0.85%)</title><rect x="351.8" y="2099.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15 samples, 0.85%)</title><rect x="351.8" y="2083.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (15 samples, 0.85%)</title><rect x="351.8" y="2067.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.85%)</title><rect x="351.8" y="2051.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.85%)</title><rect x="351.8" y="2035.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.85%)</title><rect x="351.8" y="2019.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 0.85%)</title><rect x="351.8" y="2003.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 0.85%)</title><rect x="351.8" y="1987.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15 samples, 0.85%)</title><rect x="351.8" y="1971.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (15 samples, 0.85%)</title><rect x="351.8" y="1955.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3 samples, 0.17%)</title><rect x="351.8" y="1939.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.17%)</title><rect x="351.8" y="1923.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.17%)</title><rect x="351.8" y="1907.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3 samples, 0.17%)</title><rect x="351.8" y="1891.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.17%)</title><rect x="351.8" y="1875.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.11%)</title><rect x="351.8" y="1859.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.11%)</title><rect x="351.8" y="1843.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (2 samples, 0.11%)</title><rect x="351.8" y="1827.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.11%)</title><rect x="351.8" y="1811.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.11%)</title><rect x="351.8" y="1795.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (2 samples, 0.11%)</title><rect x="351.8" y="1779.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.11%)</title><rect x="351.8" y="1763.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.8" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="351.8" y="1747.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.8" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="351.8" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.06%)</title><rect x="351.8" y="1715.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.8" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="351.8" y="1699.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="352.5" y="1747.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="352.5" y="1731.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="352.5" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="352.5" y="1699.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.5" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="352.5" y="1683.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.5" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="352.5" y="1667.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.5" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.06%)</title><rect x="352.5" y="1651.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="355.5" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (1 samples, 0.06%)</title><rect x="352.5" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.5" y="1646.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="352.5" y="1619.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.5" y="1630.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.06%)</title><rect x="352.5" y="1603.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="355.5" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="353.2" y="1859.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="353.2" y="1843.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="353.2" y="1827.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="353.2" y="1811.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.2" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="353.2" y="1795.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.2" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="353.2" y="1779.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="353.2" y="1763.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="353.2" y="1747.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="353.2" y="1731.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.2" y="1742.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="353.2" y="1715.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="356.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1699.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="356.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1683.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="356.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1667.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="356.2" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1651.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="356.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1635.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="356.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1619.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="356.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1603.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="356.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="353.2" y="1587.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="356.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.06%)</title><rect x="353.8" y="1939.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="353.8" y="1923.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="353.8" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (11 samples, 0.62%)</title><rect x="354.5" y="1939.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (11 samples, 0.62%)</title><rect x="354.5" y="1923.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (11 samples, 0.62%)</title><rect x="354.5" y="1907.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (11 samples, 0.62%)</title><rect x="354.5" y="1891.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.5" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (9 samples, 0.51%)</title><rect x="355.2" y="1875.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.2" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (9 samples, 0.51%)</title><rect x="355.2" y="1859.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.2" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (9 samples, 0.51%)</title><rect x="355.2" y="1843.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.2" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (9 samples, 0.51%)</title><rect x="355.2" y="1827.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.2" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (9 samples, 0.51%)</title><rect x="355.2" y="1811.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.2" y="1822.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="355.8" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.8" y="1806.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.06%)</title><rect x="356.5" y="1795.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.5" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.clearRefs (1 samples, 0.06%)</title><rect x="357.2" y="1795.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.2" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="357.2" y="1779.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.2" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (5 samples, 0.28%)</title><rect x="357.8" y="1795.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.8" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (5 samples, 0.28%)</title><rect x="357.8" y="1779.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.8" y="1790.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.06%)</title><rect x="357.8" y="1763.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="360.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1763.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="361.5" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1747.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="361.5" y="1758.0"></text>
</g>
<g>
<title>__GI___writev (4 samples, 0.23%)</title><rect x="358.5" y="1731.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="361.5" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1715.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="361.5" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1699.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="361.5" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1683.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="361.5" y="1694.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1667.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="361.5" y="1678.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1651.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="361.5" y="1662.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="358.5" y="1635.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="361.5" y="1646.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1619.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="362.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1603.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="362.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1587.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="362.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1571.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="362.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1555.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="362.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1539.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="362.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="359.2" y="1523.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="362.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1507.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="362.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1491.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="362.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1475.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="362.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1459.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="362.9" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1443.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="362.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1427.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="362.9" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="359.9" y="1411.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="362.9" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1395.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.5" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1379.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="363.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1363.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="363.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1347.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="363.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1331.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="363.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1315.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1299.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="363.5" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1283.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="363.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1267.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="363.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1251.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="363.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1235.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="363.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1219.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="363.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1203.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="363.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1187.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="363.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1171.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="363.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1155.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="363.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1139.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="363.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1123.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="363.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1107.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="363.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1091.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="363.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1075.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="363.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="360.5" y="1059.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="363.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.06%)</title><rect x="361.2" y="1875.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28 samples, 1.59%)</title><rect x="361.9" y="2115.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.9" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (28 samples, 1.59%)</title><rect x="361.9" y="2099.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.9" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19 samples, 1.08%)</title><rect x="361.9" y="2083.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.9" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (19 samples, 1.08%)</title><rect x="361.9" y="2067.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.9" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19 samples, 1.08%)</title><rect x="361.9" y="2051.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.9" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.17%)</title><rect x="361.9" y="2035.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.11%)</title><rect x="362.5" y="2019.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.11%)</title><rect x="362.5" y="2003.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.11%)</title><rect x="362.5" y="1987.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.11%)</title><rect x="362.5" y="1971.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.11%)</title><rect x="362.5" y="1955.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.11%)</title><rect x="362.5" y="1939.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.11%)</title><rect x="362.5" y="1923.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.11%)</title><rect x="362.5" y="1907.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.5" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="363.2" y="1891.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.2" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="363.2" y="1875.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1859.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="366.2" y="1870.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="363.2" y="1843.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="366.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1827.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1811.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="366.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1795.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1779.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1763.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="366.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1747.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="366.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1731.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1715.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="366.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1699.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1683.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="366.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.2" y="1667.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="366.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16 samples, 0.91%)</title><rect x="363.9" y="2035.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16 samples, 0.91%)</title><rect x="363.9" y="2019.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 0.91%)</title><rect x="363.9" y="2003.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.9" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 0.91%)</title><rect x="363.9" y="1987.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.9" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.45%)</title><rect x="363.9" y="1971.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.45%)</title><rect x="363.9" y="1955.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.45%)</title><rect x="363.9" y="1939.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.45%)</title><rect x="363.9" y="1923.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="363.9" y="1907.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.40%)</title><rect x="364.5" y="1907.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7 samples, 0.40%)</title><rect x="364.5" y="1891.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.40%)</title><rect x="364.5" y="1875.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.34%)</title><rect x="364.5" y="1859.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.5" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.34%)</title><rect x="364.5" y="1843.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.5" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.34%)</title><rect x="364.5" y="1827.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$252/880584287.apply (1 samples, 0.06%)</title><rect x="364.5" y="1811.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.5" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.06%)</title><rect x="364.5" y="1795.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.06%)</title><rect x="364.5" y="1779.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="364.5" y="1763.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="364.5" y="1747.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="364.5" y="1731.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.5" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="364.5" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.5" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="364.5" y="1699.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (3 samples, 0.17%)</title><rect x="365.2" y="1811.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.17%)</title><rect x="365.2" y="1795.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.17%)</title><rect x="365.2" y="1779.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.17%)</title><rect x="365.2" y="1763.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.2" y="1774.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (1 samples, 0.06%)</title><rect x="365.2" y="1747.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.2" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.06%)</title><rect x="365.2" y="1731.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.2" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.06%)</title><rect x="365.2" y="1715.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.2" y="1699.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.2" y="1710.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.2" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.2" y="1694.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.2" y="1667.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.2" y="1678.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.2" y="1651.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.11%)</title><rect x="365.9" y="1747.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.9" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.06%)</title><rect x="365.9" y="1731.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.9" y="1742.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.06%)</title><rect x="365.9" y="1715.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="366.5" y="1731.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (1 samples, 0.06%)</title><rect x="366.5" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.06%)</title><rect x="366.5" y="1699.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.06%)</title><rect x="366.5" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.5" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="366.5" y="1667.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (1 samples, 0.06%)</title><rect x="366.5" y="1651.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.5" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="366.5" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.5" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (1 samples, 0.06%)</title><rect x="366.5" y="1619.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.11%)</title><rect x="367.2" y="1811.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.11%)</title><rect x="367.2" y="1795.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.11%)</title><rect x="367.2" y="1779.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.06%)</title><rect x="367.9" y="1763.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.06%)</title><rect x="367.9" y="1747.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.9" y="1758.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.06%)</title><rect x="367.9" y="1731.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.9" y="1742.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.06%)</title><rect x="367.9" y="1715.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.9" y="1726.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="367.9" y="1699.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.9" y="1710.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.06%)</title><rect x="367.9" y="1683.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="370.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (1 samples, 0.06%)</title><rect x="368.5" y="1859.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.06%)</title><rect x="368.5" y="1843.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="368.5" y="1827.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="368.5" y="1811.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.5" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.06%)</title><rect x="368.5" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.5" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getRevealedLocalAddress (1 samples, 0.06%)</title><rect x="368.5" y="1779.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/System.getSecurityManager (1 samples, 0.06%)</title><rect x="368.5" y="1763.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.5" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (8 samples, 0.45%)</title><rect x="369.2" y="1971.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.11%)</title><rect x="369.9" y="1955.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="369.9" y="1939.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="369.9" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="369.9" y="1907.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.9" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="369.9" y="1891.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.9" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="370.6" y="1939.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.6" y="1950.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.06%)</title><rect x="370.6" y="1923.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.06%)</title><rect x="371.2" y="1955.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.2" y="1966.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="371.2" y="1939.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.2" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="371.2" y="1923.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.2" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1 samples, 0.06%)</title><rect x="371.2" y="1907.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.2" y="1918.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (1 samples, 0.06%)</title><rect x="371.2" y="1891.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.2" y="1902.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.06%)</title><rect x="371.2" y="1875.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.2" y="1886.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.06%)</title><rect x="371.2" y="1859.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.2" y="1870.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.06%)</title><rect x="371.2" y="1843.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.2" y="1854.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.06%)</title><rect x="371.2" y="1827.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 0.23%)</title><rect x="371.9" y="1955.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.23%)</title><rect x="371.9" y="1939.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="371.9" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="371.9" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.9" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="371.9" y="1891.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.9" y="1902.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="371.9" y="1875.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="374.9" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="372.6" y="1923.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="372.6" y="1907.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="372.6" y="1891.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.6" y="1902.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="372.6" y="1875.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.6" y="1886.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="372.6" y="1859.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="375.6" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="373.2" y="1923.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.2" y="1934.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="373.2" y="1907.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.2" y="1918.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="373.9" y="1923.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.9" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="373.9" y="1907.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (9 samples, 0.51%)</title><rect x="374.6" y="2083.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.6" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.45%)</title><rect x="375.2" y="2067.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.45%)</title><rect x="375.2" y="2051.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (8 samples, 0.45%)</title><rect x="375.2" y="2035.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.45%)</title><rect x="375.2" y="2019.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.45%)</title><rect x="375.2" y="2003.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.2" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (8 samples, 0.45%)</title><rect x="375.2" y="1987.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (8 samples, 0.45%)</title><rect x="375.2" y="1971.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (2 samples, 0.11%)</title><rect x="375.2" y="1955.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.11%)</title><rect x="375.2" y="1939.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.11%)</title><rect x="375.2" y="1923.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.2" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="375.2" y="1907.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.2" y="1918.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="375.2" y="1891.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.2" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="375.2" y="1875.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.2" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.06%)</title><rect x="375.2" y="1859.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.2" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="375.2" y="1843.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.2" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="375.2" y="1827.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="375.9" y="1907.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="375.9" y="1891.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.06%)</title><rect x="375.9" y="1875.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="375.9" y="1859.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.06%)</title><rect x="375.9" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="375.9" y="1827.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="375.9" y="1811.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.06%)</title><rect x="375.9" y="1795.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (6 samples, 0.34%)</title><rect x="376.6" y="1955.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (6 samples, 0.34%)</title><rect x="376.6" y="1939.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (6 samples, 0.34%)</title><rect x="376.6" y="1923.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.34%)</title><rect x="376.6" y="1907.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.34%)</title><rect x="376.6" y="1891.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.28%)</title><rect x="376.6" y="1875.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.28%)</title><rect x="376.6" y="1859.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (5 samples, 0.28%)</title><rect x="376.6" y="1843.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (5 samples, 0.28%)</title><rect x="376.6" y="1827.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.6" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.28%)</title><rect x="376.6" y="1811.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.28%)</title><rect x="376.6" y="1795.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.28%)</title><rect x="376.6" y="1779.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.28%)</title><rect x="376.6" y="1763.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.28%)</title><rect x="376.6" y="1747.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.28%)</title><rect x="376.6" y="1731.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.6" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.28%)</title><rect x="376.6" y="1715.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.6" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.28%)</title><rect x="376.6" y="1699.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.6" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.28%)</title><rect x="376.6" y="1683.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.6" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.28%)</title><rect x="376.6" y="1667.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.28%)</title><rect x="376.6" y="1651.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.6" y="1662.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="376.6" y="1635.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="379.6" y="1646.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.06%)</title><rect x="376.6" y="1619.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="379.6" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="377.2" y="1635.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="380.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="377.2" y="1619.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="380.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="377.2" y="1603.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="380.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="377.2" y="1587.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="380.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="377.2" y="1571.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="380.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="377.9" y="1555.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="380.9" y="1566.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="377.9" y="1539.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="380.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="379.3" y="1523.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="382.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.06%)</title><rect x="379.9" y="1875.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.06%)</title><rect x="379.9" y="1859.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="379.9" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="379.9" y="1827.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="379.9" y="1811.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="379.9" y="1795.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (1 samples, 0.06%)</title><rect x="379.9" y="1779.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1 samples, 0.06%)</title><rect x="379.9" y="1763.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.9" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="379.9" y="1747.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.9" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="379.9" y="1731.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.9" y="1742.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13375] (96 samples, 5.44%)</title><rect x="380.6" y="2179.0" width="64.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="383.6" y="2190.0">[asyncH..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.06%)</title><rect x="380.6" y="2163.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="383.6" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="380.6" y="2147.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="383.6" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="380.6" y="2131.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="383.6" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.06%)</title><rect x="380.6" y="2115.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="383.6" y="2126.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="381.3" y="2163.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="384.3" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.11%)</title><rect x="381.3" y="2147.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="384.3" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="381.3" y="2131.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="384.3" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.11%)</title><rect x="381.3" y="2115.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="384.3" y="2126.0"></text>
</g>
<g>
<title>java/lang/Thread.run (93 samples, 5.27%)</title><rect x="382.6" y="2163.0" width="62.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.6" y="2174.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (93 samples, 5.27%)</title><rect x="382.6" y="2147.0" width="62.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.6" y="2158.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (93 samples, 5.27%)</title><rect x="382.6" y="2131.0" width="62.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.6" y="2142.0">java/u..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="383.9" y="2115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.9" y="2126.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.17%)</title><rect x="384.6" y="2115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.6" y="2126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.17%)</title><rect x="384.6" y="2099.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="2110.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.11%)</title><rect x="384.6" y="2083.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="387.6" y="2094.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2 samples, 0.11%)</title><rect x="384.6" y="2067.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="387.6" y="2078.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="385.9" y="2083.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (26 samples, 1.47%)</title><rect x="386.6" y="2115.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.6" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (26 samples, 1.47%)</title><rect x="386.6" y="2099.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.6" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (26 samples, 1.47%)</title><rect x="386.6" y="2083.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.6" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (26 samples, 1.47%)</title><rect x="386.6" y="2067.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.6" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (26 samples, 1.47%)</title><rect x="386.6" y="2051.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (26 samples, 1.47%)</title><rect x="386.6" y="2035.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="386.6" y="2019.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="386.6" y="2003.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.get$Lambda (1 samples, 0.06%)</title><rect x="386.6" y="1987.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (24 samples, 1.36%)</title><rect x="387.3" y="2019.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (24 samples, 1.36%)</title><rect x="387.3" y="2003.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (24 samples, 1.36%)</title><rect x="387.3" y="1987.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 0.57%)</title><rect x="387.3" y="1971.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 0.57%)</title><rect x="387.3" y="1955.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.3" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.57%)</title><rect x="387.3" y="1939.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (10 samples, 0.57%)</title><rect x="387.3" y="1923.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (10 samples, 0.57%)</title><rect x="387.3" y="1907.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10 samples, 0.57%)</title><rect x="387.3" y="1891.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.3" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (10 samples, 0.57%)</title><rect x="387.3" y="1875.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10 samples, 0.57%)</title><rect x="387.3" y="1859.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.3" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (10 samples, 0.57%)</title><rect x="387.3" y="1843.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.3" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.45%)</title><rect x="387.3" y="1827.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.45%)</title><rect x="387.3" y="1811.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (8 samples, 0.45%)</title><rect x="387.3" y="1795.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (8 samples, 0.45%)</title><rect x="387.3" y="1779.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.11%)</title><rect x="387.3" y="1763.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.11%)</title><rect x="387.3" y="1747.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.11%)</title><rect x="387.3" y="1731.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.11%)</title><rect x="387.3" y="1715.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="387.3" y="1699.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="387.3" y="1683.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="387.3" y="1667.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.3" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="387.3" y="1651.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.3" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="387.3" y="1635.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1619.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="390.3" y="1630.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="387.3" y="1603.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="390.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1587.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="390.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1571.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="390.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1555.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="390.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1539.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="390.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1523.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="390.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1507.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="390.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1491.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="390.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1475.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="390.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1459.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="390.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1443.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="390.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="387.3" y="1427.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="390.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="387.9" y="1699.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (6 samples, 0.34%)</title><rect x="388.6" y="1763.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (4 samples, 0.23%)</title><rect x="390.0" y="1747.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2 samples, 0.11%)</title><rect x="390.0" y="1731.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.0" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="390.0" y="1715.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.0" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="390.0" y="1699.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.0" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="390.0" y="1683.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.0" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="390.0" y="1667.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.0" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.06%)</title><rect x="390.0" y="1651.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.0" y="1662.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (1 samples, 0.06%)</title><rect x="390.6" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.6" y="1726.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.06%)</title><rect x="390.6" y="1699.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (1 samples, 0.06%)</title><rect x="390.6" y="1683.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.06%)</title><rect x="390.6" y="1667.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.6" y="1678.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (1 samples, 0.06%)</title><rect x="390.6" y="1651.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.6" y="1662.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.06%)</title><rect x="390.6" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (1 samples, 0.06%)</title><rect x="390.6" y="1619.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.6" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.06%)</title><rect x="390.6" y="1603.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.6" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="390.6" y="1587.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="390.6" y="1571.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.6" y="1582.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="390.6" y="1555.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.11%)</title><rect x="391.3" y="1731.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.3" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.11%)</title><rect x="391.3" y="1715.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.3" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.11%)</title><rect x="391.3" y="1699.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.3" y="1710.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (2 samples, 0.11%)</title><rect x="391.3" y="1683.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (2 samples, 0.11%)</title><rect x="391.3" y="1667.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.3" y="1678.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="391.3" y="1651.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="394.3" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.06%)</title><rect x="392.0" y="1651.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.11%)</title><rect x="392.6" y="1827.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.6" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="392.6" y="1811.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.6" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="392.6" y="1795.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="392.6" y="1779.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="393.3" y="1811.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="393.3" y="1795.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="393.3" y="1779.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="393.3" y="1763.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="393.3" y="1747.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.3" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="393.3" y="1731.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (1 samples, 0.06%)</title><rect x="393.3" y="1715.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="393.3" y="1699.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="393.3" y="1683.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="393.3" y="1667.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.3" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="393.3" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (1 samples, 0.06%)</title><rect x="393.3" y="1635.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1619.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="396.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1603.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="396.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1587.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="396.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1571.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="396.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1555.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="396.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1539.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1523.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="396.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="393.3" y="1507.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (14 samples, 0.79%)</title><rect x="394.0" y="1971.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="394.0" y="1955.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="394.0" y="1939.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="394.0" y="1923.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="394.0" y="1907.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="394.0" y="1891.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="394.0" y="1875.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="394.0" y="1859.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="394.0" y="1843.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="394.0" y="1827.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="394.0" y="1811.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="394.0" y="1795.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="394.0" y="1779.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="394.0" y="1763.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.0" y="1774.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="394.0" y="1747.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="397.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (13 samples, 0.74%)</title><rect x="394.6" y="1955.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (12 samples, 0.68%)</title><rect x="394.6" y="1939.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (12 samples, 0.68%)</title><rect x="394.6" y="1923.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.6" y="1907.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.6" y="1891.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.62%)</title><rect x="395.3" y="1907.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (11 samples, 0.62%)</title><rect x="395.3" y="1891.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.3" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (11 samples, 0.62%)</title><rect x="395.3" y="1875.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.3" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (11 samples, 0.62%)</title><rect x="395.3" y="1859.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.23%)</title><rect x="395.3" y="1843.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.3" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.23%)</title><rect x="395.3" y="1827.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4 samples, 0.23%)</title><rect x="395.3" y="1811.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (4 samples, 0.23%)</title><rect x="395.3" y="1795.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (4 samples, 0.23%)</title><rect x="395.3" y="1779.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (4 samples, 0.23%)</title><rect x="395.3" y="1763.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (4 samples, 0.23%)</title><rect x="395.3" y="1747.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.3" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.11%)</title><rect x="395.3" y="1731.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.11%)</title><rect x="395.3" y="1715.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.11%)</title><rect x="395.3" y="1699.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.11%)</title><rect x="395.3" y="1683.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.3" y="1694.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="395.3" y="1667.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.3" y="1678.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="395.3" y="1651.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="398.3" y="1662.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="395.3" y="1635.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="398.3" y="1646.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="395.3" y="1619.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="398.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (1 samples, 0.06%)</title><rect x="396.0" y="1651.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.11%)</title><rect x="396.6" y="1731.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.6" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.11%)</title><rect x="396.6" y="1715.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.6" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="397.3" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="397.3" y="1683.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="397.3" y="1667.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.3" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="397.3" y="1651.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.3" y="1662.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.06%)</title><rect x="397.3" y="1635.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (7 samples, 0.40%)</title><rect x="398.0" y="1843.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (7 samples, 0.40%)</title><rect x="398.0" y="1827.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.0" y="1811.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.06%)</title><rect x="398.7" y="1811.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.06%)</title><rect x="398.7" y="1795.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.06%)</title><rect x="398.7" y="1779.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.06%)</title><rect x="398.7" y="1763.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.7" y="1774.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.06%)</title><rect x="398.7" y="1747.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (5 samples, 0.28%)</title><rect x="399.3" y="1811.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.3" y="1822.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.28%)</title><rect x="399.3" y="1795.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.3" y="1806.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="399.3" y="1779.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="402.3" y="1790.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="399.3" y="1763.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="402.3" y="1774.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="399.3" y="1747.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="402.3" y="1758.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="400.0" y="1763.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="403.0" y="1774.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="400.0" y="1747.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="403.0" y="1758.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="400.0" y="1731.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="403.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (3 samples, 0.17%)</title><rect x="400.7" y="1779.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.17%)</title><rect x="400.7" y="1763.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.7" y="1774.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.17%)</title><rect x="400.7" y="1747.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.7" y="1758.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.17%)</title><rect x="400.7" y="1731.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.7" y="1742.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.17%)</title><rect x="400.7" y="1715.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.7" y="1726.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.17%)</title><rect x="400.7" y="1699.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.7" y="1710.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.11%)</title><rect x="401.3" y="1683.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.11%)</title><rect x="401.3" y="1667.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.3" y="1678.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.11%)</title><rect x="401.3" y="1651.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="404.3" y="1662.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.11%)</title><rect x="401.3" y="1635.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="404.3" y="1646.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="401.3" y="1619.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="404.3" y="1630.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="402.0" y="1619.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="405.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.06%)</title><rect x="402.7" y="1939.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.7" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="402.7" y="1923.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="402.7" y="1907.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="402.7" y="1891.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.7" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.06%)</title><rect x="403.3" y="2019.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.06%)</title><rect x="403.3" y="2003.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.3" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.91%)</title><rect x="404.0" y="2115.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.91%)</title><rect x="404.0" y="2099.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.0" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.51%)</title><rect x="404.0" y="2083.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.45%)</title><rect x="404.7" y="2067.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.7" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.45%)</title><rect x="404.7" y="2051.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.7" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.23%)</title><rect x="404.7" y="2035.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="407.7" y="2046.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="406.0" y="2019.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="409.0" y="2030.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="406.7" y="2019.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="409.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="406.7" y="2003.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="409.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="406.7" y="1987.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="409.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="407.3" y="2035.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="410.3" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.23%)</title><rect x="407.3" y="2019.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="410.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="408.0" y="2003.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="411.0" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="408.0" y="1987.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="411.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="408.7" y="1971.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="411.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="408.7" y="1955.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="411.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.4" y="1939.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="412.4" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.4" y="1923.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="412.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.4" y="1907.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="412.4" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.4" y="1891.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="412.4" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.4" y="1875.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="412.4" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="410.0" y="2083.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="410.0" y="2067.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.0" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="410.0" y="2051.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.0" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="410.0" y="2035.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.0" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="410.0" y="2019.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="410.0" y="2003.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="410.0" y="1987.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.06%)</title><rect x="410.0" y="1971.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.34%)</title><rect x="410.7" y="2083.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.7" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.34%)</title><rect x="410.7" y="2067.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.34%)</title><rect x="410.7" y="2051.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.34%)</title><rect x="410.7" y="2035.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.7" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.34%)</title><rect x="410.7" y="2019.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.7" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.28%)</title><rect x="411.4" y="2003.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="414.4" y="2014.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1987.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="414.4" y="1998.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1971.0" width="3.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="414.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1955.0" width="3.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="414.4" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1939.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="414.4" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1923.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="414.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="411.4" y="1907.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="414.4" y="1918.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="412.0" y="1891.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="415.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="412.0" y="1875.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="415.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (24 samples, 1.36%)</title><rect x="414.7" y="2115.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.7" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (24 samples, 1.36%)</title><rect x="414.7" y="2099.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (24 samples, 1.36%)</title><rect x="414.7" y="2083.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.7" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (24 samples, 1.36%)</title><rect x="414.7" y="2067.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.7" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 1.36%)</title><rect x="414.7" y="2051.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.7" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 1.36%)</title><rect x="414.7" y="2035.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.7" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 1.36%)</title><rect x="414.7" y="2019.0" width="16.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (24 samples, 1.36%)</title><rect x="414.7" y="2003.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.7" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (24 samples, 1.36%)</title><rect x="414.7" y="1987.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.7" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (24 samples, 1.36%)</title><rect x="414.7" y="1971.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.7" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (23 samples, 1.30%)</title><rect x="415.4" y="1955.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (6 samples, 0.34%)</title><rect x="416.7" y="1939.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.7" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.34%)</title><rect x="416.7" y="1923.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.34%)</title><rect x="416.7" y="1907.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5 samples, 0.28%)</title><rect x="417.4" y="1891.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.4" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="417.4" y="1875.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="420.4" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="418.0" y="1875.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.17%)</title><rect x="418.0" y="1859.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (2 samples, 0.11%)</title><rect x="418.0" y="1843.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.11%)</title><rect x="418.0" y="1827.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.11%)</title><rect x="418.0" y="1811.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.06%)</title><rect x="418.7" y="1795.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.7" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.06%)</title><rect x="418.7" y="1779.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.7" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="418.7" y="1763.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.06%)</title><rect x="418.7" y="1747.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.06%)</title><rect x="418.7" y="1731.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.06%)</title><rect x="418.7" y="1715.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (1 samples, 0.06%)</title><rect x="419.4" y="1843.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.06%)</title><rect x="419.4" y="1827.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="419.4" y="1811.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="419.4" y="1795.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.06%)</title><rect x="419.4" y="1779.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="419.4" y="1763.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (1 samples, 0.06%)</title><rect x="419.4" y="1747.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.06%)</title><rect x="419.4" y="1731.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="419.4" y="1715.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="419.4" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="419.4" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="419.4" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="419.4" y="1651.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="419.4" y="1635.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (1 samples, 0.06%)</title><rect x="419.4" y="1619.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="419.4" y="1603.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="419.4" y="1587.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.06%)</title><rect x="419.4" y="1571.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.06%)</title><rect x="419.4" y="1555.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (1 samples, 0.06%)</title><rect x="419.4" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.06%)</title><rect x="419.4" y="1523.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.06%)</title><rect x="419.4" y="1507.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="419.4" y="1491.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="419.4" y="1475.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.06%)</title><rect x="419.4" y="1459.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="419.4" y="1443.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.06%)</title><rect x="419.4" y="1427.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.06%)</title><rect x="419.4" y="1411.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="419.4" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.4" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="419.4" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="422.4" y="1390.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.06%)</title><rect x="419.4" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="422.4" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.06%)</title><rect x="419.4" y="1347.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="422.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="420.1" y="1859.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="420.1" y="1843.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (1 samples, 0.06%)</title><rect x="420.1" y="1827.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.1" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.06%)</title><rect x="420.1" y="1811.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="420.1" y="1795.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (1 samples, 0.06%)</title><rect x="420.1" y="1779.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.06%)</title><rect x="420.1" y="1763.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.06%)</title><rect x="420.1" y="1747.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.1" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="420.1" y="1731.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="420.1" y="1715.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="420.1" y="1699.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.06%)</title><rect x="420.1" y="1683.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.06%)</title><rect x="420.1" y="1667.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.1" y="1678.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.06%)</title><rect x="420.1" y="1651.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.1" y="1662.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.06%)</title><rect x="420.1" y="1635.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.85%)</title><rect x="420.7" y="1939.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.7" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.85%)</title><rect x="420.7" y="1923.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (15 samples, 0.85%)</title><rect x="420.7" y="1907.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (15 samples, 0.85%)</title><rect x="420.7" y="1891.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (14 samples, 0.79%)</title><rect x="420.7" y="1875.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.7" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (14 samples, 0.79%)</title><rect x="420.7" y="1859.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.7" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (14 samples, 0.79%)</title><rect x="420.7" y="1843.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.7" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.79%)</title><rect x="420.7" y="1827.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.7" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.79%)</title><rect x="420.7" y="1811.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.7" y="1822.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.11%)</title><rect x="420.7" y="1795.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="1806.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.11%)</title><rect x="420.7" y="1779.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="421.4" y="1763.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="421.4" y="1747.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.06%)</title><rect x="421.4" y="1731.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.06%)</title><rect x="421.4" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1726.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.06%)</title><rect x="421.4" y="1699.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.06%)</title><rect x="421.4" y="1683.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.4" y="1694.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.06%)</title><rect x="421.4" y="1667.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="424.4" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (11 samples, 0.62%)</title><rect x="422.1" y="1795.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.1" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (11 samples, 0.62%)</title><rect x="422.1" y="1779.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1763.0" width="7.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="425.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1747.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="425.1" y="1758.0"></text>
</g>
<g>
<title>__GI___writev (11 samples, 0.62%)</title><rect x="422.1" y="1731.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="425.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1715.0" width="7.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="425.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1699.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="425.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1683.0" width="7.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="425.1" y="1694.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1667.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="425.1" y="1678.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1651.0" width="7.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="425.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1635.0" width="7.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="425.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1619.0" width="7.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="425.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1603.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="425.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1587.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="425.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="422.1" y="1571.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="425.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="422.7" y="1555.0" width="6.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="425.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="422.7" y="1539.0" width="6.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="425.7" y="1550.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="424.1" y="1523.0" width="5.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="427.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="424.7" y="1507.0" width="4.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="427.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="425.4" y="1491.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="428.4" y="1502.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="425.4" y="1475.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="428.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="426.1" y="1459.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="429.1" y="1470.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="426.1" y="1443.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="429.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="426.1" y="1427.0" width="3.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="429.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="426.1" y="1411.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="429.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="426.1" y="1395.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="429.1" y="1406.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="426.7" y="1379.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="429.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="427.4" y="1363.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="430.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="427.4" y="1347.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="430.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="427.4" y="1331.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="430.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="427.4" y="1315.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="430.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="428.1" y="1299.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="431.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="428.1" y="1283.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="431.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1267.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="431.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1251.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="431.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1235.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="431.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1219.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="431.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1203.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="431.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1187.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="431.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1171.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="431.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1155.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="431.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1139.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="431.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1123.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="431.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1107.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="431.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1091.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="431.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1075.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="431.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="428.8" y="1059.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="431.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="429.4" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.4" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="429.4" y="1779.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.06%)</title><rect x="430.1" y="1875.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.1" y="1886.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.06%)</title><rect x="430.1" y="1859.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.1" y="1870.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.06%)</title><rect x="430.1" y="1843.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.1" y="1854.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.06%)</title><rect x="430.1" y="1827.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.1" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (21 samples, 1.19%)</title><rect x="430.8" y="2115.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (21 samples, 1.19%)</title><rect x="430.8" y="2099.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13 samples, 0.74%)</title><rect x="430.8" y="2083.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (13 samples, 0.74%)</title><rect x="430.8" y="2067.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (13 samples, 0.74%)</title><rect x="430.8" y="2051.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.17%)</title><rect x="430.8" y="2035.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3 samples, 0.17%)</title><rect x="430.8" y="2019.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.17%)</title><rect x="430.8" y="2003.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.17%)</title><rect x="430.8" y="1987.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.17%)</title><rect x="430.8" y="1971.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.17%)</title><rect x="430.8" y="1955.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.17%)</title><rect x="430.8" y="1939.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.8" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.17%)</title><rect x="430.8" y="1923.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.17%)</title><rect x="430.8" y="1907.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.8" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.17%)</title><rect x="430.8" y="1891.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.8" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.17%)</title><rect x="430.8" y="1875.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1859.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="433.8" y="1870.0"></text>
</g>
<g>
<title>write (3 samples, 0.17%)</title><rect x="430.8" y="1843.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="433.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1827.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="433.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1811.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="433.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1795.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="433.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1779.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="433.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1763.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="433.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1747.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="433.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1731.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="433.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1715.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="433.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1699.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="433.8" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1683.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="433.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="430.8" y="1667.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="433.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (10 samples, 0.57%)</title><rect x="432.8" y="2035.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (10 samples, 0.57%)</title><rect x="432.8" y="2019.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.57%)</title><rect x="432.8" y="2003.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.57%)</title><rect x="432.8" y="1987.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.17%)</title><rect x="432.8" y="1971.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.8" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.17%)</title><rect x="432.8" y="1955.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.17%)</title><rect x="432.8" y="1939.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.17%)</title><rect x="432.8" y="1923.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.17%)</title><rect x="432.8" y="1907.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.17%)</title><rect x="432.8" y="1891.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.17%)</title><rect x="432.8" y="1875.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.11%)</title><rect x="432.8" y="1859.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="432.8" y="1843.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.06%)</title><rect x="432.8" y="1827.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (1 samples, 0.06%)</title><rect x="432.8" y="1811.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.06%)</title><rect x="432.8" y="1795.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.06%)</title><rect x="432.8" y="1779.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.06%)</title><rect x="432.8" y="1763.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.06%)</title><rect x="432.8" y="1747.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.8" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.06%)</title><rect x="433.4" y="1827.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.4" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="433.4" y="1811.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (1 samples, 0.06%)</title><rect x="434.1" y="1859.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.1" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.06%)</title><rect x="434.1" y="1843.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.06%)</title><rect x="434.1" y="1827.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.1" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7 samples, 0.40%)</title><rect x="434.8" y="1971.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (6 samples, 0.34%)</title><rect x="435.4" y="1955.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="436.1" y="1939.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="436.1" y="1923.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.23%)</title><rect x="436.8" y="1939.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="436.8" y="1923.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="436.8" y="1907.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="436.8" y="1891.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="437.4" y="1923.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.4" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="437.4" y="1907.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.4" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="437.4" y="1891.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="438.1" y="1923.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="438.1" y="1907.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="438.8" y="1923.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="438.8" y="1907.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="438.8" y="1891.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="438.8" y="1875.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.8" y="1886.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="438.8" y="1859.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.8" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="438.8" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (8 samples, 0.45%)</title><rect x="439.5" y="2083.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.45%)</title><rect x="439.5" y="2067.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.5" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.45%)</title><rect x="439.5" y="2051.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (8 samples, 0.45%)</title><rect x="439.5" y="2035.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.45%)</title><rect x="439.5" y="2019.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.45%)</title><rect x="439.5" y="2003.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (8 samples, 0.45%)</title><rect x="439.5" y="1987.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (8 samples, 0.45%)</title><rect x="439.5" y="1971.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (3 samples, 0.17%)</title><rect x="439.5" y="1955.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3 samples, 0.17%)</title><rect x="439.5" y="1939.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.06%)</title><rect x="439.5" y="1923.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.11%)</title><rect x="440.1" y="1923.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.1" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="440.1" y="1907.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.1" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="440.1" y="1891.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.1" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="440.1" y="1875.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.1" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="440.1" y="1859.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.1" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.06%)</title><rect x="440.1" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.1" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.06%)</title><rect x="440.1" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.1" y="1838.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="440.1" y="1811.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.1" y="1795.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="443.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.1" y="1779.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="443.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.1" y="1763.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="443.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="440.8" y="1907.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="440.8" y="1891.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.06%)</title><rect x="440.8" y="1875.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="440.8" y="1859.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.8" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.06%)</title><rect x="440.8" y="1843.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.06%)</title><rect x="440.8" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="440.8" y="1811.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="440.8" y="1795.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="440.8" y="1779.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.8" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="440.8" y="1763.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.8" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="440.8" y="1747.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1731.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="443.8" y="1742.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="440.8" y="1715.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="443.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1699.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="443.8" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1683.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="443.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1667.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="443.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1651.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="443.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1635.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="443.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1619.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="443.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1603.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="443.8" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1587.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="443.8" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="440.8" y="1571.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="443.8" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (4 samples, 0.23%)</title><rect x="441.5" y="1955.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (4 samples, 0.23%)</title><rect x="441.5" y="1939.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (4 samples, 0.23%)</title><rect x="441.5" y="1923.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="441.5" y="1907.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="441.5" y="1891.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.23%)</title><rect x="441.5" y="1875.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.23%)</title><rect x="441.5" y="1859.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (4 samples, 0.23%)</title><rect x="441.5" y="1843.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (4 samples, 0.23%)</title><rect x="441.5" y="1827.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.5" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="441.5" y="1811.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.5" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="441.5" y="1795.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="441.5" y="1779.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="441.5" y="1763.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="441.5" y="1747.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.17%)</title><rect x="442.1" y="1795.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.1" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="442.1" y="1779.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.06%)</title><rect x="442.1" y="1763.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.06%)</title><rect x="442.1" y="1747.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.1" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="442.1" y="1731.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.connection (1 samples, 0.06%)</title><rect x="442.1" y="1715.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.1" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.11%)</title><rect x="442.8" y="1779.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.8" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.11%)</title><rect x="442.8" y="1763.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.8" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="442.8" y="1747.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.8" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.11%)</title><rect x="442.8" y="1731.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.11%)</title><rect x="442.8" y="1715.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.8" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.11%)</title><rect x="442.8" y="1699.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.8" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.11%)</title><rect x="442.8" y="1683.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.8" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="442.8" y="1667.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="442.8" y="1651.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="1662.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="442.8" y="1635.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="445.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="442.8" y="1619.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="445.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="442.8" y="1603.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="445.8" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="442.8" y="1587.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="445.8" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="443.5" y="1571.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="446.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="443.5" y="1555.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="446.5" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="443.5" y="1539.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="446.5" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="443.5" y="1523.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="446.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="443.5" y="1507.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="446.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="444.1" y="1955.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.1" y="1966.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13376] (92 samples, 5.22%)</title><rect x="444.8" y="2179.0" width="61.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="447.8" y="2190.0">[async..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="444.8" y="2163.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="447.8" y="2174.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="444.8" y="2147.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="447.8" y="2158.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.06%)</title><rect x="445.5" y="2163.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="448.5" y="2174.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (1 samples, 0.06%)</title><rect x="445.5" y="2147.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="448.5" y="2158.0"></text>
</g>
<g>
<title>__GI__IO_padn (1 samples, 0.06%)</title><rect x="445.5" y="2131.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="448.5" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2163.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="449.1" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="446.1" y="2147.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="449.1" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2131.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="449.1" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2115.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="449.1" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2099.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="449.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2083.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="449.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2067.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2051.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="449.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="446.1" y="2035.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="449.1" y="2046.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.11%)</title><rect x="446.8" y="2163.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="449.8" y="2174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="446.8" y="2147.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="449.8" y="2158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="446.8" y="2131.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="449.8" y="2142.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="446.8" y="2115.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="449.8" y="2126.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="446.8" y="2099.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="449.8" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="446.8" y="2083.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="449.8" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="446.8" y="2067.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="449.8" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="447.5" y="2051.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="450.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="447.5" y="2035.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="450.5" y="2046.0"></text>
</g>
<g>
<title>java/lang/Thread.run (87 samples, 4.93%)</title><rect x="448.2" y="2163.0" width="58.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.2" y="2174.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (87 samples, 4.93%)</title><rect x="448.2" y="2147.0" width="58.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.2" y="2158.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (87 samples, 4.93%)</title><rect x="448.2" y="2131.0" width="58.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.2" y="2142.0">java/u..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="448.8" y="2115.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.8" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (22 samples, 1.25%)</title><rect x="449.5" y="2115.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.5" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 1.25%)</title><rect x="449.5" y="2099.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.5" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 1.25%)</title><rect x="449.5" y="2083.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (22 samples, 1.25%)</title><rect x="449.5" y="2067.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (22 samples, 1.25%)</title><rect x="449.5" y="2051.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (22 samples, 1.25%)</title><rect x="449.5" y="2035.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.5" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="449.5" y="2019.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.5" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="449.5" y="2003.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.get$Lambda (1 samples, 0.06%)</title><rect x="449.5" y="1987.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (17 samples, 0.96%)</title><rect x="450.2" y="2019.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (17 samples, 0.96%)</title><rect x="450.2" y="2003.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.2" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (17 samples, 0.96%)</title><rect x="450.2" y="1987.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.2" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.11%)</title><rect x="450.2" y="1971.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.11%)</title><rect x="450.2" y="1955.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.11%)</title><rect x="450.2" y="1939.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (2 samples, 0.11%)</title><rect x="450.2" y="1923.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2 samples, 0.11%)</title><rect x="450.2" y="1907.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.11%)</title><rect x="450.2" y="1891.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (2 samples, 0.11%)</title><rect x="450.2" y="1875.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.11%)</title><rect x="450.2" y="1859.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.2" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.11%)</title><rect x="450.2" y="1843.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.11%)</title><rect x="450.2" y="1827.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.11%)</title><rect x="450.2" y="1811.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (2 samples, 0.11%)</title><rect x="450.2" y="1795.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2 samples, 0.11%)</title><rect x="450.2" y="1779.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="450.2" y="1763.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.2" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="450.2" y="1747.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="450.2" y="1731.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="450.2" y="1715.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="450.2" y="1699.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="450.2" y="1683.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="450.2" y="1667.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="450.2" y="1651.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.06%)</title><rect x="450.2" y="1635.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.06%)</title><rect x="450.2" y="1619.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.06%)</title><rect x="450.2" y="1603.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.06%)</title><rect x="450.2" y="1587.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.06%)</title><rect x="450.2" y="1571.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.2" y="1582.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.06%)</title><rect x="450.2" y="1555.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.2" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.06%)</title><rect x="450.2" y="1539.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.2" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="450.2" y="1523.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.2" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="450.2" y="1507.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.2" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.06%)</title><rect x="450.2" y="1491.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.2" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.06%)</title><rect x="450.2" y="1475.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1459.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="453.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1443.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="453.2" y="1454.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.06%)</title><rect x="450.2" y="1427.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="453.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1411.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="453.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1395.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="453.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1379.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="453.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1363.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="453.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1347.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="453.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1331.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="453.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1315.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="453.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1299.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="453.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1283.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="453.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1267.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="453.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1251.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="453.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1235.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="453.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1219.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="453.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1203.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="453.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1187.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="453.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1171.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="453.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1155.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="453.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1139.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="453.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1123.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="453.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1107.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="453.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1091.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="453.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1075.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="453.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1059.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="453.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="450.2" y="1043.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="453.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.06%)</title><rect x="450.8" y="1763.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.06%)</title><rect x="450.8" y="1747.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1 samples, 0.06%)</title><rect x="450.8" y="1731.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.8" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.06%)</title><rect x="450.8" y="1715.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.8" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.06%)</title><rect x="450.8" y="1699.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.8" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.06%)</title><rect x="450.8" y="1683.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.8" y="1694.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (1 samples, 0.06%)</title><rect x="450.8" y="1667.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.8" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.06%)</title><rect x="450.8" y="1651.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.8" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="450.8" y="1635.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.8" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.06%)</title><rect x="450.8" y="1619.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.8" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="450.8" y="1603.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.8" y="1614.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="450.8" y="1587.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="453.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (15 samples, 0.85%)</title><rect x="451.5" y="1971.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.5" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="451.5" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="451.5" y="1939.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/608354407.apply (1 samples, 0.06%)</title><rect x="451.5" y="1923.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.06%)</title><rect x="451.5" y="1907.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="452.2" y="1955.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="452.2" y="1939.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.2" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="452.2" y="1923.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.06%)</title><rect x="452.2" y="1907.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="452.2" y="1891.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="452.2" y="1875.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (13 samples, 0.74%)</title><rect x="452.8" y="1955.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (12 samples, 0.68%)</title><rect x="452.8" y="1939.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (12 samples, 0.68%)</title><rect x="452.8" y="1923.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.68%)</title><rect x="452.8" y="1907.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (12 samples, 0.68%)</title><rect x="452.8" y="1891.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (12 samples, 0.68%)</title><rect x="452.8" y="1875.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (12 samples, 0.68%)</title><rect x="452.8" y="1859.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.17%)</title><rect x="452.8" y="1843.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.17%)</title><rect x="452.8" y="1827.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.17%)</title><rect x="452.8" y="1811.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (3 samples, 0.17%)</title><rect x="452.8" y="1795.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3 samples, 0.17%)</title><rect x="452.8" y="1779.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3 samples, 0.17%)</title><rect x="452.8" y="1763.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3 samples, 0.17%)</title><rect x="452.8" y="1747.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.17%)</title><rect x="452.8" y="1731.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.17%)</title><rect x="452.8" y="1715.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.17%)</title><rect x="452.8" y="1699.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.17%)</title><rect x="452.8" y="1683.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="1694.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.17%)</title><rect x="452.8" y="1667.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="1678.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="452.8" y="1651.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="455.8" y="1662.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="453.5" y="1635.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="456.5" y="1646.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="453.5" y="1619.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="456.5" y="1630.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.06%)</title><rect x="454.2" y="1651.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="457.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9 samples, 0.51%)</title><rect x="454.8" y="1843.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (9 samples, 0.51%)</title><rect x="454.8" y="1827.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.11%)</title><rect x="454.8" y="1811.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.11%)</title><rect x="454.8" y="1795.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="454.8" y="1779.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="455.5" y="1779.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="456.2" y="1811.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (6 samples, 0.34%)</title><rect x="456.8" y="1811.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.8" y="1822.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.34%)</title><rect x="456.8" y="1795.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.8" y="1806.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="456.8" y="1779.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="459.8" y="1790.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="456.8" y="1763.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="459.8" y="1774.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="456.8" y="1747.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="459.8" y="1758.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.06%)</title><rect x="456.8" y="1731.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="459.8" y="1742.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="457.5" y="1763.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="460.5" y="1774.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="457.5" y="1747.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="460.5" y="1758.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.06%)</title><rect x="458.2" y="1779.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="461.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="458.2" y="1763.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="461.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="458.2" y="1747.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="461.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="458.2" y="1731.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="461.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="458.2" y="1715.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="461.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="458.2" y="1699.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="461.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (3 samples, 0.17%)</title><rect x="458.9" y="1779.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.17%)</title><rect x="458.9" y="1763.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.9" y="1774.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.17%)</title><rect x="458.9" y="1747.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.9" y="1758.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.17%)</title><rect x="458.9" y="1731.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.9" y="1742.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.17%)</title><rect x="458.9" y="1715.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.9" y="1726.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.17%)</title><rect x="458.9" y="1699.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="459.5" y="1683.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.5" y="1694.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="459.5" y="1667.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.5" y="1678.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="460.2" y="1683.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.06%)</title><rect x="460.2" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.2" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="460.2" y="1651.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.2" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="460.2" y="1635.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.2" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="460.2" y="1619.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="460.2" y="1603.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.2" y="1614.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="460.2" y="1587.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="463.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.06%)</title><rect x="460.9" y="1939.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="460.9" y="1923.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (4 samples, 0.23%)</title><rect x="461.5" y="2019.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (3 samples, 0.17%)</title><rect x="461.5" y="2003.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.5" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.17%)</title><rect x="461.5" y="1987.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.5" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.17%)</title><rect x="461.5" y="1971.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="461.5" y="1955.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="464.5" y="1966.0"></text>
</g>
<g>
<title>write (3 samples, 0.17%)</title><rect x="461.5" y="1939.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="464.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1923.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="465.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1907.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="465.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1891.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="465.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1875.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="465.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1859.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="465.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1843.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="465.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1827.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="465.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1811.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="465.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1795.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="465.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1779.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="465.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="462.2" y="1763.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="465.2" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="463.5" y="2003.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.06%)</title><rect x="464.2" y="2115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.2" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="464.2" y="2099.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.2" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.06%)</title><rect x="464.2" y="2083.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.2" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 1.13%)</title><rect x="464.9" y="2115.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.9" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (20 samples, 1.13%)</title><rect x="464.9" y="2099.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.9" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.85%)</title><rect x="464.9" y="2083.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.23%)</title><rect x="464.9" y="2067.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.9" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.17%)</title><rect x="465.5" y="2051.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.17%)</title><rect x="465.5" y="2035.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="465.5" y="2019.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="465.5" y="2003.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.5" y="2014.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.17%)</title><rect x="465.5" y="1987.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="468.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="466.2" y="1971.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="469.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="466.2" y="1955.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="469.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="466.2" y="1939.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="469.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="466.2" y="1923.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="469.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="466.9" y="1907.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="469.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="466.9" y="1891.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="469.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="466.9" y="1875.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="469.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="466.9" y="1859.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="469.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.62%)</title><rect x="467.6" y="2067.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.6" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.62%)</title><rect x="467.6" y="2051.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.6" y="2062.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="467.6" y="2035.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="470.6" y="2046.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.28%)</title><rect x="468.2" y="2035.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="471.2" y="2046.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="468.2" y="2019.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="471.2" y="2030.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="468.9" y="2019.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="471.9" y="2030.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="468.9" y="2003.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="471.9" y="2014.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.06%)</title><rect x="469.6" y="2019.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.6" y="2030.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="470.2" y="2019.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="473.2" y="2030.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="470.9" y="2019.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="473.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="471.6" y="2035.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="474.6" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.28%)</title><rect x="471.6" y="2019.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="474.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="2003.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="475.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="1987.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="475.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="1971.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="475.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="1955.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="475.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="1939.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="475.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="472.2" y="1923.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="475.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="473.6" y="1907.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="476.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.17%)</title><rect x="474.9" y="2083.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.17%)</title><rect x="474.9" y="2067.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.17%)</title><rect x="474.9" y="2051.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.06%)</title><rect x="475.6" y="2035.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.6" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="476.2" y="2035.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.2" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="476.2" y="2019.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.06%)</title><rect x="476.2" y="2003.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="476.9" y="2083.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="476.9" y="2067.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.9" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="476.9" y="2051.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.9" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="476.9" y="2035.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="476.9" y="2019.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.9" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="476.9" y="2003.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="479.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1987.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="480.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1971.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="480.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1955.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1939.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="480.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1923.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="480.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1907.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="480.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1891.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="480.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="477.6" y="1875.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="480.6" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (15 samples, 0.85%)</title><rect x="478.3" y="2115.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15 samples, 0.85%)</title><rect x="478.3" y="2099.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15 samples, 0.85%)</title><rect x="478.3" y="2083.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (15 samples, 0.85%)</title><rect x="478.3" y="2067.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.85%)</title><rect x="478.3" y="2051.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.3" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.85%)</title><rect x="478.3" y="2035.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.85%)</title><rect x="478.3" y="2019.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 0.85%)</title><rect x="478.3" y="2003.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 0.85%)</title><rect x="478.3" y="1987.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15 samples, 0.85%)</title><rect x="478.3" y="1971.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (15 samples, 0.85%)</title><rect x="478.3" y="1955.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 0.11%)</title><rect x="478.3" y="1939.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.3" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.11%)</title><rect x="478.3" y="1923.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.11%)</title><rect x="478.3" y="1907.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.11%)</title><rect x="478.3" y="1891.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="478.3" y="1875.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.11%)</title><rect x="478.3" y="1859.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.3" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (2 samples, 0.11%)</title><rect x="478.3" y="1843.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.11%)</title><rect x="478.3" y="1827.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.06%)</title><rect x="478.9" y="1811.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.06%)</title><rect x="478.9" y="1795.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.06%)</title><rect x="478.9" y="1779.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.9" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="478.9" y="1763.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.9" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.06%)</title><rect x="478.9" y="1747.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.06%)</title><rect x="478.9" y="1731.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.9" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.06%)</title><rect x="478.9" y="1715.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.9" y="1699.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (13 samples, 0.74%)</title><rect x="479.6" y="1939.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (13 samples, 0.74%)</title><rect x="479.6" y="1923.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (13 samples, 0.74%)</title><rect x="479.6" y="1907.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (13 samples, 0.74%)</title><rect x="479.6" y="1891.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (13 samples, 0.74%)</title><rect x="479.6" y="1875.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.6" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (13 samples, 0.74%)</title><rect x="479.6" y="1859.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.6" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (13 samples, 0.74%)</title><rect x="479.6" y="1843.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.6" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.74%)</title><rect x="479.6" y="1827.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.6" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.74%)</title><rect x="479.6" y="1811.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.6" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (12 samples, 0.68%)</title><rect x="479.6" y="1795.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.6" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (12 samples, 0.68%)</title><rect x="479.6" y="1779.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.6" y="1790.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1763.0" width="8.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="482.6" y="1774.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1747.0" width="8.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="482.6" y="1758.0"></text>
</g>
<g>
<title>__GI___writev (12 samples, 0.68%)</title><rect x="479.6" y="1731.0" width="8.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="482.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1715.0" width="8.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="482.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1699.0" width="8.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="482.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1683.0" width="8.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="482.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1667.0" width="8.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="482.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1651.0" width="8.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="482.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1635.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="482.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.68%)</title><rect x="479.6" y="1619.0" width="8.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="482.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1603.0" width="7.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="483.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1587.0" width="7.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="483.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1571.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="483.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1555.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="483.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1539.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="483.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1523.0" width="7.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="483.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.62%)</title><rect x="480.3" y="1507.0" width="7.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="483.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.57%)</title><rect x="480.9" y="1491.0" width="6.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.51%)</title><rect x="481.6" y="1475.0" width="6.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="484.6" y="1486.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.51%)</title><rect x="481.6" y="1459.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="484.6" y="1470.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1443.0" width="5.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="485.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1427.0" width="5.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="485.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1411.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="485.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1395.0" width="5.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="485.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1379.0" width="5.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="485.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1363.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="485.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1347.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="485.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.45%)</title><rect x="482.3" y="1331.0" width="5.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="485.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="482.9" y="1315.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="485.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="483.6" y="1299.0" width="4.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="486.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="484.3" y="1283.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="487.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="484.3" y="1267.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="487.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="484.3" y="1251.0" width="3.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="487.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1235.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="487.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1219.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="487.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1203.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="487.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1187.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="487.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1171.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="487.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1155.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="487.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="484.9" y="1139.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="487.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="486.3" y="1123.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="489.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="486.3" y="1107.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="489.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="486.3" y="1091.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="489.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="486.3" y="1075.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="489.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="486.3" y="1059.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="489.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="487.6" y="1795.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.6" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="487.6" y="1779.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (27 samples, 1.53%)</title><rect x="488.3" y="2115.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.3" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (27 samples, 1.53%)</title><rect x="488.3" y="2099.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (21 samples, 1.19%)</title><rect x="488.3" y="2083.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (21 samples, 1.19%)</title><rect x="488.3" y="2067.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (21 samples, 1.19%)</title><rect x="488.3" y="2051.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.3" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.17%)</title><rect x="489.0" y="2035.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.0" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3 samples, 0.17%)</title><rect x="489.0" y="2019.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.17%)</title><rect x="489.0" y="2003.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.17%)</title><rect x="489.0" y="1987.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.11%)</title><rect x="489.6" y="1971.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.6" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.11%)</title><rect x="489.6" y="1955.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.11%)</title><rect x="489.6" y="1939.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.11%)</title><rect x="489.6" y="1923.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.11%)</title><rect x="489.6" y="1907.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.6" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="490.3" y="1891.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="490.3" y="1875.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1859.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="493.3" y="1870.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="490.3" y="1843.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="493.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1827.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="493.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1811.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="493.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1795.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="493.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1779.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="493.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.3" y="1763.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="493.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 0.96%)</title><rect x="491.0" y="2035.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (17 samples, 0.96%)</title><rect x="491.0" y="2019.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.96%)</title><rect x="491.0" y="2003.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.96%)</title><rect x="491.0" y="1987.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (15 samples, 0.85%)</title><rect x="491.0" y="1971.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.85%)</title><rect x="491.0" y="1955.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.85%)</title><rect x="491.0" y="1939.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.85%)</title><rect x="491.0" y="1923.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.85%)</title><rect x="491.0" y="1907.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (14 samples, 0.79%)</title><rect x="491.0" y="1891.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.79%)</title><rect x="491.0" y="1875.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14 samples, 0.79%)</title><rect x="491.0" y="1859.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.79%)</title><rect x="491.0" y="1843.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12 samples, 0.68%)</title><rect x="491.0" y="1827.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="491.0" y="1811.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$252/880584287.apply (1 samples, 0.06%)</title><rect x="491.0" y="1795.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (9 samples, 0.51%)</title><rect x="491.6" y="1811.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (9 samples, 0.51%)</title><rect x="491.6" y="1795.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (9 samples, 0.51%)</title><rect x="491.6" y="1779.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="491.6" y="1763.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="491.6" y="1747.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="491.6" y="1731.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.6" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.06%)</title><rect x="491.6" y="1715.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.6" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (8 samples, 0.45%)</title><rect x="492.3" y="1763.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (7 samples, 0.40%)</title><rect x="492.3" y="1747.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.3" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.23%)</title><rect x="492.3" y="1731.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.3" y="1742.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.17%)</title><rect x="492.3" y="1715.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1699.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="495.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1683.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="495.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1667.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="495.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1651.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="495.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1635.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="495.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="492.3" y="1619.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="495.3" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.11%)</title><rect x="493.0" y="1699.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.0" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.11%)</title><rect x="493.0" y="1683.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.0" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.11%)</title><rect x="493.0" y="1667.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.0" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.11%)</title><rect x="493.0" y="1651.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.0" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.11%)</title><rect x="493.0" y="1635.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.0" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.06%)</title><rect x="493.0" y="1619.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.0" y="1630.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.06%)</title><rect x="493.0" y="1603.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.0" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.06%)</title><rect x="493.6" y="1619.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.6" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.06%)</title><rect x="494.3" y="1715.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.17%)</title><rect x="495.0" y="1731.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (3 samples, 0.17%)</title><rect x="495.0" y="1715.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.17%)</title><rect x="495.0" y="1699.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.0" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="495.0" y="1683.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.0" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="495.0" y="1667.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.0" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.06%)</title><rect x="495.0" y="1651.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.0" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="495.0" y="1635.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.06%)</title><rect x="495.6" y="1683.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.06%)</title><rect x="496.3" y="1683.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.06%)</title><rect x="496.3" y="1667.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="497.0" y="1747.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.11%)</title><rect x="497.7" y="1811.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.11%)</title><rect x="497.7" y="1795.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.06%)</title><rect x="497.7" y="1779.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="498.3" y="1779.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="498.3" y="1763.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.11%)</title><rect x="499.0" y="1827.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.11%)</title><rect x="499.0" y="1811.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.apply (2 samples, 0.11%)</title><rect x="499.0" y="1795.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.11%)</title><rect x="499.0" y="1779.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2 samples, 0.11%)</title><rect x="499.0" y="1763.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2 samples, 0.11%)</title><rect x="499.0" y="1747.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.0" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.06%)</title><rect x="499.7" y="1731.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.7" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.06%)</title><rect x="499.7" y="1715.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.7" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.06%)</title><rect x="499.7" y="1699.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="500.3" y="1891.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="500.3" y="1875.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="500.3" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="500.3" y="1843.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.3" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="500.3" y="1827.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="500.3" y="1811.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.3" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="500.3" y="1795.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2 samples, 0.11%)</title><rect x="501.0" y="1971.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2 samples, 0.11%)</title><rect x="501.0" y="1955.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2 samples, 0.11%)</title><rect x="501.0" y="1939.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="501.0" y="1923.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="501.0" y="1907.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.0" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="501.0" y="1891.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.0" y="1902.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="501.0" y="1875.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="504.0" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="501.7" y="1923.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.7" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="501.7" y="1907.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.34%)</title><rect x="502.3" y="2083.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.34%)</title><rect x="502.3" y="2067.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.34%)</title><rect x="502.3" y="2051.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.3" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (6 samples, 0.34%)</title><rect x="502.3" y="2035.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.3" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.34%)</title><rect x="502.3" y="2019.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.34%)</title><rect x="502.3" y="2003.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.34%)</title><rect x="502.3" y="1987.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.3" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.34%)</title><rect x="502.3" y="1971.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (2 samples, 0.11%)</title><rect x="502.3" y="1955.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.11%)</title><rect x="502.3" y="1939.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.11%)</title><rect x="502.3" y="1923.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.11%)</title><rect x="502.3" y="1907.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.11%)</title><rect x="502.3" y="1891.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.3" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.11%)</title><rect x="502.3" y="1875.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.3" y="1886.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.06%)</title><rect x="503.0" y="1859.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.0" y="1870.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.06%)</title><rect x="503.0" y="1843.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.0" y="1854.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.06%)</title><rect x="503.0" y="1827.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (4 samples, 0.23%)</title><rect x="503.7" y="1955.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.7" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (4 samples, 0.23%)</title><rect x="503.7" y="1939.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.7" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (4 samples, 0.23%)</title><rect x="503.7" y="1923.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="503.7" y="1907.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="503.7" y="1891.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.23%)</title><rect x="503.7" y="1875.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.7" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.23%)</title><rect x="503.7" y="1859.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.7" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (4 samples, 0.23%)</title><rect x="503.7" y="1843.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (4 samples, 0.23%)</title><rect x="503.7" y="1827.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.7" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="503.7" y="1811.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.7" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="503.7" y="1795.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.7" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.17%)</title><rect x="503.7" y="1779.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.7" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.17%)</title><rect x="503.7" y="1763.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.17%)</title><rect x="503.7" y="1747.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.11%)</title><rect x="503.7" y="1731.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.11%)</title><rect x="503.7" y="1715.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.11%)</title><rect x="503.7" y="1699.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.11%)</title><rect x="503.7" y="1683.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.7" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="503.7" y="1667.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="503.7" y="1651.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.7" y="1662.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.11%)</title><rect x="503.7" y="1635.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="506.7" y="1646.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="503.7" y="1619.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="506.7" y="1630.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="504.3" y="1619.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="507.3" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="505.0" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="505.0" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.06%)</title><rect x="505.0" y="1699.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.0" y="1710.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="505.7" y="1779.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="508.7" y="1790.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13377] (98 samples, 5.56%)</title><rect x="506.3" y="2179.0" width="65.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="509.3" y="2190.0">[asyncH..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.17%)</title><rect x="506.3" y="2163.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="509.3" y="2174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.17%)</title><rect x="506.3" y="2147.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="509.3" y="2158.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="506.3" y="2131.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="509.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="506.3" y="2115.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="509.3" y="2126.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2099.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="510.0" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2083.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="510.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2067.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="510.0" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2051.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="510.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2035.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="510.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="507.0" y="2019.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="510.0" y="2030.0"></text>
</g>
<g>
<title>java/lang/Thread.run (95 samples, 5.39%)</title><rect x="508.4" y="2163.0" width="63.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.4" y="2174.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (95 samples, 5.39%)</title><rect x="508.4" y="2147.0" width="63.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.4" y="2158.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (95 samples, 5.39%)</title><rect x="508.4" y="2131.0" width="63.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.4" y="2142.0">java/ut..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.11%)</title><rect x="511.7" y="2115.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.7" y="2126.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.11%)</title><rect x="513.0" y="2115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.0" y="2126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.11%)</title><rect x="513.0" y="2099.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.0" y="2110.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.11%)</title><rect x="513.0" y="2083.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="516.0" y="2094.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.06%)</title><rect x="513.0" y="2067.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="516.0" y="2078.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="513.7" y="2067.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="516.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (39 samples, 2.21%)</title><rect x="514.4" y="2115.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.4" y="2126.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="514.4" y="2099.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="517.4" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 2.15%)</title><rect x="515.0" y="2099.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.0" y="2110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (38 samples, 2.15%)</title><rect x="515.0" y="2083.0" width="25.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.0" y="2094.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (38 samples, 2.15%)</title><rect x="515.0" y="2067.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.0" y="2078.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (38 samples, 2.15%)</title><rect x="515.0" y="2051.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.0" y="2062.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (38 samples, 2.15%)</title><rect x="515.0" y="2035.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.0" y="2046.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (26 samples, 1.47%)</title><rect x="515.0" y="2019.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (26 samples, 1.47%)</title><rect x="515.0" y="2003.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (26 samples, 1.47%)</title><rect x="515.0" y="1987.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8 samples, 0.45%)</title><rect x="515.0" y="1971.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8 samples, 0.45%)</title><rect x="515.0" y="1955.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.45%)</title><rect x="515.0" y="1939.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (8 samples, 0.45%)</title><rect x="515.0" y="1923.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (8 samples, 0.45%)</title><rect x="515.0" y="1907.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8 samples, 0.45%)</title><rect x="515.0" y="1891.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (8 samples, 0.45%)</title><rect x="515.0" y="1875.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (8 samples, 0.45%)</title><rect x="515.0" y="1859.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (8 samples, 0.45%)</title><rect x="515.0" y="1843.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.34%)</title><rect x="515.0" y="1827.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.34%)</title><rect x="515.0" y="1811.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (6 samples, 0.34%)</title><rect x="515.0" y="1795.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6 samples, 0.34%)</title><rect x="515.0" y="1779.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="515.0" y="1763.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.06%)</title><rect x="515.0" y="1747.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.0" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="515.0" y="1731.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="515.0" y="1715.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="515.0" y="1699.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.0" y="1710.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="515.0" y="1683.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="518.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3 samples, 0.17%)</title><rect x="515.7" y="1763.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.17%)</title><rect x="515.7" y="1747.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.11%)</title><rect x="516.4" y="1731.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.11%)</title><rect x="516.4" y="1715.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.11%)</title><rect x="516.4" y="1699.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.11%)</title><rect x="516.4" y="1683.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.11%)</title><rect x="516.4" y="1667.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.4" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.11%)</title><rect x="516.4" y="1651.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.4" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.11%)</title><rect x="516.4" y="1635.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.4" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="516.4" y="1619.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="519.4" y="1630.0"></text>
</g>
<g>
<title>write (2 samples, 0.11%)</title><rect x="516.4" y="1603.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="519.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="517.1" y="1587.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="520.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="517.1" y="1571.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="520.1" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2 samples, 0.11%)</title><rect x="517.7" y="1763.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.06%)</title><rect x="517.7" y="1747.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="517.7" y="1731.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.06%)</title><rect x="517.7" y="1715.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.7" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (1 samples, 0.06%)</title><rect x="517.7" y="1699.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="517.7" y="1683.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="517.7" y="1667.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.06%)</title><rect x="518.4" y="1747.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.06%)</title><rect x="518.4" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.4" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="518.4" y="1715.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.4" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.06%)</title><rect x="518.4" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (1 samples, 0.06%)</title><rect x="518.4" y="1683.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="518.4" y="1667.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="518.4" y="1651.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.4" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="518.4" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.11%)</title><rect x="519.1" y="1827.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.1" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="519.1" y="1811.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.1" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="519.1" y="1795.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$202/804098885.get$Lambda (1 samples, 0.06%)</title><rect x="519.1" y="1779.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$202/804098885.&lt;init&gt; (1 samples, 0.06%)</title><rect x="519.1" y="1763.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="519.7" y="1811.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="519.7" y="1795.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="519.7" y="1779.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="519.7" y="1763.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="519.7" y="1747.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="519.7" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (1 samples, 0.06%)</title><rect x="519.7" y="1715.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="519.7" y="1699.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="519.7" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.06%)</title><rect x="519.7" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="519.7" y="1651.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (18 samples, 1.02%)</title><rect x="520.4" y="1971.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.4" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (18 samples, 1.02%)</title><rect x="520.4" y="1955.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (18 samples, 1.02%)</title><rect x="520.4" y="1939.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (18 samples, 1.02%)</title><rect x="520.4" y="1923.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17 samples, 0.96%)</title><rect x="520.4" y="1907.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (17 samples, 0.96%)</title><rect x="520.4" y="1891.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (17 samples, 0.96%)</title><rect x="520.4" y="1875.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (17 samples, 0.96%)</title><rect x="520.4" y="1859.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.4" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.23%)</title><rect x="521.1" y="1843.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.23%)</title><rect x="521.1" y="1827.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4 samples, 0.23%)</title><rect x="521.1" y="1811.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (3 samples, 0.17%)</title><rect x="521.1" y="1795.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3 samples, 0.17%)</title><rect x="521.1" y="1779.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3 samples, 0.17%)</title><rect x="521.1" y="1763.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3 samples, 0.17%)</title><rect x="521.1" y="1747.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.1" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.11%)</title><rect x="521.1" y="1731.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.1" y="1742.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.06%)</title><rect x="521.1" y="1715.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.1" y="1726.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.06%)</title><rect x="521.1" y="1699.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.06%)</title><rect x="521.7" y="1715.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1 samples, 0.06%)</title><rect x="521.7" y="1699.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1 samples, 0.06%)</title><rect x="521.7" y="1683.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.7" y="1694.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="521.7" y="1667.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.7" y="1678.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="521.7" y="1651.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="524.7" y="1662.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="521.7" y="1635.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="524.7" y="1646.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="521.7" y="1619.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="524.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.06%)</title><rect x="522.4" y="1731.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.4" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="522.4" y="1715.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.4" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="522.4" y="1699.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="522.4" y="1683.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="522.4" y="1667.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="522.4" y="1651.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.4" y="1662.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.06%)</title><rect x="522.4" y="1635.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.06%)</title><rect x="523.1" y="1795.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.06%)</title><rect x="523.1" y="1779.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (12 samples, 0.68%)</title><rect x="523.7" y="1843.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (11 samples, 0.62%)</title><rect x="523.7" y="1827.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.11%)</title><rect x="523.7" y="1811.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.06%)</title><rect x="525.1" y="1811.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.06%)</title><rect x="525.1" y="1795.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.06%)</title><rect x="525.1" y="1779.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.06%)</title><rect x="525.1" y="1763.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.1" y="1774.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.06%)</title><rect x="525.1" y="1747.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.1" y="1758.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.06%)</title><rect x="525.1" y="1731.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.1" y="1742.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.06%)</title><rect x="525.1" y="1715.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (8 samples, 0.45%)</title><rect x="525.7" y="1811.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.7" y="1822.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.45%)</title><rect x="525.7" y="1795.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.7" y="1806.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.11%)</title><rect x="525.7" y="1779.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="528.7" y="1790.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="526.4" y="1763.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="529.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (6 samples, 0.34%)</title><rect x="527.1" y="1779.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.34%)</title><rect x="527.1" y="1763.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.1" y="1774.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.34%)</title><rect x="527.1" y="1747.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.1" y="1758.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.34%)</title><rect x="527.1" y="1731.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.1" y="1742.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.34%)</title><rect x="527.1" y="1715.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.1" y="1726.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.34%)</title><rect x="527.1" y="1699.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="527.1" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="527.1" y="1667.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.1" y="1678.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.06%)</title><rect x="527.1" y="1651.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="527.8" y="1683.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="527.8" y="1667.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.8" y="1678.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.23%)</title><rect x="528.4" y="1683.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.4" y="1694.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.06%)</title><rect x="528.4" y="1667.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="531.4" y="1678.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.06%)</title><rect x="528.4" y="1651.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="531.4" y="1662.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.11%)</title><rect x="529.1" y="1667.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.1" y="1678.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="529.1" y="1651.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="532.1" y="1662.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.06%)</title><rect x="529.8" y="1651.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="532.8" y="1662.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="529.8" y="1635.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="532.8" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="530.4" y="1667.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.4" y="1678.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="530.4" y="1651.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="533.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="531.1" y="1827.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.1" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="531.1" y="1811.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="531.8" y="1907.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="531.8" y="1891.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (8 samples, 0.45%)</title><rect x="532.4" y="2019.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.4" y="2030.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.11%)</title><rect x="532.4" y="2003.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.4" y="2014.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.11%)</title><rect x="532.4" y="1987.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.4" y="1998.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="532.4" y="1971.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="532.4" y="1955.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="532.4" y="1939.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.4" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="532.4" y="1923.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="533.1" y="1971.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6 samples, 0.34%)</title><rect x="533.8" y="2003.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.8" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.34%)</title><rect x="533.8" y="1987.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.8" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.34%)</title><rect x="533.8" y="1971.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1955.0" width="4.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="536.8" y="1966.0"></text>
</g>
<g>
<title>write (6 samples, 0.34%)</title><rect x="533.8" y="1939.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="536.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1923.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="536.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1907.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="536.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1891.0" width="4.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="536.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1875.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="536.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="533.8" y="1859.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="536.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="534.4" y="1843.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="537.4" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="534.4" y="1827.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="537.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="534.4" y="1811.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="537.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="534.4" y="1795.0" width="3.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="537.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="535.1" y="1779.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="538.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="535.1" y="1763.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="538.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.06%)</title><rect x="537.8" y="2019.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.11%)</title><rect x="538.5" y="2019.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.5" y="2030.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.11%)</title><rect x="538.5" y="2003.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.5" y="2014.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.11%)</title><rect x="538.5" y="1987.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.5" y="1998.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.11%)</title><rect x="538.5" y="1971.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.5" y="1982.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (2 samples, 0.11%)</title><rect x="538.5" y="1955.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1 samples, 0.06%)</title><rect x="539.1" y="1939.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.06%)</title><rect x="539.8" y="2019.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.06%)</title><rect x="539.8" y="2003.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.06%)</title><rect x="539.8" y="1987.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.8" y="1998.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="539.8" y="1971.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.8" y="1982.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.06%)</title><rect x="539.8" y="1955.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.91%)</title><rect x="540.5" y="2115.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.5" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.91%)</title><rect x="540.5" y="2099.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.5" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.57%)</title><rect x="540.5" y="2083.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.5" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.17%)</title><rect x="540.5" y="2067.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.17%)</title><rect x="540.5" y="2051.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.17%)</title><rect x="540.5" y="2035.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="540.5" y="2019.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="540.5" y="2003.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.5" y="2014.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.17%)</title><rect x="540.5" y="1987.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="543.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="540.5" y="1971.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="543.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="540.5" y="1955.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="543.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="540.5" y="1939.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="543.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="540.5" y="1923.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="543.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="540.5" y="1907.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="543.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="541.1" y="1891.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="544.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="541.1" y="1875.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="544.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="541.1" y="1859.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="544.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.40%)</title><rect x="542.5" y="2067.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.5" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.40%)</title><rect x="542.5" y="2051.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.5" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="542.5" y="2035.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="545.5" y="2046.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="542.5" y="2019.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="545.5" y="2030.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="542.5" y="2003.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="545.5" y="2014.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="543.1" y="2019.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="546.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="543.8" y="2035.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="546.8" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.23%)</title><rect x="543.8" y="2019.0" width="2.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="546.8" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="2003.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="548.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="1987.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="548.8" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="1971.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="548.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="1955.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="548.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="1939.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="548.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="545.8" y="1923.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="548.8" y="1934.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="546.5" y="2019.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="549.5" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.11%)</title><rect x="547.2" y="2083.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.2" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.11%)</title><rect x="547.2" y="2067.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.2" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.11%)</title><rect x="547.2" y="2051.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.2" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="547.8" y="2035.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.8" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="547.8" y="2019.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="547.8" y="2003.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1987.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="550.8" y="1998.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="547.8" y="1971.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="550.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1955.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="550.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1939.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="550.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1923.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="550.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1907.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="550.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1891.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="550.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="547.8" y="1875.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="550.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.23%)</title><rect x="548.5" y="2083.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.5" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.23%)</title><rect x="548.5" y="2067.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="548.5" y="2051.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="548.5" y="2035.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.5" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="548.5" y="2019.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.5" y="2030.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="548.5" y="2003.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="551.5" y="2014.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="548.5" y="1987.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="551.5" y="1998.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.17%)</title><rect x="549.2" y="2003.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="552.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="549.2" y="1987.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="552.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="549.2" y="1971.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="552.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="549.2" y="1955.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="552.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="549.8" y="1939.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="552.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="549.8" y="1923.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="552.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="549.8" y="1907.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="552.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="550.5" y="1891.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="553.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="550.5" y="1875.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="553.5" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (12 samples, 0.68%)</title><rect x="551.2" y="2115.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.2" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (12 samples, 0.68%)</title><rect x="551.2" y="2099.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (12 samples, 0.68%)</title><rect x="551.2" y="2083.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.62%)</title><rect x="551.8" y="2067.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.62%)</title><rect x="551.8" y="2051.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.62%)</title><rect x="551.8" y="2035.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.62%)</title><rect x="551.8" y="2019.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.62%)</title><rect x="551.8" y="2003.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.62%)</title><rect x="551.8" y="1987.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.62%)</title><rect x="551.8" y="1971.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.62%)</title><rect x="551.8" y="1955.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.06%)</title><rect x="551.8" y="1939.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.06%)</title><rect x="551.8" y="1923.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="551.8" y="1907.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.06%)</title><rect x="551.8" y="1891.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="551.8" y="1875.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="551.8" y="1859.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="551.8" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (1 samples, 0.06%)</title><rect x="551.8" y="1827.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.06%)</title><rect x="551.8" y="1811.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="551.8" y="1795.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (1 samples, 0.06%)</title><rect x="551.8" y="1779.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.06%)</title><rect x="551.8" y="1763.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.06%)</title><rect x="551.8" y="1747.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="551.8" y="1731.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="551.8" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="551.8" y="1699.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.06%)</title><rect x="551.8" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.06%)</title><rect x="551.8" y="1667.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (10 samples, 0.57%)</title><rect x="552.5" y="1939.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (10 samples, 0.57%)</title><rect x="552.5" y="1923.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (10 samples, 0.57%)</title><rect x="552.5" y="1907.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (10 samples, 0.57%)</title><rect x="552.5" y="1891.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.5" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (10 samples, 0.57%)</title><rect x="552.5" y="1875.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.5" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (10 samples, 0.57%)</title><rect x="552.5" y="1859.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.5" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (10 samples, 0.57%)</title><rect x="552.5" y="1843.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.5" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (10 samples, 0.57%)</title><rect x="552.5" y="1827.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.5" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (10 samples, 0.57%)</title><rect x="552.5" y="1811.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.5" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (1 samples, 0.06%)</title><rect x="552.5" y="1795.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.5" y="1806.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.06%)</title><rect x="552.5" y="1779.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="555.5" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (8 samples, 0.45%)</title><rect x="553.2" y="1795.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.2" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (8 samples, 0.45%)</title><rect x="553.2" y="1779.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1763.0" width="4.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="556.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1747.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="556.8" y="1758.0"></text>
</g>
<g>
<title>__GI___writev (7 samples, 0.40%)</title><rect x="553.8" y="1731.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="556.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1715.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="556.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1699.0" width="4.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="556.8" y="1710.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1683.0" width="4.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="556.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1667.0" width="4.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="556.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1651.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="556.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1635.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="556.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.40%)</title><rect x="553.8" y="1619.0" width="4.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="556.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1603.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="557.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1587.0" width="4.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1571.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="557.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1555.0" width="4.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="557.5" y="1566.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1539.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="557.5" y="1550.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1523.0" width="4.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="557.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1507.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="557.5" y="1518.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="554.5" y="1491.0" width="4.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="557.5" y="1502.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1475.0" width="3.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="558.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1459.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="558.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1443.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="558.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1427.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1411.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="558.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1395.0" width="3.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="558.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1379.0" width="3.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="558.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1363.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="558.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1347.0" width="3.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="558.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1331.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="558.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1315.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="558.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="555.2" y="1299.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="558.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1283.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1267.0" width="2.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="558.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1251.0" width="2.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="558.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1235.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="558.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1219.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="558.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1203.0" width="2.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="558.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1187.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="558.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1171.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="558.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1155.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="558.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="555.9" y="1139.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="558.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="556.5" y="1123.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="559.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="556.5" y="1107.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="559.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="556.5" y="1091.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="559.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="556.5" y="1075.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="559.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="556.5" y="1059.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="559.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="557.9" y="1043.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="560.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="558.5" y="1795.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="558.5" y="1779.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="558.5" y="1763.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.5" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19 samples, 1.08%)</title><rect x="559.2" y="2115.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.2" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19 samples, 1.08%)</title><rect x="559.2" y="2099.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.57%)</title><rect x="559.2" y="2083.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (9 samples, 0.51%)</title><rect x="559.2" y="2067.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.51%)</title><rect x="559.2" y="2051.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.06%)</title><rect x="559.2" y="2035.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.06%)</title><rect x="559.2" y="2019.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.06%)</title><rect x="559.2" y="2003.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.2" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.06%)</title><rect x="559.2" y="1987.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="559.2" y="1971.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.06%)</title><rect x="559.2" y="1955.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="559.2" y="1939.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="559.2" y="1923.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="559.2" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.2" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="559.2" y="1891.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.2" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="559.2" y="1875.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1859.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="562.2" y="1870.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="559.2" y="1843.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="562.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1827.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="562.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1811.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="562.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1795.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="562.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1779.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="562.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1763.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="562.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1747.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="562.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1731.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="562.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1715.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="562.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1699.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="562.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1683.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="562.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="559.2" y="1667.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="562.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8 samples, 0.45%)</title><rect x="559.9" y="2035.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8 samples, 0.45%)</title><rect x="559.9" y="2019.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.45%)</title><rect x="559.9" y="2003.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.9" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.45%)</title><rect x="559.9" y="1987.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.9" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="559.9" y="1971.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="559.9" y="1955.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="559.9" y="1939.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="559.9" y="1923.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="559.9" y="1907.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="559.9" y="1891.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="559.9" y="1875.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="559.9" y="1859.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="559.9" y="1843.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.06%)</title><rect x="559.9" y="1827.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (1 samples, 0.06%)</title><rect x="559.9" y="1811.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.06%)</title><rect x="559.9" y="1795.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="559.9" y="1779.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="559.9" y="1763.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.06%)</title><rect x="559.9" y="1747.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="559.9" y="1731.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.9" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (1 samples, 0.06%)</title><rect x="559.9" y="1715.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.06%)</title><rect x="559.9" y="1699.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.06%)</title><rect x="559.9" y="1683.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.06%)</title><rect x="559.9" y="1667.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.9" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="559.9" y="1651.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.9" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (1 samples, 0.06%)</title><rect x="559.9" y="1635.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (1 samples, 0.06%)</title><rect x="559.9" y="1619.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.9" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="559.9" y="1603.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.9" y="1614.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="559.9" y="1587.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.9" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="559.9" y="1571.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.9" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7 samples, 0.40%)</title><rect x="560.5" y="1971.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4 samples, 0.23%)</title><rect x="560.5" y="1955.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.5" y="1966.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.23%)</title><rect x="560.5" y="1939.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.23%)</title><rect x="560.5" y="1923.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="1934.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.06%)</title><rect x="560.5" y="1907.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.5" y="1918.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.06%)</title><rect x="560.5" y="1891.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.5" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="560.5" y="1875.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="563.5" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.17%)</title><rect x="561.2" y="1907.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.2" y="1918.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (3 samples, 0.17%)</title><rect x="561.2" y="1891.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.2" y="1902.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.17%)</title><rect x="561.2" y="1875.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="561.2" y="1859.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="561.2" y="1843.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.2" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.11%)</title><rect x="561.9" y="1859.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.9" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.11%)</title><rect x="561.9" y="1843.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.11%)</title><rect x="561.9" y="1827.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.9" y="1838.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="561.9" y="1811.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="564.9" y="1822.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="562.5" y="1811.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.5" y="1822.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="562.5" y="1795.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.5" y="1806.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="562.5" y="1779.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.5" y="1790.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="562.5" y="1763.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.5" y="1774.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.06%)</title><rect x="562.5" y="1747.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3 samples, 0.17%)</title><rect x="563.2" y="1955.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (3 samples, 0.17%)</title><rect x="563.2" y="1939.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="563.2" y="1923.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="563.2" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.2" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="563.2" y="1891.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.11%)</title><rect x="563.9" y="1923.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.11%)</title><rect x="563.9" y="1907.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="564.5" y="1891.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.5" y="1902.0"></text>
</g>
<g>
<title>wrong_method_stub (1 samples, 0.06%)</title><rect x="565.2" y="2067.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="568.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (9 samples, 0.51%)</title><rect x="565.9" y="2083.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.9" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.51%)</title><rect x="565.9" y="2067.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.9" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.51%)</title><rect x="565.9" y="2051.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.9" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (9 samples, 0.51%)</title><rect x="565.9" y="2035.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.51%)</title><rect x="565.9" y="2019.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.45%)</title><rect x="566.6" y="2003.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (8 samples, 0.45%)</title><rect x="566.6" y="1987.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (8 samples, 0.45%)</title><rect x="566.6" y="1971.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.6" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (5 samples, 0.28%)</title><rect x="566.6" y="1955.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1939.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="569.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1923.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="569.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1907.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="569.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1891.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="569.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1875.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="569.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="566.6" y="1859.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="569.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.23%)</title><rect x="567.2" y="1939.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.06%)</title><rect x="567.2" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.06%)</title><rect x="567.2" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.06%)</title><rect x="567.2" y="1891.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3 samples, 0.17%)</title><rect x="567.9" y="1923.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.17%)</title><rect x="567.9" y="1907.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.17%)</title><rect x="567.9" y="1891.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.06%)</title><rect x="567.9" y="1875.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.9" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="567.9" y="1859.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.9" y="1870.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="567.9" y="1843.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.11%)</title><rect x="568.6" y="1875.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.6" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.11%)</title><rect x="568.6" y="1859.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.11%)</title><rect x="568.6" y="1843.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.11%)</title><rect x="568.6" y="1827.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.11%)</title><rect x="568.6" y="1811.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.11%)</title><rect x="568.6" y="1795.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.11%)</title><rect x="568.6" y="1779.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.6" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.11%)</title><rect x="568.6" y="1763.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.6" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.11%)</title><rect x="568.6" y="1747.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.6" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1731.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.6" y="1742.0"></text>
</g>
<g>
<title>write (2 samples, 0.11%)</title><rect x="568.6" y="1715.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="571.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1699.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="571.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1683.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="571.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1667.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="571.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1651.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="571.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1635.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="571.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1619.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="571.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1603.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="571.6" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1587.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="571.6" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="568.6" y="1571.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="571.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="569.2" y="1555.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="572.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/191339027.accept (1 samples, 0.06%)</title><rect x="569.9" y="1955.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (1 samples, 0.06%)</title><rect x="569.9" y="1939.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (1 samples, 0.06%)</title><rect x="569.9" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="569.9" y="1907.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="569.9" y="1891.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="569.9" y="1875.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="569.9" y="1859.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.accept (1 samples, 0.06%)</title><rect x="569.9" y="1843.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.06%)</title><rect x="569.9" y="1827.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.06%)</title><rect x="569.9" y="1811.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="569.9" y="1795.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="569.9" y="1779.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.11%)</title><rect x="570.6" y="1955.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.11%)</title><rect x="570.6" y="1939.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.11%)</title><rect x="570.6" y="1923.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.11%)</title><rect x="570.6" y="1907.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="570.6" y="1891.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.11%)</title><rect x="570.6" y="1875.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.11%)</title><rect x="570.6" y="1859.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (2 samples, 0.11%)</title><rect x="570.6" y="1843.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.11%)</title><rect x="570.6" y="1827.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.6" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.11%)</title><rect x="570.6" y="1811.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="570.6" y="1795.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="570.6" y="1779.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="570.6" y="1763.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="570.6" y="1747.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="571.2" y="1779.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.2" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="571.2" y="1763.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="571.2" y="1747.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="571.2" y="1731.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="571.2" y="1715.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.2" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="571.2" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="571.2" y="1683.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="571.2" y="1667.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="571.2" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.2" y="1662.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="571.2" y="1635.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="574.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1619.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="574.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1603.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="574.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1587.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="574.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1571.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="574.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1555.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="574.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1539.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="574.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1523.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="574.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="571.2" y="1507.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="574.2" y="1518.0"></text>
</g>
<g>
<title>[asyncWorker tid=13381] (7 samples, 0.40%)</title><rect x="571.9" y="2179.0" width="4.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="574.9" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.40%)</title><rect x="571.9" y="2163.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.9" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.40%)</title><rect x="571.9" y="2147.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.9" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.40%)</title><rect x="571.9" y="2131.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.9" y="2142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (7 samples, 0.40%)</title><rect x="571.9" y="2115.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.9" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (7 samples, 0.40%)</title><rect x="571.9" y="2099.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.9" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.28%)</title><rect x="571.9" y="2083.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.9" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.23%)</title><rect x="571.9" y="2067.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.9" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="571.9" y="2051.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.9" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="571.9" y="2035.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.9" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.23%)</title><rect x="571.9" y="2019.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.9" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.23%)</title><rect x="571.9" y="2003.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="2014.0"></text>
</g>
<g>
<title>__send (4 samples, 0.23%)</title><rect x="571.9" y="1987.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="574.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1971.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1955.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="574.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1939.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="574.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1923.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="574.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1907.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="574.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1891.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="574.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1875.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="574.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1859.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="574.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1843.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="574.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1827.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="574.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1811.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="574.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1795.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="574.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1779.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="574.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1763.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1747.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="574.9" y="1758.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1731.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="574.9" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1715.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="574.9" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1699.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="574.9" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="571.9" y="1683.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="574.9" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="572.6" y="1667.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="575.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="572.6" y="1651.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="575.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="572.6" y="1635.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="575.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="573.2" y="1619.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="576.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1603.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="576.9" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1587.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="576.9" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1571.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="576.9" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1555.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="576.9" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1539.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="576.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1523.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="576.9" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1507.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="576.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1491.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="576.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="573.9" y="1475.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="576.9" y="1486.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="574.6" y="2067.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.6" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="574.6" y="2051.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.6" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (2 samples, 0.11%)</title><rect x="575.2" y="2083.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.2" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (2 samples, 0.11%)</title><rect x="575.2" y="2067.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.2" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (1 samples, 0.06%)</title><rect x="575.9" y="2051.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.9" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.06%)</title><rect x="575.9" y="2035.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.9" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="575.9" y="2019.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.9" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="575.9" y="2003.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="575.9" y="1987.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.9" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.06%)</title><rect x="575.9" y="1971.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.06%)</title><rect x="575.9" y="1955.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.06%)</title><rect x="575.9" y="1939.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.06%)</title><rect x="575.9" y="1923.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.9" y="1934.0"></text>
</g>
<g>
<title>[asyncWorker tid=13382] (9 samples, 0.51%)</title><rect x="576.6" y="2179.0" width="6.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="579.6" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.51%)</title><rect x="576.6" y="2163.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.6" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.51%)</title><rect x="576.6" y="2147.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.6" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.51%)</title><rect x="576.6" y="2131.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.6" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="577.3" y="2115.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.3" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="577.3" y="2099.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.3" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="577.3" y="2083.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="577.3" y="2067.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="577.3" y="2051.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="577.3" y="2035.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="580.3" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.11%)</title><rect x="577.3" y="2019.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="580.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="577.3" y="2003.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="580.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="577.3" y="1987.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="580.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="577.3" y="1971.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="580.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="577.3" y="1955.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="580.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="577.9" y="1939.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="580.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="577.9" y="1923.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="580.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (6 samples, 0.34%)</title><rect x="578.6" y="2115.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.6" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (6 samples, 0.34%)</title><rect x="578.6" y="2099.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.6" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.28%)</title><rect x="578.6" y="2083.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.6" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.23%)</title><rect x="579.3" y="2067.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.3" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="579.3" y="2051.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="579.3" y="2035.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.3" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.23%)</title><rect x="579.3" y="2019.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.3" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.23%)</title><rect x="579.3" y="2003.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="579.3" y="1987.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="582.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="579.3" y="1971.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="582.3" y="1982.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.06%)</title><rect x="579.3" y="1955.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="582.3" y="1966.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.06%)</title><rect x="579.3" y="1939.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="582.3" y="1950.0"></text>
</g>
<g>
<title>__send (3 samples, 0.17%)</title><rect x="579.9" y="1987.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="582.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1971.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="582.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1955.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="582.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1939.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="582.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1923.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="582.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1907.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="582.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1891.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="582.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1875.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="582.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1859.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="582.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="579.9" y="1843.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="582.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="580.6" y="1827.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="583.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1811.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="584.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1795.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="584.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1779.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="584.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1763.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="584.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1747.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="584.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1731.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="584.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1715.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="584.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1699.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="584.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1683.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="584.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1667.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="584.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1651.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="584.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1635.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="584.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1619.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="584.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1603.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="584.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="581.3" y="1587.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="584.3" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (1 samples, 0.06%)</title><rect x="581.9" y="2083.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.9" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (1 samples, 0.06%)</title><rect x="581.9" y="2067.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.9" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (1 samples, 0.06%)</title><rect x="581.9" y="2051.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.9" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.06%)</title><rect x="581.9" y="2035.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.9" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="581.9" y="2019.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.9" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="581.9" y="2003.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="581.9" y="1987.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.9" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.06%)</title><rect x="581.9" y="1971.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.9" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.06%)</title><rect x="581.9" y="1955.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.9" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.06%)</title><rect x="581.9" y="1939.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.9" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="581.9" y="1923.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.9" y="1934.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="581.9" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="1918.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.06%)</title><rect x="581.9" y="1891.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.9" y="1902.0"></text>
</g>
<g>
<title>[asyncWorker tid=13383] (8 samples, 0.45%)</title><rect x="582.6" y="2179.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="585.6" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.45%)</title><rect x="582.6" y="2163.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.6" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.45%)</title><rect x="582.6" y="2147.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.6" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.45%)</title><rect x="582.6" y="2131.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.6" y="2142.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="582.6" y="2115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.6" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="583.3" y="2115.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.3" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="583.3" y="2099.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.3" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="583.3" y="2083.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="583.3" y="2067.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="583.3" y="2051.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.3" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="583.3" y="2035.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="586.3" y="2046.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="583.3" y="2019.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="586.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="2035.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="586.9" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="583.9" y="2019.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="586.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="2003.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="586.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1987.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="586.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1971.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="586.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1955.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="586.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1939.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="586.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1923.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="586.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="583.9" y="1907.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="586.9" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (5 samples, 0.28%)</title><rect x="584.6" y="2115.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.6" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (5 samples, 0.28%)</title><rect x="584.6" y="2099.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.6" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.17%)</title><rect x="584.6" y="2083.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.6" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.17%)</title><rect x="584.6" y="2067.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.6" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.17%)</title><rect x="584.6" y="2051.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.6" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.17%)</title><rect x="584.6" y="2035.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.6" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.17%)</title><rect x="584.6" y="2019.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.6" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.17%)</title><rect x="584.6" y="2003.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.6" y="2014.0"></text>
</g>
<g>
<title>__send (3 samples, 0.17%)</title><rect x="584.6" y="1987.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="587.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1971.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="587.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1955.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="587.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1939.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1923.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="587.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1907.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="587.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="584.6" y="1891.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="587.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1875.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="588.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1859.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="588.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1843.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="588.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1827.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="588.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1811.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="588.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1795.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="588.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1779.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="588.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1763.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="588.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1747.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="588.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1731.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="588.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1715.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="588.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1699.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="588.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1683.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1667.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1651.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="588.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1635.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="588.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1619.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="588.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1603.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1587.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="588.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1571.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="588.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1555.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1539.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="588.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1523.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="588.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1507.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="588.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1491.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="588.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1475.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="588.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1459.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="588.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1443.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="588.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1427.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="588.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1411.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1395.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="588.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1379.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="585.3" y="1363.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="588.3" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (2 samples, 0.11%)</title><rect x="586.6" y="2083.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.6" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (2 samples, 0.11%)</title><rect x="586.6" y="2067.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.6" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (2 samples, 0.11%)</title><rect x="586.6" y="2051.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.6" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.06%)</title><rect x="587.3" y="2035.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.3" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="587.3" y="2019.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="587.3" y="2003.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.3" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="587.3" y="1987.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.06%)</title><rect x="587.3" y="1971.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="587.3" y="1955.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.3" y="1966.0"></text>
</g>
<g>
<title>[asyncWorker tid=13384] (10 samples, 0.57%)</title><rect x="588.0" y="2179.0" width="6.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="591.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.57%)</title><rect x="588.0" y="2163.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.0" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.57%)</title><rect x="588.0" y="2147.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.0" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.57%)</title><rect x="588.0" y="2131.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.34%)</title><rect x="588.6" y="2115.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.6" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.28%)</title><rect x="589.3" y="2099.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.3" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.28%)</title><rect x="589.3" y="2083.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.28%)</title><rect x="589.3" y="2067.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.28%)</title><rect x="589.3" y="2051.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.3" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="589.3" y="2035.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="592.3" y="2046.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="589.3" y="2019.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="592.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="590.0" y="2035.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="593.0" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.11%)</title><rect x="590.0" y="2019.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="593.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="2003.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="593.0" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1987.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="593.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1971.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="593.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1955.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="593.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1939.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1923.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="593.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1907.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="593.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="590.0" y="1891.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="593.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="590.6" y="1875.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="593.6" y="1886.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="591.3" y="2019.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="594.3" y="2030.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="592.0" y="2035.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="595.0" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (3 samples, 0.17%)</title><rect x="592.6" y="2115.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.6" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (3 samples, 0.17%)</title><rect x="592.6" y="2099.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.6" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.17%)</title><rect x="592.6" y="2083.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.6" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.17%)</title><rect x="592.6" y="2067.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.6" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.17%)</title><rect x="592.6" y="2051.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.6" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.17%)</title><rect x="592.6" y="2035.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.6" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.17%)</title><rect x="592.6" y="2019.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.6" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.17%)</title><rect x="592.6" y="2003.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.6" y="2014.0"></text>
</g>
<g>
<title>__send (3 samples, 0.17%)</title><rect x="592.6" y="1987.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="595.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1971.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="595.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1955.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="595.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1939.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="595.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1923.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="595.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1907.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="595.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1891.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="595.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1875.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="595.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1859.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="595.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1843.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="595.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1827.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="595.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="592.6" y="1811.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="595.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1795.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="596.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1779.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="596.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1763.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="596.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1747.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="596.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1731.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="596.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1715.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="596.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1699.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="596.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1683.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="596.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1667.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="596.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1651.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="596.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1635.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="596.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="593.3" y="1619.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="596.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1603.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="597.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1587.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="597.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1571.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="597.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1555.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="597.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1539.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="597.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1523.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="597.0" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1507.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="597.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1491.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="597.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1475.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="597.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1459.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="597.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1443.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="597.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1427.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="597.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1411.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="597.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1395.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="597.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1379.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="597.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="594.0" y="1363.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="597.0" y="1374.0"></text>
</g>
<g>
<title>[asyncWorker tid=13385] (11 samples, 0.62%)</title><rect x="594.6" y="2179.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="597.6" y="2190.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.06%)</title><rect x="594.6" y="2163.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="597.6" y="2174.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.57%)</title><rect x="595.3" y="2163.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.3" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.57%)</title><rect x="595.3" y="2147.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.3" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.57%)</title><rect x="595.3" y="2131.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.3" y="2142.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="595.3" y="2115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.3" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="596.0" y="2115.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="596.0" y="2099.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="596.0" y="2083.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="596.0" y="2067.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.0" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="596.0" y="2051.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="596.0" y="2035.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="599.0" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.11%)</title><rect x="596.0" y="2019.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="599.0" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (7 samples, 0.40%)</title><rect x="597.3" y="2115.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.3" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (7 samples, 0.40%)</title><rect x="597.3" y="2099.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.3" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.40%)</title><rect x="597.3" y="2083.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.40%)</title><rect x="597.3" y="2067.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.3" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="597.3" y="2051.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="597.3" y="2035.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.3" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="597.3" y="2019.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.3" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.34%)</title><rect x="598.0" y="2051.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.0" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.34%)</title><rect x="598.0" y="2035.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.0" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.34%)</title><rect x="598.0" y="2019.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.34%)</title><rect x="598.0" y="2003.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.0" y="2014.0"></text>
</g>
<g>
<title>__send (6 samples, 0.34%)</title><rect x="598.0" y="1987.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="601.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1971.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="601.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1955.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="601.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1939.0" width="4.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="601.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1923.0" width="4.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="601.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1907.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="601.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1891.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="601.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1875.0" width="4.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="601.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1859.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="601.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.34%)</title><rect x="598.0" y="1843.0" width="4.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="601.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1827.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="601.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1811.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="601.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1795.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="601.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1779.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="601.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1763.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="601.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1747.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="601.7" y="1758.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="598.7" y="1731.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="601.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1715.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="602.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1699.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="602.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1683.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="602.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1667.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="602.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1651.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="602.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1635.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="602.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1619.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="602.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1603.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="602.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1587.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="602.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1571.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="602.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1555.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="602.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="599.3" y="1539.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="602.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="600.7" y="1523.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="603.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="600.7" y="1507.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="603.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="600.7" y="1491.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="603.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="601.3" y="1475.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="604.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="601.3" y="1459.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="604.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="601.3" y="1443.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="604.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="601.3" y="1427.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="604.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="601.3" y="1411.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="604.3" y="1422.0"></text>
</g>
<g>
<title>[asyncWorker tid=13386] (9 samples, 0.51%)</title><rect x="602.0" y="2179.0" width="6.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="605.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.51%)</title><rect x="602.0" y="2163.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.0" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.51%)</title><rect x="602.0" y="2147.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.0" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.51%)</title><rect x="602.0" y="2131.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="602.7" y="2115.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.7" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="602.7" y="2099.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.7" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="602.7" y="2083.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.7" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="602.7" y="2067.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="602.7" y="2051.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.7" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="602.7" y="2035.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="605.7" y="2046.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="603.3" y="2019.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="606.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (6 samples, 0.34%)</title><rect x="604.0" y="2115.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.0" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (6 samples, 0.34%)</title><rect x="604.0" y="2099.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.34%)</title><rect x="604.0" y="2083.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.0" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.28%)</title><rect x="604.0" y="2067.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.0" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="604.0" y="2051.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.0" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="604.0" y="2035.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.0" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.28%)</title><rect x="604.0" y="2019.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.28%)</title><rect x="604.0" y="2003.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.0" y="2014.0"></text>
</g>
<g>
<title>__send (5 samples, 0.28%)</title><rect x="604.0" y="1987.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="607.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1971.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="607.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1955.0" width="3.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="607.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1939.0" width="3.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="607.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1923.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="607.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1907.0" width="3.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="607.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1891.0" width="3.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="607.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1875.0" width="3.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="607.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="604.0" y="1859.0" width="3.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="607.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="604.7" y="1843.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="607.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="604.7" y="1827.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="607.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1811.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="608.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1795.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1779.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="608.4" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1763.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="608.4" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1747.0" width="2.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="608.4" y="1758.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1731.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.4" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1715.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="608.4" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1699.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="608.4" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1683.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="605.4" y="1667.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="608.4" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1651.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="609.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1635.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="609.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1619.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="609.0" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1603.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="609.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1587.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="609.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1571.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="609.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1555.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="609.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1539.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="609.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1523.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="609.0" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1507.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="609.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1491.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="609.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1475.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="609.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1459.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="609.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1443.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="609.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1427.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="609.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1411.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="609.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1395.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="609.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="606.0" y="1379.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="609.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="606.7" y="1363.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="609.7" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="607.4" y="2067.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.4" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="607.4" y="2051.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.4" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="607.4" y="2035.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.4" y="2046.0"></text>
</g>
<g>
<title>[asyncWorker tid=13387] (9 samples, 0.51%)</title><rect x="608.0" y="2179.0" width="6.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="611.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.51%)</title><rect x="608.0" y="2163.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.0" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.51%)</title><rect x="608.0" y="2147.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.0" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.51%)</title><rect x="608.0" y="2131.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.23%)</title><rect x="608.0" y="2115.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.23%)</title><rect x="608.0" y="2099.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.0" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.17%)</title><rect x="608.0" y="2083.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.17%)</title><rect x="608.0" y="2067.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.0" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.17%)</title><rect x="608.0" y="2051.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.0" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="608.0" y="2035.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="611.0" y="2046.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="608.0" y="2019.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="611.0" y="2030.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="608.7" y="2019.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="611.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="609.4" y="2035.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="612.4" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="609.4" y="2019.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="612.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="610.0" y="2083.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="610.0" y="2067.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.0" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="610.0" y="2051.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.0" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="610.0" y="2035.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.0" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="610.0" y="2019.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.06%)</title><rect x="610.0" y="2003.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="610.0" y="1987.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.0" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (5 samples, 0.28%)</title><rect x="610.7" y="2115.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.7" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (5 samples, 0.28%)</title><rect x="610.7" y="2099.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.7" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.23%)</title><rect x="610.7" y="2083.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.23%)</title><rect x="610.7" y="2067.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.7" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="610.7" y="2051.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.7" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.23%)</title><rect x="610.7" y="2035.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.7" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.23%)</title><rect x="610.7" y="2019.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.7" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.23%)</title><rect x="610.7" y="2003.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.7" y="2014.0"></text>
</g>
<g>
<title>__send (4 samples, 0.23%)</title><rect x="610.7" y="1987.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="613.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1971.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="613.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1955.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="613.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1939.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="613.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1923.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="613.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1907.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="613.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1891.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="613.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1875.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="613.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1859.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="613.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1843.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="613.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1827.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="613.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1811.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="613.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1795.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="613.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1779.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="613.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1763.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="613.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1747.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="613.7" y="1758.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1731.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="613.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1715.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="613.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1699.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="613.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1683.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="613.7" y="1694.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="610.7" y="1667.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="613.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="611.4" y="1651.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="614.4" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="612.0" y="1635.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="615.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="612.0" y="1619.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="615.0" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1603.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="615.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1587.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="615.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1571.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="615.7" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1555.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="615.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1539.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="615.7" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1523.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="615.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1507.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="615.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1491.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="615.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1475.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="615.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1459.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="615.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1443.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="615.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1427.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="615.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1411.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="615.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1395.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="615.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1379.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="615.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="612.7" y="1363.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="615.7" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (1 samples, 0.06%)</title><rect x="613.4" y="2083.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.4" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (1 samples, 0.06%)</title><rect x="613.4" y="2067.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.4" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (1 samples, 0.06%)</title><rect x="613.4" y="2051.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.4" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.06%)</title><rect x="613.4" y="2035.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="613.4" y="2019.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.4" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="613.4" y="2003.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.4" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="613.4" y="1987.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (1 samples, 0.06%)</title><rect x="613.4" y="1971.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.4" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.06%)</title><rect x="613.4" y="1955.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.4" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.06%)</title><rect x="613.4" y="1939.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.4" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="613.4" y="1923.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.4" y="1934.0"></text>
</g>
<g>
<title>[asyncWorker tid=13388] (9 samples, 0.51%)</title><rect x="614.0" y="2179.0" width="6.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="617.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 0.51%)</title><rect x="614.0" y="2163.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.0" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 0.51%)</title><rect x="614.0" y="2147.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.0" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 0.51%)</title><rect x="614.0" y="2131.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.17%)</title><rect x="614.0" y="2115.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.17%)</title><rect x="614.0" y="2099.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.0" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.17%)</title><rect x="614.0" y="2083.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.17%)</title><rect x="614.0" y="2067.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.0" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.17%)</title><rect x="614.0" y="2051.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.0" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="614.0" y="2035.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="617.0" y="2046.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="614.0" y="2019.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="617.0" y="2030.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="614.7" y="2019.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.7" y="2030.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="614.7" y="2003.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="617.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="615.4" y="2035.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="618.4" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="615.4" y="2019.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="618.4" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="615.4" y="2003.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="618.4" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="615.4" y="1987.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="618.4" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="615.4" y="1971.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="618.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="615.4" y="1955.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="618.4" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (6 samples, 0.34%)</title><rect x="616.1" y="2115.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.1" y="2126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (6 samples, 0.34%)</title><rect x="616.1" y="2099.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.1" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.28%)</title><rect x="616.1" y="2083.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.1" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.28%)</title><rect x="616.1" y="2067.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="616.1" y="2051.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.1" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.28%)</title><rect x="616.1" y="2035.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.28%)</title><rect x="616.1" y="2019.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.1" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.28%)</title><rect x="616.1" y="2003.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="2014.0"></text>
</g>
<g>
<title>__send (5 samples, 0.28%)</title><rect x="616.1" y="1987.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="619.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1971.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="619.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1955.0" width="3.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="619.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1939.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="619.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1923.0" width="3.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="619.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1907.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="619.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1891.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="619.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1875.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="619.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1859.0" width="3.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="619.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1843.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="619.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1827.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="619.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1811.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="619.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.28%)</title><rect x="616.1" y="1795.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="619.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="616.7" y="1779.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="619.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="616.7" y="1763.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="619.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="616.7" y="1747.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="619.7" y="1758.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="616.7" y="1731.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="619.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1715.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="620.4" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1699.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="620.4" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1683.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="620.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1667.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="620.4" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1651.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="620.4" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1635.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="620.4" y="1646.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1619.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="620.4" y="1630.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1603.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="620.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1587.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="620.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1571.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="620.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1555.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="620.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1539.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="620.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1523.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="620.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1507.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="620.4" y="1518.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1491.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="620.4" y="1502.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="617.4" y="1475.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="620.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1459.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="621.1" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1443.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="621.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1427.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="621.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1411.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="621.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1395.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="621.1" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1379.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="621.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="618.1" y="1363.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="621.1" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (1 samples, 0.06%)</title><rect x="619.4" y="2083.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="2094.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (1 samples, 0.06%)</title><rect x="619.4" y="2067.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.4" y="2078.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (1 samples, 0.06%)</title><rect x="619.4" y="2051.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.4" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (1 samples, 0.06%)</title><rect x="619.4" y="2035.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.4" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (1 samples, 0.06%)</title><rect x="619.4" y="2019.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.4" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (1 samples, 0.06%)</title><rect x="619.4" y="2003.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.4" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (1 samples, 0.06%)</title><rect x="619.4" y="1987.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.06%)</title><rect x="619.4" y="1971.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="619.4" y="1955.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="619.4" y="1939.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.4" y="1950.0"></text>
</g>
<g>
<title>[tid=13289] (2 samples, 0.11%)</title><rect x="620.1" y="2179.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="623.1" y="2190.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.11%)</title><rect x="620.1" y="2163.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="623.1" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="620.1" y="2147.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="623.1" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="620.1" y="2131.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="623.1" y="2142.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.11%)</title><rect x="620.1" y="2115.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="623.1" y="2126.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.11%)</title><rect x="620.1" y="2099.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="623.1" y="2110.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="620.1" y="2083.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="623.1" y="2094.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="620.1" y="2067.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="623.1" y="2078.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="620.7" y="2083.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="623.7" y="2094.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.06%)</title><rect x="620.7" y="2067.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="623.7" y="2078.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.06%)</title><rect x="620.7" y="2051.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="623.7" y="2062.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.06%)</title><rect x="620.7" y="2035.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="623.7" y="2046.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.06%)</title><rect x="620.7" y="2019.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="623.7" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="620.7" y="2003.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="623.7" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="620.7" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="623.7" y="1998.0"></text>
</g>
<g>
<title>[tid=13293] (1 samples, 0.06%)</title><rect x="621.4" y="2179.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="624.4" y="2190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.06%)</title><rect x="621.4" y="2163.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="624.4" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="621.4" y="2147.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="624.4" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.06%)</title><rect x="621.4" y="2131.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="624.4" y="2142.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.06%)</title><rect x="621.4" y="2115.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="624.4" y="2126.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.06%)</title><rect x="621.4" y="2099.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="624.4" y="2110.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.06%)</title><rect x="621.4" y="2083.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="624.4" y="2094.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="621.4" y="2067.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="624.4" y="2078.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="621.4" y="2051.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="624.4" y="2062.0"></text>
</g>
<g>
<title>[tid=13294] (1 samples, 0.06%)</title><rect x="622.1" y="2179.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="625.1" y="2190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.06%)</title><rect x="622.1" y="2163.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="625.1" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="622.1" y="2147.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="625.1" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.06%)</title><rect x="622.1" y="2131.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="625.1" y="2142.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.06%)</title><rect x="622.1" y="2115.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="625.1" y="2126.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.06%)</title><rect x="622.1" y="2099.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="625.1" y="2110.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="622.1" y="2083.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="625.1" y="2094.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="622.1" y="2067.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="625.1" y="2078.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="622.1" y="2051.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="625.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="622.1" y="2035.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="625.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="622.1" y="2019.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="625.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="622.1" y="2003.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="625.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="622.1" y="1987.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="625.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="622.1" y="1971.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="625.1" y="1982.0"></text>
</g>
<g>
<title>[tid=13298] (812 samples, 46.03%)</title><rect x="622.7" y="2179.0" width="543.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="625.7" y="2190.0">[tid=13298]</text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2163.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.7" y="2174.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2147.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="625.7" y="2158.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2131.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.7" y="2142.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2115.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="2126.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2099.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="625.7" y="2110.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2083.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="2094.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2067.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="625.7" y="2078.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2051.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.7" y="2062.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2035.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="2046.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2019.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="625.7" y="2030.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="2003.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1987.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="625.7" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1971.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1955.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="625.7" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1939.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1923.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.7" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1907.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="625.7" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1891.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="625.7" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1875.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.7" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="625.7" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1843.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1811.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="1822.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1795.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.7" y="1806.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1779.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="625.7" y="1790.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1763.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="625.7" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1747.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.7" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1731.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1715.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.7" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1699.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="625.7" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1683.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="625.7" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1667.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="625.7" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1651.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.7" y="1662.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1635.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1619.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="625.7" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1603.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1587.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1571.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="1582.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1555.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.7" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1539.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1523.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="625.7" y="1534.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1507.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="1518.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1491.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.7" y="1502.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1475.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="625.7" y="1486.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1459.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="625.7" y="1470.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1443.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.7" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1427.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="625.7" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="625.7" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1395.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="625.7" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.7" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="625.7" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1347.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="625.7" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1299.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1283.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="625.7" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1267.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1235.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="625.7" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1219.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1203.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="625.7" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1187.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="625.7" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1171.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.7" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1155.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.7" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="625.7" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="625.7" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1075.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.7" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1043.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="625.7" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1027.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="625.7" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="1011.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="625.7" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="625.7" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="625.7" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="625.7" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="931.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="625.7" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="899.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="883.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="625.7" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="835.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="625.7" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="739.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.7" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="625.7" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="625.7" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="627.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="625.7" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="611.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="595.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="625.7" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="563.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="625.7" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="547.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="558.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="542.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="625.7" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="483.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.7" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="467.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="478.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="462.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="435.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="446.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="625.7" y="430.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="403.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="414.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="387.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="625.7" y="398.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="371.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="625.7" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="355.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="366.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="339.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.7" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="323.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="307.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.7" y="318.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="291.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="625.7" y="302.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="275.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.7" y="286.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="259.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="270.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="254.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="227.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.7" y="238.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="211.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="625.7" y="222.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="195.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="625.7" y="206.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="179.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="625.7" y="190.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="163.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="174.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="622.7" y="147.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="625.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="623.4" y="2163.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="626.4" y="2174.0"></text>
</g>
<g>
<title>_IO_new_file_fopen (1 samples, 0.06%)</title><rect x="623.4" y="2147.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="626.4" y="2158.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (1 samples, 0.06%)</title><rect x="624.1" y="2163.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="627.1" y="2174.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.06%)</title><rect x="624.1" y="2147.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="627.1" y="2158.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.06%)</title><rect x="624.8" y="2163.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="627.8" y="2174.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="625.4" y="2163.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.4" y="2174.0"></text>
</g>
<g>
<title>mmap (1 samples, 0.06%)</title><rect x="626.1" y="2163.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="629.1" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2147.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="629.1" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2131.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="629.1" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2115.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="629.1" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2099.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="629.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2083.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="629.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2067.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="629.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2051.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="629.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2035.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="629.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2019.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="629.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.1" y="2003.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="629.1" y="2014.0"></text>
</g>
<g>
<title>start_thread (806 samples, 45.69%)</title><rect x="626.8" y="2163.0" width="539.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="629.8" y="2174.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (806 samples, 45.69%)</title><rect x="626.8" y="2147.0" width="539.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="629.8" y="2158.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (806 samples, 45.69%)</title><rect x="626.8" y="2131.0" width="539.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="629.8" y="2142.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (806 samples, 45.69%)</title><rect x="626.8" y="2115.0" width="539.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="629.8" y="2126.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (806 samples, 45.69%)</title><rect x="626.8" y="2099.0" width="539.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="629.8" y="2110.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (806 samples, 45.69%)</title><rect x="626.8" y="2083.0" width="539.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="629.8" y="2094.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (806 samples, 45.69%)</title><rect x="626.8" y="2067.0" width="539.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="629.8" y="2078.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (805 samples, 45.63%)</title><rect x="626.8" y="2051.0" width="538.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="629.8" y="2062.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (805 samples, 45.63%)</title><rect x="626.8" y="2035.0" width="538.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="629.8" y="2046.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, Di..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.06%)</title><rect x="626.8" y="2019.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="629.8" y="2030.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="626.8" y="2003.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="629.8" y="2014.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="626.8" y="1987.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="629.8" y="1998.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="626.8" y="1971.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="629.8" y="1982.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="626.8" y="1955.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="629.8" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="626.8" y="1939.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="629.8" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="626.8" y="1923.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="629.8" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="626.8" y="1907.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="629.8" y="1918.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="626.8" y="1891.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="629.8" y="1902.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="626.8" y="1875.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="629.8" y="1886.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (411 samples, 23.30%)</title><rect x="627.4" y="2019.0" width="275.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="630.4" y="2030.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (12 samples, 0.68%)</title><rect x="627.4" y="2003.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="630.4" y="2014.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (7 samples, 0.40%)</title><rect x="627.4" y="1987.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="630.4" y="1998.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.06%)</title><rect x="631.4" y="1971.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="634.4" y="1982.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (4 samples, 0.23%)</title><rect x="632.1" y="1987.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="635.1" y="1998.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (4 samples, 0.23%)</title><rect x="632.1" y="1971.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.1" y="1982.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (3 samples, 0.17%)</title><rect x="632.8" y="1955.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.8" y="1966.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="632.8" y="1939.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="635.8" y="1950.0"></text>
</g>
<g>
<title>CompiledStaticCall::emit_to_interp_stub(CodeBuffer&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="632.8" y="1923.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="635.8" y="1934.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(RegisterImpl*, Metadata*) (1 samples, 0.06%)</title><rect x="632.8" y="1907.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="635.8" y="1918.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.06%)</title><rect x="632.8" y="1891.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.8" y="1902.0"></text>
</g>
<g>
<title>loadConNKlassNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="633.4" y="1939.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="636.4" y="1950.0"></text>
</g>
<g>
<title>MacroAssembler::set_narrow_klass(RegisterImpl*, Klass*) (1 samples, 0.06%)</title><rect x="633.4" y="1923.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="636.4" y="1934.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="633.4" y="1907.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="636.4" y="1918.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_initialize() (1 samples, 0.06%)</title><rect x="633.4" y="1891.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="636.4" y="1902.0"></text>
</g>
<g>
<title>storePNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="634.1" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="637.1" y="1950.0"></text>
</g>
<g>
<title>MachOper::reg(PhaseRegAlloc*, Node const*, int) const (1 samples, 0.06%)</title><rect x="634.1" y="1923.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="637.1" y="1934.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.06%)</title><rect x="634.8" y="1987.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="637.8" y="1998.0"></text>
</g>
<g>
<title>Compile::TracePhase::~TracePhase() (1 samples, 0.06%)</title><rect x="635.5" y="2003.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="638.5" y="2014.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (9 samples, 0.51%)</title><rect x="636.1" y="2003.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="639.1" y="2014.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.11%)</title><rect x="636.8" y="1987.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="639.8" y="1998.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="636.8" y="1971.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="639.8" y="1982.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.06%)</title><rect x="636.8" y="1955.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="639.8" y="1966.0"></text>
</g>
<g>
<title>Location::write_on(DebugInfoWriteStream*) (1 samples, 0.06%)</title><rect x="636.8" y="1939.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.8" y="1950.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="637.5" y="1971.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="640.5" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="637.5" y="1955.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="640.5" y="1966.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.06%)</title><rect x="638.1" y="1987.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="641.1" y="1998.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.06%)</title><rect x="638.8" y="1987.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="641.8" y="1998.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (4 samples, 0.23%)</title><rect x="639.5" y="1987.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="642.5" y="1998.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.17%)</title><rect x="640.1" y="1971.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="643.1" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.11%)</title><rect x="640.1" y="1955.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="643.1" y="1966.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="641.5" y="1955.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="644.5" y="1966.0"></text>
</g>
<g>
<title>Matcher::match() (27 samples, 1.53%)</title><rect x="642.1" y="2003.0" width="18.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="645.1" y="2014.0"></text>
</g>
<g>
<title>ConLNode::Opcode() const (1 samples, 0.06%)</title><rect x="642.1" y="1987.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="645.1" y="1998.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.06%)</title><rect x="642.8" y="1987.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="645.8" y="1998.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.06%)</title><rect x="643.5" y="1987.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="646.5" y="1998.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.06%)</title><rect x="643.5" y="1971.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="646.5" y="1982.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (2 samples, 0.11%)</title><rect x="644.1" y="1987.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="647.1" y="1998.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (22 samples, 1.25%)</title><rect x="645.5" y="1987.0" width="14.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.5" y="1998.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (9 samples, 0.51%)</title><rect x="648.2" y="1971.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="651.2" y="1982.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.11%)</title><rect x="654.2" y="1971.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="657.2" y="1982.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.06%)</title><rect x="654.9" y="1955.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="657.9" y="1966.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="654.9" y="1939.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="657.9" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="654.9" y="1923.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="657.9" y="1934.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (7 samples, 0.40%)</title><rect x="655.5" y="1971.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="658.5" y="1982.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.06%)</title><rect x="655.5" y="1955.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="658.5" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="655.5" y="1939.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="658.5" y="1950.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.17%)</title><rect x="656.2" y="1955.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="659.2" y="1966.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.11%)</title><rect x="656.2" y="1939.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="659.2" y="1950.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.06%)</title><rect x="656.2" y="1923.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="659.2" y="1934.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.06%)</title><rect x="656.2" y="1907.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="659.2" y="1918.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.06%)</title><rect x="656.2" y="1891.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="659.2" y="1902.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="656.2" y="1875.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="659.2" y="1886.0"></text>
</g>
<g>
<title>State::_sub_Op_ConL(Node const*) (1 samples, 0.06%)</title><rect x="656.2" y="1859.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="659.2" y="1870.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="656.9" y="1923.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="659.9" y="1934.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.06%)</title><rect x="656.9" y="1907.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.9" y="1918.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="657.5" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="660.5" y="1950.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.06%)</title><rect x="657.5" y="1923.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="660.5" y="1934.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.17%)</title><rect x="658.2" y="1955.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="661.2" y="1966.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.11%)</title><rect x="658.2" y="1939.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="661.2" y="1950.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.11%)</title><rect x="658.2" y="1923.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="661.2" y="1934.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="658.2" y="1907.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="661.2" y="1918.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="658.2" y="1891.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="661.2" y="1902.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.06%)</title><rect x="658.2" y="1875.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="661.2" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="658.9" y="1907.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="661.9" y="1918.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="659.5" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="662.5" y="1950.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (4 samples, 0.23%)</title><rect x="660.2" y="2003.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="663.2" y="2014.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.11%)</title><rect x="660.2" y="1987.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="663.2" y="1998.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="660.9" y="1971.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="663.9" y="1982.0"></text>
</g>
<g>
<title>PhaseBlockLayout::grow_traces() (1 samples, 0.06%)</title><rect x="661.5" y="1987.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="664.5" y="1998.0"></text>
</g>
<g>
<title>PhaseBlockLayout::union_traces(Trace*, Trace*) (1 samples, 0.06%)</title><rect x="661.5" y="1971.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="664.5" y="1982.0"></text>
</g>
<g>
<title>PhaseBlockLayout::merge_traces(bool) (1 samples, 0.06%)</title><rect x="662.2" y="1987.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="665.2" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (2 samples, 0.11%)</title><rect x="662.9" y="2003.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="665.9" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (2 samples, 0.11%)</title><rect x="662.9" y="1987.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="665.9" y="1998.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="663.5" y="1971.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="666.5" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (48 samples, 2.72%)</title><rect x="664.2" y="2003.0" width="32.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="667.2" y="2014.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.06%)</title><rect x="664.2" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="667.2" y="1998.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.06%)</title><rect x="664.2" y="1971.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="667.2" y="1982.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.06%)</title><rect x="664.2" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="667.2" y="1966.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.06%)</title><rect x="664.2" y="1939.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="667.2" y="1950.0"></text>
</g>
<g>
<title>Block::is_block() (1 samples, 0.06%)</title><rect x="664.2" y="1923.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="667.2" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (47 samples, 2.66%)</title><rect x="664.9" y="1987.0" width="31.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="667.9" y="1998.0">Ph..</text>
</g>
<g>
<title>CallStaticJavaDirectNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="664.9" y="1971.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="667.9" y="1982.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.06%)</title><rect x="665.6" y="1971.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="668.6" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.11%)</title><rect x="666.2" y="1971.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="669.2" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.06%)</title><rect x="666.9" y="1955.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="669.9" y="1966.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (7 samples, 0.40%)</title><rect x="667.6" y="1971.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="670.6" y="1982.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (3 samples, 0.17%)</title><rect x="668.2" y="1955.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="671.2" y="1966.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.17%)</title><rect x="670.2" y="1955.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="673.2" y="1966.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.06%)</title><rect x="671.6" y="1939.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="674.6" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (8 samples, 0.45%)</title><rect x="672.2" y="1971.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="675.2" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.17%)</title><rect x="672.9" y="1955.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="675.9" y="1966.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="674.3" y="1939.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="677.3" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.06%)</title><rect x="674.9" y="1955.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="677.9" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (1 samples, 0.06%)</title><rect x="675.6" y="1955.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="678.6" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (2 samples, 0.11%)</title><rect x="676.3" y="1955.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="679.3" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="676.3" y="1939.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="679.3" y="1950.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.06%)</title><rect x="676.9" y="1939.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="679.9" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.06%)</title><rect x="677.6" y="1971.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="680.6" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.06%)</title><rect x="677.6" y="1955.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="680.6" y="1966.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.06%)</title><rect x="678.3" y="1971.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="681.3" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&amp;, Matcher&amp;, bool) (1 samples, 0.06%)</title><rect x="678.9" y="1971.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="681.9" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.40%)</title><rect x="679.6" y="1971.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="682.6" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.06%)</title><rect x="684.3" y="1971.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="687.3" y="1982.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.06%)</title><rect x="685.0" y="1971.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="688.0" y="1982.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="685.0" y="1955.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="688.0" y="1966.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (13 samples, 0.74%)</title><rect x="685.6" y="1971.0" width="8.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="688.6" y="1982.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="688.3" y="1955.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="691.3" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="689.0" y="1955.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="692.0" y="1966.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (6 samples, 0.34%)</title><rect x="689.6" y="1955.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="692.6" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.11%)</title><rect x="691.6" y="1939.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="694.6" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="693.0" y="1939.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="696.0" y="1950.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.06%)</title><rect x="693.7" y="1955.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="696.7" y="1966.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.11%)</title><rect x="694.3" y="1971.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="697.3" y="1982.0"></text>
</g>
<g>
<title>loadINode::ideal_Opcode() const (1 samples, 0.06%)</title><rect x="695.7" y="1971.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="698.7" y="1982.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (2 samples, 0.11%)</title><rect x="696.3" y="2003.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="699.3" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (305 samples, 17.29%)</title><rect x="697.7" y="2003.0" width="204.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.7" y="2014.0">PhaseChaitin::Register_Allo..</text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="699.7" y="1987.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="702.7" y="1998.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="700.3" y="1987.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="703.3" y="1998.0"></text>
</g>
<g>
<title>LiveRangeMap::compress_uf_map_for_nodes() (1 samples, 0.06%)</title><rect x="701.0" y="1987.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="704.0" y="1998.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="701.7" y="1987.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="704.7" y="1998.0"></text>
</g>
<g>
<title>MachProjNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="702.3" y="1987.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="705.3" y="1998.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="703.0" y="1987.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="706.0" y="1998.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.11%)</title><rect x="703.7" y="1987.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="706.7" y="1998.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (9 samples, 0.51%)</title><rect x="705.0" y="1987.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="708.0" y="1998.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 1.08%)</title><rect x="711.0" y="1987.0" width="12.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.0" y="1998.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.11%)</title><rect x="715.1" y="1971.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="718.1" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.11%)</title><rect x="716.4" y="1971.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="719.4" y="1982.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="717.1" y="1955.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="720.1" y="1966.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (5 samples, 0.28%)</title><rect x="717.7" y="1971.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="720.7" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.23%)</title><rect x="718.4" y="1955.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.4" y="1966.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (4 samples, 0.23%)</title><rect x="721.1" y="1971.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="724.1" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (12 samples, 0.68%)</title><rect x="723.8" y="1987.0" width="8.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.8" y="1998.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.23%)</title><rect x="723.8" y="1971.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="726.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (8 samples, 0.45%)</title><rect x="726.4" y="1971.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="729.4" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="729.8" y="1955.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="732.8" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (33 samples, 1.87%)</title><rect x="731.8" y="1987.0" width="22.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="734.8" y="1998.0">P..</text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="750.5" y="1971.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="753.5" y="1982.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="751.2" y="1971.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="754.2" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.06%)</title><rect x="751.8" y="1971.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="754.8" y="1982.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="751.8" y="1955.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="754.8" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.11%)</title><rect x="752.5" y="1971.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="755.5" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.06%)</title><rect x="752.5" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.5" y="1966.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="752.5" y="1939.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="755.5" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.06%)</title><rect x="753.2" y="1955.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="756.2" y="1966.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="753.2" y="1939.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="756.2" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (79 samples, 4.48%)</title><rect x="753.9" y="1987.0" width="52.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="756.9" y="1998.0">Phase..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.11%)</title><rect x="759.2" y="1971.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.2" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="760.5" y="1971.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="763.5" y="1982.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="762.6" y="1971.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="765.6" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (13 samples, 0.74%)</title><rect x="763.2" y="1971.0" width="8.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="766.2" y="1982.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="769.9" y="1955.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="772.9" y="1966.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.11%)</title><rect x="770.6" y="1955.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="773.6" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (2 samples, 0.11%)</title><rect x="771.9" y="1971.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="774.9" y="1982.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.11%)</title><rect x="771.9" y="1955.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="774.9" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (25 samples, 1.42%)</title><rect x="773.3" y="1971.0" width="16.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="776.3" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.34%)</title><rect x="786.0" y="1955.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="789.0" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (21 samples, 1.19%)</title><rect x="790.0" y="1971.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="793.0" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="794.7" y="1955.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="797.7" y="1966.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.17%)</title><rect x="796.7" y="1955.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="799.7" y="1966.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (8 samples, 0.45%)</title><rect x="798.7" y="1955.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="801.7" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_node_if_not_used(Block*, unsigned int, Node*, unsigned int, IndexSet*) (1 samples, 0.06%)</title><rect x="804.0" y="1971.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="807.0" y="1982.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (3 samples, 0.17%)</title><rect x="804.7" y="1971.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="807.7" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (6 samples, 0.34%)</title><rect x="806.7" y="1987.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="809.7" y="1998.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.28%)</title><rect x="807.4" y="1971.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="810.4" y="1982.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="810.0" y="1955.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="813.0" y="1966.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.06%)</title><rect x="810.7" y="1987.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="813.7" y="1998.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="810.7" y="1971.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="813.7" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (30 samples, 1.70%)</title><rect x="811.4" y="1987.0" width="20.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="814.4" y="1998.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="822.8" y="1971.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.8" y="1982.0"></text>
</g>
<g>
<title>MachOper::num_edges() const (1 samples, 0.06%)</title><rect x="823.4" y="1971.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="826.4" y="1982.0"></text>
</g>
<g>
<title>RegMask::Size() const (8 samples, 0.45%)</title><rect x="824.1" y="1971.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="827.1" y="1982.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="829.4" y="1971.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="832.4" y="1982.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="829.4" y="1955.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="832.4" y="1966.0"></text>
</g>
<g>
<title>loadLNode::oper_input_base() const (1 samples, 0.06%)</title><rect x="830.1" y="1971.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="833.1" y="1982.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.06%)</title><rect x="830.8" y="1971.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.8" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (6 samples, 0.34%)</title><rect x="831.5" y="1987.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.5" y="1998.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="833.5" y="1971.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="836.5" y="1982.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="834.1" y="1971.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="837.1" y="1982.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.06%)</title><rect x="834.8" y="1971.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="837.8" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (4 samples, 0.23%)</title><rect x="835.5" y="1987.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="838.5" y="1998.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (29 samples, 1.64%)</title><rect x="838.1" y="1987.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="841.1" y="1998.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (7 samples, 0.40%)</title><rect x="851.5" y="1971.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="854.5" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.06%)</title><rect x="855.5" y="1955.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.5" y="1966.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="855.5" y="1939.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="858.5" y="1950.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.11%)</title><rect x="856.2" y="1971.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="859.2" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.06%)</title><rect x="857.5" y="1987.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="860.5" y="1998.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.17%)</title><rect x="858.2" y="1987.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="861.2" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.06%)</title><rect x="858.2" y="1971.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="861.2" y="1982.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.11%)</title><rect x="858.9" y="1971.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="861.9" y="1982.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.06%)</title><rect x="859.5" y="1955.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="862.5" y="1966.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (9 samples, 0.51%)</title><rect x="860.2" y="1987.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="863.2" y="1998.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="864.2" y="1971.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="867.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (5 samples, 0.28%)</title><rect x="866.2" y="1987.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="869.2" y="1998.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="867.6" y="1971.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="870.6" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="868.2" y="1971.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="871.2" y="1982.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="868.9" y="1971.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.9" y="1982.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (4 samples, 0.23%)</title><rect x="869.6" y="1987.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="872.6" y="1998.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (4 samples, 0.23%)</title><rect x="869.6" y="1971.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="872.6" y="1982.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (35 samples, 1.98%)</title><rect x="872.3" y="1987.0" width="23.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="875.3" y="1998.0">P..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (3 samples, 0.17%)</title><rect x="879.6" y="1971.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="882.6" y="1982.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="881.0" y="1955.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="884.0" y="1966.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="881.0" y="1939.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.0" y="1950.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="881.0" y="1923.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="884.0" y="1934.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.11%)</title><rect x="881.6" y="1971.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="884.6" y="1982.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (18 samples, 1.02%)</title><rect x="883.0" y="1971.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="886.0" y="1982.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.28%)</title><rect x="889.0" y="1955.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="892.0" y="1966.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.06%)</title><rect x="892.3" y="1955.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="895.3" y="1966.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="893.0" y="1955.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="896.0" y="1966.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="895.0" y="1971.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="898.0" y="1982.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="895.7" y="1987.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="898.7" y="1998.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (7 samples, 0.40%)</title><rect x="896.3" y="1987.0" width="4.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="899.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="900.4" y="1971.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="903.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="900.4" y="1955.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="903.4" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="900.4" y="1939.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="903.4" y="1950.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="901.0" y="1987.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="904.0" y="1998.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.06%)</title><rect x="901.7" y="2003.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="904.7" y="2014.0"></text>
</g>
<g>
<title>Compile::Init(int) (1 samples, 0.06%)</title><rect x="902.4" y="2019.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="905.4" y="2030.0"></text>
</g>
<g>
<title>DebugInfoWriteStream::DebugInfoWriteStream(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="902.4" y="2003.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="905.4" y="2014.0"></text>
</g>
<g>
<title>Compile::Optimize() (315 samples, 17.86%)</title><rect x="903.0" y="2019.0" width="210.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.0" y="2030.0">Compile::Optimize()</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (2 samples, 0.11%)</title><rect x="903.0" y="2003.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.0" y="2014.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.06%)</title><rect x="903.7" y="1987.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.7" y="1998.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.06%)</title><rect x="903.7" y="1971.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="906.7" y="1982.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (1 samples, 0.06%)</title><rect x="904.4" y="2003.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="907.4" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="904.4" y="1987.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="907.4" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="904.4" y="1971.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="907.4" y="1982.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="904.4" y="1955.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="907.4" y="1966.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="904.4" y="1939.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="907.4" y="1950.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="904.4" y="1923.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="907.4" y="1934.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="904.4" y="1907.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="907.4" y="1918.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="904.4" y="1891.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="907.4" y="1902.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="904.4" y="1875.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="907.4" y="1886.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.06%)</title><rect x="904.4" y="1859.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="907.4" y="1870.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (4 samples, 0.23%)</title><rect x="905.0" y="2003.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="908.0" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.11%)</title><rect x="905.7" y="1987.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="908.7" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.11%)</title><rect x="905.7" y="1971.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="908.7" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="905.7" y="1955.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="908.7" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="905.7" y="1939.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="908.7" y="1950.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="906.4" y="1955.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="909.4" y="1966.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.06%)</title><rect x="906.4" y="1939.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="909.4" y="1950.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1923.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="909.4" y="1934.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1907.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="909.4" y="1918.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1891.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="909.4" y="1902.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1875.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="909.4" y="1886.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1859.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="909.4" y="1870.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="906.4" y="1843.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="909.4" y="1854.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="906.4" y="1827.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="909.4" y="1838.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (1 samples, 0.06%)</title><rect x="907.0" y="1987.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="910.0" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (10 samples, 0.57%)</title><rect x="907.7" y="2003.0" width="6.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="910.7" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (10 samples, 0.57%)</title><rect x="907.7" y="1987.0" width="6.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="910.7" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::add_base(FieldNode*, PointsToNode*) [clone .isra.198] (1 samples, 0.06%)</title><rect x="907.7" y="1971.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="910.7" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.170] (1 samples, 0.06%)</title><rect x="908.4" y="1971.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="911.4" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.06%)</title><rect x="908.4" y="1955.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="911.4" y="1966.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="908.4" y="1939.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="911.4" y="1950.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="908.4" y="1923.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="911.4" y="1934.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="908.4" y="1907.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="911.4" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (3 samples, 0.17%)</title><rect x="909.0" y="1971.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="912.0" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.247] (3 samples, 0.17%)</title><rect x="909.0" y="1955.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="912.0" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (2 samples, 0.11%)</title><rect x="909.7" y="1939.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="912.7" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.06%)</title><rect x="911.1" y="1971.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="914.1" y="1982.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.06%)</title><rect x="911.1" y="1955.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="914.1" y="1966.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.06%)</title><rect x="911.1" y="1939.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="914.1" y="1950.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.06%)</title><rect x="911.1" y="1923.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="914.1" y="1934.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="911.1" y="1907.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="914.1" y="1918.0"></text>
</g>
<g>
<title>ciVirtualCallData::translate_from(ProfileData const*) (1 samples, 0.06%)</title><rect x="911.1" y="1891.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="914.1" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="911.1" y="1875.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="914.1" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (4 samples, 0.23%)</title><rect x="911.7" y="1971.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.7" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.11%)</title><rect x="911.7" y="1955.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="914.7" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1939.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="914.7" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1923.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="914.7" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1907.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="914.7" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1891.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="914.7" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1875.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="914.7" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1859.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="914.7" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1843.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="914.7" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="914.7" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1811.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="914.7" y="1822.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1795.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.7" y="1806.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1779.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.7" y="1790.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1763.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="914.7" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1747.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="914.7" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1731.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="914.7" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1715.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.7" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1699.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="914.7" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1683.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="914.7" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1667.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.7" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1651.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="914.7" y="1662.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1635.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="914.7" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1619.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="914.7" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1603.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="914.7" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="911.7" y="1587.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.7" y="1598.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="911.7" y="1571.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="914.7" y="1582.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="911.7" y="1555.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="914.7" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1939.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.4" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1923.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.4" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1907.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="915.4" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1891.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.4" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1875.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="915.4" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1859.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="915.4" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="912.4" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.4" y="1854.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.06%)</title><rect x="912.4" y="1827.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="915.4" y="1838.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (2 samples, 0.11%)</title><rect x="913.1" y="1955.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="916.1" y="1966.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (2 samples, 0.11%)</title><rect x="913.1" y="1939.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.1" y="1950.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.06%)</title><rect x="913.7" y="1923.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="916.7" y="1934.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.28%)</title><rect x="914.4" y="2003.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="917.4" y="2014.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="916.4" y="1987.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="919.4" y="1998.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="917.1" y="1987.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="920.1" y="1998.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="917.1" y="1971.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="920.1" y="1982.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (2 samples, 0.11%)</title><rect x="917.7" y="2003.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="920.7" y="2014.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (2 samples, 0.11%)</title><rect x="917.7" y="1987.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.7" y="1998.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (2 samples, 0.11%)</title><rect x="917.7" y="1971.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="920.7" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="917.7" y="1955.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="920.7" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="917.7" y="1939.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="920.7" y="1950.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.06%)</title><rect x="918.4" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.4" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (1 samples, 0.06%)</title><rect x="919.1" y="2003.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="922.1" y="2014.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="919.1" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.1" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (235 samples, 13.32%)</title><rect x="919.8" y="2003.0" width="157.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="922.8" y="2014.0">PhaseIdealLoop::buil..</text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="919.8" y="1987.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="922.8" y="1998.0"></text>
</g>
<g>
<title>GrowableArray&lt;int&gt;::~GrowableArray() (1 samples, 0.06%)</title><rect x="920.4" y="1987.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="923.4" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.1" y="1987.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.1" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.1" y="1971.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="924.1" y="1982.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.1" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="924.1" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="921.1" y="1939.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="924.1" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="921.1" y="1923.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.1" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1987.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="924.8" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1971.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="924.8" y="1982.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1955.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.8" y="1966.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1939.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="924.8" y="1950.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1923.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="924.8" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1907.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.8" y="1918.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1891.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.8" y="1902.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1875.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="924.8" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1859.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="924.8" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1843.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.8" y="1854.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1827.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.8" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1811.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.8" y="1822.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1795.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.8" y="1806.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="921.8" y="1779.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.8" y="1790.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (1 samples, 0.06%)</title><rect x="921.8" y="1763.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="924.8" y="1774.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="921.8" y="1747.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="924.8" y="1758.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="922.4" y="1987.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="925.4" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="922.4" y="1971.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="925.4" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="922.4" y="1955.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.4" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.06%)</title><rect x="922.4" y="1939.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="925.4" y="1950.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.11%)</title><rect x="923.1" y="1987.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="926.1" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="923.1" y="1971.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="926.1" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="923.1" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.1" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="923.8" y="1971.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="926.8" y="1982.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.06%)</title><rect x="923.8" y="1955.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="926.8" y="1966.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="924.4" y="1987.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="927.4" y="1998.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.06%)</title><rect x="925.1" y="1987.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.1" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (10 samples, 0.57%)</title><rect x="925.8" y="1987.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="928.8" y="1998.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.06%)</title><rect x="929.1" y="1971.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="932.1" y="1982.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (3 samples, 0.17%)</title><rect x="929.8" y="1971.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="932.8" y="1982.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="931.8" y="1971.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="934.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (10 samples, 0.57%)</title><rect x="932.5" y="1987.0" width="6.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="935.5" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.11%)</title><rect x="937.1" y="1971.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="940.1" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.06%)</title><rect x="937.8" y="1955.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="940.8" y="1966.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.06%)</title><rect x="938.5" y="1971.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="941.5" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (168 samples, 9.52%)</title><rect x="939.1" y="1987.0" width="112.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="942.1" y="1998.0">PhaseIdealLoop..</text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="941.8" y="1971.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="944.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (161 samples, 9.13%)</title><rect x="942.5" y="1971.0" width="107.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="945.5" y="1982.0">PhaseIdealLoo..</text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.06%)</title><rect x="947.2" y="1955.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="950.2" y="1966.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.06%)</title><rect x="947.8" y="1955.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="950.8" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="948.5" y="1955.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.5" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (150 samples, 8.50%)</title><rect x="949.2" y="1955.0" width="100.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="952.2" y="1966.0">PhaseIdealLo..</text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (7 samples, 0.40%)</title><rect x="952.5" y="1939.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="955.5" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (5 samples, 0.28%)</title><rect x="953.2" y="1923.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="956.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="956.5" y="1923.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="959.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.11%)</title><rect x="957.2" y="1939.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="960.2" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.06%)</title><rect x="957.9" y="1923.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="960.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (136 samples, 7.71%)</title><rect x="958.5" y="1939.0" width="91.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.5" y="1950.0">PhaseIdeal..</text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="1049.5" y="1955.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1052.5" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="1050.2" y="1971.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.2" y="1982.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="1050.9" y="1971.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1053.9" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (10 samples, 0.57%)</title><rect x="1051.5" y="1987.0" width="6.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1054.5" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (5 samples, 0.28%)</title><rect x="1054.9" y="1971.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.9" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::eliminate_useless_predicates() [clone .part.142] (1 samples, 0.06%)</title><rect x="1058.2" y="1987.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.2" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::collect_potentially_useful_predicates(IdealLoopTree*, Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1058.2" y="1971.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::find_predicate(Node*) (1 samples, 0.06%)</title><rect x="1058.2" y="1955.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.2" y="1966.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.06%)</title><rect x="1058.2" y="1939.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.2" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (15 samples, 0.85%)</title><rect x="1058.9" y="1987.0" width="10.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.9" y="1998.0"></text>
</g>
<g>
<title>HaltNode::Opcode() const (1 samples, 0.06%)</title><rect x="1062.2" y="1971.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1065.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="1062.9" y="1971.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.9" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (3 samples, 0.17%)</title><rect x="1063.6" y="1971.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.6" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1064.9" y="1955.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1067.9" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (5 samples, 0.28%)</title><rect x="1065.6" y="1971.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.6" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1065.6" y="1955.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1068.6" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.11%)</title><rect x="1066.2" y="1955.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.2" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="1066.9" y="1939.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.9" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.06%)</title><rect x="1067.6" y="1955.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.6" y="1966.0"></text>
</g>
<g>
<title>NodeHash::hash_find(Node const*) (1 samples, 0.06%)</title><rect x="1067.6" y="1939.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1070.6" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1068.3" y="1955.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1071.3" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1068.3" y="1939.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.3" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.45%)</title><rect x="1068.9" y="1987.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1071.9" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.45%)</title><rect x="1068.9" y="1971.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.9" y="1982.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1068.9" y="1955.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.9" y="1966.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1068.9" y="1939.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1071.9" y="1950.0"></text>
</g>
<g>
<title>MemNode::optimize_simple_memory_chain(Node*, TypeOopPtr const*, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1068.9" y="1923.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.9" y="1934.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.11%)</title><rect x="1069.6" y="1955.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.6" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1070.9" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1073.9" y="1966.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.06%)</title><rect x="1070.9" y="1939.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1073.9" y="1950.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1071.6" y="1955.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1074.6" y="1966.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1072.3" y="1955.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.3" y="1966.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1072.9" y="1955.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.9" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1072.9" y="1939.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1075.9" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1072.9" y="1923.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.9" y="1934.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.06%)</title><rect x="1072.9" y="1907.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.9" y="1918.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1073.6" y="1955.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.6" y="1966.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.06%)</title><rect x="1073.6" y="1939.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.6" y="1950.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1923.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.6" y="1934.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1907.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1076.6" y="1918.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1891.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.6" y="1902.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1875.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.6" y="1886.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1859.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.6" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1843.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.6" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.6" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.6" y="1822.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1073.6" y="1795.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.6" y="1806.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1073.6" y="1779.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1076.6" y="1790.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.11%)</title><rect x="1074.3" y="1987.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.3" y="1998.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.06%)</title><rect x="1075.6" y="1987.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1078.6" y="1998.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="1076.3" y="1987.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1079.3" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (43 samples, 2.44%)</title><rect x="1077.0" y="2003.0" width="28.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.0" y="2014.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (42 samples, 2.38%)</title><rect x="1077.6" y="1987.0" width="28.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1080.6" y="1998.0">Ph..</text>
</g>
<g>
<title>AddNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1078.3" y="1971.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.3" y="1982.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1079.0" y="1971.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.0" y="1982.0"></text>
</g>
<g>
<title>MemBarAcquireNode::Opcode() const (1 samples, 0.06%)</title><rect x="1079.0" y="1955.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.0" y="1966.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="1079.6" y="1971.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.6" y="1982.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1079.6" y="1955.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.6" y="1966.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="1079.6" y="1939.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1082.6" y="1950.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1079.6" y="1923.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.6" y="1934.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1079.6" y="1907.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1082.6" y="1918.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.06%)</title><rect x="1079.6" y="1891.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1082.6" y="1902.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.06%)</title><rect x="1080.3" y="1955.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.3" y="1966.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1080.3" y="1939.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.3" y="1950.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1080.3" y="1923.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.3" y="1934.0"></text>
</g>
<g>
<title>LoadNode::hash() const (1 samples, 0.06%)</title><rect x="1081.0" y="1971.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1084.0" y="1982.0"></text>
</g>
<g>
<title>LoadUBNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1081.6" y="1971.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.6" y="1982.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="1081.6" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1084.6" y="1966.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.239] (1 samples, 0.06%)</title><rect x="1081.6" y="1939.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.6" y="1950.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1082.3" y="1971.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.3" y="1982.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.06%)</title><rect x="1083.0" y="1971.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.0" y="1982.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.11%)</title><rect x="1083.6" y="1971.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.6" y="1982.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="1084.3" y="1955.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.3" y="1966.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.06%)</title><rect x="1084.3" y="1939.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1087.3" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="1085.0" y="1971.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1088.0" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.17%)</title><rect x="1085.6" y="1971.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.6" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1087.0" y="1955.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.0" y="1966.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1087.0" y="1939.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.0" y="1950.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="1087.7" y="1971.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.7" y="1982.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="1087.7" y="1955.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.7" y="1966.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.06%)</title><rect x="1088.3" y="1955.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1091.3" y="1966.0"></text>
</g>
<g>
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1089.0" y="1971.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1092.0" y="1982.0"></text>
</g>
<g>
<title>IfNode::dominated_by(Node*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="1089.0" y="1955.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1092.0" y="1966.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="1089.0" y="1939.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1092.0" y="1950.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (8 samples, 0.45%)</title><rect x="1089.7" y="1971.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1092.7" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="1090.3" y="1955.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.3" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.11%)</title><rect x="1091.0" y="1955.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.0" y="1966.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1091.7" y="1939.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.7" y="1950.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="1092.3" y="1955.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1095.3" y="1966.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="1093.0" y="1955.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.0" y="1966.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.11%)</title><rect x="1093.7" y="1955.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1096.7" y="1966.0"></text>
</g>
<g>
<title>VectorSet::operator&lt;&lt;=(unsigned int) (1 samples, 0.06%)</title><rect x="1094.3" y="1939.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.3" y="1950.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.06%)</title><rect x="1094.3" y="1923.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1097.3" y="1934.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (15 samples, 0.85%)</title><rect x="1095.0" y="1971.0" width="10.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.0" y="1982.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (15 samples, 0.85%)</title><rect x="1095.0" y="1955.0" width="10.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.0" y="1966.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.85%)</title><rect x="1095.0" y="1939.0" width="10.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.0" y="1950.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.85%)</title><rect x="1095.0" y="1923.0" width="10.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.0" y="1934.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.79%)</title><rect x="1095.0" y="1907.0" width="9.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.0" y="1918.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.62%)</title><rect x="1095.0" y="1891.0" width="7.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.0" y="1902.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.62%)</title><rect x="1095.0" y="1875.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.0" y="1886.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.57%)</title><rect x="1095.0" y="1859.0" width="6.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1098.0" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.51%)</title><rect x="1095.0" y="1843.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.0" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.51%)</title><rect x="1095.0" y="1827.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1098.0" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.45%)</title><rect x="1095.0" y="1811.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.0" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.45%)</title><rect x="1095.0" y="1795.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.0" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.45%)</title><rect x="1095.0" y="1779.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.0" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.45%)</title><rect x="1095.0" y="1763.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.0" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.45%)</title><rect x="1095.0" y="1747.0" width="5.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.0" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.40%)</title><rect x="1095.0" y="1731.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1098.0" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.34%)</title><rect x="1095.0" y="1715.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.0" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.34%)</title><rect x="1095.0" y="1699.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.0" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.34%)</title><rect x="1095.0" y="1683.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1098.0" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.28%)</title><rect x="1095.0" y="1667.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.0" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.23%)</title><rect x="1095.0" y="1651.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.0" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1095.0" y="1635.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.0" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.11%)</title><rect x="1095.0" y="1619.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1098.0" y="1630.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.11%)</title><rect x="1095.0" y="1603.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.0" y="1614.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.11%)</title><rect x="1096.3" y="1635.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1099.3" y="1646.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.11%)</title><rect x="1096.3" y="1619.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1099.3" y="1630.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1097.7" y="1651.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.7" y="1662.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1097.7" y="1635.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.7" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1098.4" y="1667.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1101.4" y="1678.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1098.4" y="1651.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1101.4" y="1662.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1099.0" y="1715.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1102.0" y="1726.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1099.0" y="1699.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.0" y="1710.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1099.7" y="1731.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1102.7" y="1742.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1099.7" y="1715.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1102.7" y="1726.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1100.4" y="1811.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.4" y="1822.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1100.4" y="1795.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1103.4" y="1806.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1101.0" y="1843.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.0" y="1854.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1101.0" y="1827.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.0" y="1838.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1101.7" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.7" y="1870.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1101.7" y="1843.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.7" y="1854.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (3 samples, 0.17%)</title><rect x="1102.4" y="1891.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.4" y="1902.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.17%)</title><rect x="1102.4" y="1875.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1105.4" y="1886.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1104.4" y="1907.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.4" y="1918.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1104.4" y="1891.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.4" y="1902.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1105.0" y="1971.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.0" y="1982.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.06%)</title><rect x="1105.7" y="2003.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1108.7" y="2014.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.06%)</title><rect x="1105.7" y="1987.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.7" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1105.7" y="1971.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1108.7" y="1982.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (6 samples, 0.34%)</title><rect x="1106.4" y="2003.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.4" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.23%)</title><rect x="1106.4" y="1987.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.4" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.23%)</title><rect x="1106.4" y="1971.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1109.4" y="1982.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1106.4" y="1955.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.4" y="1966.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.06%)</title><rect x="1106.4" y="1939.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.4" y="1950.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1106.4" y="1923.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.4" y="1934.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1106.4" y="1907.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.4" y="1918.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1106.4" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.4" y="1902.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="1107.1" y="1955.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.1" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1107.1" y="1939.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1110.1" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1107.1" y="1923.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.1" y="1934.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1107.1" y="1907.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.1" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="1107.7" y="1939.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.7" y="1950.0"></text>
</g>
<g>
<title>BoolNode::hash() const (1 samples, 0.06%)</title><rect x="1107.7" y="1923.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1110.7" y="1934.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.06%)</title><rect x="1107.7" y="1907.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.7" y="1918.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1108.4" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.4" y="1966.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.06%)</title><rect x="1108.4" y="1939.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.4" y="1950.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (2 samples, 0.11%)</title><rect x="1109.1" y="1987.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.1" y="1998.0"></text>
</g>
<g>
<title>PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*) (2 samples, 0.11%)</title><rect x="1109.1" y="1971.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.1" y="1982.0"></text>
</g>
<g>
<title>InitializeNode::complete_stores(Node*, Node*, Node*, long, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1109.1" y="1955.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.1" y="1966.0"></text>
</g>
<g>
<title>InitializeNode::coalesce_subword_stores(long, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1109.1" y="1939.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.1" y="1950.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="1109.1" y="1923.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.1" y="1934.0"></text>
</g>
<g>
<title>StoreNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Node*, BasicType, MemNode::MemOrd) (1 samples, 0.06%)</title><rect x="1109.7" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.7" y="1966.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1109.7" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1112.7" y="1950.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1109.7" y="1923.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.7" y="1934.0"></text>
</g>
<g>
<title>TypeKlassPtr::hash() const (1 samples, 0.06%)</title><rect x="1109.7" y="1907.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.7" y="1918.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.11%)</title><rect x="1110.4" y="2003.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1113.4" y="2014.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.11%)</title><rect x="1110.4" y="1987.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1113.4" y="1998.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1111.1" y="1971.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.1" y="1982.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1111.7" y="2003.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1114.7" y="2014.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.11%)</title><rect x="1112.4" y="2003.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1115.4" y="2014.0"></text>
</g>
<g>
<title>Compile::build_start_state(StartNode*, TypeFunc const*) (1 samples, 0.06%)</title><rect x="1113.7" y="2019.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.7" y="2030.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.06%)</title><rect x="1113.7" y="2003.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.7" y="2014.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.06%)</title><rect x="1113.7" y="1987.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1116.7" y="1998.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.23%)</title><rect x="1114.4" y="2019.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.4" y="2030.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.11%)</title><rect x="1114.4" y="2003.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.4" y="2014.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1114.4" y="1987.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.4" y="1998.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1114.4" y="1971.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.4" y="1982.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1114.4" y="1955.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.4" y="1966.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1114.4" y="1939.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.4" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1114.4" y="1923.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.4" y="1934.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1114.4" y="1907.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.4" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1114.4" y="1891.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.4" y="1902.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1114.4" y="1875.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.4" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1114.4" y="1859.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.4" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1114.4" y="1843.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1117.4" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1114.4" y="1827.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1117.4" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1114.4" y="1811.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.4" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1114.4" y="1795.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.4" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1114.4" y="1779.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.4" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1114.4" y="1763.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1117.4" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1114.4" y="1747.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.4" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1114.4" y="1731.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.4" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1114.4" y="1715.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.4" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1114.4" y="1699.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.4" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1114.4" y="1683.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1114.4" y="1667.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.4" y="1678.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1115.1" y="1715.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.1" y="1726.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1115.1" y="1699.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.1" y="1710.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1115.1" y="1683.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.1" y="1694.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1115.1" y="1667.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.1" y="1678.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1115.1" y="1651.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.1" y="1662.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1115.1" y="1635.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.1" y="1646.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1115.1" y="1619.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1118.1" y="1630.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.11%)</title><rect x="1115.7" y="2003.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.7" y="2014.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1116.4" y="1987.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.4" y="1998.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.06%)</title><rect x="1117.1" y="2019.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.1" y="2030.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.06%)</title><rect x="1117.1" y="2003.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1120.1" y="2014.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1117.1" y="1987.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1120.1" y="1998.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.06%)</title><rect x="1117.1" y="1971.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1120.1" y="1982.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.06%)</title><rect x="1117.8" y="2019.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.8" y="2030.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (69 samples, 3.91%)</title><rect x="1118.4" y="2019.0" width="46.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.4" y="2030.0">Pars..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (69 samples, 3.91%)</title><rect x="1118.4" y="2003.0" width="46.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.4" y="2014.0">Pars..</text>
</g>
<g>
<title>Parse::do_all_blocks() (68 samples, 3.85%)</title><rect x="1118.4" y="1987.0" width="45.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.4" y="1998.0">Pars..</text>
</g>
<g>
<title>Parse::do_one_block() (68 samples, 3.85%)</title><rect x="1118.4" y="1971.0" width="45.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.4" y="1982.0">Pars..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (68 samples, 3.85%)</title><rect x="1118.4" y="1955.0" width="45.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.4" y="1966.0">Pars..</text>
</g>
<g>
<title>Parse::do_call() (63 samples, 3.57%)</title><rect x="1118.4" y="1939.0" width="42.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.4" y="1950.0">Pars..</text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1118.4" y="1923.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1121.4" y="1934.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.06%)</title><rect x="1118.4" y="1907.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.4" y="1918.0"></text>
</g>
<g>
<title>LibraryCallKit::generate_current_thread(Node*&amp;) (1 samples, 0.06%)</title><rect x="1118.4" y="1891.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.4" y="1902.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1118.4" y="1875.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.4" y="1886.0"></text>
</g>
<g>
<title>AddPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1118.4" y="1859.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1121.4" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (55 samples, 3.12%)</title><rect x="1119.1" y="1923.0" width="36.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1122.1" y="1934.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (55 samples, 3.12%)</title><rect x="1119.1" y="1907.0" width="36.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.1" y="1918.0">Par..</text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1119.1" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1122.1" y="1902.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1119.1" y="1875.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.1" y="1886.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1119.1" y="1859.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.1" y="1870.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1119.1" y="1843.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.1" y="1854.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="1119.1" y="1827.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.1" y="1838.0"></text>
</g>
<g>
<title>GraphKit::compute_stack_effects(int&amp;, int&amp;) (1 samples, 0.06%)</title><rect x="1119.1" y="1811.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.1" y="1822.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1119.1" y="1795.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.1" y="1806.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1119.1" y="1779.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.1" y="1790.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1119.1" y="1763.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.1" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1119.1" y="1747.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.1" y="1758.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1119.1" y="1731.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1122.1" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1119.1" y="1715.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.1" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1119.1" y="1699.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.1" y="1710.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1119.1" y="1683.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.1" y="1694.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.06%)</title><rect x="1119.1" y="1667.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.1" y="1678.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="1119.1" y="1651.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.1" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (54 samples, 3.06%)</title><rect x="1119.8" y="1891.0" width="36.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.8" y="1902.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (54 samples, 3.06%)</title><rect x="1119.8" y="1875.0" width="36.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1122.8" y="1886.0">Par..</text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="1120.4" y="1859.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.4" y="1870.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.06%)</title><rect x="1120.4" y="1843.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.4" y="1854.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.06%)</title><rect x="1120.4" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.4" y="1838.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="1120.4" y="1811.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.4" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (52 samples, 2.95%)</title><rect x="1121.1" y="1859.0" width="34.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.1" y="1870.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (48 samples, 2.72%)</title><rect x="1121.1" y="1843.0" width="32.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.1" y="1854.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.17%)</title><rect x="1121.1" y="1827.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.1" y="1838.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.17%)</title><rect x="1121.1" y="1811.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.1" y="1822.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.17%)</title><rect x="1121.1" y="1795.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.1" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.17%)</title><rect x="1121.1" y="1779.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.1" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.17%)</title><rect x="1121.1" y="1763.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.1" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::Block(ciTypeFlow*, ciBlock*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1121.1" y="1747.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.1" y="1758.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.11%)</title><rect x="1121.8" y="1747.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.8" y="1758.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.11%)</title><rect x="1121.8" y="1731.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.8" y="1742.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.11%)</title><rect x="1121.8" y="1715.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1124.8" y="1726.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_checkcast(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1121.8" y="1699.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.8" y="1710.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.06%)</title><rect x="1121.8" y="1683.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.8" y="1694.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1121.8" y="1667.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.8" y="1678.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1121.8" y="1651.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.8" y="1662.0"></text>
</g>
<g>
<title>LinkResolver::check_klass_accessability(Klass*, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1121.8" y="1635.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.8" y="1646.0"></text>
</g>
<g>
<title>InstanceKlass::module() const (1 samples, 0.06%)</title><rect x="1121.8" y="1619.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.8" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1122.4" y="1699.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.4" y="1710.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1122.4" y="1683.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.4" y="1694.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1122.4" y="1667.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.4" y="1678.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1122.4" y="1651.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.4" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1122.4" y="1635.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.4" y="1646.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1122.4" y="1619.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.4" y="1630.0"></text>
</g>
<g>
<title>FieldType::get_array_info(Symbol*, FieldArrayInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1122.4" y="1603.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.4" y="1614.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1122.4" y="1587.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.4" y="1598.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="1123.1" y="1827.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.1" y="1838.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1123.1" y="1811.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.1" y="1822.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.06%)</title><rect x="1123.1" y="1795.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1126.1" y="1806.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="1123.1" y="1779.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1126.1" y="1790.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="1123.1" y="1763.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.1" y="1774.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1123.1" y="1747.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.1" y="1758.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.06%)</title><rect x="1123.1" y="1731.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.1" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (37 samples, 2.10%)</title><rect x="1123.8" y="1827.0" width="24.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.8" y="1838.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (37 samples, 2.10%)</title><rect x="1123.8" y="1811.0" width="24.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.8" y="1822.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (36 samples, 2.04%)</title><rect x="1123.8" y="1795.0" width="24.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.8" y="1806.0">P..</text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.06%)</title><rect x="1123.8" y="1779.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.8" y="1790.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.185] (1 samples, 0.06%)</title><rect x="1123.8" y="1763.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.8" y="1774.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1123.8" y="1747.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.8" y="1758.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.06%)</title><rect x="1123.8" y="1731.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (35 samples, 1.98%)</title><rect x="1124.4" y="1779.0" width="23.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.4" y="1790.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (35 samples, 1.98%)</title><rect x="1124.4" y="1763.0" width="23.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.4" y="1774.0">P..</text>
</g>
<g>
<title>Parse::do_call() (32 samples, 1.81%)</title><rect x="1125.1" y="1747.0" width="21.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1128.1" y="1758.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.11%)</title><rect x="1125.1" y="1731.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.1" y="1742.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.11%)</title><rect x="1125.1" y="1715.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.1" y="1726.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1125.1" y="1699.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.1" y="1710.0"></text>
</g>
<g>
<title>CompilerOracle::should_inline(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1125.1" y="1683.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.1" y="1694.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1125.8" y="1699.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1128.8" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1125.8" y="1683.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.8" y="1694.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1125.8" y="1667.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.8" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1125.8" y="1651.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.8" y="1662.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1125.8" y="1635.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.8" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1125.8" y="1619.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.8" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1125.8" y="1603.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.8" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (26 samples, 1.47%)</title><rect x="1126.5" y="1731.0" width="17.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.5" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (26 samples, 1.47%)</title><rect x="1126.5" y="1715.0" width="17.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.5" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 1.42%)</title><rect x="1126.5" y="1699.0" width="16.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 1.42%)</title><rect x="1126.5" y="1683.0" width="16.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 1.42%)</title><rect x="1126.5" y="1667.0" width="16.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (22 samples, 1.25%)</title><rect x="1126.5" y="1651.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.5" y="1662.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.17%)</title><rect x="1126.5" y="1635.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1129.5" y="1646.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1126.5" y="1619.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.5" y="1630.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.06%)</title><rect x="1126.5" y="1603.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.5" y="1614.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1126.5" y="1587.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.5" y="1598.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1126.5" y="1571.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.5" y="1582.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1126.5" y="1555.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1129.5" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1126.5" y="1539.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.5" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1126.5" y="1523.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.5" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1126.5" y="1507.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.5" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1126.5" y="1491.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.5" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1126.5" y="1475.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.5" y="1486.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1126.5" y="1459.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1129.5" y="1470.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1126.5" y="1443.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.5" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1126.5" y="1427.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.5" y="1438.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1126.5" y="1411.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.5" y="1422.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1126.5" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.5" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1126.5" y="1379.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.5" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1126.5" y="1363.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.5" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1126.5" y="1347.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1129.5" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.06%)</title><rect x="1126.5" y="1331.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.5" y="1342.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1127.1" y="1619.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.1" y="1630.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1127.1" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.1" y="1614.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1127.1" y="1587.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.1" y="1598.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1127.1" y="1571.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.1" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1127.1" y="1555.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.1" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1127.1" y="1539.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.1" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1127.1" y="1523.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.1" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1127.1" y="1507.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.1" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::block_at(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) [clone .constprop.160] (1 samples, 0.06%)</title><rect x="1127.1" y="1491.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.1" y="1502.0"></text>
</g>
<g>
<title>ciType::make(BasicType) (1 samples, 0.06%)</title><rect x="1127.1" y="1475.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.1" y="1486.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1127.8" y="1619.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.8" y="1630.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1127.8" y="1603.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.8" y="1614.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1127.8" y="1587.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.8" y="1598.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1127.8" y="1571.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.8" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1127.8" y="1555.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.8" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1127.8" y="1539.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.8" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1127.8" y="1523.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.8" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1127.8" y="1507.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.8" y="1518.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1127.8" y="1491.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.8" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1127.8" y="1475.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.8" y="1486.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1127.8" y="1459.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.8" y="1470.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1127.8" y="1443.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.8" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1127.8" y="1427.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.8" y="1438.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1127.8" y="1411.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.8" y="1422.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1127.8" y="1395.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.8" y="1406.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.06%)</title><rect x="1127.8" y="1379.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.8" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 0.96%)</title><rect x="1128.5" y="1635.0" width="11.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.5" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 0.96%)</title><rect x="1128.5" y="1619.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.96%)</title><rect x="1128.5" y="1603.0" width="11.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.91%)</title><rect x="1128.5" y="1587.0" width="10.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.85%)</title><rect x="1129.1" y="1571.0" width="10.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.1" y="1582.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.06%)</title><rect x="1129.1" y="1555.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1132.1" y="1566.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1129.1" y="1539.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.1" y="1550.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1129.1" y="1523.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.1" y="1534.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1129.1" y="1507.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.1" y="1518.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1129.1" y="1491.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.1" y="1502.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1129.1" y="1475.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.1" y="1486.0"></text>
</g>
<g>
<title>StoreNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Node*, BasicType, MemNode::MemOrd) (1 samples, 0.06%)</title><rect x="1129.1" y="1459.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.1" y="1470.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.06%)</title><rect x="1129.1" y="1443.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.1" y="1454.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1129.1" y="1427.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1132.1" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.74%)</title><rect x="1129.8" y="1555.0" width="8.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.8" y="1566.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.17%)</title><rect x="1129.8" y="1539.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.8" y="1550.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1129.8" y="1523.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.8" y="1534.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.06%)</title><rect x="1129.8" y="1507.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.8" y="1518.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1129.8" y="1491.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.8" y="1502.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1129.8" y="1475.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.8" y="1486.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1129.8" y="1459.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1132.8" y="1470.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1129.8" y="1443.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1132.8" y="1454.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1129.8" y="1427.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.8" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1129.8" y="1411.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.8" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1129.8" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.8" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1129.8" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.8" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1129.8" y="1363.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.8" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::push_translate(ciType*) (1 samples, 0.06%)</title><rect x="1129.8" y="1347.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.8" y="1358.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.11%)</title><rect x="1130.5" y="1523.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.5" y="1534.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1130.5" y="1507.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.5" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.06%)</title><rect x="1130.5" y="1491.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.5" y="1502.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.06%)</title><rect x="1130.5" y="1475.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1133.5" y="1486.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.06%)</title><rect x="1130.5" y="1459.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.5" y="1470.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="1130.5" y="1443.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.5" y="1454.0"></text>
</g>
<g>
<title>ciMethod::scale_count(int, float) (1 samples, 0.06%)</title><rect x="1131.1" y="1507.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.1" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.51%)</title><rect x="1131.8" y="1539.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.8" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.51%)</title><rect x="1131.8" y="1523.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.8" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.51%)</title><rect x="1131.8" y="1507.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.8" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.51%)</title><rect x="1131.8" y="1491.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.8" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.51%)</title><rect x="1131.8" y="1475.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.8" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.40%)</title><rect x="1131.8" y="1459.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.8" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.40%)</title><rect x="1131.8" y="1443.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.8" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.40%)</title><rect x="1131.8" y="1427.0" width="4.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.40%)</title><rect x="1131.8" y="1411.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.40%)</title><rect x="1131.8" y="1395.0" width="4.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.8" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.40%)</title><rect x="1131.8" y="1379.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.8" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.34%)</title><rect x="1131.8" y="1363.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.8" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.28%)</title><rect x="1131.8" y="1347.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.8" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.28%)</title><rect x="1131.8" y="1331.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.28%)</title><rect x="1131.8" y="1315.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.28%)</title><rect x="1131.8" y="1299.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.28%)</title><rect x="1131.8" y="1283.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.8" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.28%)</title><rect x="1131.8" y="1267.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.8" y="1278.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1131.8" y="1251.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.8" y="1262.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1131.8" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.8" y="1246.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.06%)</title><rect x="1131.8" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.8" y="1230.0"></text>
</g>
<g>
<title>ciMethod::call_profile_at_bci(int) (1 samples, 0.06%)</title><rect x="1131.8" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.8" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.23%)</title><rect x="1132.5" y="1251.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.23%)</title><rect x="1132.5" y="1235.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.23%)</title><rect x="1132.5" y="1219.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.23%)</title><rect x="1132.5" y="1203.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.23%)</title><rect x="1132.5" y="1187.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1135.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1132.5" y="1171.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1132.5" y="1155.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.5" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1132.5" y="1139.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1132.5" y="1123.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1132.5" y="1107.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1132.5" y="1091.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1132.5" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1132.5" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1132.5" y="1043.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1132.5" y="1027.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1132.5" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1135.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1132.5" y="995.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1132.5" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.5" y="990.0"></text>
</g>
<g>
<title>ciMethod::method_data() (1 samples, 0.06%)</title><rect x="1132.5" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1133.1" y="1075.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.11%)</title><rect x="1133.1" y="1059.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.1" y="1070.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.11%)</title><rect x="1133.1" y="1043.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.1" y="1054.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.11%)</title><rect x="1133.1" y="1027.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.1" y="1038.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.11%)</title><rect x="1133.1" y="1011.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.1" y="1022.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (2 samples, 0.11%)</title><rect x="1133.1" y="995.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.1" y="1006.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.11%)</title><rect x="1133.1" y="979.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.1" y="990.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="1133.1" y="963.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.1" y="974.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (2 samples, 0.11%)</title><rect x="1133.1" y="947.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.1" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="931.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1136.1" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="915.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.1" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="899.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.1" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="883.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.1" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="867.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.1" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="851.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.1" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="835.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.1" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="819.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.1" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="803.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="787.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.1" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="771.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1136.1" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="755.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.1" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="739.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.1" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="723.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.1" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="707.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.1" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1133.1" y="691.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.1" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.1" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="659.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.1" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.1" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="627.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.1" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.1" y="622.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1133.1" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.1" y="606.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1133.1" y="579.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.1" y="590.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1133.8" y="675.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="686.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1133.8" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1134.5" y="1171.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1134.5" y="1155.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.5" y="1166.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1134.5" y="1139.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.5" y="1150.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1134.5" y="1123.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.5" y="1134.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1134.5" y="1107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.5" y="1118.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1134.5" y="1091.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.5" y="1102.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1134.5" y="1075.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.5" y="1086.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1134.5" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1137.5" y="1070.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1134.5" y="1043.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.5" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.06%)</title><rect x="1134.5" y="1027.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.5" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1134.5" y="1011.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.5" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1134.5" y="995.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.5" y="1006.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1134.5" y="979.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.5" y="990.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1134.5" y="963.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.5" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1135.1" y="1347.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.1" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1135.1" y="1331.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.1" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1135.1" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.1" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1135.1" y="1299.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1135.1" y="1283.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.1" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1135.1" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1135.1" y="1251.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.1" y="1262.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1135.1" y="1235.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.1" y="1246.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1135.1" y="1219.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.1" y="1230.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1135.1" y="1203.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.1" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1135.1" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.1" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1135.1" y="1171.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.1" y="1182.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="1135.1" y="1155.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1135.1" y="1139.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1138.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1135.1" y="1123.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1138.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1135.1" y="1107.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1138.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1135.1" y="1091.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1138.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1135.1" y="1075.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1138.1" y="1086.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1135.8" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.8" y="1374.0"></text>
</g>
<g>
<title>CmpPNode::sub(Type const*, Type const*) const (1 samples, 0.06%)</title><rect x="1135.8" y="1347.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.8" y="1358.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1135.8" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.8" y="1342.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1135.8" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1136.5" y="1459.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1136.5" y="1443.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.5" y="1454.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1136.5" y="1427.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.5" y="1438.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1136.5" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.5" y="1422.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1136.5" y="1395.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.5" y="1406.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1136.5" y="1379.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.5" y="1390.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1136.5" y="1363.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.5" y="1374.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1136.5" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.5" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.06%)</title><rect x="1136.5" y="1331.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.5" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1315.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.5" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1299.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.5" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1283.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.5" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1267.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.5" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.5" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.5" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1219.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.5" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.5" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1187.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.5" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.5" y="1182.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1136.5" y="1155.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.5" y="1166.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1139.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1137.2" y="1459.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.2" y="1470.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1137.8" y="1539.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1138.5" y="1555.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.5" y="1566.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1138.5" y="1539.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.5" y="1550.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="1138.5" y="1523.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.5" y="1534.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="1138.5" y="1507.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.5" y="1518.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1138.5" y="1491.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.5" y="1502.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1138.5" y="1475.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.5" y="1486.0"></text>
</g>
<g>
<title>Parse::ensure_phis_everywhere() (1 samples, 0.06%)</title><rect x="1139.2" y="1587.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.2" y="1598.0"></text>
</g>
<g>
<title>Parse::ensure_memory_phi(int, bool) (1 samples, 0.06%)</title><rect x="1139.2" y="1571.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.2" y="1582.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.06%)</title><rect x="1139.2" y="1555.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.2" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1139.8" y="1635.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.8" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1139.8" y="1619.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.8" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1139.8" y="1603.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.8" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1139.8" y="1587.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1139.8" y="1571.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1139.8" y="1555.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1139.8" y="1539.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.8" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1139.8" y="1523.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.8" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1139.8" y="1507.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.8" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1139.8" y="1491.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.8" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1139.8" y="1475.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.8" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1139.8" y="1459.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.8" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1139.8" y="1443.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.8" y="1454.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1139.8" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.8" y="1438.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.06%)</title><rect x="1139.8" y="1411.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.8" y="1422.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.177] (1 samples, 0.06%)</title><rect x="1139.8" y="1395.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.8" y="1406.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1139.8" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.8" y="1390.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1140.5" y="1635.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.5" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.06%)</title><rect x="1140.5" y="1619.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.5" y="1630.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.06%)</title><rect x="1140.5" y="1603.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1143.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1141.2" y="1651.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.2" y="1662.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.11%)</title><rect x="1141.2" y="1635.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.2" y="1646.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.11%)</title><rect x="1141.2" y="1619.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.2" y="1630.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.11%)</title><rect x="1141.2" y="1603.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.2" y="1614.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.11%)</title><rect x="1141.2" y="1587.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.2" y="1598.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.11%)</title><rect x="1141.2" y="1571.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.2" y="1582.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (2 samples, 0.11%)</title><rect x="1141.2" y="1555.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.2" y="1566.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.11%)</title><rect x="1141.2" y="1539.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.2" y="1550.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="1141.2" y="1523.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.2" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (2 samples, 0.11%)</title><rect x="1141.2" y="1507.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.2" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1141.2" y="1491.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.2" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="1141.2" y="1475.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.2" y="1486.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1459.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.2" y="1470.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1443.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.2" y="1454.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1427.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.2" y="1438.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1411.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.2" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1395.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.2" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1379.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.2" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1363.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.2" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1347.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.2" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1331.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.2" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.2" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1299.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.2" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1283.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.2" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1267.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.2" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1251.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.2" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1235.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.2" y="1246.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1141.2" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.2" y="1230.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1141.2" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.2" y="1214.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1141.8" y="1459.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.8" y="1470.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1141.8" y="1443.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.8" y="1454.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="1142.5" y="1651.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1143.2" y="1699.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.2" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.23%)</title><rect x="1143.8" y="1731.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.8" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.23%)</title><rect x="1143.8" y="1715.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.8" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.23%)</title><rect x="1143.8" y="1699.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.8" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.23%)</title><rect x="1143.8" y="1683.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.8" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.23%)</title><rect x="1143.8" y="1667.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.8" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.23%)</title><rect x="1143.8" y="1651.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.23%)</title><rect x="1143.8" y="1635.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.8" y="1646.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1143.8" y="1619.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.8" y="1630.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1143.8" y="1603.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.8" y="1614.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1143.8" y="1587.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.8" y="1598.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1143.8" y="1571.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.8" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1143.8" y="1555.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.8" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1143.8" y="1539.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.8" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1143.8" y="1523.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.8" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1143.8" y="1507.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.8" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1143.8" y="1491.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.8" y="1502.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1143.8" y="1475.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.8" y="1486.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1143.8" y="1459.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.8" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1143.8" y="1443.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.8" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1143.8" y="1427.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.8" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1143.8" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.8" y="1422.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1143.8" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.8" y="1406.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1143.8" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.8" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1144.5" y="1619.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.5" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1144.5" y="1603.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1144.5" y="1587.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1144.5" y="1571.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1144.5" y="1555.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1144.5" y="1539.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.5" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1144.5" y="1523.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.5" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1144.5" y="1507.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1144.5" y="1491.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1144.5" y="1475.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1144.5" y="1459.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1144.5" y="1443.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.5" y="1454.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1144.5" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.5" y="1438.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="1144.5" y="1411.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.5" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1144.5" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.5" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1144.5" y="1379.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.5" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1145.2" y="1427.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.2" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1145.2" y="1411.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.2" y="1422.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="1145.2" y="1395.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.2" y="1406.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1145.2" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.2" y="1390.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1145.2" y="1363.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="1374.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1145.2" y="1347.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="1358.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="1145.2" y="1331.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1145.9" y="1395.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1145.9" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1145.9" y="1363.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1145.9" y="1347.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.9" y="1358.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1145.9" y="1331.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.9" y="1342.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1145.9" y="1315.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="1326.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1145.9" y="1299.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.9" y="1310.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.06%)</title><rect x="1145.9" y="1283.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.9" y="1294.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="1145.9" y="1267.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1148.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1146.5" y="1747.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.5" y="1758.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.11%)</title><rect x="1146.5" y="1731.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="1742.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1146.5" y="1715.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.5" y="1726.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1146.5" y="1699.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.5" y="1710.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1146.5" y="1683.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.5" y="1694.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1146.5" y="1667.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.5" y="1678.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1146.5" y="1651.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.5" y="1662.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.06%)</title><rect x="1146.5" y="1635.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.5" y="1646.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1146.5" y="1619.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="1630.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1146.5" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="1614.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.06%)</title><rect x="1146.5" y="1587.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.5" y="1598.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1146.5" y="1571.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="1582.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1146.5" y="1555.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.5" y="1566.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1146.5" y="1539.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.5" y="1550.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.06%)</title><rect x="1147.2" y="1715.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.2" y="1726.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1147.2" y="1699.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.2" y="1710.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1147.2" y="1683.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.2" y="1694.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.06%)</title><rect x="1147.9" y="1795.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.9" y="1806.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1147.9" y="1779.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.9" y="1790.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.40%)</title><rect x="1148.5" y="1827.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.5" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.34%)</title><rect x="1148.5" y="1811.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.5" y="1822.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.34%)</title><rect x="1148.5" y="1795.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.5" y="1806.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.34%)</title><rect x="1148.5" y="1779.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.34%)</title><rect x="1148.5" y="1763.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.34%)</title><rect x="1148.5" y="1747.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.5" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.28%)</title><rect x="1148.5" y="1731.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.5" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.28%)</title><rect x="1148.5" y="1715.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.5" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.28%)</title><rect x="1148.5" y="1699.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.28%)</title><rect x="1148.5" y="1683.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.28%)</title><rect x="1148.5" y="1667.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.28%)</title><rect x="1148.5" y="1651.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.23%)</title><rect x="1148.5" y="1635.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.5" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.23%)</title><rect x="1148.5" y="1619.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.5" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.23%)</title><rect x="1148.5" y="1603.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.5" y="1614.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1148.5" y="1587.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.5" y="1598.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1148.5" y="1571.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.5" y="1582.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1148.5" y="1555.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.5" y="1566.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1148.5" y="1539.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.5" y="1550.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1148.5" y="1523.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.5" y="1534.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1148.5" y="1507.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.5" y="1518.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1148.5" y="1491.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1149.2" y="1587.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.2" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1149.2" y="1571.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.2" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1149.2" y="1555.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1149.2" y="1539.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.2" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1149.2" y="1523.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.2" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1149.2" y="1507.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.2" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1149.2" y="1491.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.2" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1149.2" y="1475.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.2" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1149.2" y="1459.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.2" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1149.2" y="1443.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.2" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1149.2" y="1427.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.2" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1149.2" y="1411.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1149.2" y="1395.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1149.2" y="1379.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.2" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1149.2" y="1363.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.2" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1149.2" y="1347.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.2" y="1358.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1149.2" y="1331.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.2" y="1342.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1149.2" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.2" y="1326.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1149.2" y="1299.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.2" y="1310.0"></text>
</g>
<g>
<title>is_init_with_ea(ciMethod*, ciMethod*, Compile*) (1 samples, 0.06%)</title><rect x="1149.2" y="1283.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1152.2" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1149.9" y="1331.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.9" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1149.9" y="1315.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.9" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1149.9" y="1299.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1149.9" y="1283.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1149.9" y="1267.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="1251.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.9" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="1235.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.9" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="1219.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="1203.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="1171.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.9" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="1155.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.9" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="1139.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.9" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="1123.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="1107.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="1091.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="1059.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="1043.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.9" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="1027.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="995.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.9" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.9" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="931.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="867.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.9" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="851.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.9" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="771.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.9" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="755.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.9" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="739.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1149.9" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.9" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1149.9" y="659.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.9" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1149.9" y="643.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1149.9" y="627.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1149.9" y="611.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1149.9" y="595.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1149.9" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1149.9" y="563.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="574.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.06%)</title><rect x="1149.9" y="547.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.9" y="558.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.06%)</title><rect x="1149.9" y="531.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.9" y="542.0"></text>
</g>
<g>
<title>ciField::constant_value_of(ciObject*) (1 samples, 0.06%)</title><rect x="1149.9" y="515.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.9" y="526.0"></text>
</g>
<g>
<title>ciInstance::field_value(ciField*) (1 samples, 0.06%)</title><rect x="1149.9" y="499.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1150.5" y="1251.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1150.5" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.5" y="1246.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1150.5" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.5" y="1230.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1150.5" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.5" y="1214.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1150.5" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.5" y="1198.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1150.5" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.5" y="1182.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1150.5" y="1155.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.5" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1150.5" y="1139.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.5" y="1150.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1150.5" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.5" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.06%)</title><rect x="1150.5" y="1107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.5" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1150.5" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.5" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1150.5" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.5" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1150.5" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.5" y="1070.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.06%)</title><rect x="1150.5" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.5" y="1054.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1150.5" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1151.2" y="1635.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.2" y="1646.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1151.2" y="1619.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.2" y="1630.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1151.2" y="1603.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.2" y="1614.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1151.2" y="1587.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.2" y="1598.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1151.2" y="1571.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.2" y="1582.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1151.2" y="1555.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.06%)</title><rect x="1151.9" y="1731.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.9" y="1742.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.06%)</title><rect x="1151.9" y="1715.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.9" y="1726.0"></text>
</g>
<g>
<title>GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind) (1 samples, 0.06%)</title><rect x="1151.9" y="1699.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.9" y="1710.0"></text>
</g>
<g>
<title>TypeKlassPtr::as_instance_type() const (1 samples, 0.06%)</title><rect x="1151.9" y="1683.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.9" y="1694.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1151.9" y="1667.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.9" y="1678.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1151.9" y="1651.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.9" y="1662.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1151.9" y="1635.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.9" y="1646.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="1151.9" y="1619.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.9" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1152.5" y="1811.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.5" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1152.5" y="1795.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1152.5" y="1779.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1152.5" y="1763.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1152.5" y="1747.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1152.5" y="1731.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.5" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1152.5" y="1715.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.5" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1152.5" y="1699.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.5" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1152.5" y="1683.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1152.5" y="1667.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1152.5" y="1651.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1152.5" y="1635.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1152.5" y="1619.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.5" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1152.5" y="1603.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.5" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1152.5" y="1587.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1152.5" y="1571.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1152.5" y="1555.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1152.5" y="1539.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1152.5" y="1523.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.5" y="1534.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1152.5" y="1507.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.5" y="1518.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.06%)</title><rect x="1152.5" y="1491.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.5" y="1502.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1152.5" y="1475.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.5" y="1486.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1152.5" y="1459.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1153.2" y="1843.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.2" y="1854.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1153.2" y="1827.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.2" y="1838.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1153.2" y="1811.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.2" y="1822.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1153.2" y="1795.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.2" y="1806.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1153.2" y="1779.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.2" y="1790.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1153.2" y="1763.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.2" y="1774.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1153.2" y="1747.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.2" y="1758.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.06%)</title><rect x="1153.2" y="1731.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1153.9" y="1827.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.9" y="1838.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1153.9" y="1811.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.9" y="1822.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1153.9" y="1795.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.9" y="1806.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1153.9" y="1779.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.9" y="1790.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1153.9" y="1763.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.9" y="1774.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1153.9" y="1747.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="1758.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.11%)</title><rect x="1154.5" y="1843.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.5" y="1854.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1154.5" y="1827.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.5" y="1838.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1154.5" y="1811.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.5" y="1822.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1154.5" y="1795.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.5" y="1806.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.06%)</title><rect x="1154.5" y="1779.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.5" y="1790.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.06%)</title><rect x="1154.5" y="1763.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.5" y="1774.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1154.5" y="1747.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.5" y="1758.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1155.2" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.2" y="1838.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="1155.2" y="1811.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.2" y="1822.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.40%)</title><rect x="1155.9" y="1923.0" width="4.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.9" y="1934.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.40%)</title><rect x="1155.9" y="1907.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.9" y="1918.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.40%)</title><rect x="1155.9" y="1891.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.9" y="1902.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.40%)</title><rect x="1155.9" y="1875.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.9" y="1886.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.40%)</title><rect x="1155.9" y="1859.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.9" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.40%)</title><rect x="1155.9" y="1843.0" width="4.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.9" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.34%)</title><rect x="1155.9" y="1827.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.9" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1155.9" y="1811.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.9" y="1822.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1155.9" y="1795.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.9" y="1806.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1155.9" y="1779.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.9" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1155.9" y="1763.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.9" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1155.9" y="1747.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.9" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1155.9" y="1731.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1155.9" y="1715.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1155.9" y="1699.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.9" y="1683.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.9" y="1667.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.9" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.9" y="1651.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.9" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.9" y="1635.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.9" y="1619.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.9" y="1603.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.9" y="1587.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.9" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.9" y="1571.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.9" y="1555.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.9" y="1566.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1155.9" y="1539.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.9" y="1550.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1155.9" y="1523.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.9" y="1534.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1155.9" y="1507.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="1518.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1155.9" y="1491.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.9" y="1502.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1155.9" y="1475.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.9" y="1486.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1155.9" y="1459.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="1470.0"></text>
</g>
<g>
<title>G1BarrierSetC2::g1_mark_card(GraphKit*, IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) const (1 samples, 0.06%)</title><rect x="1155.9" y="1443.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="1454.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1155.9" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.9" y="1438.0"></text>
</g>
<g>
<title>AddLNode::Opcode() const (1 samples, 0.06%)</title><rect x="1155.9" y="1411.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.9" y="1422.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1156.6" y="1683.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.6" y="1694.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1156.6" y="1667.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.6" y="1678.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1156.6" y="1651.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1159.6" y="1662.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1157.2" y="1715.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.2" y="1726.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1157.2" y="1699.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.2" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1157.2" y="1683.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.2" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1157.2" y="1667.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.2" y="1678.0"></text>
</g>
<g>
<title>Parse::init_blocks() (1 samples, 0.06%)</title><rect x="1157.2" y="1651.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.2" y="1662.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1157.9" y="1811.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.9" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1157.9" y="1795.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.9" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1157.9" y="1779.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.9" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1157.9" y="1763.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.9" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1157.9" y="1747.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.9" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1157.9" y="1731.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.9" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1157.9" y="1715.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.9" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1157.9" y="1699.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.9" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1157.9" y="1683.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.9" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1157.9" y="1667.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.9" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1157.9" y="1651.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.9" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1157.9" y="1635.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1157.9" y="1619.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.9" y="1630.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1157.9" y="1603.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.9" y="1614.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1157.9" y="1587.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.9" y="1598.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1157.9" y="1571.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.9" y="1582.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.06%)</title><rect x="1157.9" y="1555.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.9" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1158.6" y="1699.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.6" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1158.6" y="1683.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.6" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1158.6" y="1667.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.6" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1158.6" y="1651.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.6" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1158.6" y="1635.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.6" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1158.6" y="1619.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.6" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.6" y="1603.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.6" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.6" y="1587.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.6" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.6" y="1571.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.6" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.6" y="1555.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.6" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.6" y="1539.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.6" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.6" y="1523.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.6" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.6" y="1507.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.6" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.6" y="1491.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.6" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.6" y="1475.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.6" y="1459.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.6" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.6" y="1443.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.6" y="1427.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.6" y="1411.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.6" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.6" y="1395.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.6" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.6" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.6" y="1390.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.06%)</title><rect x="1158.6" y="1363.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.6" y="1374.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1158.6" y="1347.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.6" y="1358.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.06%)</title><rect x="1158.6" y="1331.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1159.2" y="1603.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.2" y="1614.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1159.2" y="1587.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.2" y="1598.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1159.2" y="1571.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.2" y="1582.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1159.2" y="1555.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.2" y="1566.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1159.2" y="1539.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.2" y="1550.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1159.2" y="1523.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.2" y="1534.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1159.2" y="1507.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.2" y="1518.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.06%)</title><rect x="1159.2" y="1491.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.2" y="1502.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1159.2" y="1475.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.2" y="1486.0"></text>
</g>
<g>
<title>LoadNKlassNode::Opcode() const (1 samples, 0.06%)</title><rect x="1159.2" y="1459.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.2" y="1470.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1159.9" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.9" y="1838.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1159.9" y="1811.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.9" y="1822.0"></text>
</g>
<g>
<title>GraphKit::basic_plus_adr(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1159.9" y="1795.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.9" y="1806.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1159.9" y="1779.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.9" y="1790.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.17%)</title><rect x="1160.6" y="1939.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.6" y="1950.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1160.6" y="1923.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.6" y="1934.0"></text>
</g>
<g>
<title>ciMethod::method_data() (1 samples, 0.06%)</title><rect x="1160.6" y="1907.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.6" y="1918.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1161.2" y="1923.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.2" y="1934.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1161.2" y="1907.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.2" y="1918.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1161.2" y="1891.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.2" y="1902.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1161.2" y="1875.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.2" y="1886.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1161.2" y="1859.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.2" y="1870.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1161.2" y="1843.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.2" y="1854.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.06%)</title><rect x="1161.2" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.2" y="1838.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1161.2" y="1811.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.2" y="1822.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1161.2" y="1795.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.2" y="1806.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.06%)</title><rect x="1161.2" y="1779.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.2" y="1790.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1161.9" y="1923.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.9" y="1934.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1161.9" y="1907.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.9" y="1918.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1161.9" y="1891.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.9" y="1902.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1161.9" y="1875.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.9" y="1886.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1161.9" y="1859.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.9" y="1870.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1161.9" y="1843.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.9" y="1854.0"></text>
</g>
<g>
<title>StoreNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Node*, BasicType, MemNode::MemOrd) (1 samples, 0.06%)</title><rect x="1161.9" y="1827.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.9" y="1838.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="1161.9" y="1811.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.9" y="1822.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="1162.6" y="1939.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.6" y="1950.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="1162.6" y="1923.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.6" y="1934.0"></text>
</g>
<g>
<title>PreserveJVMState::~PreserveJVMState() (1 samples, 0.06%)</title><rect x="1163.2" y="1939.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="1950.0"></text>
</g>
<g>
<title>ciMethod::get_osr_flow_analysis(int) (1 samples, 0.06%)</title><rect x="1163.9" y="1987.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.9" y="1998.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1163.9" y="1971.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.9" y="1982.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1163.9" y="1955.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.9" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1163.9" y="1939.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.9" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1163.9" y="1923.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.9" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1163.9" y="1907.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.9" y="1918.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1163.9" y="1891.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.9" y="1902.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1163.9" y="1875.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.9" y="1886.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1163.9" y="1859.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.9" y="1870.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1163.9" y="1843.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.9" y="1854.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1163.9" y="1827.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.9" y="1838.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1163.9" y="1811.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.9" y="1822.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1163.9" y="1795.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.9" y="1806.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1163.9" y="1779.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.9" y="1790.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1163.9" y="1763.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.9" y="1774.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="1164.6" y="2019.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.6" y="2030.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.06%)</title><rect x="1165.2" y="2051.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.2" y="2062.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1165.2" y="2035.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.2" y="2046.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1165.2" y="2019.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.2" y="2030.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1165.2" y="2003.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.2" y="2014.0"></text>
</g>
<g>
<title>[tid=13299] (13 samples, 0.74%)</title><rect x="1165.9" y="2179.0" width="8.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1168.9" y="2190.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="1165.9" y="2163.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1168.9" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1165.9" y="2147.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1168.9" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1165.9" y="2131.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1168.9" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1165.9" y="2115.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1168.9" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1165.9" y="2099.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1168.9" y="2110.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.68%)</title><rect x="1166.6" y="2163.0" width="8.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1169.6" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.68%)</title><rect x="1166.6" y="2147.0" width="8.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1169.6" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 0.68%)</title><rect x="1166.6" y="2131.0" width="8.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.6" y="2142.0"></text>
</g>
<g>
<title>JavaThread::run() (12 samples, 0.68%)</title><rect x="1166.6" y="2115.0" width="8.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.6" y="2126.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (12 samples, 0.68%)</title><rect x="1166.6" y="2099.0" width="8.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.6" y="2110.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (12 samples, 0.68%)</title><rect x="1166.6" y="2083.0" width="8.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.6" y="2094.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 0.68%)</title><rect x="1166.6" y="2067.0" width="8.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.6" y="2078.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (12 samples, 0.68%)</title><rect x="1166.6" y="2051.0" width="8.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.6" y="2062.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (12 samples, 0.68%)</title><rect x="1166.6" y="2035.0" width="8.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.6" y="2046.0"></text>
</g>
<g>
<title>Compilation::compile_method() (12 samples, 0.68%)</title><rect x="1166.6" y="2019.0" width="8.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.6" y="2030.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (12 samples, 0.68%)</title><rect x="1166.6" y="2003.0" width="8.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.6" y="2014.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (6 samples, 0.34%)</title><rect x="1166.6" y="1987.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.6" y="1998.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.06%)</title><rect x="1166.6" y="1971.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.6" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.06%)</title><rect x="1166.6" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.6" y="1966.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1166.6" y="1939.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.6" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1166.6" y="1923.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.6" y="1934.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1166.6" y="1907.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.6" y="1918.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1166.6" y="1891.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.6" y="1902.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.28%)</title><rect x="1167.3" y="1971.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.3" y="1982.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.28%)</title><rect x="1167.3" y="1955.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.3" y="1966.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.28%)</title><rect x="1167.3" y="1939.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.3" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.11%)</title><rect x="1167.3" y="1923.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.3" y="1934.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.11%)</title><rect x="1167.3" y="1907.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.3" y="1918.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.11%)</title><rect x="1167.3" y="1891.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.3" y="1902.0"></text>
</g>
<g>
<title>StateSplit::input_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1167.3" y="1875.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.3" y="1886.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1167.9" y="1875.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.9" y="1886.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1167.9" y="1859.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.9" y="1870.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1167.9" y="1843.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.9" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.17%)</title><rect x="1168.6" y="1923.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.6" y="1934.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.17%)</title><rect x="1168.6" y="1907.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="1918.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.17%)</title><rect x="1168.6" y="1891.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.6" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.17%)</title><rect x="1168.6" y="1875.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.6" y="1886.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.17%)</title><rect x="1168.6" y="1859.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.6" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.17%)</title><rect x="1168.6" y="1843.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.6" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.17%)</title><rect x="1168.6" y="1827.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.6" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.17%)</title><rect x="1168.6" y="1811.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.6" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.17%)</title><rect x="1168.6" y="1795.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.17%)</title><rect x="1168.6" y="1779.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.6" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.11%)</title><rect x="1168.6" y="1763.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.6" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.11%)</title><rect x="1168.6" y="1747.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.06%)</title><rect x="1168.6" y="1731.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.6" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1168.6" y="1715.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.6" y="1726.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1168.6" y="1699.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.6" y="1710.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1168.6" y="1683.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.6" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1169.3" y="1731.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.3" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1169.3" y="1715.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.3" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1169.3" y="1699.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.3" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1169.3" y="1683.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.3" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1169.3" y="1667.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.3" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1169.3" y="1651.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.3" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1169.3" y="1635.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.3" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1169.3" y="1619.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.3" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1169.3" y="1603.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.3" y="1614.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.06%)</title><rect x="1169.3" y="1587.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.3" y="1598.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1169.3" y="1571.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.3" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1169.9" y="1763.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.9" y="1774.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.06%)</title><rect x="1169.9" y="1747.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.9" y="1758.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.06%)</title><rect x="1170.6" y="1987.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.6" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.06%)</title><rect x="1170.6" y="1971.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.6" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op2(LIR_Op2*) (1 samples, 0.06%)</title><rect x="1170.6" y="1955.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.6" y="1966.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (5 samples, 0.28%)</title><rect x="1171.3" y="1987.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.3" y="1998.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (5 samples, 0.28%)</title><rect x="1171.3" y="1971.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.3" y="1982.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.06%)</title><rect x="1171.3" y="1955.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.3" y="1966.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.06%)</title><rect x="1171.3" y="1939.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.3" y="1950.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.06%)</title><rect x="1171.3" y="1923.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.3" y="1934.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.06%)</title><rect x="1171.3" y="1907.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.3" y="1918.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1171.3" y="1891.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.3" y="1902.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.06%)</title><rect x="1171.9" y="1955.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="1966.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.06%)</title><rect x="1172.6" y="1955.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="1966.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.11%)</title><rect x="1173.3" y="1955.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.3" y="1966.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.11%)</title><rect x="1173.3" y="1939.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.3" y="1950.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.194] (1 samples, 0.06%)</title><rect x="1173.3" y="1923.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.3" y="1934.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1173.9" y="1923.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.9" y="1934.0"></text>
</g>
<g>
<title>[tid=13300] (1 samples, 0.06%)</title><rect x="1174.6" y="2179.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1177.6" y="2190.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="1174.6" y="2163.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1177.6" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2147.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1177.6" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2131.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1177.6" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2115.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1177.6" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2099.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1177.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2083.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1177.6" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2067.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1177.6" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2051.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1177.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2035.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1177.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1174.6" y="2019.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1177.6" y="2030.0"></text>
</g>
<g>
<title>[tid=13301] (6 samples, 0.34%)</title><rect x="1175.3" y="2179.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1178.3" y="2190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2163.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1178.3" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="1175.3" y="2147.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1178.3" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2131.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1178.3" y="2142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2115.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1178.3" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2099.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1178.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2083.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1178.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2067.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1178.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2051.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1178.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1175.3" y="2035.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1178.3" y="2046.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.28%)</title><rect x="1176.0" y="2163.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1179.0" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.28%)</title><rect x="1176.0" y="2147.0" width="3.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1179.0" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.28%)</title><rect x="1176.0" y="2131.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.0" y="2142.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 0.28%)</title><rect x="1176.0" y="2115.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.0" y="2126.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 0.28%)</title><rect x="1176.0" y="2099.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.0" y="2110.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 0.28%)</title><rect x="1176.0" y="2083.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.0" y="2094.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (5 samples, 0.28%)</title><rect x="1176.0" y="2067.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.0" y="2078.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (5 samples, 0.28%)</title><rect x="1176.0" y="2051.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.0" y="2062.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.06%)</title><rect x="1176.0" y="2035.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.0" y="2046.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1176.0" y="2019.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.0" y="2030.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.06%)</title><rect x="1176.0" y="2003.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.0" y="2014.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (4 samples, 0.23%)</title><rect x="1176.6" y="2035.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1179.6" y="2046.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.06%)</title><rect x="1177.3" y="2019.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.3" y="2030.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, int, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1177.3" y="2003.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.3" y="2014.0"></text>
</g>
<g>
<title>ScopeValue::read_from(DebugInfoReadStream*) (1 samples, 0.06%)</title><rect x="1177.3" y="1987.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.3" y="1998.0"></text>
</g>
<g>
<title>DebugInfoReadStream::read_object_value() (1 samples, 0.06%)</title><rect x="1177.3" y="1971.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.3" y="1982.0"></text>
</g>
<g>
<title>ObjectValue::read_object(DebugInfoReadStream*) (1 samples, 0.06%)</title><rect x="1177.3" y="1955.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="1966.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1177.3" y="1939.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.3" y="1950.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.11%)</title><rect x="1178.0" y="2019.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.0" y="2030.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.06%)</title><rect x="1178.0" y="2003.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.0" y="2014.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1178.6" y="2003.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.6" y="2014.0"></text>
</g>
<g>
<title>[tid=13302] (12 samples, 0.68%)</title><rect x="1179.3" y="2179.0" width="8.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1182.3" y="2190.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.28%)</title><rect x="1179.3" y="2163.0" width="3.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1182.3" y="2174.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="1180.6" y="2147.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1183.6" y="2158.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="1180.6" y="2131.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1183.6" y="2142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="1180.6" y="2115.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1183.6" y="2126.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.17%)</title><rect x="1180.6" y="2099.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1183.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="1181.3" y="2083.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1184.3" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="1181.3" y="2067.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1184.3" y="2078.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.40%)</title><rect x="1182.6" y="2163.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1185.6" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.40%)</title><rect x="1182.6" y="2147.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1185.6" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.40%)</title><rect x="1182.6" y="2131.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.6" y="2142.0"></text>
</g>
<g>
<title>WatcherThread::run() (7 samples, 0.40%)</title><rect x="1182.6" y="2115.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.6" y="2126.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (3 samples, 0.17%)</title><rect x="1183.3" y="2099.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="2110.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.06%)</title><rect x="1183.3" y="2083.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.3" y="2094.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.06%)</title><rect x="1184.0" y="2083.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.0" y="2094.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1184.6" y="2083.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1187.6" y="2094.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.17%)</title><rect x="1185.3" y="2099.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.3" y="2110.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.11%)</title><rect x="1185.3" y="2083.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="2094.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1185.3" y="2067.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="2078.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1185.3" y="2051.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1188.3" y="2062.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.06%)</title><rect x="1186.0" y="2067.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="2078.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1186.7" y="2083.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.7" y="2094.0"></text>
</g>
<g>
<title>[tid=13309] (2 samples, 0.11%)</title><rect x="1187.3" y="2179.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1190.3" y="2190.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.11%)</title><rect x="1187.3" y="2163.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.3" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="1187.3" y="2147.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1190.3" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="1187.3" y="2131.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="2142.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.11%)</title><rect x="1187.3" y="2115.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="2126.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.11%)</title><rect x="1187.3" y="2099.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="2110.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.11%)</title><rect x="1187.3" y="2083.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="2094.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.67] (1 samples, 0.06%)</title><rect x="1187.3" y="2067.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="2078.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="1187.3" y="2051.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="2062.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1187.3" y="2035.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="2046.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1187.3" y="2019.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="2030.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.06%)</title><rect x="1188.0" y="2067.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="2078.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.06%)</title><rect x="1188.0" y="2051.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="2062.0"></text>
</g>
<g>
<title>[tid=13310] (1 samples, 0.06%)</title><rect x="1188.7" y="2179.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.7" y="2190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.06%)</title><rect x="1188.7" y="2163.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.7" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="1188.7" y="2147.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.7" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.06%)</title><rect x="1188.7" y="2131.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="2142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.06%)</title><rect x="1188.7" y="2115.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="2126.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1188.7" y="2099.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="2110.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1188.7" y="2083.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="2094.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="1188.7" y="2067.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="2078.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="1188.7" y="2051.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="2062.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.06%)</title><rect x="1188.7" y="2035.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="2046.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.06%)</title><rect x="1188.7" y="2019.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="2030.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.06%)</title><rect x="1188.7" y="2003.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="2014.0"></text>
</g>
<g>
<title>[tid=13311] (1 samples, 0.06%)</title><rect x="1189.3" y="2179.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.3" y="2190.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.06%)</title><rect x="1189.3" y="2163.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.3" y="2174.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="2147.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1192.3" y="2158.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.06%)</title><rect x="1189.3" y="2131.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="2142.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.06%)</title><rect x="1189.3" y="2115.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="2126.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="2099.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.3" y="2110.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="2083.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="2094.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="1189.3" y="2067.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="2078.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="1189.3" y="2051.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="2062.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.06%)</title><rect x="1189.3" y="2035.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="2046.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.06%)</title><rect x="1189.3" y="2019.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.3" y="2030.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.06%)</title><rect x="1189.3" y="2003.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.3" y="2014.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.06%)</title><rect x="1189.3" y="1987.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="1998.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.06%)</title><rect x="1189.3" y="1971.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.3" y="1982.0"></text>
</g>
</g>
</svg>
