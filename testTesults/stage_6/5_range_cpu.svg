<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (279 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=13313] (1 samples, 0.36%)</title><rect x="10.0" y="931.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1 samples, 0.36%)</title><rect x="10.0" y="915.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.36%)</title><rect x="10.0" y="899.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.36%)</title><rect x="10.0" y="883.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.36%)</title><rect x="10.0" y="867.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (1 samples, 0.36%)</title><rect x="10.0" y="851.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="10.0" y="835.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.36%)</title><rect x="10.0" y="819.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13315] (120 samples, 43.01%)</title><rect x="14.2" y="931.0" width="507.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="17.2" y="942.0">[NIO Selector #1 tid=13315]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.36%)</title><rect x="14.2" y="915.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.36%)</title><rect x="14.2" y="899.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.2" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.36%)</title><rect x="14.2" y="883.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.2" y="894.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.36%)</title><rect x="14.2" y="867.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.2" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.36%)</title><rect x="18.5" y="915.0" width="4.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="21.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="18.5" y="899.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.36%)</title><rect x="18.5" y="883.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="21.5" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (118 samples, 42.29%)</title><rect x="22.7" y="915.0" width="499.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.7" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 1.08%)</title><rect x="26.9" y="899.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 1.08%)</title><rect x="26.9" y="883.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="867.0" width="8.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.72%)</title><rect x="31.1" y="851.0" width="8.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="34.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="835.0" width="8.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="34.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="819.0" width="8.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="34.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="803.0" width="8.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="787.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="34.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="771.0" width="8.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="34.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="755.0" width="8.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="34.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="739.0" width="8.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="34.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="723.0" width="8.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="34.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="707.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="34.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="31.1" y="691.0" width="8.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="34.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (114 samples, 40.86%)</title><rect x="39.6" y="899.0" width="482.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.6" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (113 samples, 40.50%)</title><rect x="43.8" y="883.0" width="478.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.8" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (109 samples, 39.07%)</title><rect x="43.8" y="867.0" width="461.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.8" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 38.71%)</title><rect x="43.8" y="851.0" width="456.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.8" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 38.71%)</title><rect x="43.8" y="835.0" width="456.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.8" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (105 samples, 37.63%)</title><rect x="43.8" y="819.0" width="444.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.8" y="830.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (104 samples, 37.28%)</title><rect x="48.1" y="803.0" width="439.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.1" y="814.0">ru/mail/polis/service/igorlo/ShardedService.entities</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="48.1" y="787.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="48.1" y="771.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="48.1" y="755.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="48.1" y="739.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (82 samples, 29.39%)</title><rect x="52.3" y="787.0" width="346.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.3" y="798.0">ru/mail/polis/dao/DAO.range</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (75 samples, 26.88%)</title><rect x="52.3" y="771.0" width="317.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.3" y="782.0">ru/mail/polis/dao/Iters.until</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (75 samples, 26.88%)</title><rect x="52.3" y="755.0" width="317.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.3" y="766.0">ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt;</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (75 samples, 26.88%)</title><rect x="52.3" y="739.0" width="317.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.3" y="750.0">com/google/common/collect/TransformedIterat..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (75 samples, 26.88%)</title><rect x="52.3" y="723.0" width="317.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.3" y="734.0">com/google/common/collect/AbstractIterator...</text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkState (1 samples, 0.36%)</title><rect x="52.3" y="707.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (74 samples, 26.52%)</title><rect x="56.5" y="707.0" width="313.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.5" y="718.0">com/google/common/collect/AbstractIterator..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (74 samples, 26.52%)</title><rect x="56.5" y="691.0" width="313.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="702.0">com/google/common/collect/Iterators$5.comp..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (69 samples, 24.73%)</title><rect x="73.4" y="675.0" width="291.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.4" y="686.0">ru/mail/polis/dao/Iters$CollapseEqualsI..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 15.05%)</title><rect x="103.0" y="659.0" width="177.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.0" y="670.0">com/google/common/colle..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.72%)</title><rect x="107.3" y="643.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (39 samples, 13.98%)</title><rect x="115.7" y="643.0" width="165.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.7" y="654.0">com/google/common/col..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (39 samples, 13.98%)</title><rect x="115.7" y="627.0" width="165.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="638.0">ru/mail/polis/dao/Ite..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 7.89%)</title><rect x="115.7" y="611.0" width="93.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.7" y="622.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (22 samples, 7.89%)</title><rect x="115.7" y="595.0" width="93.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.7" y="606.0">com/google/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.72%)</title><rect x="115.7" y="579.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.72%)</title><rect x="115.7" y="563.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.72%)</title><rect x="115.7" y="547.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.7" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.36%)</title><rect x="120.0" y="531.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 7.17%)</title><rect x="124.2" y="579.0" width="84.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.36%)</title><rect x="153.8" y="563.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 3.94%)</title><rect x="158.0" y="563.0" width="46.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.0" y="574.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.36%)</title><rect x="158.0" y="547.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.0" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 3.23%)</title><rect x="162.3" y="547.0" width="38.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.3" y="558.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 2.87%)</title><rect x="166.5" y="531.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.5" y="542.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.36%)</title><rect x="200.3" y="547.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.36%)</title><rect x="200.3" y="531.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.36%)</title><rect x="200.3" y="515.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (1 samples, 0.36%)</title><rect x="204.6" y="563.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.36%)</title><rect x="204.6" y="547.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.36%)</title><rect x="204.6" y="531.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.36%)</title><rect x="204.6" y="515.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="204.6" y="499.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="204.6" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (12 samples, 4.30%)</title><rect x="208.8" y="611.0" width="50.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.8" y="622.0">java/..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 4.30%)</title><rect x="208.8" y="595.0" width="50.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.8" y="606.0">java/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 2.15%)</title><rect x="234.2" y="579.0" width="25.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.2" y="590.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.72%)</title><rect x="246.8" y="563.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.36%)</title><rect x="255.3" y="563.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (5 samples, 1.79%)</title><rect x="259.5" y="611.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.5" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 1.79%)</title><rect x="259.5" y="595.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.5" y="606.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 1.79%)</title><rect x="259.5" y="579.0" width="21.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="590.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 1.79%)</title><rect x="259.5" y="563.0" width="21.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.5" y="574.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 1.79%)</title><rect x="259.5" y="547.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.5" y="558.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 1.79%)</title><rect x="259.5" y="531.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.5" y="542.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 1.79%)</title><rect x="259.5" y="515.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="526.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.72%)</title><rect x="259.5" y="499.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.72%)</title><rect x="259.5" y="483.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.72%)</title><rect x="259.5" y="467.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 1.08%)</title><rect x="268.0" y="499.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 1.08%)</title><rect x="268.0" y="483.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.36%)</title><rect x="276.5" y="467.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (15 samples, 5.38%)</title><rect x="280.7" y="659.0" width="63.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.7" y="670.0">java/ni..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 5.02%)</title><rect x="284.9" y="643.0" width="59.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.9" y="654.0">java/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 3.23%)</title><rect x="306.1" y="627.0" width="38.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.1" y="638.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 1.08%)</title><rect x="327.2" y="611.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.36%)</title><rect x="339.9" y="611.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (5 samples, 1.79%)</title><rect x="344.1" y="659.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.1" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 1.43%)</title><rect x="348.4" y="643.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 1.08%)</title><rect x="352.6" y="627.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.72%)</title><rect x="356.8" y="611.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.72%)</title><rect x="356.8" y="595.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="361.0" y="579.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.0" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="361.0" y="563.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$331/1672330025.apply (1 samples, 0.36%)</title><rect x="365.3" y="675.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.lambda$aliveRowIterators$0 (1 samples, 0.36%)</title><rect x="365.3" y="659.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.isDead (1 samples, 0.36%)</title><rect x="365.3" y="643.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (7 samples, 2.51%)</title><rect x="369.5" y="771.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.5" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (6 samples, 2.15%)</title><rect x="369.5" y="755.0" width="25.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.5" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 2.15%)</title><rect x="369.5" y="739.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.5" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (6 samples, 2.15%)</title><rect x="369.5" y="723.0" width="25.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.5" y="734.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.72%)</title><rect x="369.5" y="707.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.72%)</title><rect x="369.5" y="691.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.36%)</title><rect x="373.7" y="675.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.36%)</title><rect x="373.7" y="659.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.36%)</title><rect x="373.7" y="643.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.36%)</title><rect x="373.7" y="627.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (4 samples, 1.43%)</title><rect x="378.0" y="707.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (3 samples, 1.08%)</title><rect x="382.2" y="691.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 1.08%)</title><rect x="382.2" y="675.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 1.08%)</title><rect x="382.2" y="659.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 1.08%)</title><rect x="382.2" y="643.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 1.08%)</title><rect x="382.2" y="627.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 1.08%)</title><rect x="382.2" y="611.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 1.08%)</title><rect x="382.2" y="595.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.36%)</title><rect x="390.6" y="579.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.36%)</title><rect x="390.6" y="563.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.36%)</title><rect x="390.6" y="547.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.36%)</title><rect x="390.6" y="531.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.aliveRowIterators (1 samples, 0.36%)</title><rect x="394.9" y="755.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.36%)</title><rect x="394.9" y="739.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (1 samples, 0.36%)</title><rect x="394.9" y="723.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.36%)</title><rect x="394.9" y="707.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (21 samples, 7.53%)</title><rect x="399.1" y="787.0" width="88.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.1" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 4.30%)</title><rect x="399.1" y="771.0" width="50.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.1" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.36%)</title><rect x="399.1" y="755.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.36%)</title><rect x="399.1" y="739.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.36%)</title><rect x="399.1" y="723.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 3.94%)</title><rect x="403.3" y="755.0" width="46.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 3.94%)</title><rect x="403.3" y="739.0" width="46.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 3.58%)</title><rect x="407.6" y="723.0" width="42.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.6" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 3.58%)</title><rect x="407.6" y="707.0" width="42.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.6" y="718.0">one/..</text>
</g>
<g>
<title>__send (10 samples, 3.58%)</title><rect x="407.6" y="691.0" width="42.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="410.6" y="702.0">__send</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="675.0" width="42.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="410.6" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="659.0" width="42.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="410.6" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="643.0" width="42.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="410.6" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="627.0" width="42.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="410.6" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="611.0" width="42.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="410.6" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="595.0" width="42.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="410.6" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="579.0" width="42.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="410.6" y="590.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="563.0" width="42.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="410.6" y="574.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="547.0" width="42.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="410.6" y="558.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 3.58%)</title><rect x="407.6" y="531.0" width="42.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="410.6" y="542.0">[unk..</text>
</g>
<g>
<title>[unknown] (9 samples, 3.23%)</title><rect x="411.8" y="515.0" width="38.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="414.8" y="526.0">[un..</text>
</g>
<g>
<title>[unknown] (9 samples, 3.23%)</title><rect x="411.8" y="499.0" width="38.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="414.8" y="510.0">[un..</text>
</g>
<g>
<title>[unknown] (8 samples, 2.87%)</title><rect x="416.0" y="483.0" width="33.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="419.0" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="467.0" width="29.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="423.3" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="451.0" width="29.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="423.3" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="435.0" width="29.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="423.3" y="446.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="419.0" width="29.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="423.3" y="430.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="403.0" width="29.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="423.3" y="414.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="387.0" width="29.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="423.3" y="398.0">[u..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.51%)</title><rect x="420.3" y="371.0" width="29.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="423.3" y="382.0">[u..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="424.5" y="355.0" width="25.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="427.5" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.79%)</title><rect x="428.7" y="339.0" width="21.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="431.7" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="323.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="440.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="307.0" width="12.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="440.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="291.0" width="12.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="440.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="275.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="440.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="259.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="440.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="243.0" width="12.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="440.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="227.0" width="12.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="440.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="211.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="440.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="195.0" width="12.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="440.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="179.0" width="12.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="440.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="437.2" y="163.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="440.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="441.4" y="147.0" width="8.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="444.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="441.4" y="131.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="444.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="115.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="448.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="99.0" width="4.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="448.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="83.0" width="4.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="448.6" y="94.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="67.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="448.6" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="51.0" width="4.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="448.6" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="445.6" y="35.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="448.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (9 samples, 3.23%)</title><rect x="449.9" y="771.0" width="38.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.9" y="782.0">ru/..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.51%)</title><rect x="449.9" y="755.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.9" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.51%)</title><rect x="449.9" y="739.0" width="29.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.9" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 2.15%)</title><rect x="454.1" y="723.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.1" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 2.15%)</title><rect x="454.1" y="707.0" width="25.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.1" y="718.0">o..</text>
</g>
<g>
<title>__send (6 samples, 2.15%)</title><rect x="454.1" y="691.0" width="25.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="457.1" y="702.0">_..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="675.0" width="25.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="457.1" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="659.0" width="25.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="457.1" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="643.0" width="25.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="457.1" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="627.0" width="25.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="457.1" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="611.0" width="25.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="457.1" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="595.0" width="25.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="457.1" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="579.0" width="25.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="457.1" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="563.0" width="25.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="457.1" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="547.0" width="25.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="457.1" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="454.1" y="531.0" width="25.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="457.1" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.79%)</title><rect x="458.3" y="515.0" width="21.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="461.3" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="499.0" width="17.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="465.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="483.0" width="17.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="467.0" width="17.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="465.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="451.0" width="17.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="465.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="435.0" width="17.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="465.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="419.0" width="17.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="465.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="403.0" width="17.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="465.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="462.5" y="387.0" width="17.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="465.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="475.2" y="371.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="478.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession$Chunks.end (2 samples, 0.72%)</title><rect x="479.5" y="755.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.72%)</title><rect x="479.5" y="739.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.5" y="750.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.36%)</title><rect x="479.5" y="723.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="482.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.36%)</title><rect x="479.5" y="707.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="482.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.36%)</title><rect x="479.5" y="691.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="482.5" y="702.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned (1 samples, 0.36%)</title><rect x="479.5" y="675.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="482.5" y="686.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (1 samples, 0.36%)</title><rect x="483.7" y="723.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="486.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 1.08%)</title><rect x="487.9" y="819.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 1.08%)</title><rect x="487.9" y="803.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 1.08%)</title><rect x="487.9" y="787.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.08%)</title><rect x="487.9" y="771.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.9" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.36%)</title><rect x="496.4" y="755.0" width="4.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="499.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="500.6" y="851.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="500.6" y="835.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 1.43%)</title><rect x="504.8" y="867.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 1.43%)</title><rect x="504.8" y="851.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="513.3" y="835.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="513.3" y="819.0" width="4.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="516.3" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.36%)</title><rect x="513.3" y="803.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.3" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.36%)</title><rect x="513.3" y="787.0" width="4.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="516.3" y="798.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.36%)</title><rect x="517.5" y="835.0" width="4.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="520.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="819.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="520.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="803.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="520.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="787.0" width="4.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="520.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="771.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="520.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="755.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="520.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="739.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="520.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="723.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="520.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="707.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="520.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="691.0" width="4.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="520.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="517.5" y="675.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="520.5" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13316] (56 samples, 20.07%)</title><rect x="521.8" y="931.0" width="236.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="524.8" y="942.0">[NIO Selector #2 tid=13316]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 1.08%)</title><rect x="521.8" y="915.0" width="12.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="524.8" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 1.08%)</title><rect x="521.8" y="899.0" width="12.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.8" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 1.08%)</title><rect x="521.8" y="883.0" width="12.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="524.8" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.72%)</title><rect x="521.8" y="867.0" width="8.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.8" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.36%)</title><rect x="521.8" y="851.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="524.8" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.36%)</title><rect x="521.8" y="835.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="524.8" y="846.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.36%)</title><rect x="526.0" y="851.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="529.0" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.36%)</title><rect x="530.2" y="867.0" width="4.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="533.2" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (53 samples, 19.00%)</title><rect x="534.4" y="915.0" width="224.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.4" y="926.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.36%)</title><rect x="534.4" y="899.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.36%)</title><rect x="534.4" y="883.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="867.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="537.4" y="878.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.36%)</title><rect x="534.4" y="851.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="537.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="835.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="537.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="819.0" width="4.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="537.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="803.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="537.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="787.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="537.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="771.0" width="4.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="537.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="534.4" y="755.0" width="4.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="537.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (52 samples, 18.64%)</title><rect x="538.7" y="899.0" width="219.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.7" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (52 samples, 18.64%)</title><rect x="538.7" y="883.0" width="219.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="894.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 18.28%)</title><rect x="538.7" y="867.0" width="215.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.7" y="878.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (48 samples, 17.20%)</title><rect x="538.7" y="851.0" width="203.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.7" y="862.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (48 samples, 17.20%)</title><rect x="538.7" y="835.0" width="203.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.7" y="846.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (48 samples, 17.20%)</title><rect x="538.7" y="819.0" width="203.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.7" y="830.0">RequestHandler2_entities.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.36%)</title><rect x="538.7" y="803.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.36%)</title><rect x="538.7" y="787.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.36%)</title><rect x="538.7" y="771.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (47 samples, 16.85%)</title><rect x="542.9" y="803.0" width="198.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.9" y="814.0">ru/mail/polis/service/igor..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.36%)</title><rect x="542.9" y="787.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.36%)</title><rect x="542.9" y="771.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.36%)</title><rect x="542.9" y="755.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (37 samples, 13.26%)</title><rect x="547.1" y="787.0" width="156.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.1" y="798.0">ru/mail/polis/dao/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (37 samples, 13.26%)</title><rect x="547.1" y="771.0" width="156.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.1" y="782.0">ru/mail/polis/dao/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (37 samples, 13.26%)</title><rect x="547.1" y="755.0" width="156.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.1" y="766.0">ru/mail/polis/dao/It..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (37 samples, 13.26%)</title><rect x="547.1" y="739.0" width="156.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.1" y="750.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 13.26%)</title><rect x="547.1" y="723.0" width="156.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.1" y="734.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 13.26%)</title><rect x="547.1" y="707.0" width="156.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.1" y="718.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 13.26%)</title><rect x="547.1" y="691.0" width="156.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.1" y="702.0">com/google/common/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 12.54%)</title><rect x="555.6" y="675.0" width="148.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.6" y="686.0">ru/mail/polis/dao/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (2 samples, 0.72%)</title><rect x="568.3" y="659.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 8.60%)</title><rect x="576.7" y="659.0" width="101.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.7" y="670.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (22 samples, 7.89%)</title><rect x="581.0" y="643.0" width="93.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.0" y="654.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 7.89%)</title><rect x="581.0" y="627.0" width="93.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.0" y="638.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 3.94%)</title><rect x="581.0" y="611.0" width="46.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.0" y="622.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (11 samples, 3.94%)</title><rect x="581.0" y="595.0" width="46.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.0" y="606.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 3.58%)</title><rect x="585.2" y="579.0" width="42.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.2" y="590.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 2.87%)</title><rect x="589.4" y="563.0" width="33.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.4" y="574.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.36%)</title><rect x="589.4" y="547.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.4" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 1.43%)</title><rect x="593.7" y="547.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 1.43%)</title><rect x="593.7" y="531.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 1.08%)</title><rect x="610.6" y="547.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 1.08%)</title><rect x="610.6" y="531.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 1.08%)</title><rect x="610.6" y="515.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 1.08%)</title><rect x="610.6" y="499.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (1 samples, 0.36%)</title><rect x="623.3" y="563.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.36%)</title><rect x="623.3" y="547.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.36%)</title><rect x="623.3" y="531.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.36%)</title><rect x="623.3" y="515.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="623.3" y="499.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="623.3" y="483.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (9 samples, 3.23%)</title><rect x="627.5" y="611.0" width="38.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.5" y="622.0">jav..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 3.23%)</title><rect x="627.5" y="595.0" width="38.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.5" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 1.43%)</title><rect x="648.6" y="579.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.36%)</title><rect x="661.3" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (2 samples, 0.72%)</title><rect x="665.6" y="611.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.72%)</title><rect x="665.6" y="595.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.72%)</title><rect x="665.6" y="579.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.72%)</title><rect x="665.6" y="563.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.72%)</title><rect x="665.6" y="547.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.72%)</title><rect x="665.6" y="531.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.6" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.72%)</title><rect x="665.6" y="515.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.72%)</title><rect x="665.6" y="499.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.72%)</title><rect x="665.6" y="483.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.6" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.72%)</title><rect x="665.6" y="467.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.36%)</title><rect x="674.0" y="643.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.36%)</title><rect x="674.0" y="627.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (6 samples, 2.15%)</title><rect x="678.2" y="659.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.2" y="670.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 2.15%)</title><rect x="678.2" y="643.0" width="25.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.2" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (9 samples, 3.23%)</title><rect x="703.6" y="787.0" width="38.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.6" y="798.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.79%)</title><rect x="703.6" y="771.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.79%)</title><rect x="703.6" y="755.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.79%)</title><rect x="703.6" y="739.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.79%)</title><rect x="703.6" y="723.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.6" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.79%)</title><rect x="703.6" y="707.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.6" y="718.0">o..</text>
</g>
<g>
<title>__send (4 samples, 1.43%)</title><rect x="707.8" y="691.0" width="17.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="710.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="675.0" width="17.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="710.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="659.0" width="17.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="643.0" width="17.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="710.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="627.0" width="17.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="611.0" width="17.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="595.0" width="17.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="710.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="579.0" width="17.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="563.0" width="17.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="710.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="547.0" width="17.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="710.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="531.0" width="17.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="710.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="515.0" width="17.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="710.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="499.0" width="17.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="483.0" width="17.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="710.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="467.0" width="17.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="710.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="707.8" y="451.0" width="17.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="710.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="435.0" width="12.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="715.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="419.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="715.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="403.0" width="12.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="715.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="387.0" width="12.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="715.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="371.0" width="12.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="715.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="355.0" width="12.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="715.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="339.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="715.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="323.0" width="12.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="715.1" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="307.0" width="12.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="715.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="291.0" width="12.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="715.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="275.0" width="12.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="715.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="259.0" width="12.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="715.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="712.1" y="243.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="715.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="227.0" width="8.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="719.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="211.0" width="8.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="719.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="195.0" width="8.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="719.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="179.0" width="8.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="719.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="163.0" width="8.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="719.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="147.0" width="8.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="719.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="716.3" y="131.0" width="8.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="719.3" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="720.5" y="115.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="723.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (4 samples, 1.43%)</title><rect x="724.8" y="771.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 1.43%)</title><rect x="724.8" y="755.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 1.43%)</title><rect x="724.8" y="739.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 1.43%)</title><rect x="724.8" y="723.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 1.43%)</title><rect x="724.8" y="707.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.8" y="718.0"></text>
</g>
<g>
<title>__send (4 samples, 1.43%)</title><rect x="724.8" y="691.0" width="16.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="727.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="675.0" width="16.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="727.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="659.0" width="16.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="727.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="643.0" width="16.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="727.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="627.0" width="16.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="727.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="611.0" width="16.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="727.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="595.0" width="16.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="727.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="579.0" width="16.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="727.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="563.0" width="16.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="727.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="547.0" width="16.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="727.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="531.0" width="16.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="727.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="724.8" y="515.0" width="16.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="727.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="499.0" width="12.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="732.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="483.0" width="12.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="732.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="467.0" width="12.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="732.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="451.0" width="12.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="732.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="435.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="732.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="419.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="732.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="403.0" width="12.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="732.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="387.0" width="12.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="732.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="371.0" width="12.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="732.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="355.0" width="12.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="732.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="339.0" width="12.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="732.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="323.0" width="12.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="732.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="307.0" width="12.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="732.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="729.0" y="291.0" width="12.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="732.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="275.0" width="8.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="736.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="259.0" width="8.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="736.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="243.0" width="8.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="736.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="227.0" width="8.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="736.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="211.0" width="8.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="736.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="195.0" width="8.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="736.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="179.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="736.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="733.2" y="163.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="736.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="737.5" y="147.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="740.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="737.5" y="131.0" width="4.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="740.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="737.5" y="115.0" width="4.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="740.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="737.5" y="99.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="740.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.72%)</title><rect x="741.7" y="851.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.72%)</title><rect x="741.7" y="835.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.72%)</title><rect x="741.7" y="819.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.36%)</title><rect x="750.1" y="851.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.36%)</title><rect x="750.1" y="835.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.36%)</title><rect x="750.1" y="819.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.36%)</title><rect x="750.1" y="803.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.36%)</title><rect x="750.1" y="787.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.1" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.36%)</title><rect x="750.1" y="771.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.36%)</title><rect x="754.4" y="867.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.36%)</title><rect x="754.4" y="851.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="754.4" y="835.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="757.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="754.4" y="819.0" width="4.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="757.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.36%)</title><rect x="754.4" y="803.0" width="4.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="757.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.36%)</title><rect x="754.4" y="787.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="757.4" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.36%)</title><rect x="754.4" y="771.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="757.4" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13317] (63 samples, 22.58%)</title><rect x="758.6" y="931.0" width="266.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="761.6" y="942.0">[NIO Selector #3 tid=13317]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (63 samples, 22.58%)</title><rect x="758.6" y="915.0" width="266.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.6" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 1.08%)</title><rect x="758.6" y="899.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.72%)</title><rect x="762.8" y="883.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="867.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="765.8" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.72%)</title><rect x="762.8" y="851.0" width="8.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="765.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="835.0" width="8.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="765.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="819.0" width="8.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="765.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="803.0" width="8.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="765.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="787.0" width="8.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="765.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="762.8" y="771.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="765.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="767.1" y="755.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="770.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="767.1" y="739.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="770.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="767.1" y="723.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="770.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="767.1" y="707.0" width="4.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="770.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="767.1" y="691.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="770.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60 samples, 21.51%)</title><rect x="771.3" y="899.0" width="253.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.3" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60 samples, 21.51%)</title><rect x="771.3" y="883.0" width="253.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.3" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (57 samples, 20.43%)</title><rect x="771.3" y="867.0" width="241.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.3" y="878.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (56 samples, 20.07%)</title><rect x="771.3" y="851.0" width="236.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.3" y="862.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (55 samples, 19.71%)</title><rect x="775.5" y="835.0" width="232.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.5" y="846.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (55 samples, 19.71%)</title><rect x="775.5" y="819.0" width="232.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.5" y="830.0">RequestHandler2_entities.handle..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entities (55 samples, 19.71%)</title><rect x="775.5" y="803.0" width="232.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="814.0">ru/mail/polis/service/igorlo/Sh..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (44 samples, 15.77%)</title><rect x="775.5" y="787.0" width="186.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="798.0">ru/mail/polis/dao/DAO.ra..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (40 samples, 14.34%)</title><rect x="775.5" y="771.0" width="169.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.5" y="782.0">ru/mail/polis/dao/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (40 samples, 14.34%)</title><rect x="775.5" y="755.0" width="169.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.5" y="766.0">ru/mail/polis/dao/Iter..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (40 samples, 14.34%)</title><rect x="775.5" y="739.0" width="169.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.5" y="750.0">com/google/common/coll..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 14.34%)</title><rect x="775.5" y="723.0" width="169.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.5" y="734.0">com/google/common/coll..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 14.34%)</title><rect x="775.5" y="707.0" width="169.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.5" y="718.0">com/google/common/coll..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 14.34%)</title><rect x="775.5" y="691.0" width="169.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.5" y="702.0">com/google/common/coll..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 14.34%)</title><rect x="775.5" y="675.0" width="169.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.5" y="686.0">ru/mail/polis/dao/Iter..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 8.24%)</title><rect x="800.9" y="659.0" width="97.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.9" y="670.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (22 samples, 7.89%)</title><rect x="800.9" y="643.0" width="93.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.9" y="654.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 7.89%)</title><rect x="800.9" y="627.0" width="93.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.9" y="638.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 5.02%)</title><rect x="800.9" y="611.0" width="59.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.9" y="622.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.36%)</title><rect x="800.9" y="595.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (13 samples, 4.66%)</title><rect x="805.1" y="595.0" width="55.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="606.0">com/g..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.72%)</title><rect x="805.1" y="579.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.72%)</title><rect x="805.1" y="563.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.36%)</title><rect x="809.4" y="547.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.36%)</title><rect x="809.4" y="531.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 3.94%)</title><rect x="813.6" y="579.0" width="46.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.6" y="590.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.36%)</title><rect x="830.5" y="563.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 1.79%)</title><rect x="834.7" y="563.0" width="21.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.7" y="574.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.36%)</title><rect x="839.0" y="547.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.0" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 1.08%)</title><rect x="843.2" y="547.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 1.08%)</title><rect x="843.2" y="531.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (1 samples, 0.36%)</title><rect x="855.9" y="563.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (1 samples, 0.36%)</title><rect x="855.9" y="547.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 1.43%)</title><rect x="860.1" y="611.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.1" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 1.43%)</title><rect x="860.1" y="595.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.36%)</title><rect x="872.8" y="579.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (4 samples, 1.43%)</title><rect x="877.0" y="611.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 1.43%)</title><rect x="877.0" y="595.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 1.43%)</title><rect x="877.0" y="579.0" width="16.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 1.43%)</title><rect x="877.0" y="563.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 1.43%)</title><rect x="877.0" y="547.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 1.43%)</title><rect x="877.0" y="531.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 1.43%)</title><rect x="877.0" y="515.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.36%)</title><rect x="877.0" y="499.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.36%)</title><rect x="877.0" y="483.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.36%)</title><rect x="877.0" y="467.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 1.08%)</title><rect x="881.3" y="499.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 1.08%)</title><rect x="881.3" y="483.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.36%)</title><rect x="889.7" y="467.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.7" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.36%)</title><rect x="893.9" y="643.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.36%)</title><rect x="893.9" y="627.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (9 samples, 3.23%)</title><rect x="898.2" y="659.0" width="38.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.2" y="670.0">jav..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 2.87%)</title><rect x="902.4" y="643.0" width="33.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.4" y="654.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.36%)</title><rect x="932.0" y="627.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (2 samples, 0.72%)</title><rect x="936.2" y="659.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="939.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.72%)</title><rect x="936.2" y="643.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.72%)</title><rect x="936.2" y="627.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.36%)</title><rect x="940.5" y="611.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="940.5" y="595.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="940.5" y="579.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (4 samples, 1.43%)</title><rect x="944.7" y="771.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (4 samples, 1.43%)</title><rect x="944.7" y="755.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (1 samples, 0.36%)</title><rect x="944.7" y="739.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.36%)</title><rect x="944.7" y="723.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.36%)</title><rect x="944.7" y="707.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (3 samples, 1.08%)</title><rect x="948.9" y="739.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (3 samples, 1.08%)</title><rect x="948.9" y="723.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.36%)</title><rect x="948.9" y="707.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.36%)</title><rect x="948.9" y="691.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.36%)</title><rect x="948.9" y="675.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.36%)</title><rect x="948.9" y="659.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (2 samples, 0.72%)</title><rect x="953.2" y="707.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (2 samples, 0.72%)</title><rect x="953.2" y="691.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.72%)</title><rect x="953.2" y="675.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.72%)</title><rect x="953.2" y="659.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.72%)</title><rect x="953.2" y="643.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.72%)</title><rect x="953.2" y="627.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.72%)</title><rect x="953.2" y="611.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.72%)</title><rect x="953.2" y="595.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.36%)</title><rect x="957.4" y="579.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.36%)</title><rect x="957.4" y="563.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.36%)</title><rect x="957.4" y="547.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.36%)</title><rect x="957.4" y="531.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (11 samples, 3.94%)</title><rect x="961.6" y="787.0" width="46.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.6" y="798.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 2.87%)</title><rect x="965.8" y="771.0" width="33.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.8" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.36%)</title><rect x="965.8" y="755.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.51%)</title><rect x="970.1" y="755.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.1" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.51%)</title><rect x="970.1" y="739.0" width="29.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.1" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 2.51%)</title><rect x="970.1" y="723.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.1" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 2.51%)</title><rect x="970.1" y="707.0" width="29.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.1" y="718.0">on..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="970.1" y="691.0" width="4.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="973.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="970.1" y="675.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="973.1" y="686.0"></text>
</g>
<g>
<title>__send (1 samples, 0.36%)</title><rect x="970.1" y="659.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="973.1" y="670.0"></text>
</g>
<g>
<title>__send (6 samples, 2.15%)</title><rect x="974.3" y="691.0" width="25.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="977.3" y="702.0">_..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="675.0" width="25.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="977.3" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="659.0" width="25.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="977.3" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="643.0" width="25.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="977.3" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="627.0" width="25.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="977.3" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="611.0" width="25.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="977.3" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="595.0" width="25.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="977.3" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="579.0" width="25.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="977.3" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (6 samples, 2.15%)</title><rect x="974.3" y="563.0" width="25.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="977.3" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.79%)</title><rect x="978.5" y="547.0" width="21.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="981.5" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.79%)</title><rect x="978.5" y="531.0" width="21.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="981.5" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.79%)</title><rect x="978.5" y="515.0" width="21.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="981.5" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="499.0" width="16.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="985.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="483.0" width="16.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="985.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="467.0" width="16.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="985.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="451.0" width="16.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="985.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="435.0" width="16.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="985.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="419.0" width="16.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="985.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="403.0" width="16.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="985.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="387.0" width="16.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="985.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="371.0" width="16.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="985.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="355.0" width="16.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="985.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="339.0" width="16.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="985.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="323.0" width="16.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="985.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.43%)</title><rect x="982.8" y="307.0" width="16.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="985.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="291.0" width="12.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="990.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="275.0" width="12.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="990.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="259.0" width="12.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="990.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="243.0" width="12.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="990.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="227.0" width="12.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="990.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="211.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="990.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="195.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="990.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="987.0" y="179.0" width="12.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="990.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="991.2" y="163.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="994.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="995.4" y="147.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="998.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="995.4" y="131.0" width="4.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="998.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="995.4" y="115.0" width="4.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="998.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (2 samples, 0.72%)</title><rect x="999.7" y="771.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.72%)</title><rect x="999.7" y="755.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.72%)</title><rect x="999.7" y="739.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.72%)</title><rect x="999.7" y="723.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.72%)</title><rect x="999.7" y="707.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.7" y="718.0"></text>
</g>
<g>
<title>__send (2 samples, 0.72%)</title><rect x="999.7" y="691.0" width="8.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1002.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="675.0" width="8.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1002.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="659.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1002.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="643.0" width="8.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1002.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="627.0" width="8.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1002.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="611.0" width="8.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1002.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="595.0" width="8.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1002.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="579.0" width="8.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1002.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="563.0" width="8.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1002.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="547.0" width="8.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1002.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="531.0" width="8.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1002.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="999.7" y="515.0" width="8.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1002.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="499.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1006.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="483.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1006.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="467.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1006.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="451.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1006.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="435.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1006.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="419.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1006.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="403.0" width="4.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1006.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="387.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1006.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="371.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1006.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="355.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1006.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="339.0" width="4.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1006.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="323.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1006.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="307.0" width="4.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1006.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="291.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1006.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="275.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1006.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="259.0" width="4.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1006.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="243.0" width="4.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1006.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="227.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1006.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="211.0" width="4.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1006.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="195.0" width="4.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1006.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1003.9" y="179.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1006.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.36%)</title><rect x="1008.1" y="851.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="1008.1" y="835.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="1008.1" y="819.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.36%)</title><rect x="1008.1" y="803.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 1.08%)</title><rect x="1012.4" y="867.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 1.08%)</title><rect x="1012.4" y="851.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1012.4" y="835.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1015.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1012.4" y="819.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1015.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.36%)</title><rect x="1012.4" y="803.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1015.4" y="814.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.72%)</title><rect x="1016.6" y="835.0" width="8.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1019.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="1016.6" y="819.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1019.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="1016.6" y="803.0" width="8.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1019.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1020.8" y="787.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1023.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1020.8" y="771.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1023.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1020.8" y="755.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1020.8" y="739.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1023.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1020.8" y="723.0" width="4.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1023.8" y="734.0"></text>
</g>
<g>
<title>[tid=13289] (3 samples, 1.08%)</title><rect x="1025.1" y="931.0" width="12.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1028.1" y="942.0"></text>
</g>
<g>
<title>start_thread (3 samples, 1.08%)</title><rect x="1025.1" y="915.0" width="12.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1028.1" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 1.08%)</title><rect x="1025.1" y="899.0" width="12.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1028.1" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 1.08%)</title><rect x="1025.1" y="883.0" width="12.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1028.1" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 1.08%)</title><rect x="1025.1" y="867.0" width="12.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1028.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.72%)</title><rect x="1025.1" y="851.0" width="8.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1028.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.72%)</title><rect x="1025.1" y="835.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1028.1" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.36%)</title><rect x="1025.1" y="819.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1028.1" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.36%)</title><rect x="1025.1" y="803.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1028.1" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.36%)</title><rect x="1025.1" y="787.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1028.1" y="798.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.36%)</title><rect x="1029.3" y="819.0" width="4.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1032.3" y="830.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.36%)</title><rect x="1033.5" y="851.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1036.5" y="862.0"></text>
</g>
<g>
<title>HeapRegion::clear_cardtable() (1 samples, 0.36%)</title><rect x="1033.5" y="835.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1036.5" y="846.0"></text>
</g>
<g>
<title>[tid=13293] (2 samples, 0.72%)</title><rect x="1037.7" y="931.0" width="8.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1040.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.36%)</title><rect x="1037.7" y="915.0" width="4.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1040.7" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.36%)</title><rect x="1042.0" y="915.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1045.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.36%)</title><rect x="1042.0" y="899.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1045.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.36%)</title><rect x="1042.0" y="883.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1045.0" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.36%)</title><rect x="1042.0" y="867.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.0" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.36%)</title><rect x="1042.0" y="851.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1045.0" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.36%)</title><rect x="1042.0" y="835.0" width="4.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1045.0" y="846.0"></text>
</g>
<g>
<title>[tid=13294] (1 samples, 0.36%)</title><rect x="1046.2" y="931.0" width="4.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1049.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="915.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1049.2" y="926.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.36%)</title><rect x="1046.2" y="899.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1049.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="883.0" width="4.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1049.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="867.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1049.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="851.0" width="4.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1049.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="835.0" width="4.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1049.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="819.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1049.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="803.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1049.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="787.0" width="4.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1049.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="771.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1049.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1046.2" y="755.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1049.2" y="766.0"></text>
</g>
<g>
<title>[tid=13298] (19 samples, 6.81%)</title><rect x="1050.4" y="931.0" width="80.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1053.4" y="942.0">[tid=13298]</text>
</g>
<g>
<title>start_thread (19 samples, 6.81%)</title><rect x="1050.4" y="915.0" width="80.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1053.4" y="926.0">start_thr..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 6.81%)</title><rect x="1050.4" y="899.0" width="80.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1053.4" y="910.0">thread_na..</text>
</g>
<g>
<title>Thread::call_run() (19 samples, 6.81%)</title><rect x="1050.4" y="883.0" width="80.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.4" y="894.0">Thread::c..</text>
</g>
<g>
<title>JavaThread::run() (19 samples, 6.81%)</title><rect x="1050.4" y="867.0" width="80.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.4" y="878.0">JavaThrea..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (19 samples, 6.81%)</title><rect x="1050.4" y="851.0" width="80.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1053.4" y="862.0">JavaThrea..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 6.81%)</title><rect x="1050.4" y="835.0" width="80.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.4" y="846.0">CompileBr..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (19 samples, 6.81%)</title><rect x="1050.4" y="819.0" width="80.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.4" y="830.0">CompileBr..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (19 samples, 6.81%)</title><rect x="1050.4" y="803.0" width="80.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.4" y="814.0">C2Compile..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (19 samples, 6.81%)</title><rect x="1050.4" y="787.0" width="80.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1053.4" y="798.0">Compile::..</text>
</g>
<g>
<title>Compile::Code_Gen() (12 samples, 4.30%)</title><rect x="1050.4" y="771.0" width="50.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.4" y="782.0">Compi..</text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.72%)</title><rect x="1054.7" y="755.0" width="8.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.7" y="766.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.36%)</title><rect x="1054.7" y="739.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.7" y="750.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.36%)</title><rect x="1058.9" y="739.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.9" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.72%)</title><rect x="1063.1" y="755.0" width="8.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1066.1" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.72%)</title><rect x="1063.1" y="739.0" width="8.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.1" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.36%)</title><rect x="1063.1" y="723.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1066.1" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.36%)</title><rect x="1067.3" y="723.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 2.51%)</title><rect x="1071.6" y="755.0" width="29.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.6" y="766.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.36%)</title><rect x="1071.6" y="739.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.6" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.36%)</title><rect x="1075.8" y="739.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.8" y="750.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.36%)</title><rect x="1075.8" y="723.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1078.8" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.36%)</title><rect x="1080.0" y="739.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.0" y="750.0"></text>
</g>
<g>
<title>PhiNode::in_RegMask(unsigned int) const (1 samples, 0.36%)</title><rect x="1080.0" y="723.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1083.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.72%)</title><rect x="1084.3" y="739.0" width="8.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.36%)</title><rect x="1088.5" y="723.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1091.5" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.36%)</title><rect x="1092.7" y="739.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1095.7" y="750.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.36%)</title><rect x="1092.7" y="723.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1095.7" y="734.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.36%)</title><rect x="1097.0" y="739.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.0" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 1.43%)</title><rect x="1101.2" y="771.0" width="16.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1104.2" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.36%)</title><rect x="1101.2" y="755.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1104.2" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.36%)</title><rect x="1101.2" y="739.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.2" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.36%)</title><rect x="1101.2" y="723.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1104.2" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.36%)</title><rect x="1101.2" y="707.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1104.2" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (2 samples, 0.72%)</title><rect x="1105.4" y="755.0" width="8.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.36%)</title><rect x="1105.4" y="739.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.36%)</title><rect x="1109.6" y="739.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.6" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.36%)</title><rect x="1113.9" y="755.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.9" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.36%)</title><rect x="1113.9" y="739.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.9" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 1.08%)</title><rect x="1118.1" y="771.0" width="12.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.1" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 1.08%)</title><rect x="1118.1" y="755.0" width="12.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 1.08%)</title><rect x="1118.1" y="739.0" width="12.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 1.08%)</title><rect x="1118.1" y="723.0" width="12.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 1.08%)</title><rect x="1118.1" y="707.0" width="12.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 1.08%)</title><rect x="1118.1" y="691.0" width="12.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.1" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.72%)</title><rect x="1118.1" y="675.0" width="8.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.72%)</title><rect x="1118.1" y="659.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.72%)</title><rect x="1118.1" y="643.0" width="8.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.72%)</title><rect x="1118.1" y="627.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.72%)</title><rect x="1118.1" y="611.0" width="8.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.36%)</title><rect x="1118.1" y="595.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.1" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="579.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="563.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.1" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.36%)</title><rect x="1118.1" y="547.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.36%)</title><rect x="1118.1" y="531.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.36%)</title><rect x="1118.1" y="515.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.36%)</title><rect x="1118.1" y="499.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1121.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.36%)</title><rect x="1118.1" y="483.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.1" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="467.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.1" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.36%)</title><rect x="1118.1" y="451.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1121.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.36%)</title><rect x="1118.1" y="435.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.36%)</title><rect x="1118.1" y="419.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1121.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.36%)</title><rect x="1118.1" y="403.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.36%)</title><rect x="1118.1" y="387.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="371.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1121.1" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.36%)</title><rect x="1118.1" y="355.0" width="4.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1121.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.36%)</title><rect x="1118.1" y="339.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.36%)</title><rect x="1118.1" y="323.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.36%)</title><rect x="1118.1" y="307.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.36%)</title><rect x="1118.1" y="291.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.1" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="275.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.1" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1118.1" y="259.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.1" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.36%)</title><rect x="1118.1" y="243.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.36%)</title><rect x="1118.1" y="227.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.1" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.36%)</title><rect x="1118.1" y="211.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.36%)</title><rect x="1118.1" y="195.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.36%)</title><rect x="1118.1" y="179.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.1" y="190.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.36%)</title><rect x="1118.1" y="163.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.1" y="174.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.36%)</title><rect x="1118.1" y="147.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="158.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.36%)</title><rect x="1118.1" y="131.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.1" y="142.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.36%)</title><rect x="1118.1" y="115.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.1" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.36%)</title><rect x="1118.1" y="99.0" width="4.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1121.1" y="110.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.36%)</title><rect x="1122.3" y="595.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1125.3" y="606.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.36%)</title><rect x="1122.3" y="579.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.3" y="590.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.36%)</title><rect x="1122.3" y="563.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.3" y="574.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.36%)</title><rect x="1122.3" y="547.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1125.3" y="558.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.36%)</title><rect x="1122.3" y="531.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.3" y="542.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.36%)</title><rect x="1122.3" y="515.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.3" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1126.6" y="675.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.6" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.36%)</title><rect x="1126.6" y="659.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.6" y="670.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.36%)</title><rect x="1126.6" y="643.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.6" y="654.0"></text>
</g>
<g>
<title>[tid=13299] (2 samples, 0.72%)</title><rect x="1130.8" y="931.0" width="8.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1133.8" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.72%)</title><rect x="1130.8" y="915.0" width="8.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1133.8" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.72%)</title><rect x="1130.8" y="899.0" width="8.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1133.8" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.72%)</title><rect x="1130.8" y="883.0" width="8.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.8" y="894.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.72%)</title><rect x="1130.8" y="867.0" width="8.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.8" y="878.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.72%)</title><rect x="1130.8" y="851.0" width="8.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.8" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.72%)</title><rect x="1130.8" y="835.0" width="8.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.8" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.72%)</title><rect x="1130.8" y="819.0" width="8.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1133.8" y="830.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.72%)</title><rect x="1130.8" y="803.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.8" y="814.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.72%)</title><rect x="1130.8" y="787.0" width="8.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.8" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.72%)</title><rect x="1130.8" y="771.0" width="8.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.8" y="782.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.72%)</title><rect x="1130.8" y="755.0" width="8.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.8" y="766.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.36%)</title><rect x="1130.8" y="739.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.8" y="750.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.36%)</title><rect x="1130.8" y="723.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.8" y="734.0"></text>
</g>
<g>
<title>LIR_Assembler::cmove(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.36%)</title><rect x="1130.8" y="707.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.8" y="718.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.36%)</title><rect x="1135.0" y="739.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.0" y="750.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.36%)</title><rect x="1135.0" y="723.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.0" y="734.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.36%)</title><rect x="1135.0" y="707.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.0" y="718.0"></text>
</g>
<g>
<title>[tid=13302] (5 samples, 1.79%)</title><rect x="1139.2" y="931.0" width="21.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1142.2" y="942.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.36%)</title><rect x="1139.2" y="915.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1142.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 1.08%)</title><rect x="1143.5" y="915.0" width="12.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1146.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="1143.5" y="899.0" width="12.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1146.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="1143.5" y="883.0" width="12.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1146.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="1143.5" y="867.0" width="12.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1146.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.08%)</title><rect x="1143.5" y="851.0" width="12.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1146.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="1147.7" y="835.0" width="8.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1150.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="1147.7" y="819.0" width="8.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1150.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.72%)</title><rect x="1147.7" y="803.0" width="8.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1150.7" y="814.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.36%)</title><rect x="1156.2" y="915.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1159.2" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.36%)</title><rect x="1156.2" y="899.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1159.2" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.36%)</title><rect x="1156.2" y="883.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.2" y="894.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.36%)</title><rect x="1156.2" y="867.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.2" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.36%)</title><rect x="1156.2" y="851.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.2" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.36%)</title><rect x="1156.2" y="835.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.2" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.36%)</title><rect x="1156.2" y="819.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.2" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.36%)</title><rect x="1156.2" y="803.0" width="4.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1159.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="787.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1159.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="771.0" width="4.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1159.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="755.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1159.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="739.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1159.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="723.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1159.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="707.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="1156.2" y="691.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.2" y="702.0"></text>
</g>
<g>
<title>[tid=13309] (2 samples, 0.72%)</title><rect x="1160.4" y="931.0" width="8.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1163.4" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.72%)</title><rect x="1160.4" y="915.0" width="8.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1163.4" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.72%)</title><rect x="1160.4" y="899.0" width="8.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1163.4" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.72%)</title><rect x="1160.4" y="883.0" width="8.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.72%)</title><rect x="1160.4" y="867.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.72%)</title><rect x="1160.4" y="851.0" width="8.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.72%)</title><rect x="1160.4" y="835.0" width="8.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.36%)</title><rect x="1160.4" y="819.0" width="4.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.36%)</title><rect x="1160.4" y="803.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.4" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.36%)</title><rect x="1160.4" y="787.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.4" y="798.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.36%)</title><rect x="1164.6" y="819.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1167.6" y="830.0"></text>
</g>
<g>
<title>[tid=13310] (3 samples, 1.08%)</title><rect x="1168.9" y="931.0" width="12.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1171.9" y="942.0"></text>
</g>
<g>
<title>start_thread (3 samples, 1.08%)</title><rect x="1168.9" y="915.0" width="12.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1171.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 1.08%)</title><rect x="1168.9" y="899.0" width="12.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1171.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 1.08%)</title><rect x="1168.9" y="883.0" width="12.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 1.08%)</title><rect x="1168.9" y="867.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.72%)</title><rect x="1168.9" y="851.0" width="8.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.36%)</title><rect x="1168.9" y="835.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.9" y="846.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.36%)</title><rect x="1168.9" y="819.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.9" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.36%)</title><rect x="1173.1" y="835.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.1" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.36%)</title><rect x="1173.1" y="819.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.1" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.36%)</title><rect x="1173.1" y="803.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.1" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.36%)</title><rect x="1173.1" y="787.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.1" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.36%)</title><rect x="1173.1" y="771.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.1" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.36%)</title><rect x="1173.1" y="755.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.1" y="766.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.36%)</title><rect x="1177.3" y="851.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.36%)</title><rect x="1177.3" y="835.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.3" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.36%)</title><rect x="1177.3" y="819.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.3" y="830.0"></text>
</g>
<g>
<title>[tid=13311] (2 samples, 0.72%)</title><rect x="1181.5" y="931.0" width="8.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1184.5" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.72%)</title><rect x="1181.5" y="915.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1184.5" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.72%)</title><rect x="1181.5" y="899.0" width="8.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1184.5" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.72%)</title><rect x="1181.5" y="883.0" width="8.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.5" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.72%)</title><rect x="1181.5" y="867.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.5" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="851.0" width="8.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.5" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="835.0" width="8.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="819.0" width="8.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="803.0" width="8.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="787.0" width="8.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.72%)</title><rect x="1181.5" y="771.0" width="8.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.36%)</title><rect x="1181.5" y="755.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.36%)</title><rect x="1185.8" y="755.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.36%)</title><rect x="1185.8" y="739.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
</g>
</svg>
