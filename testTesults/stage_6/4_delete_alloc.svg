<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="869"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="869"> </text>
<g id="frames">
<g>
<title>all (4,215 samples, 100.00%)</title><rect x="10.0" y="835.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="846.0">all</text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-1 tid=13570] (139 samples, 3.30%)</title><rect x="10.0" y="819.0" width="38.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="830.0">[Fo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (139 samples, 3.30%)</title><rect x="10.0" y="803.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (139 samples, 3.30%)</title><rect x="10.0" y="787.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (139 samples, 3.30%)</title><rect x="10.0" y="771.0" width="38.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (139 samples, 3.30%)</title><rect x="10.0" y="755.0" width="38.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (139 samples, 3.30%)</title><rect x="10.0" y="739.0" width="38.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (13 samples, 0.31%)</title><rect x="10.0" y="723.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.31%)</title><rect x="10.0" y="707.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (13 samples, 0.31%)</title><rect x="10.0" y="691.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$328/418935534.action (13 samples, 0.31%)</title><rect x="10.0" y="675.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$5 (13 samples, 0.31%)</title><rect x="10.0" y="659.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (13 samples, 0.31%)</title><rect x="10.0" y="643.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="10.0" y="627.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.17%)</title><rect x="11.1" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="11.1" y="611.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="12.8" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (2 samples, 0.05%)</title><rect x="13.1" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (2 samples, 0.05%)</title><rect x="13.1" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (2 samples, 0.05%)</title><rect x="13.1" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.02%)</title><rect x="13.1" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="13.1" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="13.1" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (1 samples, 0.02%)</title><rect x="13.4" y="579.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (1 samples, 0.02%)</title><rect x="13.4" y="563.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="16.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (126 samples, 2.99%)</title><rect x="13.6" y="723.0" width="35.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (40 samples, 0.95%)</title><rect x="13.6" y="707.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (40 samples, 0.95%)</title><rect x="13.6" y="691.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (40 samples, 0.95%)</title><rect x="13.6" y="675.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (7 samples, 0.17%)</title><rect x="13.6" y="659.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (7 samples, 0.17%)</title><rect x="13.6" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.17%)</title><rect x="13.6" y="627.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.17%)</title><rect x="13.6" y="611.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.17%)</title><rect x="13.6" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.6" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="13.6" y="579.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="16.6" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="15.6" y="659.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="18.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.33%)</title><rect x="16.7" y="659.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="670.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="16.7" y="643.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="19.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.12%)</title><rect x="18.4" y="643.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="21.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="19.8" y="643.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (15 samples, 0.36%)</title><rect x="20.6" y="659.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.6" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.36%)</title><rect x="20.6" y="643.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.6" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.31%)</title><rect x="20.6" y="627.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.6" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="20.6" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.6" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.02%)</title><rect x="20.6" y="595.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="23.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.28%)</title><rect x="20.9" y="611.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.28%)</title><rect x="20.9" y="595.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="24.3" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="24.3" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="24.3" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (2 samples, 0.05%)</title><rect x="24.3" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.05%)</title><rect x="24.3" y="563.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (86 samples, 2.04%)</title><rect x="24.8" y="707.0" width="24.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (86 samples, 2.04%)</title><rect x="24.8" y="691.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.8" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (86 samples, 2.04%)</title><rect x="24.8" y="675.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.8" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (86 samples, 2.04%)</title><rect x="24.8" y="659.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.8" y="670.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.33%)</title><rect x="24.8" y="643.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (4 samples, 0.09%)</title><rect x="24.8" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.8" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (4 samples, 0.09%)</title><rect x="24.8" y="611.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="27.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (3 samples, 0.07%)</title><rect x="26.0" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.0" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (3 samples, 0.07%)</title><rect x="26.0" y="611.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="29.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.17%)</title><rect x="26.8" y="627.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.8" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.17%)</title><rect x="26.8" y="611.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingInt (2 samples, 0.05%)</title><rect x="28.8" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="28.8" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="28.8" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$300/548450126.get$Lambda (2 samples, 0.05%)</title><rect x="28.8" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.8" y="606.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$300 (2 samples, 0.05%)</title><rect x="28.8" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="31.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (4 samples, 0.09%)</title><rect x="29.3" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (3 samples, 0.07%)</title><rect x="29.3" y="627.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="29.3" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="29.3" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.3" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.get$Lambda (3 samples, 0.07%)</title><rect x="29.3" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$310 (3 samples, 0.07%)</title><rect x="29.3" y="563.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="32.3" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.02%)</title><rect x="30.2" y="627.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="30.2" y="611.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="30.2" y="595.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.get$Lambda (1 samples, 0.02%)</title><rect x="30.2" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.2" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$311 (1 samples, 0.02%)</title><rect x="30.2" y="563.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="33.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (4 samples, 0.09%)</title><rect x="30.4" y="643.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (4 samples, 0.09%)</title><rect x="30.4" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.4" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (2 samples, 0.05%)</title><rect x="30.4" y="611.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="33.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="31.0" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="31.0" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (2 samples, 0.05%)</title><rect x="31.0" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (2 samples, 0.05%)</title><rect x="31.0" y="563.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="34.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (24 samples, 0.57%)</title><rect x="31.6" y="643.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.47%)</title><rect x="31.6" y="627.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (20 samples, 0.47%)</title><rect x="31.6" y="611.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.45%)</title><rect x="31.6" y="595.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (19 samples, 0.45%)</title><rect x="31.6" y="579.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (17 samples, 0.40%)</title><rect x="31.6" y="563.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (17 samples, 0.40%)</title><rect x="31.6" y="547.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (17 samples, 0.40%)</title><rect x="31.6" y="531.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (17 samples, 0.40%)</title><rect x="31.6" y="515.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (17 samples, 0.40%)</title><rect x="31.6" y="499.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.17%)</title><rect x="31.6" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.6" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.17%)</title><rect x="31.6" y="467.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="34.6" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.24%)</title><rect x="33.5" y="483.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.5" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10 samples, 0.24%)</title><rect x="33.5" y="467.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="36.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.05%)</title><rect x="36.3" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (2 samples, 0.05%)</title><rect x="36.3" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.05%)</title><rect x="36.3" y="531.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="39.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.02%)</title><rect x="36.9" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.02%)</title><rect x="36.9" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (1 samples, 0.02%)</title><rect x="36.9" y="563.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="39.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (4 samples, 0.09%)</title><rect x="37.2" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.2" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (4 samples, 0.09%)</title><rect x="37.2" y="611.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="40.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (23 samples, 0.55%)</title><rect x="38.3" y="643.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (23 samples, 0.55%)</title><rect x="38.3" y="627.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.50%)</title><rect x="38.3" y="611.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (21 samples, 0.50%)</title><rect x="38.3" y="595.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.31%)</title><rect x="38.3" y="579.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.31%)</title><rect x="38.3" y="563.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (13 samples, 0.31%)</title><rect x="38.3" y="547.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (13 samples, 0.31%)</title><rect x="38.3" y="531.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.3" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (13 samples, 0.31%)</title><rect x="38.3" y="515.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.3" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (13 samples, 0.31%)</title><rect x="38.3" y="499.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.3" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (13 samples, 0.31%)</title><rect x="38.3" y="483.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.3" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.31%)</title><rect x="38.3" y="467.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (13 samples, 0.31%)</title><rect x="38.3" y="451.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (13 samples, 0.31%)</title><rect x="38.3" y="435.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (13 samples, 0.31%)</title><rect x="38.3" y="419.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (13 samples, 0.31%)</title><rect x="38.3" y="403.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (13 samples, 0.31%)</title><rect x="38.3" y="387.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.31%)</title><rect x="38.3" y="371.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.31%)</title><rect x="38.3" y="355.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.31%)</title><rect x="38.3" y="339.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="38.3" y="323.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="41.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="40.2" y="323.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="40.2" y="307.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="43.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (6 samples, 0.14%)</title><rect x="41.9" y="579.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (6 samples, 0.14%)</title><rect x="41.9" y="563.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.9" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (6 samples, 0.14%)</title><rect x="41.9" y="547.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="44.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.05%)</title><rect x="43.6" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.05%)</title><rect x="43.6" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.6" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="43.6" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.6" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.05%)</title><rect x="43.6" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="46.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.05%)</title><rect x="44.2" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.2" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (2 samples, 0.05%)</title><rect x="44.2" y="595.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="47.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (15 samples, 0.36%)</title><rect x="44.7" y="643.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.36%)</title><rect x="44.7" y="627.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.36%)</title><rect x="44.7" y="611.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.24%)</title><rect x="44.7" y="595.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.24%)</title><rect x="44.7" y="579.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.7" y="590.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="44.7" y="563.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="47.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.12%)</title><rect x="47.5" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.5" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.12%)</title><rect x="47.5" y="579.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="50.5" y="590.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-3 tid=13378] (147 samples, 3.49%)</title><rect x="48.9" y="819.0" width="41.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="51.9" y="830.0">[Fo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (147 samples, 3.49%)</title><rect x="48.9" y="803.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.9" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (147 samples, 3.49%)</title><rect x="48.9" y="787.0" width="41.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.9" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (147 samples, 3.49%)</title><rect x="48.9" y="771.0" width="41.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.9" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (147 samples, 3.49%)</title><rect x="48.9" y="755.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.9" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (147 samples, 3.49%)</title><rect x="48.9" y="739.0" width="41.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.9" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (14 samples, 0.33%)</title><rect x="48.9" y="723.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (14 samples, 0.33%)</title><rect x="48.9" y="707.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (14 samples, 0.33%)</title><rect x="48.9" y="691.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$328/418935534.action (14 samples, 0.33%)</title><rect x="48.9" y="675.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$5 (14 samples, 0.33%)</title><rect x="48.9" y="659.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (14 samples, 0.33%)</title><rect x="48.9" y="643.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.9" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.02%)</title><rect x="48.9" y="627.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.19%)</title><rect x="49.2" y="627.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.2" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="49.2" y="611.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="52.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.07%)</title><rect x="50.3" y="611.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="51.2" y="611.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="54.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (5 samples, 0.12%)</title><rect x="51.4" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (5 samples, 0.12%)</title><rect x="51.4" y="611.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (5 samples, 0.12%)</title><rect x="51.4" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (5 samples, 0.12%)</title><rect x="51.4" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (5 samples, 0.12%)</title><rect x="51.4" y="563.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (133 samples, 3.16%)</title><rect x="52.8" y="723.0" width="37.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.8" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (45 samples, 1.07%)</title><rect x="52.8" y="707.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (45 samples, 1.07%)</title><rect x="52.8" y="691.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (45 samples, 1.07%)</title><rect x="52.8" y="675.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (6 samples, 0.14%)</title><rect x="52.8" y="659.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (6 samples, 0.14%)</title><rect x="52.8" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="52.8" y="627.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.12%)</title><rect x="52.8" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="52.8" y="595.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="55.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="54.2" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="54.2" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.2" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="54.2" y="579.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="57.2" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.07%)</title><rect x="54.5" y="659.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="57.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.38%)</title><rect x="55.4" y="659.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.4" y="670.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="55.4" y="643.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.17%)</title><rect x="57.6" y="643.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="60.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="59.6" y="643.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="62.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (20 samples, 0.47%)</title><rect x="59.8" y="659.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.8" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (20 samples, 0.47%)</title><rect x="59.8" y="643.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.8" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.36%)</title><rect x="59.8" y="627.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (9 samples, 0.21%)</title><rect x="59.8" y="611.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.8" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (9 samples, 0.21%)</title><rect x="59.8" y="595.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="62.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.14%)</title><rect x="62.4" y="611.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.4" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.14%)</title><rect x="62.4" y="595.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="65.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.12%)</title><rect x="64.0" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="64.0" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.12%)</title><rect x="64.0" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (5 samples, 0.12%)</title><rect x="64.0" y="579.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (5 samples, 0.12%)</title><rect x="64.0" y="563.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (88 samples, 2.09%)</title><rect x="65.4" y="707.0" width="24.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.4" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (88 samples, 2.09%)</title><rect x="65.4" y="691.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.4" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (88 samples, 2.09%)</title><rect x="65.4" y="675.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.4" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (88 samples, 2.09%)</title><rect x="65.4" y="659.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.4" y="670.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.38%)</title><rect x="65.4" y="643.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (1 samples, 0.02%)</title><rect x="65.4" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.4" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (1 samples, 0.02%)</title><rect x="65.4" y="611.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (4 samples, 0.09%)</title><rect x="65.7" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (4 samples, 0.09%)</title><rect x="65.7" y="611.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="68.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.26%)</title><rect x="66.8" y="627.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.8" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.26%)</title><rect x="66.8" y="611.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingInt (2 samples, 0.05%)</title><rect x="69.9" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="69.9" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="69.9" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.9" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$300/548450126.get$Lambda (2 samples, 0.05%)</title><rect x="69.9" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.9" y="606.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$300 (2 samples, 0.05%)</title><rect x="69.9" y="579.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="72.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (4 samples, 0.09%)</title><rect x="70.5" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.5" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (1 samples, 0.02%)</title><rect x="70.5" y="627.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="70.5" y="611.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="70.5" y="595.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.get$Lambda (1 samples, 0.02%)</title><rect x="70.5" y="579.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.5" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$310 (1 samples, 0.02%)</title><rect x="70.5" y="563.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="73.5" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.07%)</title><rect x="70.7" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="70.7" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="70.7" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.get$Lambda (3 samples, 0.07%)</title><rect x="70.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$311 (3 samples, 0.07%)</title><rect x="70.7" y="563.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="73.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (2 samples, 0.05%)</title><rect x="71.6" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySet (2 samples, 0.05%)</title><rect x="71.6" y="627.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (7 samples, 0.17%)</title><rect x="72.1" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (7 samples, 0.17%)</title><rect x="72.1" y="627.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (3 samples, 0.07%)</title><rect x="72.1" y="611.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="75.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="73.0" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="73.0" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (3 samples, 0.07%)</title><rect x="73.0" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (3 samples, 0.07%)</title><rect x="73.0" y="563.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.mapMerger (1 samples, 0.02%)</title><rect x="73.8" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="73.8" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="73.8" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$44/597255128.get$Lambda (1 samples, 0.02%)</title><rect x="73.8" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.8" y="574.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$44 (1 samples, 0.02%)</title><rect x="73.8" y="547.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (34 samples, 0.81%)</title><rect x="74.1" y="643.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.76%)</title><rect x="74.1" y="627.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (32 samples, 0.76%)</title><rect x="74.1" y="611.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (25 samples, 0.59%)</title><rect x="74.1" y="595.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (25 samples, 0.59%)</title><rect x="74.1" y="579.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (19 samples, 0.45%)</title><rect x="74.1" y="563.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (19 samples, 0.45%)</title><rect x="74.1" y="547.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (19 samples, 0.45%)</title><rect x="74.1" y="531.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (19 samples, 0.45%)</title><rect x="74.1" y="515.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (19 samples, 0.45%)</title><rect x="74.1" y="499.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.24%)</title><rect x="74.1" y="483.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.1" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.24%)</title><rect x="74.1" y="467.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="77.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (9 samples, 0.21%)</title><rect x="76.9" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (9 samples, 0.21%)</title><rect x="76.9" y="467.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="79.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (6 samples, 0.14%)</title><rect x="79.4" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (6 samples, 0.14%)</title><rect x="79.4" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (6 samples, 0.14%)</title><rect x="79.4" y="531.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="82.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (7 samples, 0.17%)</title><rect x="81.1" y="595.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (7 samples, 0.17%)</title><rect x="81.1" y="579.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (7 samples, 0.17%)</title><rect x="81.1" y="563.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="84.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.05%)</title><rect x="83.1" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.1" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (2 samples, 0.05%)</title><rect x="83.1" y="611.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="86.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (14 samples, 0.33%)</title><rect x="83.6" y="643.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.6" y="654.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (1 samples, 0.02%)</title><rect x="83.6" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="83.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="83.6" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.6" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.get$Lambda (1 samples, 0.02%)</title><rect x="83.6" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.6" y="590.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$313 (1 samples, 0.02%)</title><rect x="83.6" y="563.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="86.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (13 samples, 0.31%)</title><rect x="83.9" y="627.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.26%)</title><rect x="83.9" y="611.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (11 samples, 0.26%)</title><rect x="83.9" y="595.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.21%)</title><rect x="83.9" y="579.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.21%)</title><rect x="83.9" y="563.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (9 samples, 0.21%)</title><rect x="83.9" y="547.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (9 samples, 0.21%)</title><rect x="83.9" y="531.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (9 samples, 0.21%)</title><rect x="83.9" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (9 samples, 0.21%)</title><rect x="83.9" y="499.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (9 samples, 0.21%)</title><rect x="83.9" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.21%)</title><rect x="83.9" y="467.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (9 samples, 0.21%)</title><rect x="83.9" y="451.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (9 samples, 0.21%)</title><rect x="83.9" y="435.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (9 samples, 0.21%)</title><rect x="83.9" y="419.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (9 samples, 0.21%)</title><rect x="83.9" y="403.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (9 samples, 0.21%)</title><rect x="83.9" y="387.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.21%)</title><rect x="83.9" y="371.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="83.9" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="83.9" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="83.9" y="323.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="86.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="85.0" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="85.0" y="307.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.05%)</title><rect x="86.4" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.05%)</title><rect x="86.4" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.4" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="86.4" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.4" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.05%)</title><rect x="86.4" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="89.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.05%)</title><rect x="87.0" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.0" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (2 samples, 0.05%)</title><rect x="87.0" y="595.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (9 samples, 0.21%)</title><rect x="87.5" y="643.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.21%)</title><rect x="87.5" y="627.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.21%)</title><rect x="87.5" y="611.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.14%)</title><rect x="87.5" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.14%)</title><rect x="87.5" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.5" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="87.5" y="563.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="89.2" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.2" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.07%)</title><rect x="89.2" y="579.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="92.2" y="590.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-5 tid=13380] (135 samples, 3.20%)</title><rect x="90.1" y="819.0" width="37.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="93.1" y="830.0">[Fo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (135 samples, 3.20%)</title><rect x="90.1" y="803.0" width="37.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.1" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (135 samples, 3.20%)</title><rect x="90.1" y="787.0" width="37.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.1" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (135 samples, 3.20%)</title><rect x="90.1" y="771.0" width="37.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.1" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (135 samples, 3.20%)</title><rect x="90.1" y="755.0" width="37.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.1" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (135 samples, 3.20%)</title><rect x="90.1" y="739.0" width="37.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.1" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (24 samples, 0.57%)</title><rect x="90.1" y="723.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24 samples, 0.57%)</title><rect x="90.1" y="707.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (24 samples, 0.57%)</title><rect x="90.1" y="691.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$328/418935534.action (24 samples, 0.57%)</title><rect x="90.1" y="675.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$5 (24 samples, 0.57%)</title><rect x="90.1" y="659.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (24 samples, 0.57%)</title><rect x="90.1" y="643.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="90.1" y="627.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.31%)</title><rect x="91.2" y="627.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.2" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="91.2" y="611.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="94.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.12%)</title><rect x="92.3" y="611.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="95.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="93.7" y="611.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="96.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (7 samples, 0.17%)</title><rect x="94.8" y="627.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (7 samples, 0.17%)</title><rect x="94.8" y="611.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (7 samples, 0.17%)</title><rect x="94.8" y="595.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (2 samples, 0.05%)</title><rect x="94.8" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="94.8" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.8" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.05%)</title><rect x="94.8" y="547.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (5 samples, 0.12%)</title><rect x="95.4" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (5 samples, 0.12%)</title><rect x="95.4" y="563.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="98.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (111 samples, 2.63%)</title><rect x="96.8" y="723.0" width="31.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.8" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (53 samples, 1.26%)</title><rect x="96.8" y="707.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (53 samples, 1.26%)</title><rect x="96.8" y="691.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (53 samples, 1.26%)</title><rect x="96.8" y="675.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (12 samples, 0.28%)</title><rect x="96.8" y="659.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (12 samples, 0.28%)</title><rect x="96.8" y="643.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.28%)</title><rect x="96.8" y="627.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.17%)</title><rect x="96.8" y="611.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="96.8" y="595.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="99.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.12%)</title><rect x="98.7" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.12%)</title><rect x="98.7" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.7" y="606.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="98.7" y="579.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="101.7" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="100.1" y="659.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="103.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.43%)</title><rect x="101.3" y="659.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.3" y="670.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="101.3" y="643.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="104.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.09%)</title><rect x="104.3" y="643.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="107.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="105.5" y="643.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="108.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (19 samples, 0.45%)</title><rect x="106.3" y="659.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (19 samples, 0.45%)</title><rect x="106.3" y="643.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.3" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.38%)</title><rect x="106.3" y="627.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.3" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (8 samples, 0.19%)</title><rect x="106.3" y="611.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.3" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (8 samples, 0.19%)</title><rect x="106.3" y="595.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="109.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.19%)</title><rect x="108.5" y="611.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.5" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.19%)</title><rect x="108.5" y="595.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="111.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.07%)</title><rect x="110.8" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.07%)</title><rect x="110.8" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.07%)</title><rect x="110.8" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (3 samples, 0.07%)</title><rect x="110.8" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (3 samples, 0.07%)</title><rect x="110.8" y="563.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="113.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (58 samples, 1.38%)</title><rect x="111.6" y="707.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (58 samples, 1.38%)</title><rect x="111.6" y="691.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (58 samples, 1.38%)</title><rect x="111.6" y="675.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (58 samples, 1.38%)</title><rect x="111.6" y="659.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.6" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.14%)</title><rect x="111.6" y="643.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (1 samples, 0.02%)</title><rect x="111.6" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.6" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (1 samples, 0.02%)</title><rect x="111.6" y="611.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="114.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (1 samples, 0.02%)</title><rect x="111.9" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (1 samples, 0.02%)</title><rect x="111.9" y="611.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="114.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.09%)</title><rect x="112.2" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.2" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.09%)</title><rect x="112.2" y="611.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="115.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (2 samples, 0.05%)</title><rect x="113.3" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (1 samples, 0.02%)</title><rect x="113.3" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="113.3" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="113.3" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.3" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.get$Lambda (1 samples, 0.02%)</title><rect x="113.3" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.3" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$310 (1 samples, 0.02%)</title><rect x="113.3" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.3" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.02%)</title><rect x="113.6" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="113.6" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="113.6" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.get$Lambda (1 samples, 0.02%)</title><rect x="113.6" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.6" y="590.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$311 (1 samples, 0.02%)</title><rect x="113.6" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="116.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (2 samples, 0.05%)</title><rect x="113.9" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySet (2 samples, 0.05%)</title><rect x="113.9" y="627.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="116.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (4 samples, 0.09%)</title><rect x="114.4" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (4 samples, 0.09%)</title><rect x="114.4" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="114.4" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="114.4" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (4 samples, 0.09%)</title><rect x="114.4" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (4 samples, 0.09%)</title><rect x="114.4" y="563.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (23 samples, 0.55%)</title><rect x="115.5" y="643.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.52%)</title><rect x="115.5" y="627.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (22 samples, 0.52%)</title><rect x="115.5" y="611.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.40%)</title><rect x="115.5" y="595.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.40%)</title><rect x="115.5" y="579.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (15 samples, 0.36%)</title><rect x="115.5" y="563.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (15 samples, 0.36%)</title><rect x="115.5" y="547.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (15 samples, 0.36%)</title><rect x="115.5" y="531.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (15 samples, 0.36%)</title><rect x="115.5" y="515.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (15 samples, 0.36%)</title><rect x="115.5" y="499.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.12%)</title><rect x="115.5" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.5" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.12%)</title><rect x="115.5" y="467.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="118.5" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.24%)</title><rect x="116.9" y="483.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10 samples, 0.24%)</title><rect x="116.9" y="467.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.05%)</title><rect x="119.7" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (2 samples, 0.05%)</title><rect x="119.7" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.05%)</title><rect x="119.7" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="122.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (5 samples, 0.12%)</title><rect x="120.3" y="595.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (5 samples, 0.12%)</title><rect x="120.3" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (5 samples, 0.12%)</title><rect x="120.3" y="563.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="123.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.02%)</title><rect x="121.7" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.7" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (1 samples, 0.02%)</title><rect x="121.7" y="611.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="124.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (11 samples, 0.26%)</title><rect x="122.0" y="643.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (11 samples, 0.26%)</title><rect x="122.0" y="627.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.19%)</title><rect x="122.0" y="611.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (8 samples, 0.19%)</title><rect x="122.0" y="595.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.14%)</title><rect x="122.0" y="579.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.14%)</title><rect x="122.0" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (6 samples, 0.14%)</title><rect x="122.0" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (6 samples, 0.14%)</title><rect x="122.0" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.0" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (6 samples, 0.14%)</title><rect x="122.0" y="515.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (6 samples, 0.14%)</title><rect x="122.0" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.0" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (6 samples, 0.14%)</title><rect x="122.0" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.14%)</title><rect x="122.0" y="467.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (6 samples, 0.14%)</title><rect x="122.0" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (6 samples, 0.14%)</title><rect x="122.0" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (6 samples, 0.14%)</title><rect x="122.0" y="419.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (6 samples, 0.14%)</title><rect x="122.0" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (6 samples, 0.14%)</title><rect x="122.0" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.14%)</title><rect x="122.0" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="122.0" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="122.0" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="122.0" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="125.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="122.5" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.5" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="122.5" y="307.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="125.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1 samples, 0.02%)</title><rect x="123.7" y="579.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1 samples, 0.02%)</title><rect x="123.7" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (1 samples, 0.02%)</title><rect x="123.7" y="547.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="126.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.02%)</title><rect x="123.9" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.02%)</title><rect x="123.9" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.9" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="123.9" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.9" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (1 samples, 0.02%)</title><rect x="123.9" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="126.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (3 samples, 0.07%)</title><rect x="124.2" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.2" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (3 samples, 0.07%)</title><rect x="124.2" y="595.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="127.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (10 samples, 0.24%)</title><rect x="125.1" y="643.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.24%)</title><rect x="125.1" y="627.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.24%)</title><rect x="125.1" y="611.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.17%)</title><rect x="125.1" y="595.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.17%)</title><rect x="125.1" y="579.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.1" y="590.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="125.1" y="563.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="128.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="127.0" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.0" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.07%)</title><rect x="127.0" y="579.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="130.0" y="590.0"></text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=13313] (195 samples, 4.63%)</title><rect x="127.9" y="819.0" width="54.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="130.9" y="830.0">[Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (195 samples, 4.63%)</title><rect x="127.9" y="803.0" width="54.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.9" y="814.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="127.9" y="787.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="127.9" y="771.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1317658293.get$Lambda (1 samples, 0.02%)</title><rect x="127.9" y="755.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$229 (1 samples, 0.02%)</title><rect x="127.9" y="739.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="130.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (3 samples, 0.07%)</title><rect x="128.1" y="787.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="128.1" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.get$Lambda (3 samples, 0.07%)</title><rect x="128.1" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$230 (3 samples, 0.07%)</title><rect x="128.1" y="739.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (51 samples, 1.21%)</title><rect x="129.0" y="787.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/778276218.accept (39 samples, 0.93%)</title><rect x="129.0" y="771.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (39 samples, 0.93%)</title><rect x="129.0" y="755.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (39 samples, 0.93%)</title><rect x="129.0" y="739.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (39 samples, 0.93%)</title><rect x="129.0" y="723.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (39 samples, 0.93%)</title><rect x="129.0" y="707.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (39 samples, 0.93%)</title><rect x="129.0" y="691.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.93%)</title><rect x="129.0" y="675.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.93%)</title><rect x="129.0" y="659.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39 samples, 0.93%)</title><rect x="129.0" y="643.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (39 samples, 0.93%)</title><rect x="129.0" y="627.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (39 samples, 0.93%)</title><rect x="129.0" y="611.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.93%)</title><rect x="129.0" y="595.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (5 samples, 0.12%)</title><rect x="129.0" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (5 samples, 0.12%)</title><rect x="129.0" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (5 samples, 0.12%)</title><rect x="129.0" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (3 samples, 0.07%)</title><rect x="129.0" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.07%)</title><rect x="129.0" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.07%)</title><rect x="129.0" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.07%)</title><rect x="129.0" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.07%)</title><rect x="129.0" y="467.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="132.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="129.8" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="129.8" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="129.8" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="129.8" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="129.8" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.05%)</title><rect x="129.8" y="451.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="132.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="130.4" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.02%)</title><rect x="130.4" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.02%)</title><rect x="130.4" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.02%)</title><rect x="130.4" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.02%)</title><rect x="130.4" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (1 samples, 0.02%)</title><rect x="130.4" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (1 samples, 0.02%)</title><rect x="130.4" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="130.4" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="130.4" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="130.4" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.4" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="130.4" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="133.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.05%)</title><rect x="130.7" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="130.7" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="130.7" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (2 samples, 0.05%)</title><rect x="130.7" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (2 samples, 0.05%)</title><rect x="130.7" y="515.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="133.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (31 samples, 0.74%)</title><rect x="131.2" y="579.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (11 samples, 0.26%)</title><rect x="131.2" y="563.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.19%)</title><rect x="131.2" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.19%)</title><rect x="131.2" y="531.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="134.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (3 samples, 0.07%)</title><rect x="133.5" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.5" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.07%)</title><rect x="133.5" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.5" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.07%)</title><rect x="133.5" y="515.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="136.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (20 samples, 0.47%)</title><rect x="134.3" y="563.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$162/69677488.get (20 samples, 0.47%)</title><rect x="134.3" y="547.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (20 samples, 0.47%)</title><rect x="134.3" y="531.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.47%)</title><rect x="134.3" y="515.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.47%)</title><rect x="134.3" y="499.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.3" y="510.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="134.3" y="483.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="137.3" y="494.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="135.1" y="483.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1608485788.accept (12 samples, 0.28%)</title><rect x="139.9" y="771.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.28%)</title><rect x="139.9" y="755.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.run (12 samples, 0.28%)</title><rect x="139.9" y="739.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.28%)</title><rect x="139.9" y="723.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.28%)</title><rect x="139.9" y="707.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.28%)</title><rect x="139.9" y="691.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.28%)</title><rect x="139.9" y="675.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.28%)</title><rect x="139.9" y="659.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="142.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (12 samples, 0.28%)</title><rect x="143.3" y="787.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.19%)</title><rect x="143.3" y="771.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.19%)</title><rect x="143.3" y="755.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (8 samples, 0.19%)</title><rect x="143.3" y="739.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.19%)</title><rect x="143.3" y="723.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.19%)</title><rect x="143.3" y="707.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (8 samples, 0.19%)</title><rect x="143.3" y="691.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.3" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (8 samples, 0.19%)</title><rect x="143.3" y="675.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="146.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (4 samples, 0.09%)</title><rect x="145.5" y="771.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (4 samples, 0.09%)</title><rect x="145.5" y="755.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="148.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (31 samples, 0.74%)</title><rect x="146.6" y="787.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/651216306.run (17 samples, 0.40%)</title><rect x="146.6" y="771.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (17 samples, 0.40%)</title><rect x="146.6" y="755.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.40%)</title><rect x="146.6" y="739.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.40%)</title><rect x="146.6" y="723.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 0.40%)</title><rect x="146.6" y="707.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (17 samples, 0.40%)</title><rect x="146.6" y="691.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (17 samples, 0.40%)</title><rect x="146.6" y="675.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (17 samples, 0.40%)</title><rect x="146.6" y="659.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (17 samples, 0.40%)</title><rect x="146.6" y="643.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (17 samples, 0.40%)</title><rect x="146.6" y="627.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.33%)</title><rect x="146.6" y="611.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.33%)</title><rect x="146.6" y="595.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.33%)</title><rect x="146.6" y="579.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (11 samples, 0.26%)</title><rect x="146.6" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (11 samples, 0.26%)</title><rect x="146.6" y="547.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.26%)</title><rect x="146.6" y="531.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.26%)</title><rect x="146.6" y="515.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.26%)</title><rect x="146.6" y="499.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.6" y="510.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="146.6" y="483.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="149.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.07%)</title><rect x="149.7" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="149.7" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="149.7" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (3 samples, 0.07%)</title><rect x="149.7" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (3 samples, 0.07%)</title><rect x="149.7" y="499.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="152.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (3 samples, 0.07%)</title><rect x="150.5" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="150.5" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="150.5" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="150.5" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="150.5" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.07%)</title><rect x="150.5" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.07%)</title><rect x="150.5" y="515.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="153.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$178/1436643968.run (14 samples, 0.33%)</title><rect x="151.4" y="771.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (14 samples, 0.33%)</title><rect x="151.4" y="755.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="151.4" y="739.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="151.4" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.get$Lambda (6 samples, 0.14%)</title><rect x="151.4" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$241 (6 samples, 0.14%)</title><rect x="151.4" y="691.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="154.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.19%)</title><rect x="153.1" y="739.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.19%)</title><rect x="153.1" y="723.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.19%)</title><rect x="153.1" y="707.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (8 samples, 0.19%)</title><rect x="153.1" y="691.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="156.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (45 samples, 1.07%)</title><rect x="155.3" y="787.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.31%)</title><rect x="155.3" y="771.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.31%)</title><rect x="155.3" y="755.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.31%)</title><rect x="155.3" y="739.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.31%)</title><rect x="155.3" y="723.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.31%)</title><rect x="155.3" y="707.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="158.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (32 samples, 0.76%)</title><rect x="158.9" y="771.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="158.9" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="158.9" y="739.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$298/2007698387.get$Lambda (5 samples, 0.12%)</title><rect x="158.9" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.9" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$298 (5 samples, 0.12%)</title><rect x="158.9" y="707.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="161.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (27 samples, 0.64%)</title><rect x="160.3" y="755.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.3" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.28%)</title><rect x="160.3" y="739.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="163.3" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (15 samples, 0.36%)</title><rect x="163.7" y="739.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (15 samples, 0.36%)</title><rect x="163.7" y="723.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.7" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (15 samples, 0.36%)</title><rect x="163.7" y="707.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="166.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (36 samples, 0.85%)</title><rect x="167.9" y="787.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="167.9" y="771.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="167.9" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$228/1337456006.get$Lambda (5 samples, 0.12%)</title><rect x="167.9" y="739.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.9" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$228 (5 samples, 0.12%)</title><rect x="167.9" y="723.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="170.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.45%)</title><rect x="169.3" y="771.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (9 samples, 0.21%)</title><rect x="169.3" y="755.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (9 samples, 0.21%)</title><rect x="169.3" y="739.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.24%)</title><rect x="171.8" y="755.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.24%)</title><rect x="171.8" y="739.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (12 samples, 0.28%)</title><rect x="174.6" y="771.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.6" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (12 samples, 0.28%)</title><rect x="174.6" y="755.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="177.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (7 samples, 0.17%)</title><rect x="178.0" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.17%)</title><rect x="178.0" y="771.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.17%)</title><rect x="178.0" y="755.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.17%)</title><rect x="178.0" y="739.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.17%)</title><rect x="178.0" y="723.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.17%)</title><rect x="178.0" y="707.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.17%)</title><rect x="178.0" y="691.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.17%)</title><rect x="178.0" y="675.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.17%)</title><rect x="178.0" y="659.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.0" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.17%)</title><rect x="178.0" y="643.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="181.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.02%)</title><rect x="179.9" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="179.9" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="179.9" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.02%)</title><rect x="179.9" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.02%)</title><rect x="179.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="179.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="179.9" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="179.9" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="179.9" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.02%)</title><rect x="179.9" y="643.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="182.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.19%)</title><rect x="180.2" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.19%)</title><rect x="180.2" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.19%)</title><rect x="180.2" y="755.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.19%)</title><rect x="180.2" y="739.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.2" y="750.0"></text>
</g>
<g>
<title>[HttpClient-2-SelectorManager tid=13321] (3 samples, 0.07%)</title><rect x="182.5" y="819.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="185.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3 samples, 0.07%)</title><rect x="182.5" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.07%)</title><rect x="182.5" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.5" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.07%)</title><rect x="182.5" y="771.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="185.5" y="782.0"></text>
</g>
<g>
<title>[HttpClient-3-SelectorManager tid=13329] (3 samples, 0.07%)</title><rect x="183.3" y="819.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="186.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3 samples, 0.07%)</title><rect x="183.3" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.07%)</title><rect x="183.3" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.3" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.07%)</title><rect x="183.3" y="771.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="186.3" y="782.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=13318] (3 samples, 0.07%)</title><rect x="184.1" y="819.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="187.1" y="830.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (3 samples, 0.07%)</title><rect x="184.1" y="803.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (3 samples, 0.07%)</title><rect x="184.1" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.createSession (3 samples, 0.07%)</title><rect x="184.1" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.1" y="782.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.StorageSession (1 samples, 0.02%)</title><rect x="184.1" y="755.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.&lt;init&gt; (2 samples, 0.05%)</title><rect x="184.4" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (2 samples, 0.05%)</title><rect x="184.4" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.4" y="750.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="184.4" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="187.4" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13314] (301 samples, 7.14%)</title><rect x="185.0" y="819.0" width="84.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="188.0" y="830.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (301 samples, 7.14%)</title><rect x="185.0" y="803.0" width="84.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.0" y="814.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.09%)</title><rect x="185.0" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.0" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.09%)</title><rect x="185.0" y="771.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="188.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (297 samples, 7.05%)</title><rect x="186.1" y="787.0" width="83.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.1" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (297 samples, 7.05%)</title><rect x="186.1" y="771.0" width="83.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.1" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (297 samples, 7.05%)</title><rect x="186.1" y="755.0" width="83.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.1" y="766.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (286 samples, 6.79%)</title><rect x="186.1" y="739.0" width="80.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.1" y="750.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (286 samples, 6.79%)</title><rect x="186.1" y="723.0" width="80.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.1" y="734.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (283 samples, 6.71%)</title><rect x="186.1" y="707.0" width="79.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.1" y="718.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="186.1" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="186.1" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="186.1" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="186.1" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.1" y="654.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="186.1" y="627.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="189.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (281 samples, 6.67%)</title><rect x="186.7" y="691.0" width="78.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.7" y="702.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="186.7" y="675.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="186.7" y="659.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="186.7" y="643.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="186.7" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.7" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="186.7" y="611.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="189.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="186.9" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="186.9" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.9" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.02%)</title><rect x="186.9" y="643.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="189.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (266 samples, 6.31%)</title><rect x="187.2" y="675.0" width="74.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.2" y="686.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.05%)</title><rect x="187.2" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.05%)</title><rect x="187.2" y="643.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="190.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.HttpRequestCreator (1 samples, 0.02%)</title><rect x="187.8" y="659.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="190.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (27 samples, 0.64%)</title><rect x="188.0" y="659.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.0" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.09%)</title><rect x="188.0" y="643.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="191.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (1 samples, 0.02%)</title><rect x="189.2" y="643.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="192.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/402619484.linkToTargetMethod (1 samples, 0.02%)</title><rect x="189.4" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1576183964.invokeStatic (1 samples, 0.02%)</title><rect x="189.4" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.get$Lambda (1 samples, 0.02%)</title><rect x="189.4" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$136 (1 samples, 0.02%)</title><rect x="189.4" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="192.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="189.7" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="189.7" y="627.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="192.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (19 samples, 0.45%)</title><rect x="190.3" y="643.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (19 samples, 0.45%)</title><rect x="190.3" y="627.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (19 samples, 0.45%)</title><rect x="190.3" y="611.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="190.3" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="190.3" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$143/556867206.get$Lambda (2 samples, 0.05%)</title><rect x="190.3" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$143 (2 samples, 0.05%)</title><rect x="190.3" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="193.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/700141030.linkToTargetMethod (6 samples, 0.14%)</title><rect x="190.8" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/781593468.invokeStatic (6 samples, 0.14%)</title><rect x="190.8" y="579.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.get$Lambda (6 samples, 0.14%)</title><rect x="190.8" y="563.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$139 (6 samples, 0.14%)</title><rect x="190.8" y="547.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="193.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4 samples, 0.09%)</title><rect x="192.5" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.09%)</title><rect x="192.5" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1 samples, 0.02%)</title><rect x="192.5" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="195.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="192.8" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.05%)</title><rect x="192.8" y="547.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="193.4" y="563.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="193.4" y="547.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="193.4" y="531.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="196.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.17%)</title><rect x="193.6" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.17%)</title><rect x="193.6" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.07%)</title><rect x="193.6" y="563.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="196.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="194.5" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="194.5" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="197.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="194.8" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="194.8" y="547.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.07%)</title><rect x="194.8" y="531.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="197.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (214 samples, 5.08%)</title><rect x="195.6" y="659.0" width="59.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.6" y="670.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="195.6" y="643.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="198.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.05%)</title><rect x="195.9" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.05%)</title><rect x="195.9" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.9" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.05%)</title><rect x="195.9" y="611.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="198.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.09%)</title><rect x="196.4" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.09%)</title><rect x="196.4" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.02%)</title><rect x="196.4" y="611.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="199.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.07%)</title><rect x="196.7" y="611.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="199.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.12%)</title><rect x="197.6" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.12%)</title><rect x="197.6" y="627.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4 samples, 0.09%)</title><rect x="197.6" y="611.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="200.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="198.7" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="198.7" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="198.7" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="201.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (125 samples, 2.97%)</title><rect x="199.0" y="643.0" width="35.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.0" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (125 samples, 2.97%)</title><rect x="199.0" y="627.0" width="35.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (125 samples, 2.97%)</title><rect x="199.0" y="611.0" width="35.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (125 samples, 2.97%)</title><rect x="199.0" y="595.0" width="35.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.0" y="606.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.19%)</title><rect x="199.0" y="579.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.19%)</title><rect x="199.0" y="563.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.07%)</title><rect x="199.0" y="547.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="202.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.12%)</title><rect x="199.8" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.12%)</title><rect x="199.8" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.12%)</title><rect x="199.8" y="515.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="202.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="201.2" y="579.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="201.2" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="201.2" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="201.2" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="201.2" y="515.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="204.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (7 samples, 0.17%)</title><rect x="201.8" y="579.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="204.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (3 samples, 0.07%)</title><rect x="203.7" y="579.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="206.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (55 samples, 1.30%)</title><rect x="204.6" y="579.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.14%)</title><rect x="204.6" y="563.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.6" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.12%)</title><rect x="204.6" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.05%)</title><rect x="204.6" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.6" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.05%)</title><rect x="204.6" y="515.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="207.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.07%)</title><rect x="205.1" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.1" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.07%)</title><rect x="205.1" y="515.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="208.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.02%)</title><rect x="206.0" y="547.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="206.0" y="531.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="206.0" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (1 samples, 0.02%)</title><rect x="206.0" y="499.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.0" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.02%)</title><rect x="206.0" y="483.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.55%)</title><rect x="206.2" y="563.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.55%)</title><rect x="206.2" y="547.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.02%)</title><rect x="206.2" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="209.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="206.5" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="209.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.05%)</title><rect x="206.8" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="209.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="207.4" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="207.4" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.get$Lambda (2 samples, 0.05%)</title><rect x="207.4" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.4" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (2 samples, 0.05%)</title><rect x="207.4" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="210.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (14 samples, 0.33%)</title><rect x="207.9" y="531.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.33%)</title><rect x="207.9" y="515.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (14 samples, 0.33%)</title><rect x="207.9" y="499.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.33%)</title><rect x="207.9" y="483.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.14%)</title><rect x="207.9" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (5 samples, 0.12%)</title><rect x="207.9" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.12%)</title><rect x="207.9" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="207.9" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="207.9" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="207.9" y="387.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="207.9" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.12%)</title><rect x="207.9" y="355.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="207.9" y="339.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="210.9" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="209.3" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.3" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.02%)</title><rect x="209.3" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="212.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="209.6" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="209.6" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (1 samples, 0.02%)</title><rect x="209.6" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.6" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (1 samples, 0.02%)</title><rect x="209.6" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="212.6" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.07%)</title><rect x="209.9" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.9" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.07%)</title><rect x="209.9" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.05%)</title><rect x="209.9" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="209.9" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="209.9" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="212.9" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="210.4" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.4" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="210.4" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="213.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="210.7" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.09%)</title><rect x="210.7" y="451.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="213.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="211.8" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.8" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="211.8" y="515.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="214.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="212.1" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="212.1" y="515.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="215.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (2 samples, 0.05%)</title><rect x="212.7" y="563.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="215.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (16 samples, 0.38%)</title><rect x="213.2" y="563.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.2" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (16 samples, 0.38%)</title><rect x="213.2" y="547.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.31%)</title><rect x="213.2" y="531.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.31%)</title><rect x="213.2" y="515.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.2" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.31%)</title><rect x="213.2" y="499.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.05%)</title><rect x="213.2" y="483.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="216.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.12%)</title><rect x="213.8" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.8" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.12%)</title><rect x="213.8" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.8" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="213.8" y="451.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="216.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.14%)</title><rect x="215.2" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="215.2" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="215.2" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.2" y="462.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="215.2" y="435.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="218.2" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (3 samples, 0.07%)</title><rect x="216.9" y="531.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="219.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="217.7" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.07%)</title><rect x="217.7" y="547.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="220.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.12%)</title><rect x="218.6" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="218.6" y="547.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="221.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="218.8" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="218.8" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="221.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="219.1" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="219.1" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="222.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (29 samples, 0.69%)</title><rect x="220.0" y="579.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (6 samples, 0.14%)</title><rect x="220.0" y="563.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="223.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (23 samples, 0.55%)</title><rect x="221.6" y="563.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (23 samples, 0.55%)</title><rect x="221.6" y="547.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="221.6" y="531.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="224.6" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (4 samples, 0.09%)</title><rect x="222.2" y="531.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="225.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (11 samples, 0.26%)</title><rect x="223.3" y="531.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (11 samples, 0.26%)</title><rect x="223.3" y="515.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.3" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (11 samples, 0.26%)</title><rect x="223.3" y="499.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (11 samples, 0.26%)</title><rect x="223.3" y="483.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.3" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (11 samples, 0.26%)</title><rect x="223.3" y="467.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="226.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.05%)</title><rect x="226.4" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.05%)</title><rect x="226.4" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.05%)</title><rect x="226.4" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2 samples, 0.05%)</title><rect x="226.4" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="229.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.09%)</title><rect x="227.0" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.0" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.09%)</title><rect x="227.0" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.0" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.09%)</title><rect x="227.0" y="499.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="230.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (21 samples, 0.50%)</title><rect x="228.1" y="579.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.12%)</title><rect x="228.1" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.07%)</title><rect x="228.1" y="547.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="231.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="228.9" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="228.9" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.05%)</title><rect x="228.9" y="515.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="231.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.09%)</title><rect x="229.5" y="563.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="232.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (12 samples, 0.28%)</title><rect x="230.6" y="563.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="230.6" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="230.6" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.get$Lambda (1 samples, 0.02%)</title><rect x="230.6" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$123 (1 samples, 0.02%)</title><rect x="230.6" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="233.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.get$Lambda (2 samples, 0.05%)</title><rect x="230.9" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$124 (2 samples, 0.05%)</title><rect x="230.9" y="499.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="233.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.21%)</title><rect x="231.4" y="547.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.21%)</title><rect x="231.4" y="531.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.17%)</title><rect x="231.4" y="515.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="234.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="233.4" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="233.4" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="233.4" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="236.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (77 samples, 1.83%)</title><rect x="234.0" y="643.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.0" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.delete (77 samples, 1.83%)</title><rect x="234.0" y="627.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.0" y="638.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (28 samples, 0.66%)</title><rect x="234.0" y="611.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (2 samples, 0.05%)</title><rect x="234.0" y="595.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="237.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (26 samples, 0.62%)</title><rect x="234.5" y="595.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (25 samples, 0.59%)</title><rect x="234.5" y="579.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (25 samples, 0.59%)</title><rect x="234.5" y="563.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.14%)</title><rect x="234.5" y="547.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="237.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.05%)</title><rect x="236.2" y="547.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="239.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="236.8" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="236.8" y="531.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.get$Lambda (1 samples, 0.02%)</title><rect x="236.8" y="515.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (1 samples, 0.02%)</title><rect x="236.8" y="499.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="239.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="237.0" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="237.0" y="531.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="240.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.33%)</title><rect x="237.3" y="547.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (14 samples, 0.33%)</title><rect x="237.3" y="531.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.33%)</title><rect x="237.3" y="515.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="237.3" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="237.3" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.05%)</title><rect x="237.3" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.05%)</title><rect x="237.3" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="240.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.12%)</title><rect x="237.9" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (5 samples, 0.12%)</title><rect x="237.9" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.12%)</title><rect x="237.9" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="237.9" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="237.9" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="237.9" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="237.9" y="403.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.12%)</title><rect x="237.9" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="237.9" y="371.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="240.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.07%)</title><rect x="239.3" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.07%)</title><rect x="239.3" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="239.3" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="239.3" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="239.3" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="242.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.05%)</title><rect x="239.6" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.05%)</title><rect x="239.6" y="451.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="242.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="240.1" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.09%)</title><rect x="240.1" y="483.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="243.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="241.2" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="241.2" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="244.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.02%)</title><rect x="241.5" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.5" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="241.5" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.5" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (1 samples, 0.02%)</title><rect x="241.5" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="244.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (4 samples, 0.09%)</title><rect x="241.8" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (4 samples, 0.09%)</title><rect x="241.8" y="595.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (4 samples, 0.09%)</title><rect x="241.8" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="241.8" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.09%)</title><rect x="241.8" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.09%)</title><rect x="241.8" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.8" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="241.8" y="515.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="244.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (45 samples, 1.07%)</title><rect x="242.9" y="611.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.21%)</title><rect x="242.9" y="595.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (9 samples, 0.21%)</title><rect x="242.9" y="579.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (9 samples, 0.21%)</title><rect x="242.9" y="563.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.21%)</title><rect x="242.9" y="547.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="242.9" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="242.9" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.19%)</title><rect x="243.2" y="531.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.19%)</title><rect x="243.2" y="515.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.2" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="243.2" y="499.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="246.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (23 samples, 0.55%)</title><rect x="245.4" y="595.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.4" y="606.0"></text>
</g>
<g>
<title>java.net.URI (2 samples, 0.05%)</title><rect x="245.4" y="579.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="248.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (21 samples, 0.50%)</title><rect x="246.0" y="579.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.0" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (2 samples, 0.05%)</title><rect x="246.0" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="249.0" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (19 samples, 0.45%)</title><rect x="246.6" y="563.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="246.6" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="246.6" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="246.6" y="515.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="249.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="247.4" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.4" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="247.4" y="499.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="250.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (13 samples, 0.31%)</title><rect x="248.2" y="547.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="248.2" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="248.2" y="515.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="248.2" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="251.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="249.1" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.1" y="510.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="249.1" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="252.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (7 samples, 0.17%)</title><rect x="249.9" y="531.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="249.9" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="249.9" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="249.9" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.9" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="249.9" y="467.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="252.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (5 samples, 0.12%)</title><rect x="250.5" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.12%)</title><rect x="250.5" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="250.5" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="250.5" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="250.5" y="451.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="251.3" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.3" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="251.3" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="254.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (8 samples, 0.19%)</title><rect x="251.9" y="595.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (6 samples, 0.14%)</title><rect x="251.9" y="579.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="254.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="253.6" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="253.6" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="253.6" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="256.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4 samples, 0.09%)</title><rect x="254.1" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4 samples, 0.09%)</title><rect x="254.1" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (4 samples, 0.09%)</title><rect x="254.1" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (4 samples, 0.09%)</title><rect x="254.1" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.1" y="558.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (4 samples, 0.09%)</title><rect x="254.1" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="254.1" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="254.1" y="499.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="257.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.05%)</title><rect x="254.7" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.05%)</title><rect x="254.7" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.7" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="254.7" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="257.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="255.0" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="255.0" y="467.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="258.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.toString (1 samples, 0.02%)</title><rect x="255.2" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="255.2" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/75958954.invoke (1 samples, 0.02%)</title><rect x="255.2" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="255.2" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="255.2" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="255.2" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.2" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="255.2" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="258.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (7 samples, 0.17%)</title><rect x="255.5" y="659.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="255.5" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="255.5" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.get$Lambda (1 samples, 0.02%)</title><rect x="255.5" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$144 (1 samples, 0.02%)</title><rect x="255.5" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="258.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.05%)</title><rect x="255.8" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.05%)</title><rect x="255.8" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (2 samples, 0.05%)</title><rect x="255.8" y="611.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="258.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.09%)</title><rect x="256.4" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.09%)</title><rect x="256.4" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="256.4" y="611.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="259.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="256.9" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.05%)</title><rect x="256.9" y="595.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="259.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (7 samples, 0.17%)</title><rect x="257.5" y="659.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.5" y="670.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (3 samples, 0.07%)</title><rect x="257.5" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (3 samples, 0.07%)</title><rect x="257.5" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="257.5" y="611.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="260.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="258.0" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="258.0" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="258.0" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.0" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="258.0" y="563.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="261.0" y="574.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (4 samples, 0.09%)</title><rect x="258.3" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (4 samples, 0.09%)</title><rect x="258.3" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.3" y="638.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (4 samples, 0.09%)</title><rect x="258.3" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (2 samples, 0.05%)</title><rect x="258.3" y="595.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="261.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="258.9" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.9" y="606.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="258.9" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="261.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (8 samples, 0.19%)</title><rect x="259.4" y="659.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="259.4" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.02%)</title><rect x="259.4" y="627.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="262.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.17%)</title><rect x="259.7" y="643.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.17%)</title><rect x="259.7" y="627.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="259.7" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (2 samples, 0.05%)</title><rect x="259.7" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="259.7" y="579.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.12%)</title><rect x="260.3" y="611.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.09%)</title><rect x="260.3" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4 samples, 0.09%)</title><rect x="260.3" y="579.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="263.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="261.4" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.4" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.02%)</title><rect x="261.4" y="579.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="264.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (13 samples, 0.31%)</title><rect x="261.7" y="675.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="261.7" y="659.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="261.7" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="261.7" y="627.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="264.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="262.2" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.2" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="262.2" y="611.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="265.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.Replicas (1 samples, 0.02%)</title><rect x="263.1" y="659.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="266.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.isCorrect (7 samples, 0.17%)</title><rect x="263.4" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.split (7 samples, 0.17%)</title><rect x="263.4" y="643.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.split (7 samples, 0.17%)</title><rect x="263.4" y="627.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="263.4" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="263.4" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="263.4" y="579.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="266.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="263.6" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.6" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="263.6" y="563.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="266.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="264.5" y="611.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="264.5" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="264.5" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="264.5" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="264.5" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="264.5" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="267.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="265.3" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="265.3" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="265.3" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="265.3" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.3" y="670.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="265.3" y="643.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="268.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.14%)</title><rect x="266.2" y="739.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="266.2" y="723.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.2" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.02%)</title><rect x="266.2" y="707.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="269.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="266.4" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="266.4" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.4" y="718.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.09%)</title><rect x="266.4" y="691.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="269.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="267.6" y="691.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="267.6" y="675.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="267.6" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.6" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="267.6" y="643.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="270.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="267.8" y="739.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="267.8" y="723.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.8" y="734.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.07%)</title><rect x="267.8" y="707.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="270.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="268.7" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="268.7" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="268.7" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.7" y="686.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="268.7" y="659.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="271.7" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13322] (186 samples, 4.41%)</title><rect x="269.2" y="819.0" width="52.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="272.2" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (186 samples, 4.41%)</title><rect x="269.2" y="803.0" width="52.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.07%)</title><rect x="269.2" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.2" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3 samples, 0.07%)</title><rect x="269.2" y="771.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="272.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (183 samples, 4.34%)</title><rect x="270.1" y="787.0" width="51.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.1" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (183 samples, 4.34%)</title><rect x="270.1" y="771.0" width="51.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 4.34%)</title><rect x="270.1" y="755.0" width="51.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.78%)</title><rect x="270.1" y="739.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 0.78%)</title><rect x="270.1" y="723.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.1" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (28 samples, 0.66%)</title><rect x="270.1" y="707.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.36%)</title><rect x="270.1" y="691.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.36%)</title><rect x="270.1" y="675.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.36%)</title><rect x="270.1" y="659.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="270.1" y="643.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="273.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="272.9" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.9" y="654.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="272.9" y="627.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="275.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (13 samples, 0.31%)</title><rect x="274.3" y="691.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="274.3" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="274.3" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.05%)</title><rect x="274.3" y="643.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="277.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (9 samples, 0.21%)</title><rect x="274.8" y="675.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (9 samples, 0.21%)</title><rect x="274.8" y="659.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="274.8" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="274.8" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (5 samples, 0.12%)</title><rect x="274.8" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (5 samples, 0.12%)</title><rect x="274.8" y="595.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="277.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.09%)</title><rect x="276.2" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.09%)</title><rect x="276.2" y="627.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (4 samples, 0.09%)</title><rect x="276.2" y="611.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="279.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.05%)</title><rect x="277.4" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="277.4" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="277.4" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="277.4" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="277.4" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.4" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="277.4" y="595.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="280.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.12%)</title><rect x="277.9" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="277.9" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="277.9" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="277.9" y="659.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="280.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="278.8" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.8" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="278.8" y="643.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="281.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 0.78%)</title><rect x="279.3" y="739.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.3" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.14%)</title><rect x="279.3" y="723.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="282.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.14%)</title><rect x="281.0" y="723.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.14%)</title><rect x="281.0" y="707.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="284.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.50%)</title><rect x="282.7" y="723.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.50%)</title><rect x="282.7" y="707.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.7" y="718.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.38%)</title><rect x="282.7" y="691.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="285.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="287.2" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="287.2" y="675.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.12%)</title><rect x="287.2" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="670.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="287.2" y="643.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="290.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="288.6" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="288.6" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="288.6" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.6" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="288.6" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.6" y="702.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="288.6" y="675.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="291.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 2.73%)</title><rect x="289.1" y="739.0" width="32.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.1" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 2.73%)</title><rect x="289.1" y="723.0" width="32.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.1" y="734.0">on..</text>
</g>
<g>
<title>char[] (84 samples, 1.99%)</title><rect x="289.1" y="707.0" width="23.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="292.1" y="718.0">c..</text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="312.6" y="707.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="315.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.55%)</title><rect x="314.9" y="707.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.55%)</title><rect x="314.9" y="691.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.55%)</title><rect x="314.9" y="675.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.9" y="686.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.55%)</title><rect x="314.9" y="659.0" width="6.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="317.9" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13330] (190 samples, 4.51%)</title><rect x="321.3" y="819.0" width="53.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="324.3" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (190 samples, 4.51%)</title><rect x="321.3" y="803.0" width="53.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.3" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.17%)</title><rect x="321.3" y="787.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.3" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.17%)</title><rect x="321.3" y="771.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="324.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (183 samples, 4.34%)</title><rect x="323.3" y="787.0" width="51.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.3" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (183 samples, 4.34%)</title><rect x="323.3" y="771.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.3" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 4.34%)</title><rect x="323.3" y="755.0" width="51.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.3" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 0.74%)</title><rect x="323.3" y="739.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 0.74%)</title><rect x="323.3" y="723.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.3" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (23 samples, 0.55%)</title><rect x="323.3" y="707.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.19%)</title><rect x="323.3" y="691.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.19%)</title><rect x="323.3" y="675.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="323.3" y="659.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="323.3" y="643.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="326.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="323.5" y="643.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.5" y="654.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="323.5" y="627.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="326.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (15 samples, 0.36%)</title><rect x="325.5" y="691.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.09%)</title><rect x="325.5" y="675.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.09%)</title><rect x="325.5" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.09%)</title><rect x="325.5" y="643.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="325.5" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.5" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="325.5" y="611.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="328.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="326.6" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="326.6" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.02%)</title><rect x="326.6" y="643.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="329.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (9 samples, 0.21%)</title><rect x="326.9" y="675.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="326.9" y="659.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="326.9" y="643.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (6 samples, 0.14%)</title><rect x="326.9" y="627.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (6 samples, 0.14%)</title><rect x="326.9" y="611.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="329.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (3 samples, 0.07%)</title><rect x="328.6" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="328.6" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="328.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (1 samples, 0.02%)</title><rect x="328.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (1 samples, 0.02%)</title><rect x="328.6" y="595.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="331.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="328.9" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="328.9" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.05%)</title><rect x="328.9" y="611.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="331.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (1 samples, 0.02%)</title><rect x="329.4" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="329.4" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="329.4" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="329.4" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="329.4" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.4" y="622.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="329.4" y="595.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="332.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.19%)</title><rect x="329.7" y="707.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.19%)</title><rect x="329.7" y="691.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="329.7" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="329.7" y="659.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="332.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="331.1" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.1" y="670.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="331.1" y="643.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="334.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20 samples, 0.47%)</title><rect x="331.9" y="739.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.9" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.07%)</title><rect x="331.9" y="723.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="334.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.14%)</title><rect x="332.8" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.14%)</title><rect x="332.8" y="707.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="335.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.26%)</title><rect x="334.5" y="723.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.26%)</title><rect x="334.5" y="707.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.5" y="718.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.14%)</title><rect x="334.5" y="691.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="337.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="336.1" y="691.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="339.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="336.4" y="691.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="336.4" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.09%)</title><rect x="336.4" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.4" y="670.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="336.4" y="643.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="339.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.05%)</title><rect x="337.5" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.5" y="750.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="337.5" y="723.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="340.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.21%)</title><rect x="338.1" y="739.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="338.1" y="723.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="338.1" y="707.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="338.1" y="691.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="341.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="339.2" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.2" y="702.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="339.2" y="675.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="342.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 2.87%)</title><rect x="340.6" y="739.0" width="33.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.6" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 2.87%)</title><rect x="340.6" y="723.0" width="33.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.6" y="734.0">on..</text>
</g>
<g>
<title>char[] (75 samples, 1.78%)</title><rect x="340.6" y="707.0" width="21.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="343.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.40%)</title><rect x="361.6" y="707.0" width="4.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="364.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.69%)</title><rect x="366.4" y="707.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.69%)</title><rect x="366.4" y="691.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.69%)</title><rect x="366.4" y="675.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.4" y="686.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.69%)</title><rect x="366.4" y="659.0" width="8.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="369.4" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13323] (187 samples, 4.44%)</title><rect x="374.5" y="819.0" width="52.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="377.5" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (187 samples, 4.44%)</title><rect x="374.5" y="803.0" width="52.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.5" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.07%)</title><rect x="374.5" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.5" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3 samples, 0.07%)</title><rect x="374.5" y="771.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="377.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (184 samples, 4.37%)</title><rect x="375.3" y="787.0" width="51.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.3" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (184 samples, 4.37%)</title><rect x="375.3" y="771.0" width="51.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.3" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (184 samples, 4.37%)</title><rect x="375.3" y="755.0" width="51.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.3" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 0.90%)</title><rect x="375.3" y="739.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 0.90%)</title><rect x="375.3" y="723.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.3" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (29 samples, 0.69%)</title><rect x="375.3" y="707.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.24%)</title><rect x="375.3" y="691.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.24%)</title><rect x="375.3" y="675.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.24%)</title><rect x="375.3" y="659.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="375.3" y="643.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="378.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="376.2" y="643.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.2" y="654.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="376.2" y="627.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (19 samples, 0.45%)</title><rect x="378.1" y="691.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.05%)</title><rect x="378.1" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="378.1" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.05%)</title><rect x="378.1" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="378.1" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.1" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="378.1" y="611.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="381.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="378.7" y="675.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="378.7" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.09%)</title><rect x="378.7" y="643.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="381.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (8 samples, 0.19%)</title><rect x="379.8" y="675.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="379.8" y="659.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="379.8" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (5 samples, 0.12%)</title><rect x="379.8" y="627.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (5 samples, 0.12%)</title><rect x="379.8" y="611.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="382.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (3 samples, 0.07%)</title><rect x="381.2" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="381.2" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.07%)</title><rect x="381.2" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.07%)</title><rect x="381.2" y="611.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="384.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (5 samples, 0.12%)</title><rect x="382.1" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="382.1" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="382.1" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="382.1" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="382.1" y="611.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="385.1" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="382.3" y="611.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.3" y="622.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="382.3" y="595.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="385.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.21%)</title><rect x="383.5" y="707.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="383.5" y="691.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="383.5" y="675.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="383.5" y="659.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="386.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="384.0" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.0" y="670.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="384.0" y="643.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="387.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.64%)</title><rect x="386.0" y="739.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.0" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.14%)</title><rect x="386.0" y="723.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="389.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.09%)</title><rect x="387.7" y="723.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.09%)</title><rect x="387.7" y="707.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="390.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="388.8" y="723.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="388.8" y="707.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.8" y="718.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.28%)</title><rect x="388.8" y="691.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="391.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="392.1" y="691.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="395.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="392.4" y="691.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="392.4" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.09%)</title><rect x="392.4" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.4" y="670.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="392.4" y="643.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="395.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.31%)</title><rect x="393.5" y="739.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.31%)</title><rect x="393.5" y="723.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.31%)</title><rect x="393.5" y="707.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="393.5" y="691.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="396.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.28%)</title><rect x="393.8" y="691.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.8" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="393.8" y="675.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="396.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.51%)</title><rect x="397.2" y="739.0" width="29.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.2" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.51%)</title><rect x="397.2" y="723.0" width="29.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.2" y="734.0">on..</text>
</g>
<g>
<title>char[] (49 samples, 1.16%)</title><rect x="397.2" y="707.0" width="13.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="400.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.31%)</title><rect x="410.9" y="707.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="413.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 1.04%)</title><rect x="414.5" y="707.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 1.04%)</title><rect x="414.5" y="691.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 1.04%)</title><rect x="414.5" y="675.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.5" y="686.0"></text>
</g>
<g>
<title>byte[] (44 samples, 1.04%)</title><rect x="414.5" y="659.0" width="12.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="417.5" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13331] (191 samples, 4.53%)</title><rect x="426.8" y="819.0" width="53.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="429.8" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (191 samples, 4.53%)</title><rect x="426.8" y="803.0" width="53.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.8" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.07%)</title><rect x="426.8" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.8" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3 samples, 0.07%)</title><rect x="426.8" y="771.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="429.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (188 samples, 4.46%)</title><rect x="427.7" y="787.0" width="52.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.7" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (188 samples, 4.46%)</title><rect x="427.7" y="771.0" width="52.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.7" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (188 samples, 4.46%)</title><rect x="427.7" y="755.0" width="52.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.7" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 0.88%)</title><rect x="427.7" y="739.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37 samples, 0.88%)</title><rect x="427.7" y="723.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.7" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.78%)</title><rect x="427.7" y="707.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.17%)</title><rect x="427.7" y="691.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="427.7" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="427.7" y="659.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="427.7" y="643.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="430.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (26 samples, 0.62%)</title><rect x="429.6" y="691.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.09%)</title><rect x="429.6" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.09%)</title><rect x="429.6" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.09%)</title><rect x="429.6" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="429.6" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="429.6" y="611.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="432.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="430.8" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="430.8" y="659.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.12%)</title><rect x="430.8" y="643.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="433.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (14 samples, 0.33%)</title><rect x="432.2" y="675.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="432.2" y="659.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="432.2" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (1 samples, 0.02%)</title><rect x="432.2" y="627.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (1 samples, 0.02%)</title><rect x="432.2" y="611.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="435.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (13 samples, 0.31%)</title><rect x="432.4" y="659.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.24%)</title><rect x="432.4" y="643.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.24%)</title><rect x="432.4" y="627.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (10 samples, 0.24%)</title><rect x="432.4" y="611.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (10 samples, 0.24%)</title><rect x="432.4" y="595.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="435.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="435.2" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.07%)</title><rect x="435.2" y="627.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.07%)</title><rect x="435.2" y="611.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="438.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.07%)</title><rect x="436.1" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="436.1" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="436.1" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="436.1" y="627.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="436.1" y="611.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="439.1" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="436.6" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.6" y="622.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="436.6" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.09%)</title><rect x="436.9" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="436.9" y="691.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="436.9" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="436.9" y="659.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="439.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="437.2" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.2" y="670.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="437.2" y="643.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="440.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.88%)</title><rect x="438.0" y="739.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.0" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.07%)</title><rect x="438.0" y="723.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="441.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (17 samples, 0.40%)</title><rect x="438.9" y="723.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.40%)</title><rect x="438.9" y="707.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="441.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="443.6" y="723.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="443.6" y="707.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.6" y="718.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.17%)</title><rect x="443.6" y="691.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="446.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.24%)</title><rect x="445.6" y="691.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.24%)</title><rect x="445.6" y="675.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.24%)</title><rect x="445.6" y="659.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.6" y="670.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="445.6" y="643.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="448.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.36%)</title><rect x="448.4" y="739.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.36%)</title><rect x="448.4" y="723.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.36%)</title><rect x="448.4" y="707.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="448.4" y="691.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="451.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.33%)</title><rect x="448.7" y="691.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.7" y="702.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="448.7" y="675.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.35%)</title><rect x="452.6" y="739.0" width="27.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.35%)</title><rect x="452.6" y="723.0" width="27.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.6" y="734.0">o..</text>
</g>
<g>
<title>char[] (52 samples, 1.23%)</title><rect x="452.6" y="707.0" width="14.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="455.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.55%)</title><rect x="467.2" y="707.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.57%)</title><rect x="473.6" y="707.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.57%)</title><rect x="473.6" y="691.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.57%)</title><rect x="473.6" y="675.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.6" y="686.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.57%)</title><rect x="473.6" y="659.0" width="6.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="476.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13316] (174 samples, 4.13%)</title><rect x="480.3" y="819.0" width="48.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="483.3" y="830.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (174 samples, 4.13%)</title><rect x="480.3" y="803.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.09%)</title><rect x="480.3" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.3" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.09%)</title><rect x="480.3" y="771.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="483.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (170 samples, 4.03%)</title><rect x="481.4" y="787.0" width="47.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.4" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (170 samples, 4.03%)</title><rect x="481.4" y="771.0" width="47.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.4" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (170 samples, 4.03%)</title><rect x="481.4" y="755.0" width="47.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.4" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (160 samples, 3.80%)</title><rect x="481.4" y="739.0" width="44.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (160 samples, 3.80%)</title><rect x="481.4" y="723.0" width="44.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.4" y="734.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (159 samples, 3.77%)</title><rect x="481.4" y="707.0" width="44.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="718.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="481.4" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="481.4" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="481.4" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="481.4" y="643.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="484.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (158 samples, 3.75%)</title><rect x="481.7" y="691.0" width="44.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.7" y="702.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="481.7" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="481.7" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.02%)</title><rect x="481.7" y="643.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="484.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (152 samples, 3.61%)</title><rect x="482.0" y="675.0" width="42.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.0" y="686.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.HttpRequestCreator (1 samples, 0.02%)</title><rect x="482.0" y="659.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="485.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (14 samples, 0.33%)</title><rect x="482.3" y="659.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/402619484.linkToTargetMethod (1 samples, 0.02%)</title><rect x="482.3" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1576183964.invokeStatic (1 samples, 0.02%)</title><rect x="482.3" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.get$Lambda (1 samples, 0.02%)</title><rect x="482.3" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$136 (1 samples, 0.02%)</title><rect x="482.3" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="485.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.28%)</title><rect x="482.6" y="643.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (12 samples, 0.28%)</title><rect x="482.6" y="627.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (12 samples, 0.28%)</title><rect x="482.6" y="611.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/700141030.linkToTargetMethod (1 samples, 0.02%)</title><rect x="482.6" y="595.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/781593468.invokeStatic (1 samples, 0.02%)</title><rect x="482.6" y="579.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.get$Lambda (1 samples, 0.02%)</title><rect x="482.6" y="563.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$139 (1 samples, 0.02%)</title><rect x="482.6" y="547.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="485.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (6 samples, 0.14%)</title><rect x="482.8" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (6 samples, 0.14%)</title><rect x="482.8" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (4 samples, 0.09%)</title><rect x="482.8" y="563.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="485.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="484.0" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="484.0" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="484.0" y="531.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.12%)</title><rect x="484.5" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.12%)</title><rect x="484.5" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.09%)</title><rect x="484.5" y="563.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="485.6" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="485.6" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="485.6" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="488.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (1 samples, 0.02%)</title><rect x="485.9" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1 samples, 0.02%)</title><rect x="485.9" y="627.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="488.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (123 samples, 2.92%)</title><rect x="486.2" y="659.0" width="34.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.2" y="670.0">ru..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="486.2" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="486.2" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.2" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.02%)</title><rect x="486.2" y="611.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="489.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.02%)</title><rect x="486.5" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.02%)</title><rect x="486.5" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="486.5" y="611.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="489.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="486.8" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="486.8" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.05%)</title><rect x="486.8" y="611.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="489.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (69 samples, 1.64%)</title><rect x="487.3" y="643.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 1.64%)</title><rect x="487.3" y="627.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 1.64%)</title><rect x="487.3" y="611.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 1.64%)</title><rect x="487.3" y="595.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="487.3" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="487.3" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.07%)</title><rect x="487.3" y="547.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="490.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="488.2" y="579.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="488.2" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="488.2" y="547.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="488.2" y="531.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="488.2" y="515.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="491.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.05%)</title><rect x="488.4" y="579.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="491.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (5 samples, 0.12%)</title><rect x="489.0" y="579.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="492.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (33 samples, 0.78%)</title><rect x="490.4" y="579.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.05%)</title><rect x="490.4" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="490.4" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="490.4" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="490.4" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (2 samples, 0.05%)</title><rect x="490.4" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.05%)</title><rect x="490.4" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="493.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.36%)</title><rect x="491.0" y="563.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.36%)</title><rect x="491.0" y="547.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.0" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.02%)</title><rect x="491.0" y="531.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="494.0" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.14%)</title><rect x="491.2" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.14%)</title><rect x="491.2" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (6 samples, 0.14%)</title><rect x="491.2" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.14%)</title><rect x="491.2" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.05%)</title><rect x="491.2" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.05%)</title><rect x="491.2" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.2" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.05%)</title><rect x="491.2" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="494.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="491.8" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="491.8" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.05%)</title><rect x="491.8" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.8" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.05%)</title><rect x="491.8" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="494.8" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.02%)</title><rect x="492.4" y="467.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.02%)</title><rect x="492.4" y="451.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="492.4" y="435.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="492.4" y="419.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="492.4" y="403.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="495.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="492.6" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="492.6" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="495.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.09%)</title><rect x="492.9" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.9" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.09%)</title><rect x="492.9" y="515.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="495.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.09%)</title><rect x="494.0" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.09%)</title><rect x="494.0" y="515.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="497.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (8 samples, 0.19%)</title><rect x="495.2" y="563.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.2" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (8 samples, 0.19%)</title><rect x="495.2" y="547.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.17%)</title><rect x="495.2" y="531.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7 samples, 0.17%)</title><rect x="495.2" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.2" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7 samples, 0.17%)</title><rect x="495.2" y="499.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.07%)</title><rect x="495.2" y="483.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="498.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="496.0" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.0" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="496.0" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.0" y="478.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="496.0" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="499.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.07%)</title><rect x="496.3" y="483.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="496.3" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="496.3" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.3" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="496.3" y="435.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="499.3" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1 samples, 0.02%)</title><rect x="497.1" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="500.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.19%)</title><rect x="497.4" y="563.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="497.4" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="500.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.09%)</title><rect x="497.7" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.09%)</title><rect x="497.7" y="531.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="500.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="498.8" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="498.8" y="531.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="501.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (18 samples, 0.43%)</title><rect x="499.6" y="579.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.02%)</title><rect x="499.6" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (6 samples, 0.14%)</title><rect x="499.9" y="563.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="502.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (11 samples, 0.26%)</title><rect x="501.6" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (11 samples, 0.26%)</title><rect x="501.6" y="547.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.02%)</title><rect x="501.6" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="504.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="501.9" y="531.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="504.9" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.02%)</title><rect x="502.2" y="531.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="505.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.07%)</title><rect x="502.4" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (3 samples, 0.07%)</title><rect x="502.4" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (3 samples, 0.07%)</title><rect x="502.4" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (3 samples, 0.07%)</title><rect x="502.4" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.4" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (3 samples, 0.07%)</title><rect x="502.4" y="467.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="505.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.09%)</title><rect x="503.3" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.09%)</title><rect x="503.3" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.05%)</title><rect x="503.3" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2 samples, 0.05%)</title><rect x="503.3" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="506.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (2 samples, 0.05%)</title><rect x="503.8" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (2 samples, 0.05%)</title><rect x="503.8" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="506.8" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="504.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.4" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="504.4" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.4" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="504.4" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="507.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (7 samples, 0.17%)</title><rect x="504.7" y="579.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.02%)</title><rect x="504.7" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="504.7" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="504.7" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.02%)</title><rect x="504.7" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="507.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.14%)</title><rect x="505.0" y="563.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.14%)</title><rect x="505.0" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.14%)</title><rect x="505.0" y="531.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.05%)</title><rect x="505.0" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="508.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.09%)</title><rect x="505.5" y="515.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.09%)</title><rect x="505.5" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.09%)</title><rect x="505.5" y="483.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="508.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (50 samples, 1.19%)</title><rect x="506.6" y="643.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.delete (50 samples, 1.19%)</title><rect x="506.6" y="627.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (16 samples, 0.38%)</title><rect x="506.6" y="611.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (16 samples, 0.38%)</title><rect x="506.6" y="595.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.38%)</title><rect x="506.6" y="579.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.38%)</title><rect x="506.6" y="563.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="506.6" y="547.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.02%)</title><rect x="506.9" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="509.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="507.2" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="507.2" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="510.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.21%)</title><rect x="507.5" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (9 samples, 0.21%)</title><rect x="507.5" y="531.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.21%)</title><rect x="507.5" y="515.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="507.5" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="507.5" y="483.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (4 samples, 0.09%)</title><rect x="507.5" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (4 samples, 0.09%)</title><rect x="507.5" y="451.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="510.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="508.6" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.05%)</title><rect x="508.6" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="508.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="508.6" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="508.6" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="508.6" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="508.6" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="508.6" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="508.6" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="511.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="509.2" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="509.2" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.2" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.05%)</title><rect x="509.2" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.05%)</title><rect x="509.2" y="451.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="512.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="509.7" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="509.7" y="483.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="512.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.09%)</title><rect x="510.0" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.09%)</title><rect x="510.0" y="531.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="513.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (5 samples, 0.12%)</title><rect x="511.1" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (5 samples, 0.12%)</title><rect x="511.1" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (5 samples, 0.12%)</title><rect x="511.1" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="511.1" y="563.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.07%)</title><rect x="511.1" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="511.1" y="531.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="514.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="512.0" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="512.0" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="512.0" y="515.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (29 samples, 0.69%)</title><rect x="512.5" y="611.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.02%)</title><rect x="512.5" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="515.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="512.8" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (4 samples, 0.09%)</title><rect x="512.8" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (4 samples, 0.09%)</title><rect x="512.8" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="512.8" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="512.8" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="512.8" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="515.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.07%)</title><rect x="513.1" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.07%)</title><rect x="513.1" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.1" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="513.1" y="499.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="516.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (12 samples, 0.28%)</title><rect x="513.9" y="595.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.9" y="606.0"></text>
</g>
<g>
<title>java.net.URI (4 samples, 0.09%)</title><rect x="513.9" y="579.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="516.9" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (8 samples, 0.19%)</title><rect x="515.0" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.0" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (8 samples, 0.19%)</title><rect x="515.0" y="563.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="515.0" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="515.0" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="515.0" y="515.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="518.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="515.3" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.3" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="515.3" y="499.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="518.3" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (6 samples, 0.14%)</title><rect x="515.6" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="515.6" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="515.6" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="515.6" y="499.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="518.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="516.2" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.2" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="516.2" y="483.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="519.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.07%)</title><rect x="516.4" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="516.4" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="516.4" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="516.4" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="519.4" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.02%)</title><rect x="517.0" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.0" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.02%)</title><rect x="517.0" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="517.0" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="517.0" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="517.0" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.0" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="517.0" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="520.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.12%)</title><rect x="517.3" y="595.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (2 samples, 0.05%)</title><rect x="517.3" y="579.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="520.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="517.8" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="517.8" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.07%)</title><rect x="517.8" y="547.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="520.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (6 samples, 0.14%)</title><rect x="518.7" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (6 samples, 0.14%)</title><rect x="518.7" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.14%)</title><rect x="518.7" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (6 samples, 0.14%)</title><rect x="518.7" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.7" y="558.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (6 samples, 0.14%)</title><rect x="518.7" y="531.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="518.7" y="515.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.09%)</title><rect x="518.7" y="499.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="521.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.05%)</title><rect x="519.8" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.05%)</title><rect x="519.8" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="519.8" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="522.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="520.1" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="520.1" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="523.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.toString (1 samples, 0.02%)</title><rect x="520.4" y="595.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="520.4" y="579.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/75958954.invoke (1 samples, 0.02%)</title><rect x="520.4" y="563.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="520.4" y="547.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="520.4" y="531.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="520.4" y="515.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.4" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="520.4" y="499.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="523.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (4 samples, 0.09%)</title><rect x="520.6" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="520.6" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="520.6" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$145/1555331727.get$Lambda (1 samples, 0.02%)</title><rect x="520.6" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$145 (1 samples, 0.02%)</title><rect x="520.6" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="523.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.02%)</title><rect x="520.9" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.02%)</title><rect x="520.9" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="520.9" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="520.9" y="595.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="523.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="521.2" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="521.2" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="521.2" y="611.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="524.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="521.8" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.8" y="670.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (2 samples, 0.05%)</title><rect x="521.8" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (2 samples, 0.05%)</title><rect x="521.8" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="521.8" y="611.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="524.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="522.0" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="522.0" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="522.0" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.0" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="522.0" y="563.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="525.0" y="574.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.02%)</title><rect x="522.3" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.3" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="522.3" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.3" y="638.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (1 samples, 0.02%)</title><rect x="522.3" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (1 samples, 0.02%)</title><rect x="522.3" y="595.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="525.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (7 samples, 0.17%)</title><rect x="522.6" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="522.6" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.05%)</title><rect x="522.6" y="627.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="525.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.12%)</title><rect x="523.2" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.12%)</title><rect x="523.2" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="523.2" y="611.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (4 samples, 0.09%)</title><rect x="523.2" y="595.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="523.2" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="526.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.05%)</title><rect x="523.7" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.7" y="590.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.05%)</title><rect x="523.7" y="563.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="526.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="524.3" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="524.3" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.02%)</title><rect x="524.3" y="579.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="527.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (5 samples, 0.12%)</title><rect x="524.6" y="675.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="524.6" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="524.6" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="524.6" y="627.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="527.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="525.1" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.1" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="525.1" y="611.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="528.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.isCorrect (2 samples, 0.05%)</title><rect x="525.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.05%)</title><rect x="525.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.05%)</title><rect x="525.4" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="525.4" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="525.4" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="525.4" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="525.4" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="525.4" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="525.4" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="526.0" y="707.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="526.0" y="691.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="526.0" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="526.0" y="659.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.0" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="526.0" y="643.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="529.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.14%)</title><rect x="526.2" y="739.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.2" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.02%)</title><rect x="526.2" y="723.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="526.5" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.05%)</title><rect x="526.5" y="707.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="529.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="527.1" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="527.1" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.1" y="718.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="527.1" y="691.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="530.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="527.4" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="527.4" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="527.4" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.4" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="527.4" y="643.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="530.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="527.9" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="527.9" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.9" y="734.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="527.9" y="707.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="530.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="528.2" y="707.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="531.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="528.5" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="528.5" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="528.5" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.5" y="686.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="528.5" y="659.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="531.5" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13324] (189 samples, 4.48%)</title><rect x="529.0" y="819.0" width="52.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="532.0" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (189 samples, 4.48%)</title><rect x="529.0" y="803.0" width="52.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.0" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (189 samples, 4.48%)</title><rect x="529.0" y="787.0" width="52.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.0" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (189 samples, 4.48%)</title><rect x="529.0" y="771.0" width="52.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.0" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (189 samples, 4.48%)</title><rect x="529.0" y="755.0" width="52.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 0.90%)</title><rect x="529.0" y="739.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 0.90%)</title><rect x="529.0" y="723.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.0" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (25 samples, 0.59%)</title><rect x="529.0" y="707.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.21%)</title><rect x="529.0" y="691.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="529.0" y="675.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="529.0" y="659.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="529.0" y="643.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="532.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="530.4" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.4" y="654.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="530.4" y="627.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="533.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (16 samples, 0.38%)</title><rect x="531.6" y="691.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="531.6" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="531.6" y="659.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.09%)</title><rect x="531.6" y="643.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="534.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (10 samples, 0.24%)</title><rect x="532.7" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="532.7" y="659.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="532.7" y="643.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (6 samples, 0.14%)</title><rect x="532.7" y="627.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (6 samples, 0.14%)</title><rect x="532.7" y="611.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="535.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (4 samples, 0.09%)</title><rect x="534.4" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="534.4" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="534.4" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (3 samples, 0.07%)</title><rect x="534.4" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (3 samples, 0.07%)</title><rect x="534.4" y="595.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="537.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="535.2" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="535.2" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.02%)</title><rect x="535.2" y="611.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="538.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.05%)</title><rect x="535.5" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="535.5" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="535.5" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="535.5" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="535.5" y="611.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="538.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.31%)</title><rect x="536.0" y="707.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.31%)</title><rect x="536.0" y="691.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.31%)</title><rect x="536.0" y="675.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="536.0" y="659.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="539.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="537.2" y="659.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.2" y="670.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="537.2" y="643.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="540.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.88%)</title><rect x="539.7" y="739.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.7" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.07%)</title><rect x="539.7" y="723.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="542.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.24%)</title><rect x="540.5" y="723.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.24%)</title><rect x="540.5" y="707.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="543.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.57%)</title><rect x="543.3" y="723.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.57%)</title><rect x="543.3" y="707.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.3" y="718.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.50%)</title><rect x="543.3" y="691.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="546.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="549.2" y="691.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="552.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="549.5" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="549.5" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="549.5" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.5" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="549.5" y="643.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="552.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="550.0" y="739.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="550.0" y="723.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="550.0" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="550.0" y="691.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="553.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.59%)</title><rect x="551.4" y="739.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.59%)</title><rect x="551.4" y="723.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.4" y="734.0">on..</text>
</g>
<g>
<title>char[] (63 samples, 1.49%)</title><rect x="551.4" y="707.0" width="17.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="554.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="569.1" y="707.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.93%)</title><rect x="571.0" y="707.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.93%)</title><rect x="571.0" y="691.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.93%)</title><rect x="571.0" y="675.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.0" y="686.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.93%)</title><rect x="571.0" y="659.0" width="10.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="574.0" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13332] (186 samples, 4.41%)</title><rect x="581.9" y="819.0" width="52.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="584.9" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (186 samples, 4.41%)</title><rect x="581.9" y="803.0" width="52.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.9" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (186 samples, 4.41%)</title><rect x="581.9" y="787.0" width="52.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.9" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (186 samples, 4.41%)</title><rect x="581.9" y="771.0" width="52.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.9" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (186 samples, 4.41%)</title><rect x="581.9" y="755.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.9" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.66%)</title><rect x="581.9" y="739.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 0.66%)</title><rect x="581.9" y="723.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.9" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (26 samples, 0.62%)</title><rect x="581.9" y="707.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.36%)</title><rect x="581.9" y="691.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.36%)</title><rect x="581.9" y="675.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.36%)</title><rect x="581.9" y="659.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="581.9" y="643.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="584.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="583.6" y="643.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.6" y="654.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="583.6" y="627.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="586.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (11 samples, 0.26%)</title><rect x="586.1" y="691.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="586.1" y="675.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="586.1" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.1" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.17%)</title><rect x="586.1" y="643.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="589.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (3 samples, 0.07%)</title><rect x="588.1" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="588.1" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="588.1" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (2 samples, 0.05%)</title><rect x="588.1" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (2 samples, 0.05%)</title><rect x="588.1" y="611.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="591.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (1 samples, 0.02%)</title><rect x="588.7" y="659.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="588.7" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="588.7" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.02%)</title><rect x="588.7" y="611.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="591.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (1 samples, 0.02%)</title><rect x="588.9" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="588.9" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="588.9" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="588.9" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="588.9" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.9" y="622.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="588.9" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="591.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="589.2" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="589.2" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="589.2" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="589.2" y="659.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="592.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (46 samples, 1.09%)</title><rect x="589.8" y="739.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.8" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.09%)</title><rect x="589.8" y="723.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.24%)</title><rect x="590.9" y="723.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.24%)</title><rect x="590.9" y="707.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="593.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.76%)</title><rect x="593.7" y="723.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.76%)</title><rect x="593.7" y="707.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.7" y="718.0"></text>
</g>
<g>
<title>char[] (30 samples, 0.71%)</title><rect x="593.7" y="691.0" width="8.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="602.1" y="691.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="605.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="602.7" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="602.7" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="602.7" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="602.7" y="691.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="605.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.59%)</title><rect x="603.5" y="739.0" width="30.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.5" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.59%)</title><rect x="603.5" y="723.0" width="30.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.5" y="734.0">on..</text>
</g>
<g>
<title>char[] (63 samples, 1.49%)</title><rect x="603.5" y="707.0" width="17.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.31%)</title><rect x="621.1" y="707.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="624.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.78%)</title><rect x="624.8" y="707.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.78%)</title><rect x="624.8" y="691.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.78%)</title><rect x="624.8" y="675.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.8" y="686.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.78%)</title><rect x="624.8" y="659.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="627.8" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13317] (178 samples, 4.22%)</title><rect x="634.0" y="819.0" width="49.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="637.0" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (178 samples, 4.22%)</title><rect x="634.0" y="803.0" width="49.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.0" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.09%)</title><rect x="634.0" y="787.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.0" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.09%)</title><rect x="634.0" y="771.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="637.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (174 samples, 4.13%)</title><rect x="635.1" y="787.0" width="48.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.1" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (174 samples, 4.13%)</title><rect x="635.1" y="771.0" width="48.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (174 samples, 4.13%)</title><rect x="635.1" y="755.0" width="48.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (166 samples, 3.94%)</title><rect x="635.1" y="739.0" width="46.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.1" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (166 samples, 3.94%)</title><rect x="635.1" y="723.0" width="46.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.1" y="734.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (165 samples, 3.91%)</title><rect x="635.1" y="707.0" width="46.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.1" y="718.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.07%)</title><rect x="635.1" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="635.1" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="635.1" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="635.1" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.1" y="654.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="635.1" y="627.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="638.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (162 samples, 3.84%)</title><rect x="636.0" y="691.0" width="45.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="702.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (155 samples, 3.68%)</title><rect x="636.0" y="675.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.0" y="686.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.HttpRequestCreator (1 samples, 0.02%)</title><rect x="636.0" y="659.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="639.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (9 samples, 0.21%)</title><rect x="636.3" y="659.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.21%)</title><rect x="636.3" y="643.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (9 samples, 0.21%)</title><rect x="636.3" y="627.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (9 samples, 0.21%)</title><rect x="636.3" y="611.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="636.3" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="636.3" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$143/556867206.get$Lambda (1 samples, 0.02%)</title><rect x="636.3" y="563.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$143 (1 samples, 0.02%)</title><rect x="636.3" y="547.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="639.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/700141030.linkToTargetMethod (4 samples, 0.09%)</title><rect x="636.5" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/781593468.invokeStatic (4 samples, 0.09%)</title><rect x="636.5" y="579.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.get$Lambda (4 samples, 0.09%)</title><rect x="636.5" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$139 (4 samples, 0.09%)</title><rect x="636.5" y="547.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.05%)</title><rect x="637.7" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.05%)</title><rect x="637.7" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="637.7" y="563.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="637.7" y="547.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="640.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="637.9" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="637.9" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="637.9" y="531.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="640.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="638.2" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="638.2" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="638.2" y="563.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="641.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (126 samples, 2.99%)</title><rect x="638.8" y="659.0" width="35.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.8" y="670.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="638.8" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="638.8" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get$Lambda (1 samples, 0.02%)</title><rect x="638.8" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$132 (1 samples, 0.02%)</title><rect x="638.8" y="595.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="641.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="639.1" y="643.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="639.1" y="627.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="639.1" y="611.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="639.1" y="595.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="639.1" y="579.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="639.1" y="563.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="642.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.05%)</title><rect x="639.3" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="639.3" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.3" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.02%)</title><rect x="639.3" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="642.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.02%)</title><rect x="639.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.6" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (1 samples, 0.02%)</title><rect x="639.6" y="611.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.02%)</title><rect x="639.9" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.02%)</title><rect x="639.9" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="639.9" y="611.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="642.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.09%)</title><rect x="640.2" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.09%)</title><rect x="640.2" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.07%)</title><rect x="640.2" y="611.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="643.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="641.0" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="641.0" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="641.0" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="644.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (71 samples, 1.68%)</title><rect x="641.3" y="643.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (71 samples, 1.68%)</title><rect x="641.3" y="627.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (71 samples, 1.68%)</title><rect x="641.3" y="611.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (71 samples, 1.68%)</title><rect x="641.3" y="595.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="641.3" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="641.3" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$126/1021473121.get$Lambda (1 samples, 0.02%)</title><rect x="641.3" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$126 (1 samples, 0.02%)</title><rect x="641.3" y="531.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="644.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="641.6" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="641.6" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="641.6" y="547.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="644.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="642.1" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="642.1" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="642.1" y="515.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="645.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="642.4" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="642.4" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="642.4" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="645.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="642.7" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="642.7" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="642.7" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (3 samples, 0.07%)</title><rect x="643.0" y="579.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (3 samples, 0.07%)</title><rect x="643.8" y="579.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (34 samples, 0.81%)</title><rect x="644.7" y="579.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.09%)</title><rect x="644.7" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.07%)</title><rect x="644.7" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="644.7" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.7" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.02%)</title><rect x="644.7" y="515.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="647.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="644.9" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.05%)</title><rect x="644.9" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="647.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.02%)</title><rect x="645.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="645.5" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="645.5" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (1 samples, 0.02%)</title><rect x="645.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.02%)</title><rect x="645.5" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="648.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.24%)</title><rect x="645.8" y="563.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.24%)</title><rect x="645.8" y="547.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.8" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.02%)</title><rect x="645.8" y="531.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="648.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="646.1" y="531.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.05%)</title><rect x="646.3" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.3" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.07%)</title><rect x="646.9" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.07%)</title><rect x="646.9" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (3 samples, 0.07%)</title><rect x="646.9" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.07%)</title><rect x="646.9" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="646.9" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.02%)</title><rect x="646.9" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="646.9" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="646.9" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="646.9" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="646.9" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="646.9" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="646.9" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="646.9" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="649.9" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="647.2" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="647.2" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="647.2" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="647.2" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="647.2" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="650.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="647.5" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="647.5" y="419.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="650.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="647.7" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.7" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="647.7" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="650.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="648.0" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="648.0" y="515.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="651.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (12 samples, 0.28%)</title><rect x="648.6" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.6" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (12 samples, 0.28%)</title><rect x="648.6" y="547.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.6" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 0.28%)</title><rect x="648.6" y="531.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.6" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.28%)</title><rect x="648.6" y="515.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.6" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.28%)</title><rect x="648.6" y="499.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.6" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.09%)</title><rect x="648.6" y="483.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="651.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="649.7" y="483.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="649.7" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.7" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="649.7" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="652.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.12%)</title><rect x="650.5" y="483.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="650.5" y="467.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="650.5" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.5" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="650.5" y="435.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="653.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="651.9" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.09%)</title><rect x="651.9" y="547.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="654.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.09%)</title><rect x="653.1" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="653.1" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="653.1" y="531.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="656.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="653.6" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="653.6" y="531.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="656.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (20 samples, 0.47%)</title><rect x="654.2" y="579.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.02%)</title><rect x="654.2" y="563.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="657.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1 samples, 0.02%)</title><rect x="654.5" y="563.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="657.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.02%)</title><rect x="654.7" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (1 samples, 0.02%)</title><rect x="654.7" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="657.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (17 samples, 0.40%)</title><rect x="655.0" y="563.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (17 samples, 0.40%)</title><rect x="655.0" y="547.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.02%)</title><rect x="655.0" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="658.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="655.3" y="531.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="658.3" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (2 samples, 0.05%)</title><rect x="655.9" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="658.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.09%)</title><rect x="656.4" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.09%)</title><rect x="656.4" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (4 samples, 0.09%)</title><rect x="656.4" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (4 samples, 0.09%)</title><rect x="656.4" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.4" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (4 samples, 0.09%)</title><rect x="656.4" y="467.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="659.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.09%)</title><rect x="657.5" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.09%)</title><rect x="657.5" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (4 samples, 0.09%)</title><rect x="657.5" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (4 samples, 0.09%)</title><rect x="657.5" y="483.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.5" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.09%)</title><rect x="658.7" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.09%)</title><rect x="658.7" y="515.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.7" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.09%)</title><rect x="658.7" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="661.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.12%)</title><rect x="659.8" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="659.8" y="563.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="662.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.07%)</title><rect x="660.3" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="660.3" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.07%)</title><rect x="660.3" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="660.3" y="515.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="663.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="660.6" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="660.6" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="660.6" y="483.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="663.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (46 samples, 1.09%)</title><rect x="661.2" y="643.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.delete (46 samples, 1.09%)</title><rect x="661.2" y="627.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (14 samples, 0.33%)</title><rect x="661.2" y="611.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1 samples, 0.02%)</title><rect x="661.2" y="595.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="664.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (13 samples, 0.31%)</title><rect x="661.4" y="595.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.26%)</title><rect x="661.4" y="579.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.26%)</title><rect x="661.4" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.12%)</title><rect x="661.4" y="547.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="664.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.05%)</title><rect x="662.8" y="547.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="665.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.07%)</title><rect x="663.4" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (3 samples, 0.07%)</title><rect x="663.4" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.07%)</title><rect x="663.4" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.4" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="663.4" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="663.4" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.05%)</title><rect x="663.4" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="663.4" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="663.4" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="666.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="664.0" y="499.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="664.0" y="483.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="667.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="664.2" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="664.2" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="667.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.05%)</title><rect x="664.5" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.5" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="664.5" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.5" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.05%)</title><rect x="664.5" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="667.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (2 samples, 0.05%)</title><rect x="665.1" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.05%)</title><rect x="665.1" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (2 samples, 0.05%)</title><rect x="665.1" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="665.1" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="665.1" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="665.1" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="668.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="665.4" y="547.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="665.4" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.4" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="665.4" y="515.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="668.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (30 samples, 0.71%)</title><rect x="665.6" y="611.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="665.6" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (2 samples, 0.05%)</title><rect x="665.6" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (2 samples, 0.05%)</title><rect x="665.6" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="665.6" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="665.6" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="665.6" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="668.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="665.9" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="665.9" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.9" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="665.9" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="668.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (19 samples, 0.45%)</title><rect x="666.2" y="595.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.2" y="606.0"></text>
</g>
<g>
<title>java.net.URI (6 samples, 0.14%)</title><rect x="666.2" y="579.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="669.2" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (13 samples, 0.31%)</title><rect x="667.9" y="579.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.9" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (2 samples, 0.05%)</title><rect x="667.9" y="563.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="670.9" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (11 samples, 0.26%)</title><rect x="668.4" y="563.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="668.4" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="668.4" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="668.4" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="671.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="668.7" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.7" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="668.7" y="499.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="671.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8 samples, 0.19%)</title><rect x="669.3" y="547.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="669.3" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="669.3" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="669.3" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.3" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="669.3" y="483.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="672.3" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (6 samples, 0.14%)</title><rect x="669.8" y="531.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="669.8" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="669.8" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="669.8" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="672.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (5 samples, 0.12%)</title><rect x="670.1" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.1" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.12%)</title><rect x="670.1" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="670.1" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="670.1" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="670.1" y="451.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="673.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="671.2" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.2" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="671.2" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="674.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.14%)</title><rect x="671.5" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (3 samples, 0.07%)</title><rect x="671.5" y="579.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="674.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="672.4" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="672.4" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.07%)</title><rect x="672.4" y="547.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="675.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.07%)</title><rect x="673.2" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.07%)</title><rect x="673.2" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.07%)</title><rect x="673.2" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.07%)</title><rect x="673.2" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.2" y="558.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.07%)</title><rect x="673.2" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="673.2" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="673.2" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="676.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.05%)</title><rect x="673.5" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.05%)</title><rect x="673.5" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.5" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="673.5" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="676.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="673.8" y="483.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="673.8" y="467.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="676.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (3 samples, 0.07%)</title><rect x="674.0" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="674.0" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="674.0" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.get$Lambda (1 samples, 0.02%)</title><rect x="674.0" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$144 (1 samples, 0.02%)</title><rect x="674.0" y="595.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.02%)</title><rect x="674.3" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.02%)</title><rect x="674.3" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="674.3" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.02%)</title><rect x="674.3" y="595.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="677.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="674.6" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="674.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="674.6" y="611.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="677.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (5 samples, 0.12%)</title><rect x="674.9" y="659.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.9" y="670.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (2 samples, 0.05%)</title><rect x="674.9" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (2 samples, 0.05%)</title><rect x="674.9" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="674.9" y="611.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="677.9" y="622.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (3 samples, 0.07%)</title><rect x="675.4" y="643.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.4" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (3 samples, 0.07%)</title><rect x="675.4" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.4" y="638.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (3 samples, 0.07%)</title><rect x="675.4" y="611.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.4" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (1 samples, 0.02%)</title><rect x="675.4" y="595.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="678.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="675.7" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.7" y="606.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="675.7" y="579.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="678.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (11 samples, 0.26%)</title><rect x="676.3" y="659.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.3" y="670.0"></text>
</g>
<g>
<title>java.util.HashSet (3 samples, 0.07%)</title><rect x="676.3" y="643.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="679.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="677.1" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.02%)</title><rect x="677.1" y="627.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.17%)</title><rect x="677.4" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.17%)</title><rect x="677.4" y="627.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="677.4" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (2 samples, 0.05%)</title><rect x="677.4" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="677.4" y="579.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="680.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="677.7" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.7" y="590.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.02%)</title><rect x="677.7" y="563.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="680.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.12%)</title><rect x="678.0" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="681.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.07%)</title><rect x="678.0" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.07%)</title><rect x="678.0" y="579.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="681.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="678.8" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.8" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.05%)</title><rect x="678.8" y="579.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="681.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.parse (7 samples, 0.17%)</title><rect x="679.4" y="675.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="679.4" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="679.4" y="643.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="679.4" y="627.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="682.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.isCorrect (2 samples, 0.05%)</title><rect x="680.8" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.05%)</title><rect x="680.8" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.05%)</title><rect x="680.8" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="680.8" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="680.8" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="680.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="680.8" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="680.8" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="680.8" y="531.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="683.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="681.3" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="681.3" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="681.3" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="681.3" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.3" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="681.3" y="643.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="684.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.09%)</title><rect x="681.6" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.6" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.02%)</title><rect x="681.6" y="723.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="684.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="681.9" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="681.9" y="707.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.9" y="718.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="681.9" y="691.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="684.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="682.4" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="682.4" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="682.4" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.4" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="682.4" y="643.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="685.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="682.7" y="739.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="682.7" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.7" y="734.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.07%)</title><rect x="682.7" y="707.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="685.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="683.6" y="707.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="683.6" y="691.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="683.6" y="675.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.6" y="686.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="683.6" y="659.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="686.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13325] (183 samples, 4.34%)</title><rect x="683.8" y="819.0" width="51.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="686.8" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (183 samples, 4.34%)</title><rect x="683.8" y="803.0" width="51.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.8" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (183 samples, 4.34%)</title><rect x="683.8" y="787.0" width="51.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.8" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (183 samples, 4.34%)</title><rect x="683.8" y="771.0" width="51.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.8" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 4.34%)</title><rect x="683.8" y="755.0" width="51.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.8" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 0.95%)</title><rect x="683.8" y="739.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.95%)</title><rect x="683.8" y="723.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (38 samples, 0.90%)</title><rect x="683.8" y="707.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.36%)</title><rect x="683.8" y="691.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.36%)</title><rect x="683.8" y="675.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.36%)</title><rect x="683.8" y="659.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="683.8" y="643.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="686.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="686.6" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.6" y="654.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="686.6" y="627.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="689.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (23 samples, 0.55%)</title><rect x="688.0" y="691.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="688.0" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="688.0" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="688.0" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="688.0" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.0" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="688.0" y="611.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="691.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.24%)</title><rect x="688.3" y="675.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.24%)</title><rect x="688.3" y="659.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.24%)</title><rect x="688.3" y="643.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (10 samples, 0.24%)</title><rect x="691.1" y="675.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (10 samples, 0.24%)</title><rect x="691.1" y="659.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="691.1" y="643.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="691.1" y="627.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (5 samples, 0.12%)</title><rect x="691.1" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (5 samples, 0.12%)</title><rect x="691.1" y="595.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="694.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.12%)</title><rect x="692.5" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.12%)</title><rect x="692.5" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (5 samples, 0.12%)</title><rect x="692.5" y="611.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="695.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.05%)</title><rect x="693.9" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="693.9" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="693.9" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="693.9" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="693.9" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.9" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="693.9" y="595.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="696.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="694.5" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="694.5" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="694.5" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="694.5" y="659.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="697.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.55%)</title><rect x="695.0" y="739.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.14%)</title><rect x="695.0" y="723.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.14%)</title><rect x="695.0" y="707.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="698.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="696.7" y="723.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="696.7" y="707.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.7" y="718.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.36%)</title><rect x="696.7" y="691.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="699.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="700.9" y="691.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="703.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="701.2" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="701.2" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="701.2" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.2" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="701.2" y="643.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.14%)</title><rect x="701.5" y="739.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="701.5" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="701.5" y="707.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="701.5" y="691.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.5" y="702.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="701.5" y="675.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="704.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 2.70%)</title><rect x="703.2" y="739.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 2.70%)</title><rect x="703.2" y="723.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.2" y="734.0">on..</text>
</g>
<g>
<title>char[] (66 samples, 1.57%)</title><rect x="703.2" y="707.0" width="18.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="706.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.36%)</title><rect x="721.6" y="707.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="724.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.78%)</title><rect x="725.8" y="707.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.78%)</title><rect x="725.8" y="691.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.78%)</title><rect x="725.8" y="675.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.8" y="686.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.78%)</title><rect x="725.8" y="659.0" width="9.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="728.8" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13333] (184 samples, 4.37%)</title><rect x="735.1" y="819.0" width="51.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="738.1" y="830.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (184 samples, 4.37%)</title><rect x="735.1" y="803.0" width="51.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.1" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.14%)</title><rect x="735.1" y="787.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6 samples, 0.14%)</title><rect x="735.1" y="771.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="738.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (178 samples, 4.22%)</title><rect x="736.8" y="787.0" width="49.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.8" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (178 samples, 4.22%)</title><rect x="736.8" y="771.0" width="49.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.8" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (178 samples, 4.22%)</title><rect x="736.8" y="755.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.8" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 0.85%)</title><rect x="736.8" y="739.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.85%)</title><rect x="736.8" y="723.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.8" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (30 samples, 0.71%)</title><rect x="736.8" y="707.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.31%)</title><rect x="736.8" y="691.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.31%)</title><rect x="736.8" y="675.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.31%)</title><rect x="736.8" y="659.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="736.8" y="643.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="739.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.19%)</title><rect x="738.2" y="643.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.2" y="654.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="738.2" y="627.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="741.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (17 samples, 0.40%)</title><rect x="740.4" y="691.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.09%)</title><rect x="740.4" y="675.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.09%)</title><rect x="740.4" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.09%)</title><rect x="740.4" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="740.4" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.4" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="740.4" y="611.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="743.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="741.5" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="741.5" y="659.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.07%)</title><rect x="741.5" y="643.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="744.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeDelete (5 samples, 0.12%)</title><rect x="742.4" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="742.4" y="659.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="742.4" y="643.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.get$Lambda (1 samples, 0.02%)</title><rect x="742.4" y="627.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$329 (1 samples, 0.02%)</title><rect x="742.4" y="611.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="745.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (4 samples, 0.09%)</title><rect x="742.6" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="742.6" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="742.6" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (2 samples, 0.05%)</title><rect x="742.6" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (2 samples, 0.05%)</title><rect x="742.6" y="595.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="743.2" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="743.2" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.05%)</title><rect x="743.2" y="611.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (5 samples, 0.12%)</title><rect x="743.8" y="675.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="743.8" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="743.8" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="743.8" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="743.8" y="611.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="746.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="744.3" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.3" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="744.3" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="747.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.14%)</title><rect x="745.2" y="707.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="745.2" y="691.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="745.2" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="745.2" y="659.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="748.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="746.3" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.3" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="746.3" y="643.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (29 samples, 0.69%)</title><rect x="746.8" y="739.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.8" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.05%)</title><rect x="746.8" y="723.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="749.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.12%)</title><rect x="747.4" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.12%)</title><rect x="747.4" y="707.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="750.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="748.8" y="723.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="748.8" y="707.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.8" y="718.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.28%)</title><rect x="748.8" y="691.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="751.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="752.2" y="691.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="755.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="753.6" y="691.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="753.6" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.12%)</title><rect x="753.6" y="659.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.6" y="670.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="753.6" y="643.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="756.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.07%)</title><rect x="755.0" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.0" y="750.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="755.0" y="723.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="758.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.14%)</title><rect x="755.8" y="739.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="755.8" y="723.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="755.8" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="755.8" y="691.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="758.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="757.2" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.2" y="702.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="757.2" y="675.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="760.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 2.47%)</title><rect x="757.5" y="739.0" width="29.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.5" y="750.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 2.47%)</title><rect x="757.5" y="723.0" width="29.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.5" y="734.0">on..</text>
</g>
<g>
<title>char[] (38 samples, 0.90%)</title><rect x="757.5" y="707.0" width="10.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="760.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.66%)</title><rect x="768.1" y="707.0" width="7.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="771.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.90%)</title><rect x="776.0" y="707.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.90%)</title><rect x="776.0" y="691.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.90%)</title><rect x="776.0" y="675.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.0" y="686.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.90%)</title><rect x="776.0" y="659.0" width="10.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="779.0" y="670.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13374] (197 samples, 4.67%)</title><rect x="786.6" y="819.0" width="55.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="789.6" y="830.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (197 samples, 4.67%)</title><rect x="786.6" y="803.0" width="55.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.6" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (197 samples, 4.67%)</title><rect x="786.6" y="787.0" width="55.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.6" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (197 samples, 4.67%)</title><rect x="786.6" y="771.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.6" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (120 samples, 2.85%)</title><rect x="786.6" y="755.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.6" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (120 samples, 2.85%)</title><rect x="786.6" y="739.0" width="33.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.6" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (120 samples, 2.85%)</title><rect x="786.6" y="723.0" width="33.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.6" y="734.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.05%)</title><rect x="786.6" y="707.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="789.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (118 samples, 2.80%)</title><rect x="787.1" y="707.0" width="33.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.1" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (118 samples, 2.80%)</title><rect x="787.1" y="691.0" width="33.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.1" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (118 samples, 2.80%)</title><rect x="787.1" y="675.0" width="33.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.1" y="686.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.05%)</title><rect x="787.1" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.05%)</title><rect x="787.1" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="787.1" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="787.1" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="787.1" y="595.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="790.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="787.7" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="787.7" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.05%)</title><rect x="787.7" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="790.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (110 samples, 2.61%)</title><rect x="788.3" y="659.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.3" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (110 samples, 2.61%)</title><rect x="788.3" y="643.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.3" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (110 samples, 2.61%)</title><rect x="788.3" y="627.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.3" y="638.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="788.3" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="788.3" y="595.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.get$Lambda (1 samples, 0.02%)</title><rect x="788.3" y="579.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$134 (1 samples, 0.02%)</title><rect x="788.3" y="563.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="791.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (71 samples, 1.68%)</title><rect x="788.5" y="611.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (71 samples, 1.68%)</title><rect x="788.5" y="595.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (71 samples, 1.68%)</title><rect x="788.5" y="579.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (71 samples, 1.68%)</title><rect x="788.5" y="563.0" width="19.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (71 samples, 1.68%)</title><rect x="788.5" y="547.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (71 samples, 1.68%)</title><rect x="788.5" y="531.0" width="19.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (71 samples, 1.68%)</title><rect x="788.5" y="515.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (71 samples, 1.68%)</title><rect x="788.5" y="499.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="788.5" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="788.5" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.get$Lambda (1 samples, 0.02%)</title><rect x="788.5" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$226 (1 samples, 0.02%)</title><rect x="788.5" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="791.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="788.8" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="788.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.02%)</title><rect x="788.8" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="791.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="789.1" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="789.1" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="789.1" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="792.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="789.4" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="789.4" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="789.4" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="792.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (67 samples, 1.59%)</title><rect x="789.7" y="483.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="789.7" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="789.7" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.get$Lambda (1 samples, 0.02%)</title><rect x="789.7" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (1 samples, 0.02%)</title><rect x="789.7" y="419.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="792.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$224/2044958180.get$Lambda (1 samples, 0.02%)</title><rect x="789.9" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$224 (1 samples, 0.02%)</title><rect x="789.9" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="792.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 1.21%)</title><rect x="790.2" y="467.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 1.21%)</title><rect x="790.2" y="451.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="790.2" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="793.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (50 samples, 1.19%)</title><rect x="790.5" y="435.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (50 samples, 1.19%)</title><rect x="790.5" y="419.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="790.5" y="403.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="793.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (49 samples, 1.16%)</title><rect x="790.8" y="403.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="790.8" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="790.8" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.07%)</title><rect x="790.8" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.8" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="790.8" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="793.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="791.6" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="791.6" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.6" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="791.6" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="794.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="792.2" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="792.2" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="792.2" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.2" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="792.2" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="795.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (36 samples, 0.85%)</title><rect x="792.7" y="387.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.7" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.02%)</title><rect x="792.7" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="792.7" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="792.7" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.7" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.get$Lambda (1 samples, 0.02%)</title><rect x="792.7" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.7" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$243 (1 samples, 0.02%)</title><rect x="792.7" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="795.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.45%)</title><rect x="793.0" y="371.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.21%)</title><rect x="793.0" y="355.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.0" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.21%)</title><rect x="793.0" y="339.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.0" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.21%)</title><rect x="793.0" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.21%)</title><rect x="793.0" y="307.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.0" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="793.0" y="291.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="796.0" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.02%)</title><rect x="795.5" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="795.5" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.02%)</title><rect x="795.5" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.02%)</title><rect x="795.5" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="798.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.02%)</title><rect x="795.8" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.8" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (1 samples, 0.02%)</title><rect x="795.8" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="798.8" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (8 samples, 0.19%)</title><rect x="796.1" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.19%)</title><rect x="796.1" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (8 samples, 0.19%)</title><rect x="796.1" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (8 samples, 0.19%)</title><rect x="796.1" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.1" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (8 samples, 0.19%)</title><rect x="796.1" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.1" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (8 samples, 0.19%)</title><rect x="796.1" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (8 samples, 0.19%)</title><rect x="796.1" y="259.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (8 samples, 0.19%)</title><rect x="796.1" y="243.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.19%)</title><rect x="796.1" y="227.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="796.1" y="211.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="796.1" y="195.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="799.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="797.2" y="195.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.2" y="206.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="797.2" y="179.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="800.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (16 samples, 0.38%)</title><rect x="798.3" y="371.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.38%)</title><rect x="798.3" y="355.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.38%)</title><rect x="798.3" y="339.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.3" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="798.3" y="323.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="801.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="798.6" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="801.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.28%)</title><rect x="799.2" y="323.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (12 samples, 0.28%)</title><rect x="799.2" y="307.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.28%)</title><rect x="799.2" y="291.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="799.2" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="799.2" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (1 samples, 0.02%)</title><rect x="799.2" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.2" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (1 samples, 0.02%)</title><rect x="799.2" y="227.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="802.2" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (9 samples, 0.21%)</title><rect x="799.5" y="275.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (9 samples, 0.21%)</title><rect x="799.5" y="259.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (7 samples, 0.17%)</title><rect x="799.5" y="243.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="799.5" y="227.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.17%)</title><rect x="799.5" y="211.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="802.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.05%)</title><rect x="801.4" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.05%)</title><rect x="801.4" y="227.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="804.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="802.0" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="802.0" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="805.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="802.5" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="802.5" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="805.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.02%)</title><rect x="802.8" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="802.8" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="802.8" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (1 samples, 0.02%)</title><rect x="802.8" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="802.8" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="802.8" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="802.8" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.05%)</title><rect x="803.1" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.05%)</title><rect x="803.1" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="803.1" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.05%)</title><rect x="803.1" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (2 samples, 0.05%)</title><rect x="803.1" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="803.1" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="803.1" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="803.1" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.1" y="286.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="803.1" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="806.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.07%)</title><rect x="803.7" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="803.7" y="371.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="806.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="803.9" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="803.9" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="806.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.05%)</title><rect x="804.5" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="807.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="805.1" y="467.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="808.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (11 samples, 0.26%)</title><rect x="805.3" y="467.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="805.3" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="805.3" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$202/804098885.get$Lambda (1 samples, 0.02%)</title><rect x="805.3" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$202 (1 samples, 0.02%)</title><rect x="805.3" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="808.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2 samples, 0.05%)</title><rect x="805.6" y="451.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="808.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (1 samples, 0.02%)</title><rect x="806.2" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="809.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2 samples, 0.05%)</title><rect x="806.5" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="809.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.07%)</title><rect x="807.0" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="807.0" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="807.0" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.07%)</title><rect x="807.0" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="807.0" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.07%)</title><rect x="807.0" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (3 samples, 0.07%)</title><rect x="807.0" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.07%)</title><rect x="807.0" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.07%)</title><rect x="807.0" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="807.0" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="807.0" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (1 samples, 0.02%)</title><rect x="807.0" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (1 samples, 0.02%)</title><rect x="807.0" y="259.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="810.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="807.3" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="807.3" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.02%)</title><rect x="807.3" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="810.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.02%)</title><rect x="807.6" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.02%)</title><rect x="807.6" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="810.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.05%)</title><rect x="807.9" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.9" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.02%)</title><rect x="807.9" y="435.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="810.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="808.1" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="808.1" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.1" y="430.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="808.1" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="811.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="808.4" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="808.4" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="808.4" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="811.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (37 samples, 0.88%)</title><rect x="808.7" y="611.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="808.7" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="808.7" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$190/511526115.get$Lambda (2 samples, 0.05%)</title><rect x="808.7" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$190 (2 samples, 0.05%)</title><rect x="808.7" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="811.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="809.3" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="809.3" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="809.3" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="809.3" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="809.3" y="531.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="812.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (33 samples, 0.78%)</title><rect x="809.8" y="595.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="809.8" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="809.8" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.get$Lambda (1 samples, 0.02%)</title><rect x="809.8" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$148 (1 samples, 0.02%)</title><rect x="809.8" y="531.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="812.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (30 samples, 0.71%)</title><rect x="810.1" y="579.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (30 samples, 0.71%)</title><rect x="810.1" y="563.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.71%)</title><rect x="810.1" y="547.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (30 samples, 0.71%)</title><rect x="810.1" y="531.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (30 samples, 0.71%)</title><rect x="810.1" y="515.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (30 samples, 0.71%)</title><rect x="810.1" y="499.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8 samples, 0.19%)</title><rect x="810.1" y="483.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.19%)</title><rect x="810.1" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (8 samples, 0.19%)</title><rect x="810.1" y="451.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (8 samples, 0.19%)</title><rect x="810.1" y="435.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (8 samples, 0.19%)</title><rect x="810.1" y="419.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (8 samples, 0.19%)</title><rect x="810.1" y="403.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (8 samples, 0.19%)</title><rect x="810.1" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4 samples, 0.09%)</title><rect x="810.1" y="371.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.1" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.02%)</title><rect x="810.1" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.1" y="366.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.02%)</title><rect x="810.1" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.1" y="350.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="810.1" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.07%)</title><rect x="810.4" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.07%)</title><rect x="810.4" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.07%)</title><rect x="810.4" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.05%)</title><rect x="810.4" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="810.4" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.05%)</title><rect x="810.4" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.05%)</title><rect x="810.4" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="810.9" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (1 samples, 0.02%)</title><rect x="810.9" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (1 samples, 0.02%)</title><rect x="810.9" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.9" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (1 samples, 0.02%)</title><rect x="810.9" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="810.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.02%)</title><rect x="810.9" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="813.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.09%)</title><rect x="811.2" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.2" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="811.2" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="814.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="811.8" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="811.8" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="814.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="812.1" y="355.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="812.1" y="339.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="815.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (22 samples, 0.52%)</title><rect x="812.3" y="483.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (2 samples, 0.05%)</title><rect x="812.3" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="815.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (19 samples, 0.45%)</title><rect x="812.9" y="467.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.02%)</title><rect x="812.9" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="815.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="813.2" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="813.2" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.2" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="813.2" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="816.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.02%)</title><rect x="813.5" y="451.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="816.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="813.7" y="451.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="816.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (7 samples, 0.17%)</title><rect x="814.3" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.02%)</title><rect x="814.3" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="817.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.02%)</title><rect x="814.6" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="817.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="814.9" y="435.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="814.9" y="419.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="815.1" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="818.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.07%)</title><rect x="815.4" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.05%)</title><rect x="815.4" y="419.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="818.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="816.0" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.02%)</title><rect x="816.0" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="819.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.07%)</title><rect x="816.3" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.07%)</title><rect x="816.3" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="816.3" y="419.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.02%)</title><rect x="816.3" y="403.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="819.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.05%)</title><rect x="816.5" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.05%)</title><rect x="816.5" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="819.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.02%)</title><rect x="817.1" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.02%)</title><rect x="817.1" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.02%)</title><rect x="817.1" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="817.1" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="817.1" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="817.1" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="817.1" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="820.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (3 samples, 0.07%)</title><rect x="817.4" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.4" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.07%)</title><rect x="817.4" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (3 samples, 0.07%)</title><rect x="817.4" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.07%)</title><rect x="817.4" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.4" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.07%)</title><rect x="817.4" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (2 samples, 0.05%)</title><rect x="817.4" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="820.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.02%)</title><rect x="817.9" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.02%)</title><rect x="817.9" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.9" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.02%)</title><rect x="817.9" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.9" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.02%)</title><rect x="817.9" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.9" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.02%)</title><rect x="817.9" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="820.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="818.2" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="818.2" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="821.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="818.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="818.5" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="818.5" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="818.5" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="818.5" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.02%)</title><rect x="818.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.02%)</title><rect x="818.8" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.02%)</title><rect x="818.8" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (1 samples, 0.02%)</title><rect x="818.8" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (1 samples, 0.02%)</title><rect x="818.8" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (1 samples, 0.02%)</title><rect x="818.8" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="818.8" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="818.8" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="818.8" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.8" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="818.8" y="435.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="821.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1 samples, 0.02%)</title><rect x="819.1" y="659.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.02%)</title><rect x="819.1" y="643.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="819.1" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="819.1" y="611.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="822.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.07%)</title><rect x="819.3" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (3 samples, 0.07%)</title><rect x="819.3" y="643.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.05%)</title><rect x="820.2" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.05%)</title><rect x="820.2" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.05%)</title><rect x="820.2" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="820.2" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="820.2" y="691.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="823.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (11 samples, 0.26%)</title><rect x="820.7" y="755.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.26%)</title><rect x="820.7" y="739.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.26%)</title><rect x="820.7" y="723.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.26%)</title><rect x="820.7" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="820.7" y="691.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="820.7" y="675.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.26%)</title><rect x="820.7" y="659.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.26%)</title><rect x="820.7" y="643.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.26%)</title><rect x="820.7" y="627.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.26%)</title><rect x="820.7" y="611.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.26%)</title><rect x="820.7" y="595.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (10 samples, 0.24%)</title><rect x="820.7" y="579.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="820.7" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="820.7" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$247/474724929.get$Lambda (1 samples, 0.02%)</title><rect x="820.7" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$247 (1 samples, 0.02%)</title><rect x="820.7" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="823.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 0.21%)</title><rect x="821.0" y="563.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.21%)</title><rect x="821.0" y="547.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9 samples, 0.21%)</title><rect x="821.0" y="531.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.21%)</title><rect x="821.0" y="515.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.07%)</title><rect x="821.0" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="821.0" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="824.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (2 samples, 0.05%)</title><rect x="821.3" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.05%)</title><rect x="821.3" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="821.3" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="821.3" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.05%)</title><rect x="821.3" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="821.3" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (2 samples, 0.05%)</title><rect x="821.3" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.05%)</title><rect x="821.3" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="821.3" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="821.3" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="821.3" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="821.3" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="821.3" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="821.3" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (1 samples, 0.02%)</title><rect x="821.3" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="821.3" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="821.3" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="821.3" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="821.3" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (1 samples, 0.02%)</title><rect x="821.3" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="821.3" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="821.3" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="821.3" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="821.3" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="821.3" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="821.3" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="821.3" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="821.3" y="51.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.3" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1 samples, 0.02%)</title><rect x="821.3" y="35.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="824.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.02%)</title><rect x="821.6" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.02%)</title><rect x="821.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="821.6" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="821.6" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="821.6" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="821.6" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="821.6" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="821.6" y="243.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="824.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.14%)</title><rect x="821.9" y="499.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.14%)</title><rect x="821.9" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (6 samples, 0.14%)</title><rect x="821.9" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.14%)</title><rect x="821.9" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.14%)</title><rect x="821.9" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (6 samples, 0.14%)</title><rect x="821.9" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.14%)</title><rect x="821.9" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.09%)</title><rect x="821.9" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="821.9" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.07%)</title><rect x="821.9" y="355.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="824.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="822.7" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="822.7" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="822.7" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="825.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.05%)</title><rect x="823.0" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="823.0" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.02%)</title><rect x="823.0" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="826.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="823.3" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="823.3" y="339.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="823.3" y="323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="823.3" y="307.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="823.3" y="291.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="823.3" y="275.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="826.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.02%)</title><rect x="823.5" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.02%)</title><rect x="823.5" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.02%)</title><rect x="823.5" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.02%)</title><rect x="823.5" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.02%)</title><rect x="823.5" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.02%)</title><rect x="823.5" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.5" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="823.5" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.5" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.02%)</title><rect x="823.5" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="826.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (64 samples, 1.52%)</title><rect x="823.8" y="755.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (64 samples, 1.52%)</title><rect x="823.8" y="739.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (54 samples, 1.28%)</title><rect x="823.8" y="723.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (54 samples, 1.28%)</title><rect x="823.8" y="707.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (54 samples, 1.28%)</title><rect x="823.8" y="691.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (54 samples, 1.28%)</title><rect x="823.8" y="675.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (54 samples, 1.28%)</title><rect x="823.8" y="659.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (54 samples, 1.28%)</title><rect x="823.8" y="643.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (54 samples, 1.28%)</title><rect x="823.8" y="627.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (27 samples, 0.64%)</title><rect x="823.8" y="611.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.64%)</title><rect x="823.8" y="595.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.64%)</title><rect x="823.8" y="579.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (27 samples, 0.64%)</title><rect x="823.8" y="563.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.64%)</title><rect x="823.8" y="547.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (27 samples, 0.64%)</title><rect x="823.8" y="531.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.64%)</title><rect x="823.8" y="515.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.64%)</title><rect x="823.8" y="499.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.64%)</title><rect x="823.8" y="483.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (26 samples, 0.62%)</title><rect x="823.8" y="467.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.05%)</title><rect x="823.8" y="451.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="826.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (24 samples, 0.57%)</title><rect x="824.4" y="451.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (24 samples, 0.57%)</title><rect x="824.4" y="435.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.05%)</title><rect x="824.4" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="824.4" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="824.4" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="824.4" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="824.4" y="355.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="827.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (22 samples, 0.52%)</title><rect x="824.9" y="419.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (22 samples, 0.52%)</title><rect x="824.9" y="403.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (22 samples, 0.52%)</title><rect x="824.9" y="387.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.05%)</title><rect x="824.9" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="824.9" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="824.9" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.02%)</title><rect x="824.9" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="827.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.02%)</title><rect x="825.2" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1 samples, 0.02%)</title><rect x="825.2" y="339.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="828.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="825.5" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="825.5" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="825.5" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="825.5" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="828.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="825.8" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="825.8" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="825.8" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="828.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="826.1" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="829.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="826.6" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (1 samples, 0.02%)</title><rect x="826.6" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="829.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.36%)</title><rect x="826.9" y="371.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (15 samples, 0.36%)</title><rect x="826.9" y="355.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (15 samples, 0.36%)</title><rect x="826.9" y="339.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="826.9" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="826.9" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/191339027.get$Lambda (1 samples, 0.02%)</title><rect x="826.9" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$276 (1 samples, 0.02%)</title><rect x="826.9" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="829.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.get$Lambda (1 samples, 0.02%)</title><rect x="827.2" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (1 samples, 0.02%)</title><rect x="827.2" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="830.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="827.5" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="827.5" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="827.5" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="830.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="828.0" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="828.0" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="828.0" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="831.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (2 samples, 0.05%)</title><rect x="828.3" y="323.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="831.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.05%)</title><rect x="828.9" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="828.9" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="831.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.07%)</title><rect x="829.4" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.07%)</title><rect x="829.4" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="829.4" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="829.4" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$285/552175013.get$Lambda (1 samples, 0.02%)</title><rect x="829.4" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$285 (1 samples, 0.02%)</title><rect x="829.4" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="832.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="829.7" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="829.7" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="829.7" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="829.7" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="832.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.05%)</title><rect x="830.3" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="830.3" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.05%)</title><rect x="830.3" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="830.3" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="830.3" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="830.3" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.3" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="830.3" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="833.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.02%)</title><rect x="830.8" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1 samples, 0.02%)</title><rect x="830.8" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="833.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="831.1" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="831.1" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.apply (1 samples, 0.02%)</title><rect x="831.1" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.02%)</title><rect x="831.1" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="831.1" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="831.1" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="834.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (27 samples, 0.64%)</title><rect x="831.4" y="611.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.02%)</title><rect x="831.4" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="831.4" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="831.4" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="831.4" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="831.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.4" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="831.4" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="834.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.07%)</title><rect x="831.7" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="831.7" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="831.7" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="831.7" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="831.7" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.7" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="831.7" y="515.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="834.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1 samples, 0.02%)</title><rect x="832.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="832.5" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="832.5" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.5" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="832.5" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="835.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6 samples, 0.14%)</title><rect x="832.8" y="595.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.14%)</title><rect x="832.8" y="579.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.14%)</title><rect x="832.8" y="563.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="832.8" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="835.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.12%)</title><rect x="833.1" y="547.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.12%)</title><rect x="833.1" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.12%)</title><rect x="833.1" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="833.1" y="499.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="833.1" y="483.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (1 samples, 0.02%)</title><rect x="833.1" y="467.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (1 samples, 0.02%)</title><rect x="833.1" y="451.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="836.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="833.3" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.02%)</title><rect x="833.3" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="833.3" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="833.3" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="833.3" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="833.3" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="833.3" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="833.3" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="833.3" y="371.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="836.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="833.6" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.6" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="833.6" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="833.6" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="833.6" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="833.6" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="836.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="833.9" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.9" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="833.9" y="451.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="836.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="834.2" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="834.2" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="837.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (16 samples, 0.38%)</title><rect x="834.5" y="595.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="834.5" y="579.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="837.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="834.7" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="834.7" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.7" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="834.7" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="837.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.07%)</title><rect x="835.0" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="835.0" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="835.0" y="547.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="838.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (11 samples, 0.26%)</title><rect x="835.9" y="579.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="835.9" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="835.9" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="835.9" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="838.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="836.4" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.4" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="836.4" y="515.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="839.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="837.0" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="837.0" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.0" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="837.0" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="840.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="837.5" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="837.5" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="837.5" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="837.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.5" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="837.5" y="499.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="840.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="837.8" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="837.8" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="837.8" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="837.8" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="837.8" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="837.8" y="483.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="840.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="838.4" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="838.4" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.05%)</title><rect x="838.4" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="841.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10 samples, 0.24%)</title><rect x="838.9" y="723.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.24%)</title><rect x="838.9" y="707.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.24%)</title><rect x="838.9" y="691.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (10 samples, 0.24%)</title><rect x="838.9" y="675.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.24%)</title><rect x="838.9" y="659.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (10 samples, 0.24%)</title><rect x="838.9" y="643.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="838.9" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="838.9" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (1 samples, 0.02%)</title><rect x="838.9" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (1 samples, 0.02%)</title><rect x="838.9" y="579.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="841.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (9 samples, 0.21%)</title><rect x="839.2" y="627.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (9 samples, 0.21%)</title><rect x="839.2" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (8 samples, 0.19%)</title><rect x="839.2" y="595.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8 samples, 0.19%)</title><rect x="839.2" y="579.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8 samples, 0.19%)</title><rect x="839.2" y="563.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.12%)</title><rect x="839.2" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.2" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.07%)</title><rect x="839.2" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.2" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="839.2" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.2" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.02%)</title><rect x="839.2" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="842.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="839.5" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.05%)</title><rect x="839.5" y="499.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="842.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="840.1" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="840.1" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="840.1" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (2 samples, 0.05%)</title><rect x="840.1" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.05%)</title><rect x="840.1" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="843.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.07%)</title><rect x="840.6" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.07%)</title><rect x="840.6" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.02%)</title><rect x="840.6" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.6" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="840.6" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="840.6" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="840.6" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="843.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.05%)</title><rect x="840.9" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.05%)</title><rect x="840.9" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="840.9" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="840.9" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="840.9" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.02%)</title><rect x="840.9" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="843.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="841.2" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="841.2" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1 samples, 0.02%)</title><rect x="841.2" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="844.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="841.5" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="841.5" y="579.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.02%)</title><rect x="841.5" y="563.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="841.5" y="547.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="841.5" y="531.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="841.5" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="841.5" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (1 samples, 0.02%)</title><rect x="841.5" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1 samples, 0.02%)</title><rect x="841.5" y="467.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="841.5" y="451.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="841.5" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="841.5" y="419.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.02%)</title><rect x="841.5" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.02%)</title><rect x="841.5" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1 samples, 0.02%)</title><rect x="841.5" y="371.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="844.5" y="382.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13375] (189 samples, 4.48%)</title><rect x="841.7" y="819.0" width="53.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="844.7" y="830.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (189 samples, 4.48%)</title><rect x="841.7" y="803.0" width="53.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.7" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (189 samples, 4.48%)</title><rect x="841.7" y="787.0" width="53.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.7" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (189 samples, 4.48%)</title><rect x="841.7" y="771.0" width="53.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.7" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (107 samples, 2.54%)</title><rect x="841.7" y="755.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.7" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (107 samples, 2.54%)</title><rect x="841.7" y="739.0" width="30.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.7" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (107 samples, 2.54%)</title><rect x="841.7" y="723.0" width="30.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.7" y="734.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (107 samples, 2.54%)</title><rect x="841.7" y="707.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.7" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (107 samples, 2.54%)</title><rect x="841.7" y="691.0" width="30.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.7" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (107 samples, 2.54%)</title><rect x="841.7" y="675.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.7" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (107 samples, 2.54%)</title><rect x="841.7" y="659.0" width="30.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.7" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (107 samples, 2.54%)</title><rect x="841.7" y="643.0" width="30.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.7" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (107 samples, 2.54%)</title><rect x="841.7" y="627.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.7" y="638.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (73 samples, 1.73%)</title><rect x="841.7" y="611.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (73 samples, 1.73%)</title><rect x="841.7" y="595.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (73 samples, 1.73%)</title><rect x="841.7" y="579.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (73 samples, 1.73%)</title><rect x="841.7" y="563.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (73 samples, 1.73%)</title><rect x="841.7" y="547.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (73 samples, 1.73%)</title><rect x="841.7" y="531.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (73 samples, 1.73%)</title><rect x="841.7" y="515.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (73 samples, 1.73%)</title><rect x="841.7" y="499.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="841.7" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="841.7" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.get$Lambda (1 samples, 0.02%)</title><rect x="841.7" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$226 (1 samples, 0.02%)</title><rect x="841.7" y="435.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="844.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.05%)</title><rect x="842.0" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.05%)</title><rect x="842.0" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.02%)</title><rect x="842.0" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="845.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="842.3" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="842.3" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="842.3" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="845.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="842.6" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="842.6" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="842.6" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="845.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="842.9" y="451.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="842.9" y="435.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="842.9" y="419.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="845.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (68 samples, 1.61%)</title><rect x="843.1" y="483.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (55 samples, 1.30%)</title><rect x="843.1" y="467.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (55 samples, 1.30%)</title><rect x="843.1" y="451.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="843.1" y="435.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="846.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (54 samples, 1.28%)</title><rect x="843.4" y="435.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (54 samples, 1.28%)</title><rect x="843.4" y="419.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="843.4" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.02%)</title><rect x="843.4" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="846.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="843.7" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="843.7" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="843.7" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="843.7" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="843.7" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="843.7" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="846.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.05%)</title><rect x="844.0" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.05%)</title><rect x="844.0" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.05%)</title><rect x="844.0" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.05%)</title><rect x="844.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.05%)</title><rect x="844.0" y="339.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="847.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (50 samples, 1.19%)</title><rect x="844.5" y="403.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.14%)</title><rect x="844.5" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.14%)</title><rect x="844.5" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6 samples, 0.14%)</title><rect x="844.5" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.5" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="844.5" y="339.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="847.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="846.2" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="846.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="846.2" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="849.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.21%)</title><rect x="846.5" y="387.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="846.5" y="371.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="846.5" y="355.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.5" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="846.5" y="339.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="849.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="849.0" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="849.0" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.02%)</title><rect x="849.0" y="355.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="852.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (28 samples, 0.66%)</title><rect x="849.3" y="387.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (11 samples, 0.26%)</title><rect x="849.3" y="371.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.12%)</title><rect x="849.3" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="849.3" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.12%)</title><rect x="849.3" y="323.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.12%)</title><rect x="849.3" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.3" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="849.3" y="291.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="852.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.02%)</title><rect x="850.7" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.02%)</title><rect x="850.7" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.02%)</title><rect x="850.7" y="323.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="853.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (5 samples, 0.12%)</title><rect x="851.0" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.0" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.12%)</title><rect x="851.0" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (5 samples, 0.12%)</title><rect x="851.0" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.12%)</title><rect x="851.0" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.0" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (5 samples, 0.12%)</title><rect x="851.0" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.0" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.12%)</title><rect x="851.0" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (5 samples, 0.12%)</title><rect x="851.0" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.12%)</title><rect x="851.0" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="851.0" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="851.0" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.0" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="851.0" y="195.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="854.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="851.5" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.5" y="206.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="851.5" y="179.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="854.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (17 samples, 0.40%)</title><rect x="852.4" y="371.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.40%)</title><rect x="852.4" y="355.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17 samples, 0.40%)</title><rect x="852.4" y="339.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="852.4" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="855.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="852.7" y="323.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="855.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.31%)</title><rect x="852.9" y="323.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (13 samples, 0.31%)</title><rect x="852.9" y="307.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.31%)</title><rect x="852.9" y="291.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="852.9" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="852.9" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.05%)</title><rect x="852.9" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.05%)</title><rect x="852.9" y="227.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="855.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="853.5" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.05%)</title><rect x="853.5" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="853.5" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="853.5" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="853.5" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="853.5" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="853.5" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="853.5" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="853.5" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="856.5" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.09%)</title><rect x="854.1" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.1" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.09%)</title><rect x="854.1" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.07%)</title><rect x="854.1" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="854.1" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="854.1" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="857.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="854.9" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.9" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="854.9" y="227.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="857.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.12%)</title><rect x="855.2" y="275.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.12%)</title><rect x="855.2" y="259.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="858.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="856.6" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="856.6" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="859.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.02%)</title><rect x="857.1" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="857.1" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="857.1" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (1 samples, 0.02%)</title><rect x="857.1" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="857.1" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="857.1" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="857.1" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="860.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.09%)</title><rect x="857.4" y="387.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="857.4" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="860.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="857.7" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="857.7" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="860.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="858.0" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="858.0" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="861.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (4 samples, 0.09%)</title><rect x="858.5" y="467.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="861.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.21%)</title><rect x="859.7" y="467.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="859.7" y="451.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="859.7" y="435.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/1697199018.get$Lambda (1 samples, 0.02%)</title><rect x="859.7" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$204 (1 samples, 0.02%)</title><rect x="859.7" y="403.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="862.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (5 samples, 0.12%)</title><rect x="859.9" y="451.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="862.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="861.3" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="861.3" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="861.3" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="861.3" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="861.3" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="861.3" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (1 samples, 0.02%)</title><rect x="861.3" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="861.3" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="861.3" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.02%)</title><rect x="861.3" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="864.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="861.6" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.6" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="861.6" y="435.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="864.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1 samples, 0.02%)</title><rect x="861.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="861.9" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="864.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="862.2" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="862.2" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="862.2" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="865.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="862.5" y="579.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="862.5" y="563.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="862.5" y="547.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="865.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (32 samples, 0.76%)</title><rect x="862.7" y="611.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="862.7" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="862.7" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$190/511526115.get$Lambda (1 samples, 0.02%)</title><rect x="862.7" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$190 (1 samples, 0.02%)</title><rect x="862.7" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="865.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="863.0" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="863.0" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="863.0" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="863.0" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="863.0" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="866.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (30 samples, 0.71%)</title><rect x="863.3" y="595.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (26 samples, 0.62%)</title><rect x="863.3" y="579.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (26 samples, 0.62%)</title><rect x="863.3" y="563.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (25 samples, 0.59%)</title><rect x="863.3" y="547.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (25 samples, 0.59%)</title><rect x="863.3" y="531.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (25 samples, 0.59%)</title><rect x="863.3" y="515.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (25 samples, 0.59%)</title><rect x="863.3" y="499.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (12 samples, 0.28%)</title><rect x="863.3" y="483.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.28%)</title><rect x="863.3" y="467.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (12 samples, 0.28%)</title><rect x="863.3" y="451.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (11 samples, 0.26%)</title><rect x="863.3" y="435.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (11 samples, 0.26%)</title><rect x="863.3" y="419.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (11 samples, 0.26%)</title><rect x="863.3" y="403.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (11 samples, 0.26%)</title><rect x="863.3" y="387.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (6 samples, 0.14%)</title><rect x="863.3" y="371.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.02%)</title><rect x="863.3" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="863.3" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="863.3" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.3" y="334.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="863.3" y="307.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="866.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4 samples, 0.09%)</title><rect x="863.6" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (4 samples, 0.09%)</title><rect x="863.6" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (4 samples, 0.09%)</title><rect x="863.6" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.05%)</title><rect x="863.6" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="863.6" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.05%)</title><rect x="863.6" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.05%)</title><rect x="863.6" y="259.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="866.6" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="864.1" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (2 samples, 0.05%)</title><rect x="864.1" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.05%)</title><rect x="864.1" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.1" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.05%)</title><rect x="864.1" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.05%)</title><rect x="864.1" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.05%)</title><rect x="864.1" y="227.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="867.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.02%)</title><rect x="864.7" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.7" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="864.7" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.12%)</title><rect x="865.0" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="865.0" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="865.0" y="339.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="868.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="865.5" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="865.5" y="339.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="868.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="866.4" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="866.4" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="866.4" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="869.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (13 samples, 0.31%)</title><rect x="866.7" y="483.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (2 samples, 0.05%)</title><rect x="866.7" y="467.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="869.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (11 samples, 0.26%)</title><rect x="867.2" y="467.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1 samples, 0.02%)</title><rect x="867.2" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="870.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (2 samples, 0.05%)</title><rect x="867.5" y="451.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="870.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="868.1" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="871.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.07%)</title><rect x="868.6" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.02%)</title><rect x="868.6" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="871.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (1 samples, 0.02%)</title><rect x="868.9" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="871.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="869.2" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="872.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.02%)</title><rect x="869.5" y="451.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.02%)</title><rect x="869.5" y="435.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.02%)</title><rect x="869.5" y="419.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="869.5" y="403.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="869.5" y="387.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="872.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="869.5" y="371.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="869.5" y="355.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="872.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.05%)</title><rect x="869.7" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (1 samples, 0.02%)</title><rect x="869.7" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="869.7" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.get$Lambda (1 samples, 0.02%)</title><rect x="869.7" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$154 (1 samples, 0.02%)</title><rect x="869.7" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="872.7" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="870.0" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (1 samples, 0.02%)</title><rect x="870.0" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.02%)</title><rect x="870.0" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.0" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (1 samples, 0.02%)</title><rect x="870.0" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="873.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="870.3" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="870.3" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="870.3" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="873.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="870.6" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="870.6" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="870.6" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="870.6" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="870.6" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="873.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.07%)</title><rect x="870.9" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.02%)</title><rect x="870.9" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.02%)</title><rect x="870.9" y="547.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (1 samples, 0.02%)</title><rect x="870.9" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (1 samples, 0.02%)</title><rect x="870.9" y="515.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (1 samples, 0.02%)</title><rect x="870.9" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="870.9" y="483.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="870.9" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="870.9" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.9" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="870.9" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="873.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.05%)</title><rect x="871.1" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="871.1" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="874.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.09%)</title><rect x="871.7" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.09%)</title><rect x="871.7" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.09%)</title><rect x="871.7" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.09%)</title><rect x="871.7" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.09%)</title><rect x="871.7" y="691.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="874.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (11 samples, 0.26%)</title><rect x="872.8" y="755.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.26%)</title><rect x="872.8" y="739.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.26%)</title><rect x="872.8" y="723.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.26%)</title><rect x="872.8" y="707.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="872.8" y="691.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="872.8" y="675.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.26%)</title><rect x="872.8" y="659.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.26%)</title><rect x="872.8" y="643.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.26%)</title><rect x="872.8" y="627.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.26%)</title><rect x="872.8" y="611.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.26%)</title><rect x="872.8" y="595.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (9 samples, 0.21%)</title><rect x="872.8" y="579.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="872.8" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="872.8" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$258/1205559648.get$Lambda (1 samples, 0.02%)</title><rect x="872.8" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$258 (1 samples, 0.02%)</title><rect x="872.8" y="515.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="875.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (8 samples, 0.19%)</title><rect x="873.1" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.19%)</title><rect x="873.1" y="547.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8 samples, 0.19%)</title><rect x="873.1" y="531.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.19%)</title><rect x="873.1" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.07%)</title><rect x="873.1" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (2 samples, 0.05%)</title><rect x="873.1" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.05%)</title><rect x="873.1" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.05%)</title><rect x="873.1" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="873.1" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="873.1" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="873.1" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="876.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.02%)</title><rect x="873.4" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.02%)</title><rect x="873.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="873.4" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="873.4" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="873.4" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="873.4" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="876.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (1 samples, 0.02%)</title><rect x="873.7" y="483.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.02%)</title><rect x="873.7" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="873.7" y="451.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="873.7" y="435.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="876.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.12%)</title><rect x="873.9" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.12%)</title><rect x="873.9" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (5 samples, 0.12%)</title><rect x="873.9" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (5 samples, 0.12%)</title><rect x="873.9" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5 samples, 0.12%)</title><rect x="873.9" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (5 samples, 0.12%)</title><rect x="873.9" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5 samples, 0.12%)</title><rect x="873.9" y="403.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="873.9" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="873.9" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="873.9" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="873.9" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="873.9" y="323.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="876.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.02%)</title><rect x="874.2" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="874.2" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="874.2" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="874.2" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="877.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.07%)</title><rect x="874.5" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (3 samples, 0.07%)</title><rect x="874.5" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (2 samples, 0.05%)</title><rect x="874.5" y="355.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="877.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="875.1" y="355.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="875.1" y="339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="875.1" y="323.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="878.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="875.3" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="875.3" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="875.3" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="875.3" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="875.3" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.05%)</title><rect x="875.3" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.05%)</title><rect x="875.3" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.05%)</title><rect x="875.3" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (67 samples, 1.59%)</title><rect x="875.9" y="755.0" width="18.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (67 samples, 1.59%)</title><rect x="875.9" y="739.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (55 samples, 1.30%)</title><rect x="875.9" y="723.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (55 samples, 1.30%)</title><rect x="875.9" y="707.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (55 samples, 1.30%)</title><rect x="875.9" y="691.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (55 samples, 1.30%)</title><rect x="875.9" y="675.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (55 samples, 1.30%)</title><rect x="875.9" y="659.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (55 samples, 1.30%)</title><rect x="875.9" y="643.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (55 samples, 1.30%)</title><rect x="875.9" y="627.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (31 samples, 0.74%)</title><rect x="875.9" y="611.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 0.74%)</title><rect x="875.9" y="595.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (31 samples, 0.74%)</title><rect x="875.9" y="579.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (31 samples, 0.74%)</title><rect x="875.9" y="563.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 0.74%)</title><rect x="875.9" y="547.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (31 samples, 0.74%)</title><rect x="875.9" y="531.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (31 samples, 0.74%)</title><rect x="875.9" y="515.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (29 samples, 0.69%)</title><rect x="875.9" y="499.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 0.69%)</title><rect x="875.9" y="483.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (28 samples, 0.66%)</title><rect x="875.9" y="467.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (26 samples, 0.62%)</title><rect x="875.9" y="451.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (26 samples, 0.62%)</title><rect x="875.9" y="435.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="875.9" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="875.9" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.get$Lambda (2 samples, 0.05%)</title><rect x="875.9" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$295 (2 samples, 0.05%)</title><rect x="875.9" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="878.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (24 samples, 0.57%)</title><rect x="876.5" y="419.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (24 samples, 0.57%)</title><rect x="876.5" y="403.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (2 samples, 0.05%)</title><rect x="876.5" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.05%)</title><rect x="876.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.05%)</title><rect x="876.5" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (1 samples, 0.02%)</title><rect x="876.5" y="339.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="879.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="876.7" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="876.7" y="323.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="879.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (22 samples, 0.52%)</title><rect x="877.0" y="387.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131860577.linkToTargetMethod (1 samples, 0.02%)</title><rect x="877.0" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/632006740.invokeStatic (1 samples, 0.02%)</title><rect x="877.0" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.get$Lambda (1 samples, 0.02%)</title><rect x="877.0" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$272 (1 samples, 0.02%)</title><rect x="877.0" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="880.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.09%)</title><rect x="877.3" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.02%)</title><rect x="877.3" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="877.3" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="877.3" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$269/2074766541.get (1 samples, 0.02%)</title><rect x="877.3" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1 samples, 0.02%)</title><rect x="877.3" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="880.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.07%)</title><rect x="877.6" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (3 samples, 0.07%)</title><rect x="877.6" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="880.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="878.4" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="878.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="878.4" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="878.4" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="878.4" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="881.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="878.7" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="878.7" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="878.7" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="878.7" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="878.7" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="881.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (1 samples, 0.02%)</title><rect x="879.0" y="371.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="882.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.33%)</title><rect x="879.3" y="371.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="882.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (14 samples, 0.33%)</title><rect x="879.3" y="355.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (14 samples, 0.33%)</title><rect x="879.3" y="339.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="879.3" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="879.3" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.get$Lambda (1 samples, 0.02%)</title><rect x="879.3" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$273 (1 samples, 0.02%)</title><rect x="879.3" y="275.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="882.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.get$Lambda (3 samples, 0.07%)</title><rect x="879.5" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (3 samples, 0.07%)</title><rect x="879.5" y="275.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="882.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="880.4" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="880.4" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="880.4" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="883.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="880.7" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="880.7" y="275.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="883.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="880.7" y="259.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="883.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.07%)</title><rect x="880.9" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.07%)</title><rect x="880.9" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="880.9" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="880.9" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$285/552175013.get$Lambda (1 samples, 0.02%)</title><rect x="880.9" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$285 (1 samples, 0.02%)</title><rect x="880.9" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="883.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="881.2" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="881.2" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="881.2" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.05%)</title><rect x="881.2" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="884.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.07%)</title><rect x="881.8" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="881.8" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (3 samples, 0.07%)</title><rect x="881.8" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="881.8" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="881.8" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="881.8" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="884.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="882.1" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="882.1" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.1" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="882.1" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="885.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.05%)</title><rect x="882.6" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.05%)</title><rect x="882.6" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="882.6" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.05%)</title><rect x="882.6" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="882.6" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="882.6" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="882.6" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.6" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="882.6" y="211.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.05%)</title><rect x="883.2" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.05%)</title><rect x="883.2" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.02%)</title><rect x="883.2" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.02%)</title><rect x="883.2" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="883.2" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.2" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.02%)</title><rect x="883.2" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="886.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="883.5" y="419.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="883.5" y="403.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="886.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="883.7" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="883.7" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="886.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.apply (1 samples, 0.02%)</title><rect x="883.7" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.02%)</title><rect x="883.7" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="883.7" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="883.7" y="387.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="886.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (2 samples, 0.05%)</title><rect x="884.0" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.05%)</title><rect x="884.0" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (2 samples, 0.05%)</title><rect x="884.0" y="467.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="887.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (24 samples, 0.57%)</title><rect x="884.6" y="611.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.02%)</title><rect x="884.6" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="884.6" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="884.6" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="884.6" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="884.6" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.6" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="884.6" y="515.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="887.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.05%)</title><rect x="884.9" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="884.9" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="884.9" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="884.9" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="884.9" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.9" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="884.9" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="887.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.24%)</title><rect x="885.4" y="595.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.24%)</title><rect x="885.4" y="579.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.24%)</title><rect x="885.4" y="563.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="885.4" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="888.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="885.7" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="885.7" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="888.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7 samples, 0.17%)</title><rect x="886.0" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (7 samples, 0.17%)</title><rect x="886.0" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.17%)</title><rect x="886.0" y="515.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="886.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.02%)</title><rect x="886.0" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="886.0" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="886.0" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="886.0" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="886.0" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="886.0" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="886.0" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="886.0" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="889.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.09%)</title><rect x="886.3" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.09%)</title><rect x="886.3" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="886.3" y="467.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="886.3" y="451.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="886.3" y="435.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="889.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.07%)</title><rect x="886.5" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.07%)</title><rect x="886.5" y="451.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="889.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="887.4" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="887.4" y="483.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="890.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="887.9" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="887.9" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (11 samples, 0.26%)</title><rect x="888.2" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="888.2" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="888.2" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.2" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="888.2" y="547.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="891.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="888.8" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="888.8" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="888.8" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="891.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (7 samples, 0.17%)</title><rect x="889.3" y="579.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="889.3" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="889.3" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="889.3" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="892.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="889.6" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="889.6" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="889.6" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="892.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="889.9" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="889.9" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="889.9" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="889.9" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.9" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="889.9" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="892.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.09%)</title><rect x="890.2" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="890.2" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.05%)</title><rect x="890.2" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="893.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="890.7" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.05%)</title><rect x="890.7" y="531.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="893.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (12 samples, 0.28%)</title><rect x="891.3" y="723.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.28%)</title><rect x="891.3" y="707.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.28%)</title><rect x="891.3" y="691.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (12 samples, 0.28%)</title><rect x="891.3" y="675.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12 samples, 0.28%)</title><rect x="891.3" y="659.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.26%)</title><rect x="891.3" y="643.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="891.3" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="891.3" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.02%)</title><rect x="891.3" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.02%)</title><rect x="891.3" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="894.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (10 samples, 0.24%)</title><rect x="891.6" y="627.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (10 samples, 0.24%)</title><rect x="891.6" y="611.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (8 samples, 0.19%)</title><rect x="891.6" y="595.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8 samples, 0.19%)</title><rect x="891.6" y="579.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8 samples, 0.19%)</title><rect x="891.6" y="563.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.05%)</title><rect x="891.6" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="891.6" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="891.6" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.05%)</title><rect x="891.6" y="499.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="894.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6 samples, 0.14%)</title><rect x="892.1" y="547.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.02%)</title><rect x="892.1" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.1" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.02%)</title><rect x="892.1" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="892.1" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="892.1" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.1" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.02%)</title><rect x="892.1" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="895.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.12%)</title><rect x="892.4" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3 samples, 0.07%)</title><rect x="892.4" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.4" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="892.4" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="892.4" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.02%)</title><rect x="892.4" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="895.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (2 samples, 0.05%)</title><rect x="892.7" y="499.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="895.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.02%)</title><rect x="893.3" y="515.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="893.3" y="499.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="893.3" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="893.3" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="893.3" y="451.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="896.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="893.5" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="893.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="893.5" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="893.5" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1 samples, 0.02%)</title><rect x="893.5" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="896.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.05%)</title><rect x="893.8" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.05%)</title><rect x="893.8" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.05%)</title><rect x="893.8" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.05%)</title><rect x="893.8" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="893.8" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.05%)</title><rect x="893.8" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="893.8" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (2 samples, 0.05%)</title><rect x="893.8" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.05%)</title><rect x="893.8" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.05%)</title><rect x="893.8" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="893.8" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.05%)</title><rect x="893.8" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (2 samples, 0.05%)</title><rect x="893.8" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.05%)</title><rect x="893.8" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2 samples, 0.05%)</title><rect x="893.8" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="896.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="894.4" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="894.4" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="894.4" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="894.4" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.02%)</title><rect x="894.4" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.02%)</title><rect x="894.4" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.02%)</title><rect x="894.4" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="894.4" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="894.4" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="894.4" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="897.4" y="510.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13376] (190 samples, 4.51%)</title><rect x="894.7" y="819.0" width="53.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="897.7" y="830.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (190 samples, 4.51%)</title><rect x="894.7" y="803.0" width="53.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.7" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (190 samples, 4.51%)</title><rect x="894.7" y="787.0" width="53.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.7" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (190 samples, 4.51%)</title><rect x="894.7" y="771.0" width="53.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.7" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (122 samples, 2.89%)</title><rect x="894.7" y="755.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.7" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (122 samples, 2.89%)</title><rect x="894.7" y="739.0" width="34.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.7" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (122 samples, 2.89%)</title><rect x="894.7" y="723.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.7" y="734.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="894.7" y="707.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="897.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (121 samples, 2.87%)</title><rect x="894.9" y="707.0" width="33.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.9" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (121 samples, 2.87%)</title><rect x="894.9" y="691.0" width="33.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.9" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (121 samples, 2.87%)</title><rect x="894.9" y="675.0" width="33.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.9" y="686.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="894.9" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="894.9" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="894.9" y="627.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="897.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (118 samples, 2.80%)</title><rect x="895.2" y="659.0" width="33.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.2" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (118 samples, 2.80%)</title><rect x="895.2" y="643.0" width="33.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.2" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (118 samples, 2.80%)</title><rect x="895.2" y="627.0" width="33.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.2" y="638.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="895.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="895.2" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.get$Lambda (1 samples, 0.02%)</title><rect x="895.2" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$133 (1 samples, 0.02%)</title><rect x="895.2" y="563.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="898.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (77 samples, 1.83%)</title><rect x="895.5" y="611.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.5" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (77 samples, 1.83%)</title><rect x="895.5" y="595.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (77 samples, 1.83%)</title><rect x="895.5" y="579.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.5" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (77 samples, 1.83%)</title><rect x="895.5" y="563.0" width="21.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.5" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (77 samples, 1.83%)</title><rect x="895.5" y="547.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.5" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (77 samples, 1.83%)</title><rect x="895.5" y="531.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.5" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (77 samples, 1.83%)</title><rect x="895.5" y="515.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.5" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (77 samples, 1.83%)</title><rect x="895.5" y="499.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="895.5" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="895.5" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.02%)</title><rect x="895.5" y="451.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="898.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (76 samples, 1.80%)</title><rect x="895.8" y="483.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.8" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="895.8" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="895.8" y="451.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.get$Lambda (1 samples, 0.02%)</title><rect x="895.8" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (1 samples, 0.02%)</title><rect x="895.8" y="419.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="898.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (71 samples, 1.68%)</title><rect x="896.0" y="467.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (71 samples, 1.68%)</title><rect x="896.0" y="451.0" width="19.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (69 samples, 1.64%)</title><rect x="896.0" y="435.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (69 samples, 1.64%)</title><rect x="896.0" y="419.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="896.0" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="896.0" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$240/1159464308.get$Lambda (1 samples, 0.02%)</title><rect x="896.0" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$240 (1 samples, 0.02%)</title><rect x="896.0" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="899.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="896.3" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="896.3" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="896.3" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="896.3" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="896.3" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="899.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="896.6" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="896.6" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="896.6" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="896.6" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="896.6" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="896.6" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="896.6" y="307.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="899.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.02%)</title><rect x="896.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="896.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="896.9" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="896.9" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="896.9" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.02%)</title><rect x="896.9" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="899.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (65 samples, 1.54%)</title><rect x="897.2" y="403.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.09%)</title><rect x="897.2" y="387.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.09%)</title><rect x="897.2" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4 samples, 0.09%)</title><rect x="897.2" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.2" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="897.2" y="339.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="900.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.12%)</title><rect x="898.3" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="898.3" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="898.3" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.3" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="898.3" y="339.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="901.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (45 samples, 1.07%)</title><rect x="899.7" y="387.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (27 samples, 0.64%)</title><rect x="899.7" y="371.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.33%)</title><rect x="899.7" y="355.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.33%)</title><rect x="899.7" y="339.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (14 samples, 0.33%)</title><rect x="899.7" y="323.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.33%)</title><rect x="899.7" y="307.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.7" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="899.7" y="291.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="902.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.02%)</title><rect x="903.6" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="903.6" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.02%)</title><rect x="903.6" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.02%)</title><rect x="903.6" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="906.6" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (12 samples, 0.28%)</title><rect x="903.9" y="355.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.9" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (12 samples, 0.28%)</title><rect x="903.9" y="339.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (12 samples, 0.28%)</title><rect x="903.9" y="323.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (12 samples, 0.28%)</title><rect x="903.9" y="307.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (12 samples, 0.28%)</title><rect x="903.9" y="291.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (12 samples, 0.28%)</title><rect x="903.9" y="275.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (12 samples, 0.28%)</title><rect x="903.9" y="259.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (12 samples, 0.28%)</title><rect x="903.9" y="243.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.28%)</title><rect x="903.9" y="227.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.28%)</title><rect x="903.9" y="211.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="903.9" y="195.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="906.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="905.6" y="195.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.6" y="206.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="905.6" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="908.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (18 samples, 0.43%)</title><rect x="907.2" y="371.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.43%)</title><rect x="907.2" y="355.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.43%)</title><rect x="907.2" y="339.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="907.2" y="323.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="910.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="907.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.8" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.02%)</title><rect x="907.8" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="910.8" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.21%)</title><rect x="908.1" y="323.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (9 samples, 0.21%)</title><rect x="908.1" y="307.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.21%)</title><rect x="908.1" y="291.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="908.1" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="908.1" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (1 samples, 0.02%)</title><rect x="908.1" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.1" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (1 samples, 0.02%)</title><rect x="908.1" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="911.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="908.4" y="275.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (1 samples, 0.02%)</title><rect x="908.4" y="259.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="908.4" y="243.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="908.4" y="227.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="908.4" y="211.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="908.4" y="195.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="908.4" y="179.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="908.4" y="163.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="908.4" y="147.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="911.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.12%)</title><rect x="908.6" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.6" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.12%)</title><rect x="908.6" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.07%)</title><rect x="908.6" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="908.6" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="908.6" y="211.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="911.6" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.05%)</title><rect x="909.5" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.05%)</title><rect x="909.5" y="227.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="912.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="910.0" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="910.0" y="259.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="913.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (6 samples, 0.14%)</title><rect x="910.6" y="323.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.14%)</title><rect x="910.6" y="307.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="913.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.07%)</title><rect x="912.3" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.05%)</title><rect x="912.3" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.3" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="912.3" y="355.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="915.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="912.8" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="912.8" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (1 samples, 0.02%)</title><rect x="912.8" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="912.8" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="912.8" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="912.8" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="915.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.05%)</title><rect x="913.1" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.05%)</title><rect x="913.1" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="913.1" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.05%)</title><rect x="913.1" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (2 samples, 0.05%)</title><rect x="913.1" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="913.1" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="913.1" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="913.1" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.1" y="286.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="913.1" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="916.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.14%)</title><rect x="913.7" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="913.7" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="916.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="914.2" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="914.2" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="917.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="914.5" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.5" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="914.5" y="355.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="917.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="915.4" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="915.4" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="915.4" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="918.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1 samples, 0.02%)</title><rect x="915.9" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="918.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="916.2" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (1 samples, 0.02%)</title><rect x="916.2" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="919.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.05%)</title><rect x="916.5" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.5" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.02%)</title><rect x="916.5" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="919.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="916.8" y="435.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="916.8" y="419.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="916.8" y="403.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="919.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="917.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="917.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="917.0" y="579.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (39 samples, 0.93%)</title><rect x="917.3" y="611.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="917.3" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="917.3" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="917.3" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="917.3" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="917.3" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="920.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (37 samples, 0.88%)</title><rect x="917.9" y="595.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (33 samples, 0.78%)</title><rect x="917.9" y="579.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (33 samples, 0.78%)</title><rect x="917.9" y="563.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (33 samples, 0.78%)</title><rect x="917.9" y="547.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (33 samples, 0.78%)</title><rect x="917.9" y="531.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (33 samples, 0.78%)</title><rect x="917.9" y="515.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (33 samples, 0.78%)</title><rect x="917.9" y="499.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (16 samples, 0.38%)</title><rect x="917.9" y="483.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (16 samples, 0.38%)</title><rect x="917.9" y="467.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (16 samples, 0.38%)</title><rect x="917.9" y="451.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (15 samples, 0.36%)</title><rect x="917.9" y="435.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (15 samples, 0.36%)</title><rect x="917.9" y="419.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (15 samples, 0.36%)</title><rect x="917.9" y="403.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (15 samples, 0.36%)</title><rect x="917.9" y="387.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4 samples, 0.09%)</title><rect x="917.9" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4 samples, 0.09%)</title><rect x="917.9" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (4 samples, 0.09%)</title><rect x="917.9" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (4 samples, 0.09%)</title><rect x="917.9" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.05%)</title><rect x="917.9" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="917.9" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.05%)</title><rect x="917.9" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.05%)</title><rect x="917.9" y="259.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="920.9" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="918.4" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (2 samples, 0.05%)</title><rect x="918.4" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.05%)</title><rect x="918.4" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.4" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.05%)</title><rect x="918.4" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.05%)</title><rect x="918.4" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.05%)</title><rect x="918.4" y="227.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="921.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (11 samples, 0.26%)</title><rect x="919.0" y="371.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.0" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.07%)</title><rect x="919.0" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="922.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="919.8" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="919.8" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="922.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.14%)</title><rect x="920.4" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.14%)</title><rect x="920.4" y="339.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="923.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="922.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="922.1" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="922.1" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="925.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (17 samples, 0.40%)</title><rect x="922.4" y="483.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1 samples, 0.02%)</title><rect x="922.4" y="467.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (16 samples, 0.38%)</title><rect x="922.6" y="467.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.02%)</title><rect x="922.6" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="925.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.02%)</title><rect x="922.9" y="451.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="925.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="923.2" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="926.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="923.2" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="926.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1 samples, 0.02%)</title><rect x="923.5" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="926.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.02%)</title><rect x="923.8" y="451.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="926.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1 samples, 0.02%)</title><rect x="924.0" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="927.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.07%)</title><rect x="924.3" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.02%)</title><rect x="924.3" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="927.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="924.6" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="927.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="924.9" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.02%)</title><rect x="924.9" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="927.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6 samples, 0.14%)</title><rect x="925.2" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (1 samples, 0.02%)</title><rect x="925.2" y="435.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="928.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5 samples, 0.12%)</title><rect x="925.4" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (2 samples, 0.05%)</title><rect x="925.4" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="928.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1 samples, 0.02%)</title><rect x="926.0" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="929.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="926.3" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.02%)</title><rect x="926.3" y="403.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="929.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="926.6" y="419.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (1 samples, 0.02%)</title><rect x="926.6" y="403.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="929.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.02%)</title><rect x="926.8" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.8" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="926.8" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (1 samples, 0.02%)</title><rect x="926.8" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.02%)</title><rect x="926.8" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="929.8" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.02%)</title><rect x="926.8" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.8" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.02%)</title><rect x="926.8" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.02%)</title><rect x="926.8" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="929.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.02%)</title><rect x="926.8" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.02%)</title><rect x="926.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.8" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.02%)</title><rect x="926.8" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="929.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="927.1" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="927.1" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="927.1" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="930.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="927.1" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="930.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="927.1" y="515.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="930.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.05%)</title><rect x="927.7" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.02%)</title><rect x="927.7" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.02%)</title><rect x="927.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (1 samples, 0.02%)</title><rect x="927.7" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (1 samples, 0.02%)</title><rect x="927.7" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (1 samples, 0.02%)</title><rect x="927.7" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="927.7" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="927.7" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="927.7" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.7" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="927.7" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="930.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="928.0" y="563.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="928.0" y="547.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="931.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1 samples, 0.02%)</title><rect x="928.2" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.02%)</title><rect x="928.2" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="928.2" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.2" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="928.2" y="611.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="931.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.02%)</title><rect x="928.5" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.02%)</title><rect x="928.5" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.02%)</title><rect x="928.5" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="928.5" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.5" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.02%)</title><rect x="928.5" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="928.5" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="931.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="928.5" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.5" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.02%)</title><rect x="928.5" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="928.5" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="928.5" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="928.5" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.5" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.02%)</title><rect x="928.5" y="483.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="931.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.07%)</title><rect x="928.8" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.07%)</title><rect x="928.8" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.07%)</title><rect x="928.8" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.07%)</title><rect x="928.8" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.07%)</title><rect x="928.8" y="691.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="931.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (9 samples, 0.21%)</title><rect x="929.6" y="755.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (9 samples, 0.21%)</title><rect x="929.6" y="739.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (9 samples, 0.21%)</title><rect x="929.6" y="723.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (9 samples, 0.21%)</title><rect x="929.6" y="707.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="929.6" y="691.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="929.6" y="675.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.21%)</title><rect x="929.6" y="659.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.21%)</title><rect x="929.6" y="643.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.21%)</title><rect x="929.6" y="627.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.21%)</title><rect x="929.6" y="611.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (9 samples, 0.21%)</title><rect x="929.6" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (7 samples, 0.17%)</title><rect x="929.6" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7 samples, 0.17%)</title><rect x="929.6" y="563.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.17%)</title><rect x="929.6" y="547.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7 samples, 0.17%)</title><rect x="929.6" y="531.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.17%)</title><rect x="929.6" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.07%)</title><rect x="929.6" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="929.6" y="483.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="932.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (2 samples, 0.05%)</title><rect x="929.9" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.05%)</title><rect x="929.9" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.05%)</title><rect x="929.9" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.05%)</title><rect x="929.9" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="932.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="929.9" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="929.9" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="929.9" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="929.9" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="929.9" y="355.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="932.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.09%)</title><rect x="930.5" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.09%)</title><rect x="930.5" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (4 samples, 0.09%)</title><rect x="930.5" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.09%)</title><rect x="930.5" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.09%)</title><rect x="930.5" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (4 samples, 0.09%)</title><rect x="930.5" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.09%)</title><rect x="930.5" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="930.5" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="930.5" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.get$Lambda (1 samples, 0.02%)</title><rect x="930.5" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$250 (1 samples, 0.02%)</title><rect x="930.5" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="933.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.02%)</title><rect x="930.8" y="387.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="930.8" y="371.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="930.8" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="930.8" y="339.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="933.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.05%)</title><rect x="931.0" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1 samples, 0.02%)</title><rect x="931.0" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="931.0" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="931.0" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="931.0" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="934.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="931.3" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.02%)</title><rect x="931.3" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="934.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="931.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="931.6" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="931.6" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="931.6" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="931.6" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.05%)</title><rect x="931.6" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.6" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.05%)</title><rect x="931.6" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.6" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.05%)</title><rect x="931.6" y="467.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="934.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (56 samples, 1.33%)</title><rect x="932.2" y="755.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (56 samples, 1.33%)</title><rect x="932.2" y="739.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (49 samples, 1.16%)</title><rect x="932.2" y="723.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (49 samples, 1.16%)</title><rect x="932.2" y="707.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (49 samples, 1.16%)</title><rect x="932.2" y="691.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.02%)</title><rect x="932.2" y="675.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.02%)</title><rect x="932.2" y="659.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.02%)</title><rect x="932.2" y="643.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.02%)</title><rect x="932.2" y="627.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="932.2" y="611.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="932.2" y="595.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="932.2" y="579.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (1 samples, 0.02%)</title><rect x="932.2" y="563.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (1 samples, 0.02%)</title><rect x="932.2" y="547.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="935.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (48 samples, 1.14%)</title><rect x="932.4" y="675.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (48 samples, 1.14%)</title><rect x="932.4" y="659.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (48 samples, 1.14%)</title><rect x="932.4" y="643.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (48 samples, 1.14%)</title><rect x="932.4" y="627.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (21 samples, 0.50%)</title><rect x="932.4" y="611.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.50%)</title><rect x="932.4" y="595.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 0.50%)</title><rect x="932.4" y="579.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.50%)</title><rect x="932.4" y="563.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.50%)</title><rect x="932.4" y="547.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (21 samples, 0.50%)</title><rect x="932.4" y="531.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 0.50%)</title><rect x="932.4" y="515.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (21 samples, 0.50%)</title><rect x="932.4" y="499.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.50%)</title><rect x="932.4" y="483.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (21 samples, 0.50%)</title><rect x="932.4" y="467.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="932.4" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="935.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (20 samples, 0.47%)</title><rect x="932.7" y="451.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (20 samples, 0.47%)</title><rect x="932.7" y="435.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="932.7" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="932.7" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.get$Lambda (1 samples, 0.02%)</title><rect x="932.7" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$295 (1 samples, 0.02%)</title><rect x="932.7" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="935.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.05%)</title><rect x="933.0" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="933.0" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.05%)</title><rect x="933.0" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="936.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (17 samples, 0.40%)</title><rect x="933.6" y="419.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (17 samples, 0.40%)</title><rect x="933.6" y="403.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (1 samples, 0.02%)</title><rect x="933.6" y="387.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.02%)</title><rect x="933.6" y="371.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.02%)</title><rect x="933.6" y="355.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (1 samples, 0.02%)</title><rect x="933.6" y="339.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="936.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (16 samples, 0.38%)</title><rect x="933.8" y="387.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131860577.linkToTargetMethod (1 samples, 0.02%)</title><rect x="933.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/632006740.invokeStatic (1 samples, 0.02%)</title><rect x="933.8" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.get$Lambda (1 samples, 0.02%)</title><rect x="933.8" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$272 (1 samples, 0.02%)</title><rect x="933.8" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="936.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.02%)</title><rect x="934.1" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.02%)</title><rect x="934.1" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="934.1" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="934.1" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="934.1" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="934.1" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.1" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.02%)</title><rect x="934.1" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.1" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1 samples, 0.02%)</title><rect x="934.1" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="937.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="934.4" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="934.4" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="934.4" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="937.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (1 samples, 0.02%)</title><rect x="934.7" y="371.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="937.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.28%)</title><rect x="935.0" y="371.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (12 samples, 0.28%)</title><rect x="935.0" y="355.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (12 samples, 0.28%)</title><rect x="935.0" y="339.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="935.0" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="935.0" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.get$Lambda (1 samples, 0.02%)</title><rect x="935.0" y="291.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (1 samples, 0.02%)</title><rect x="935.0" y="275.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="938.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="935.2" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="935.2" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.02%)</title><rect x="935.2" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="938.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (1 samples, 0.02%)</title><rect x="935.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="935.5" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="938.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.02%)</title><rect x="935.8" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.02%)</title><rect x="935.8" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="935.8" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="935.8" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$285/552175013.get$Lambda (1 samples, 0.02%)</title><rect x="935.8" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$285 (1 samples, 0.02%)</title><rect x="935.8" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="938.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.05%)</title><rect x="936.1" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="936.1" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.05%)</title><rect x="936.1" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="936.1" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.05%)</title><rect x="936.1" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="936.1" y="243.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="939.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (6 samples, 0.14%)</title><rect x="936.6" y="323.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1 samples, 0.02%)</title><rect x="936.6" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="939.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (5 samples, 0.12%)</title><rect x="936.9" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="936.9" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (5 samples, 0.12%)</title><rect x="936.9" y="275.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="936.9" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="936.9" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="936.9" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="939.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.09%)</title><rect x="937.2" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.09%)</title><rect x="937.2" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.2" y="238.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="937.2" y="211.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="940.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (27 samples, 0.64%)</title><rect x="938.3" y="611.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.02%)</title><rect x="938.3" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="938.3" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="938.3" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="938.3" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="938.3" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.3" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="938.3" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="941.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.05%)</title><rect x="938.6" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="938.6" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="938.6" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="938.6" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="938.6" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.6" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="938.6" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.07%)</title><rect x="939.2" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.2" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="939.2" y="579.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="942.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="939.4" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="939.4" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="939.4" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="939.4" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="942.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="939.7" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="939.7" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.7" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="939.7" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="942.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.24%)</title><rect x="940.0" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.24%)</title><rect x="940.0" y="579.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.24%)</title><rect x="940.0" y="563.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.0" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="940.0" y="547.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="943.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="940.3" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="943.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="940.8" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="940.8" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.get$Lambda (1 samples, 0.02%)</title><rect x="940.8" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (1 samples, 0.02%)</title><rect x="940.8" y="499.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="943.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.12%)</title><rect x="941.1" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.12%)</title><rect x="941.1" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.12%)</title><rect x="941.1" y="515.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.1" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="941.1" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="941.1" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="941.1" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="941.1" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="941.1" y="435.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="944.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="941.4" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="941.4" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="944.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="941.7" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="941.7" y="483.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="944.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="942.5" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="942.5" y="531.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="945.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (11 samples, 0.26%)</title><rect x="942.8" y="595.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="942.8" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="942.8" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="942.8" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="945.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="942.8" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="945.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (9 samples, 0.21%)</title><rect x="943.4" y="579.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="943.4" y="563.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="943.4" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="943.4" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.4" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="943.4" y="515.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="946.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="943.6" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="943.6" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="943.6" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="946.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="944.2" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="944.2" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="944.2" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="944.2" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="944.2" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="944.2" y="483.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.09%)</title><rect x="944.8" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="944.8" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.05%)</title><rect x="944.8" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="947.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.05%)</title><rect x="945.3" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.05%)</title><rect x="945.3" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="945.3" y="515.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="948.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7 samples, 0.17%)</title><rect x="945.9" y="723.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.17%)</title><rect x="945.9" y="707.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.17%)</title><rect x="945.9" y="691.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (7 samples, 0.17%)</title><rect x="945.9" y="675.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.17%)</title><rect x="945.9" y="659.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.17%)</title><rect x="945.9" y="643.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7 samples, 0.17%)</title><rect x="945.9" y="627.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7 samples, 0.17%)</title><rect x="945.9" y="611.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (5 samples, 0.12%)</title><rect x="945.9" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5 samples, 0.12%)</title><rect x="945.9" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5 samples, 0.12%)</title><rect x="945.9" y="563.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.07%)</title><rect x="945.9" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="945.9" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="945.9" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.02%)</title><rect x="945.9" y="499.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="948.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="946.2" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="946.2" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="946.2" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.05%)</title><rect x="946.2" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.05%)</title><rect x="946.2" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.2" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="946.2" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.2" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.05%)</title><rect x="946.2" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="949.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.05%)</title><rect x="946.7" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.05%)</title><rect x="946.7" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.02%)</title><rect x="946.7" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="946.7" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="946.7" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.02%)</title><rect x="946.7" y="467.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="949.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="947.0" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="947.0" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="947.0" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="947.0" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="947.0" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.02%)</title><rect x="947.0" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.05%)</title><rect x="947.3" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.05%)</title><rect x="947.3" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.05%)</title><rect x="947.3" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="947.3" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="947.3" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="947.3" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="947.3" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (1 samples, 0.02%)</title><rect x="947.3" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1 samples, 0.02%)</title><rect x="947.3" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="947.3" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="947.3" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="947.3" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.02%)</title><rect x="947.3" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.02%)</title><rect x="947.3" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1 samples, 0.02%)</title><rect x="947.3" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="950.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.02%)</title><rect x="947.6" y="547.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.6" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="947.6" y="531.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="950.6" y="542.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13377] (189 samples, 4.48%)</title><rect x="947.8" y="819.0" width="53.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="950.8" y="830.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (189 samples, 4.48%)</title><rect x="947.8" y="803.0" width="53.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.8" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (189 samples, 4.48%)</title><rect x="947.8" y="787.0" width="53.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.8" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (189 samples, 4.48%)</title><rect x="947.8" y="771.0" width="53.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.8" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (108 samples, 2.56%)</title><rect x="947.8" y="755.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 2.56%)</title><rect x="947.8" y="739.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.8" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (108 samples, 2.56%)</title><rect x="947.8" y="723.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.8" y="734.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (108 samples, 2.56%)</title><rect x="947.8" y="707.0" width="30.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.8" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (108 samples, 2.56%)</title><rect x="947.8" y="691.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.8" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (108 samples, 2.56%)</title><rect x="947.8" y="675.0" width="30.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.8" y="686.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.05%)</title><rect x="947.8" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.05%)</title><rect x="947.8" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="947.8" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="947.8" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="947.8" y="595.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="950.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="948.4" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="948.4" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.02%)</title><rect x="948.4" y="627.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="951.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="948.7" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="948.7" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="948.7" y="595.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="951.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (101 samples, 2.40%)</title><rect x="949.0" y="659.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.0" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (101 samples, 2.40%)</title><rect x="949.0" y="643.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.0" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (101 samples, 2.40%)</title><rect x="949.0" y="627.0" width="28.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.0" y="638.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (65 samples, 1.54%)</title><rect x="949.0" y="611.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (65 samples, 1.54%)</title><rect x="949.0" y="595.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (64 samples, 1.52%)</title><rect x="949.0" y="579.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (64 samples, 1.52%)</title><rect x="949.0" y="563.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (64 samples, 1.52%)</title><rect x="949.0" y="547.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (64 samples, 1.52%)</title><rect x="949.0" y="531.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (64 samples, 1.52%)</title><rect x="949.0" y="515.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (64 samples, 1.52%)</title><rect x="949.0" y="499.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (64 samples, 1.52%)</title><rect x="949.0" y="483.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="949.0" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="949.0" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.get$Lambda (1 samples, 0.02%)</title><rect x="949.0" y="435.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (1 samples, 0.02%)</title><rect x="949.0" y="419.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="952.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$224/2044958180.get$Lambda (1 samples, 0.02%)</title><rect x="949.2" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$224 (1 samples, 0.02%)</title><rect x="949.2" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="952.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56 samples, 1.33%)</title><rect x="949.5" y="467.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56 samples, 1.33%)</title><rect x="949.5" y="451.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="949.5" y="435.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="952.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (54 samples, 1.28%)</title><rect x="949.8" y="435.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (54 samples, 1.28%)</title><rect x="949.8" y="419.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="949.8" y="403.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="952.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (52 samples, 1.23%)</title><rect x="950.4" y="403.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.14%)</title><rect x="950.4" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.14%)</title><rect x="950.4" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6 samples, 0.14%)</title><rect x="950.4" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.4" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="950.4" y="339.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="953.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="952.0" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.0" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="952.0" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="952.0" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="955.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.12%)</title><rect x="952.9" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="952.9" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="952.9" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.9" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="952.9" y="339.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="955.9" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="954.3" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.02%)</title><rect x="954.3" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="957.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (28 samples, 0.66%)</title><rect x="954.6" y="387.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (13 samples, 0.31%)</title><rect x="954.6" y="371.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.14%)</title><rect x="954.6" y="355.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.14%)</title><rect x="954.6" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.14%)</title><rect x="954.6" y="323.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.14%)</title><rect x="954.6" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.6" y="318.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="954.6" y="291.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="957.6" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (7 samples, 0.17%)</title><rect x="956.2" y="355.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.2" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (7 samples, 0.17%)</title><rect x="956.2" y="339.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (7 samples, 0.17%)</title><rect x="956.2" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (7 samples, 0.17%)</title><rect x="956.2" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (7 samples, 0.17%)</title><rect x="956.2" y="291.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (7 samples, 0.17%)</title><rect x="956.2" y="275.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (7 samples, 0.17%)</title><rect x="956.2" y="259.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (7 samples, 0.17%)</title><rect x="956.2" y="243.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="956.2" y="227.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="956.2" y="211.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="956.2" y="195.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="959.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="957.6" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.6" y="206.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="957.6" y="179.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="960.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (15 samples, 0.36%)</title><rect x="958.2" y="371.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.36%)</title><rect x="958.2" y="355.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.36%)</title><rect x="958.2" y="339.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="958.2" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="961.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="958.5" y="323.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="961.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.31%)</title><rect x="958.8" y="323.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (13 samples, 0.31%)</title><rect x="958.8" y="307.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.31%)</title><rect x="958.8" y="291.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="958.8" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="958.8" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.05%)</title><rect x="958.8" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.8" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.05%)</title><rect x="958.8" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="961.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.07%)</title><rect x="959.3" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (3 samples, 0.07%)</title><rect x="959.3" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.07%)</title><rect x="959.3" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="959.3" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="959.3" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="959.3" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="962.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="959.3" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="959.3" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="959.3" y="147.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="962.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.12%)</title><rect x="960.2" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.2" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.12%)</title><rect x="960.2" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.05%)</title><rect x="960.2" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="960.2" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="963.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="960.2" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="963.2" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.07%)</title><rect x="960.7" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.07%)</title><rect x="960.7" y="227.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="963.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="961.6" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="961.6" y="259.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="964.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.02%)</title><rect x="962.4" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.02%)</title><rect x="962.4" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.4" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="962.4" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="965.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.19%)</title><rect x="962.7" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="962.7" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="965.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.14%)</title><rect x="963.0" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.14%)</title><rect x="963.0" y="355.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="966.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="964.6" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="964.6" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="967.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="964.9" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="964.9" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="964.9" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="967.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.14%)</title><rect x="965.2" y="467.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="965.2" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="965.2" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$202/804098885.get$Lambda (1 samples, 0.02%)</title><rect x="965.2" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$202 (1 samples, 0.02%)</title><rect x="965.2" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="968.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (1 samples, 0.02%)</title><rect x="965.5" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="968.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.07%)</title><rect x="965.8" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="965.8" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="965.8" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.07%)</title><rect x="965.8" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="965.8" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.07%)</title><rect x="965.8" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (3 samples, 0.07%)</title><rect x="965.8" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.07%)</title><rect x="965.8" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.07%)</title><rect x="965.8" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="965.8" y="307.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="965.8" y="291.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (1 samples, 0.02%)</title><rect x="965.8" y="275.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (1 samples, 0.02%)</title><rect x="965.8" y="259.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="968.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.05%)</title><rect x="966.0" y="307.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="969.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="966.6" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.6" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="966.6" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="969.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="966.9" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="966.9" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="966.9" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="969.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="967.2" y="611.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="967.2" y="595.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.2" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.2" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="967.2" y="547.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (35 samples, 0.83%)</title><rect x="967.4" y="611.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="967.4" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="967.4" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.4" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.4" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="967.4" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="970.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="967.7" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="967.7" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.7" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="967.7" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="967.7" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="970.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (33 samples, 0.78%)</title><rect x="968.0" y="595.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (32 samples, 0.76%)</title><rect x="968.0" y="579.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (32 samples, 0.76%)</title><rect x="968.0" y="563.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (32 samples, 0.76%)</title><rect x="968.0" y="547.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (32 samples, 0.76%)</title><rect x="968.0" y="531.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (32 samples, 0.76%)</title><rect x="968.0" y="515.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (32 samples, 0.76%)</title><rect x="968.0" y="499.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="968.0" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="968.0" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.get$Lambda (1 samples, 0.02%)</title><rect x="968.0" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$189 (1 samples, 0.02%)</title><rect x="968.0" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="971.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (14 samples, 0.33%)</title><rect x="968.3" y="483.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (14 samples, 0.33%)</title><rect x="968.3" y="467.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (14 samples, 0.33%)</title><rect x="968.3" y="451.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (11 samples, 0.26%)</title><rect x="968.3" y="435.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (11 samples, 0.26%)</title><rect x="968.3" y="419.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (11 samples, 0.26%)</title><rect x="968.3" y="403.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (11 samples, 0.26%)</title><rect x="968.3" y="387.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (9 samples, 0.21%)</title><rect x="968.3" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.05%)</title><rect x="968.3" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.3" y="366.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.05%)</title><rect x="968.3" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="968.3" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="971.3" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (3 samples, 0.07%)</title><rect x="968.8" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.8" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (3 samples, 0.07%)</title><rect x="968.8" y="339.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="971.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.07%)</title><rect x="969.7" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.05%)</title><rect x="969.7" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.05%)</title><rect x="969.7" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (1 samples, 0.02%)</title><rect x="969.7" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="969.7" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (1 samples, 0.02%)</title><rect x="969.7" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (1 samples, 0.02%)</title><rect x="969.7" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="972.7" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="970.0" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (1 samples, 0.02%)</title><rect x="970.0" y="291.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (1 samples, 0.02%)</title><rect x="970.0" y="275.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.0" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (1 samples, 0.02%)</title><rect x="970.0" y="259.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="970.0" y="243.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.02%)</title><rect x="970.0" y="227.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="973.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.02%)</title><rect x="970.2" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.02%)</title><rect x="970.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.2" y="334.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="970.2" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="973.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.02%)</title><rect x="970.5" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.5" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="970.5" y="339.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="973.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.05%)</title><rect x="970.8" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.8" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.02%)</title><rect x="970.8" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="973.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="971.1" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="971.1" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="974.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="971.4" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="971.4" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.07%)</title><rect x="971.4" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="974.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (17 samples, 0.40%)</title><rect x="972.2" y="483.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (17 samples, 0.40%)</title><rect x="972.2" y="467.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.02%)</title><rect x="972.2" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="975.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="972.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="972.5" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.5" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="972.5" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="975.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="972.8" y="451.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.02%)</title><rect x="972.8" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="975.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1 samples, 0.02%)</title><rect x="973.0" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="976.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.02%)</title><rect x="973.3" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.07%)</title><rect x="973.6" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="976.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.12%)</title><rect x="974.4" y="451.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.02%)</title><rect x="974.4" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="977.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.02%)</title><rect x="974.7" y="435.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="977.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.02%)</title><rect x="975.0" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="978.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="975.3" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="978.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="975.6" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="978.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.02%)</title><rect x="975.6" y="419.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="978.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.07%)</title><rect x="975.8" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.07%)</title><rect x="975.8" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.02%)</title><rect x="975.8" y="419.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="978.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1 samples, 0.02%)</title><rect x="976.1" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="979.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="976.4" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (1 samples, 0.02%)</title><rect x="976.4" y="403.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="979.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.02%)</title><rect x="976.7" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.7" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="976.7" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (1 samples, 0.02%)</title><rect x="976.7" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.02%)</title><rect x="976.7" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.7" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.02%)</title><rect x="976.7" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (1 samples, 0.02%)</title><rect x="976.7" y="371.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="979.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="977.0" y="579.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="977.0" y="563.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="977.0" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="977.0" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="977.0" y="515.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="980.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.07%)</title><rect x="977.2" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="980.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (3 samples, 0.07%)</title><rect x="977.2" y="643.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="980.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (11 samples, 0.26%)</title><rect x="978.1" y="755.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.26%)</title><rect x="978.1" y="739.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.26%)</title><rect x="978.1" y="723.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.26%)</title><rect x="978.1" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="978.1" y="691.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.26%)</title><rect x="978.1" y="675.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.26%)</title><rect x="978.1" y="659.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.26%)</title><rect x="978.1" y="643.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.26%)</title><rect x="978.1" y="627.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.26%)</title><rect x="978.1" y="611.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.26%)</title><rect x="978.1" y="595.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (11 samples, 0.26%)</title><rect x="978.1" y="579.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.26%)</title><rect x="978.1" y="563.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.02%)</title><rect x="978.1" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="981.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.24%)</title><rect x="978.4" y="547.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (10 samples, 0.24%)</title><rect x="978.4" y="531.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.24%)</title><rect x="978.4" y="515.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.19%)</title><rect x="978.4" y="499.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.02%)</title><rect x="978.4" y="483.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="981.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (5 samples, 0.12%)</title><rect x="978.6" y="483.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.12%)</title><rect x="978.6" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.12%)</title><rect x="978.6" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.12%)</title><rect x="978.6" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="978.6" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="978.6" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.get$Lambda (1 samples, 0.02%)</title><rect x="978.6" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$262 (1 samples, 0.02%)</title><rect x="978.6" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="981.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.09%)</title><rect x="978.9" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.09%)</title><rect x="978.9" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.07%)</title><rect x="978.9" y="387.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="981.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="979.8" y="387.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="979.8" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="979.8" y="355.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="982.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (2 samples, 0.05%)</title><rect x="980.0" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.05%)</title><rect x="980.0" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="980.0" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="980.0" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.05%)</title><rect x="980.0" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="980.0" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (2 samples, 0.05%)</title><rect x="980.0" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.05%)</title><rect x="980.0" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.05%)</title><rect x="980.0" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.05%)</title><rect x="980.0" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="980.0" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="980.0" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="980.0" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="980.0" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.05%)</title><rect x="980.0" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.05%)</title><rect x="980.0" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.0" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.0" y="238.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.0" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.0" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.0" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.0" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="980.0" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="980.0" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="980.0" y="131.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="983.0" y="142.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.02%)</title><rect x="980.3" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="983.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.05%)</title><rect x="980.6" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.05%)</title><rect x="980.6" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (2 samples, 0.05%)</title><rect x="980.6" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.05%)</title><rect x="980.6" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.05%)</title><rect x="980.6" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (2 samples, 0.05%)</title><rect x="980.6" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.05%)</title><rect x="980.6" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="980.6" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="980.6" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.05%)</title><rect x="980.6" y="355.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="983.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (70 samples, 1.66%)</title><rect x="981.2" y="755.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (70 samples, 1.66%)</title><rect x="981.2" y="739.0" width="19.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (56 samples, 1.33%)</title><rect x="981.2" y="723.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (56 samples, 1.33%)</title><rect x="981.2" y="707.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (56 samples, 1.33%)</title><rect x="981.2" y="691.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.02%)</title><rect x="981.2" y="675.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.02%)</title><rect x="981.2" y="659.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.02%)</title><rect x="981.2" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.02%)</title><rect x="981.2" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (1 samples, 0.02%)</title><rect x="981.2" y="611.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (1 samples, 0.02%)</title><rect x="981.2" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="981.2" y="579.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="981.2" y="563.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="981.2" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="981.2" y="531.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="984.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (55 samples, 1.30%)</title><rect x="981.4" y="675.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (55 samples, 1.30%)</title><rect x="981.4" y="659.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (55 samples, 1.30%)</title><rect x="981.4" y="643.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (55 samples, 1.30%)</title><rect x="981.4" y="627.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (22 samples, 0.52%)</title><rect x="981.4" y="611.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.52%)</title><rect x="981.4" y="595.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.52%)</title><rect x="981.4" y="579.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (22 samples, 0.52%)</title><rect x="981.4" y="563.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.52%)</title><rect x="981.4" y="547.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (22 samples, 0.52%)</title><rect x="981.4" y="531.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.52%)</title><rect x="981.4" y="515.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (22 samples, 0.52%)</title><rect x="981.4" y="499.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.52%)</title><rect x="981.4" y="483.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 0.52%)</title><rect x="981.4" y="467.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$252/880584287.apply (1 samples, 0.02%)</title><rect x="981.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.02%)</title><rect x="981.4" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.02%)</title><rect x="981.4" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="981.4" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="981.4" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="984.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (19 samples, 0.45%)</title><rect x="981.7" y="451.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (19 samples, 0.45%)</title><rect x="981.7" y="435.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (19 samples, 0.45%)</title><rect x="981.7" y="419.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (19 samples, 0.45%)</title><rect x="981.7" y="403.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (2 samples, 0.05%)</title><rect x="981.7" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.05%)</title><rect x="981.7" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.05%)</title><rect x="981.7" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.05%)</title><rect x="981.7" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.05%)</title><rect x="981.7" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="984.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17 samples, 0.40%)</title><rect x="982.3" y="387.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.12%)</title><rect x="982.3" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="982.3" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="982.3" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.02%)</title><rect x="982.3" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="985.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.05%)</title><rect x="982.6" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="982.6" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="985.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="982.6" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$269/2074766541.get (1 samples, 0.02%)</title><rect x="982.6" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="985.6" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1 samples, 0.02%)</title><rect x="982.6" y="291.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="985.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="982.8" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="982.8" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.02%)</title><rect x="982.8" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1 samples, 0.02%)</title><rect x="982.8" y="259.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="985.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.05%)</title><rect x="983.1" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2 samples, 0.05%)</title><rect x="983.1" y="339.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="986.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="983.7" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="983.7" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="983.7" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="983.7" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="983.7" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="986.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (2 samples, 0.05%)</title><rect x="984.0" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="987.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.07%)</title><rect x="984.5" y="371.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="987.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.14%)</title><rect x="985.4" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (6 samples, 0.14%)</title><rect x="985.4" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (6 samples, 0.14%)</title><rect x="985.4" y="339.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="985.4" y="323.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="985.4" y="307.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="985.4" y="291.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="985.4" y="275.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="985.4" y="259.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="988.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.07%)</title><rect x="985.6" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="985.6" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (3 samples, 0.07%)</title><rect x="985.6" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="985.6" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.07%)</title><rect x="985.6" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.07%)</title><rect x="985.6" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.6" y="254.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="985.6" y="227.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="988.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.05%)</title><rect x="986.5" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1 samples, 0.02%)</title><rect x="986.5" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="989.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="986.8" y="307.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="986.8" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (1 samples, 0.02%)</title><rect x="986.8" y="275.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="986.8" y="259.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="986.8" y="243.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="986.8" y="227.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.8" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="986.8" y="211.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="989.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.05%)</title><rect x="987.0" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.05%)</title><rect x="987.0" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.05%)</title><rect x="987.0" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.05%)</title><rect x="987.0" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="987.0" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.05%)</title><rect x="987.0" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="990.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (33 samples, 0.78%)</title><rect x="987.6" y="611.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.05%)</title><rect x="987.6" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="987.6" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="987.6" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="987.6" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="987.6" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.6" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="987.6" y="515.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="990.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.09%)</title><rect x="988.2" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="988.2" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="988.2" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.09%)</title><rect x="988.2" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="988.2" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.2" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="988.2" y="515.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="991.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.07%)</title><rect x="989.3" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="989.3" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="989.3" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="989.3" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.3" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="989.3" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="992.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="989.6" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="989.6" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.6" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="989.6" y="547.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="992.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.24%)</title><rect x="990.1" y="595.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.24%)</title><rect x="990.1" y="579.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.24%)</title><rect x="990.1" y="563.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.1" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.02%)</title><rect x="990.1" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="993.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.07%)</title><rect x="990.4" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="993.4" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.07%)</title><rect x="990.4" y="531.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="993.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.12%)</title><rect x="991.2" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.12%)</title><rect x="991.2" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.12%)</title><rect x="991.2" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.2" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="991.2" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="991.2" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.05%)</title><rect x="991.2" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="991.2" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="991.2" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="994.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="991.8" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.07%)</title><rect x="991.8" y="483.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="994.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="992.6" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="992.6" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="995.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (14 samples, 0.33%)</title><rect x="992.9" y="595.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="992.9" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="992.9" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="992.9" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="995.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (12 samples, 0.28%)</title><rect x="993.5" y="579.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="993.5" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="993.5" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="993.5" y="531.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="996.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="993.8" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.8" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="993.8" y="515.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="996.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.12%)</title><rect x="994.6" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.12%)</title><rect x="994.6" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="994.6" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="994.6" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="997.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="995.2" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.2" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="995.2" y="499.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="998.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="996.0" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="996.0" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="996.0" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="996.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="996.0" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="996.0" y="483.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="999.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="996.3" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.05%)</title><rect x="996.3" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.05%)</title><rect x="996.3" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.05%)</title><rect x="996.3" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="999.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (14 samples, 0.33%)</title><rect x="996.8" y="723.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.33%)</title><rect x="996.8" y="707.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14 samples, 0.33%)</title><rect x="996.8" y="691.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (14 samples, 0.33%)</title><rect x="996.8" y="675.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14 samples, 0.33%)</title><rect x="996.8" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13 samples, 0.31%)</title><rect x="996.8" y="643.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="996.8" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="996.8" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (1 samples, 0.02%)</title><rect x="996.8" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (1 samples, 0.02%)</title><rect x="996.8" y="579.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="999.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.05%)</title><rect x="997.1" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1000.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="997.7" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="997.7" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.02%)</title><rect x="997.7" y="595.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1000.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (9 samples, 0.21%)</title><rect x="998.0" y="627.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (9 samples, 0.21%)</title><rect x="998.0" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (8 samples, 0.19%)</title><rect x="998.0" y="595.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1001.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8 samples, 0.19%)</title><rect x="998.0" y="579.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8 samples, 0.19%)</title><rect x="998.0" y="563.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.02%)</title><rect x="998.0" y="547.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="998.0" y="531.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="998.0" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.0" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.02%)</title><rect x="998.0" y="499.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1001.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.17%)</title><rect x="998.2" y="547.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.17%)</title><rect x="998.2" y="531.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (4 samples, 0.09%)</title><rect x="998.2" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="998.2" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="998.2" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.02%)</title><rect x="998.2" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1001.2" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="998.5" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="998.5" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1001.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="998.5" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1001.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (2 samples, 0.05%)</title><rect x="998.8" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1001.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.02%)</title><rect x="999.4" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.4" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="999.4" y="499.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="999.4" y="483.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.02%)</title><rect x="999.4" y="467.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1002.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.05%)</title><rect x="999.6" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.05%)</title><rect x="999.6" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="999.6" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="999.6" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="999.6" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.02%)</title><rect x="999.6" y="435.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1002.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="999.9" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="999.9" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1 samples, 0.02%)</title><rect x="999.9" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1002.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="1000.2" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="1000.2" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.02%)</title><rect x="1000.2" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="1000.2" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="1000.2" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="1000.2" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="1000.2" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (1 samples, 0.02%)</title><rect x="1000.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1 samples, 0.02%)</title><rect x="1000.2" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="1000.2" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="1000.2" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="1000.2" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (1 samples, 0.02%)</title><rect x="1000.2" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.02%)</title><rect x="1000.2" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1 samples, 0.02%)</title><rect x="1000.2" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1003.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="1000.5" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="1000.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="1000.5" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="1000.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="1000.5" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="1000.5" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="1000.5" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="1000.5" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="1000.5" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="1000.5" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="1000.5" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="1000.5" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="1000.5" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="1000.5" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="1000.5" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.apply (1 samples, 0.02%)</title><rect x="1000.5" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.02%)</title><rect x="1000.5" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="1000.5" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.02%)</title><rect x="1000.5" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1003.5" y="366.0"></text>
</g>
<g>
<title>[asyncWorker tid=13381] (84 samples, 1.99%)</title><rect x="1000.8" y="819.0" width="23.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1003.8" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 1.99%)</title><rect x="1000.8" y="803.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 1.99%)</title><rect x="1000.8" y="787.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 1.99%)</title><rect x="1000.8" y="771.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.19%)</title><rect x="1000.8" y="755.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.19%)</title><rect x="1000.8" y="739.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.19%)</title><rect x="1000.8" y="723.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.19%)</title><rect x="1000.8" y="707.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.19%)</title><rect x="1000.8" y="691.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1003.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (76 samples, 1.80%)</title><rect x="1003.0" y="755.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.0" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (76 samples, 1.80%)</title><rect x="1003.0" y="739.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.0" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (41 samples, 0.97%)</title><rect x="1003.0" y="723.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.64%)</title><rect x="1003.0" y="707.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.45%)</title><rect x="1003.0" y="691.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.45%)</title><rect x="1003.0" y="675.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.0" y="686.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="1003.0" y="659.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1006.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.19%)</title><rect x="1008.3" y="691.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.3" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.19%)</title><rect x="1008.3" y="675.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1011.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.33%)</title><rect x="1010.6" y="707.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.33%)</title><rect x="1010.6" y="691.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.33%)</title><rect x="1010.6" y="675.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="1010.6" y="659.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1013.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="1012.8" y="659.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.8" y="670.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="1012.8" y="643.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1015.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (35 samples, 0.83%)</title><rect x="1014.5" y="723.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (35 samples, 0.83%)</title><rect x="1014.5" y="707.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (35 samples, 0.83%)</title><rect x="1014.5" y="691.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.5" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="1014.5" y="675.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1017.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.45%)</title><rect x="1015.6" y="675.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.6" y="686.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="1015.6" y="659.0" width="3.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1018.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.09%)</title><rect x="1019.5" y="659.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1022.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="1020.6" y="659.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1023.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (12 samples, 0.28%)</title><rect x="1020.9" y="675.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (12 samples, 0.28%)</title><rect x="1020.9" y="659.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (12 samples, 0.28%)</title><rect x="1020.9" y="643.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (2 samples, 0.05%)</title><rect x="1020.9" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="1020.9" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.05%)</title><rect x="1020.9" y="595.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1023.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (10 samples, 0.24%)</title><rect x="1021.5" y="627.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (10 samples, 0.24%)</title><rect x="1021.5" y="611.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1024.5" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13382] (83 samples, 1.97%)</title><rect x="1024.3" y="819.0" width="23.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1027.3" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (83 samples, 1.97%)</title><rect x="1024.3" y="803.0" width="23.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.3" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (83 samples, 1.97%)</title><rect x="1024.3" y="787.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.3" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (83 samples, 1.97%)</title><rect x="1024.3" y="771.0" width="23.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.3" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.26%)</title><rect x="1024.3" y="755.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.26%)</title><rect x="1024.3" y="739.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.24%)</title><rect x="1024.3" y="723.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.24%)</title><rect x="1024.3" y="707.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.24%)</title><rect x="1024.3" y="691.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1027.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="1027.1" y="723.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="1027.1" y="707.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="1027.1" y="691.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1027.1" y="675.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="1027.1" y="659.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1030.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (72 samples, 1.71%)</title><rect x="1027.3" y="755.0" width="20.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (72 samples, 1.71%)</title><rect x="1027.3" y="739.0" width="20.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.76%)</title><rect x="1027.3" y="723.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (23 samples, 0.55%)</title><rect x="1027.3" y="707.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.24%)</title><rect x="1027.3" y="691.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1027.3" y="675.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.3" y="686.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="1027.3" y="659.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1030.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.31%)</title><rect x="1030.1" y="691.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.1" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13 samples, 0.31%)</title><rect x="1030.1" y="675.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1033.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.21%)</title><rect x="1033.8" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="1033.8" y="691.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="1033.8" y="675.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="1033.8" y="659.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1036.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="1034.9" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.9" y="670.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="1034.9" y="643.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1037.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (40 samples, 0.95%)</title><rect x="1036.3" y="723.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (40 samples, 0.95%)</title><rect x="1036.3" y="707.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (40 samples, 0.95%)</title><rect x="1036.3" y="691.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.3" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.07%)</title><rect x="1036.3" y="675.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1039.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.59%)</title><rect x="1037.1" y="675.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.1" y="686.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="1037.1" y="659.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1040.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.12%)</title><rect x="1040.5" y="659.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1043.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="1041.9" y="659.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1044.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (12 samples, 0.28%)</title><rect x="1044.1" y="675.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (12 samples, 0.28%)</title><rect x="1044.1" y="659.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (12 samples, 0.28%)</title><rect x="1044.1" y="643.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (3 samples, 0.07%)</title><rect x="1044.1" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.07%)</title><rect x="1044.1" y="611.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.1" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.07%)</title><rect x="1044.1" y="595.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1047.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (9 samples, 0.21%)</title><rect x="1045.0" y="627.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.0" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (9 samples, 0.21%)</title><rect x="1045.0" y="611.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1048.0" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13383] (82 samples, 1.95%)</title><rect x="1047.5" y="819.0" width="23.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1050.5" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (82 samples, 1.95%)</title><rect x="1047.5" y="803.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.5" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (82 samples, 1.95%)</title><rect x="1047.5" y="787.0" width="23.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (82 samples, 1.95%)</title><rect x="1047.5" y="771.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.19%)</title><rect x="1047.5" y="755.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.19%)</title><rect x="1047.5" y="739.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.19%)</title><rect x="1047.5" y="723.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.19%)</title><rect x="1047.5" y="707.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.19%)</title><rect x="1047.5" y="691.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1050.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (74 samples, 1.76%)</title><rect x="1049.7" y="755.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (74 samples, 1.76%)</title><rect x="1049.7" y="739.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (33 samples, 0.78%)</title><rect x="1049.7" y="723.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.64%)</title><rect x="1049.7" y="707.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.50%)</title><rect x="1049.7" y="691.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.50%)</title><rect x="1049.7" y="675.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.7" y="686.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.50%)</title><rect x="1049.7" y="659.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1052.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.14%)</title><rect x="1055.6" y="691.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.6" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.14%)</title><rect x="1055.6" y="675.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1058.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.14%)</title><rect x="1057.3" y="707.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="1057.3" y="691.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1060.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="1057.3" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="1057.3" y="659.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1060.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="1057.9" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.9" y="670.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="1057.9" y="643.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1060.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (41 samples, 0.97%)</title><rect x="1059.0" y="723.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (41 samples, 0.97%)</title><rect x="1059.0" y="707.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (41 samples, 0.97%)</title><rect x="1059.0" y="691.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.0" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.12%)</title><rect x="1059.0" y="675.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1062.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.55%)</title><rect x="1060.4" y="675.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.4" y="686.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="1060.4" y="659.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1063.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.19%)</title><rect x="1063.5" y="659.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1066.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="1065.7" y="659.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1068.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (13 samples, 0.31%)</title><rect x="1066.8" y="675.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (13 samples, 0.31%)</title><rect x="1066.8" y="659.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (13 samples, 0.31%)</title><rect x="1066.8" y="643.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.02%)</title><rect x="1066.8" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1066.8" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.8" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="1066.8" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1069.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (12 samples, 0.28%)</title><rect x="1067.1" y="627.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (12 samples, 0.28%)</title><rect x="1067.1" y="611.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1070.1" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13384] (87 samples, 2.06%)</title><rect x="1070.5" y="819.0" width="24.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1073.5" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (87 samples, 2.06%)</title><rect x="1070.5" y="803.0" width="24.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.5" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (87 samples, 2.06%)</title><rect x="1070.5" y="787.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (87 samples, 2.06%)</title><rect x="1070.5" y="771.0" width="24.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.17%)</title><rect x="1070.5" y="755.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7 samples, 0.17%)</title><rect x="1070.5" y="739.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.17%)</title><rect x="1070.5" y="723.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.17%)</title><rect x="1070.5" y="707.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.17%)</title><rect x="1070.5" y="691.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1073.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (80 samples, 1.90%)</title><rect x="1072.4" y="755.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.4" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (80 samples, 1.90%)</title><rect x="1072.4" y="739.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.4" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.88%)</title><rect x="1072.4" y="723.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.62%)</title><rect x="1072.4" y="707.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.36%)</title><rect x="1072.4" y="691.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.36%)</title><rect x="1072.4" y="675.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.4" y="686.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.36%)</title><rect x="1072.4" y="659.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1075.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.26%)</title><rect x="1076.6" y="691.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.6" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.26%)</title><rect x="1076.6" y="675.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1079.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.26%)</title><rect x="1079.7" y="707.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.26%)</title><rect x="1079.7" y="691.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.26%)</title><rect x="1079.7" y="675.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="1079.7" y="659.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1082.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="1080.8" y="659.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.8" y="670.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="1080.8" y="643.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1083.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (43 samples, 1.02%)</title><rect x="1082.8" y="723.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (43 samples, 1.02%)</title><rect x="1082.8" y="707.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (43 samples, 1.02%)</title><rect x="1082.8" y="691.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.8" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.12%)</title><rect x="1082.8" y="675.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1085.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.59%)</title><rect x="1084.2" y="675.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="686.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="1084.2" y="659.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1087.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.14%)</title><rect x="1086.7" y="659.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1089.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="1088.4" y="659.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1091.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (13 samples, 0.31%)</title><rect x="1091.2" y="675.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (13 samples, 0.31%)</title><rect x="1091.2" y="659.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (13 samples, 0.31%)</title><rect x="1091.2" y="643.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.02%)</title><rect x="1091.2" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1091.2" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="1091.2" y="595.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1094.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (12 samples, 0.28%)</title><rect x="1091.5" y="627.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (12 samples, 0.28%)</title><rect x="1091.5" y="611.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1094.5" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13385] (84 samples, 1.99%)</title><rect x="1094.8" y="819.0" width="23.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1097.8" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 1.99%)</title><rect x="1094.8" y="803.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 1.99%)</title><rect x="1094.8" y="787.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 1.99%)</title><rect x="1094.8" y="771.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.05%)</title><rect x="1094.8" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.05%)</title><rect x="1094.8" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.05%)</title><rect x="1094.8" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="1094.8" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="1094.8" y="691.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1097.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (82 samples, 1.95%)</title><rect x="1095.4" y="755.0" width="22.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.4" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (82 samples, 1.95%)</title><rect x="1095.4" y="739.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.4" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 1.02%)</title><rect x="1095.4" y="723.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 0.38%)</title><rect x="1095.4" y="707.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.24%)</title><rect x="1095.4" y="691.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1095.4" y="675.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.4" y="686.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="1095.4" y="659.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1098.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.14%)</title><rect x="1098.2" y="691.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.2" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.14%)</title><rect x="1098.2" y="675.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1101.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (27 samples, 0.64%)</title><rect x="1099.9" y="707.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (27 samples, 0.64%)</title><rect x="1099.9" y="691.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.64%)</title><rect x="1099.9" y="675.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.28%)</title><rect x="1099.9" y="659.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1102.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.36%)</title><rect x="1103.2" y="659.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.2" y="670.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.36%)</title><rect x="1103.2" y="643.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1106.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (39 samples, 0.93%)</title><rect x="1107.4" y="723.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (39 samples, 0.93%)</title><rect x="1107.4" y="707.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (39 samples, 0.93%)</title><rect x="1107.4" y="691.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.4" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.09%)</title><rect x="1107.4" y="675.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1110.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.55%)</title><rect x="1108.5" y="675.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.5" y="686.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="1108.5" y="659.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1111.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.07%)</title><rect x="1112.5" y="659.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1115.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="1113.3" y="659.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1116.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (12 samples, 0.28%)</title><rect x="1115.0" y="675.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (12 samples, 0.28%)</title><rect x="1115.0" y="659.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (12 samples, 0.28%)</title><rect x="1115.0" y="643.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.02%)</title><rect x="1115.0" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1115.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="1115.0" y="595.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1118.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (11 samples, 0.26%)</title><rect x="1115.3" y="627.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (11 samples, 0.26%)</title><rect x="1115.3" y="611.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1118.3" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13386] (84 samples, 1.99%)</title><rect x="1118.3" y="819.0" width="23.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1121.3" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 1.99%)</title><rect x="1118.3" y="803.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 1.99%)</title><rect x="1118.3" y="787.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.3" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 1.99%)</title><rect x="1118.3" y="771.0" width="23.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.3" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.14%)</title><rect x="1118.3" y="755.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.14%)</title><rect x="1118.3" y="739.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.14%)</title><rect x="1118.3" y="723.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.14%)</title><rect x="1118.3" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.14%)</title><rect x="1118.3" y="691.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1121.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (78 samples, 1.85%)</title><rect x="1120.0" y="755.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.0" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (78 samples, 1.85%)</title><rect x="1120.0" y="739.0" width="21.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.0" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 1.04%)</title><rect x="1120.0" y="723.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 0.81%)</title><rect x="1120.0" y="707.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.55%)</title><rect x="1120.0" y="691.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.55%)</title><rect x="1120.0" y="675.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.0" y="686.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.55%)</title><rect x="1120.0" y="659.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1123.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.26%)</title><rect x="1126.5" y="691.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.5" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.26%)</title><rect x="1126.5" y="675.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1129.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.24%)</title><rect x="1129.5" y="707.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.24%)</title><rect x="1129.5" y="691.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.24%)</title><rect x="1129.5" y="675.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="1129.5" y="659.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1132.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="1130.9" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.9" y="670.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="1130.9" y="643.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1133.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (34 samples, 0.81%)</title><rect x="1132.3" y="723.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (34 samples, 0.81%)</title><rect x="1132.3" y="707.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (34 samples, 0.81%)</title><rect x="1132.3" y="691.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.3" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.02%)</title><rect x="1132.3" y="675.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1135.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.40%)</title><rect x="1132.6" y="675.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.6" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="1132.6" y="659.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1135.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.09%)</title><rect x="1134.6" y="659.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1137.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="1135.7" y="659.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1138.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (16 samples, 0.38%)</title><rect x="1137.4" y="675.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (16 samples, 0.38%)</title><rect x="1137.4" y="659.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (16 samples, 0.38%)</title><rect x="1137.4" y="643.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (4 samples, 0.09%)</title><rect x="1137.4" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.09%)</title><rect x="1137.4" y="611.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.4" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.09%)</title><rect x="1137.4" y="595.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1140.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (12 samples, 0.28%)</title><rect x="1138.5" y="627.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (12 samples, 0.28%)</title><rect x="1138.5" y="611.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1141.5" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13387] (85 samples, 2.02%)</title><rect x="1141.8" y="819.0" width="23.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1144.8" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (85 samples, 2.02%)</title><rect x="1141.8" y="803.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (85 samples, 2.02%)</title><rect x="1141.8" y="787.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (85 samples, 2.02%)</title><rect x="1141.8" y="771.0" width="23.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.14%)</title><rect x="1141.8" y="755.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.14%)</title><rect x="1141.8" y="739.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.14%)</title><rect x="1141.8" y="723.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.14%)</title><rect x="1141.8" y="707.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.14%)</title><rect x="1141.8" y="691.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1144.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (79 samples, 1.87%)</title><rect x="1143.5" y="755.0" width="22.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.5" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (79 samples, 1.87%)</title><rect x="1143.5" y="739.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.5" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.88%)</title><rect x="1143.5" y="723.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (23 samples, 0.55%)</title><rect x="1143.5" y="707.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.40%)</title><rect x="1143.5" y="691.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.40%)</title><rect x="1143.5" y="675.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.5" y="686.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="1143.5" y="659.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1146.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.14%)</title><rect x="1148.3" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.3" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.14%)</title><rect x="1148.3" y="675.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1151.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.33%)</title><rect x="1150.0" y="707.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.33%)</title><rect x="1150.0" y="691.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.33%)</title><rect x="1150.0" y="675.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="1150.0" y="659.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1153.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.19%)</title><rect x="1151.6" y="659.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="1151.6" y="643.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1154.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (42 samples, 1.00%)</title><rect x="1153.9" y="723.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (42 samples, 1.00%)</title><rect x="1153.9" y="707.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1156.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (42 samples, 1.00%)</title><rect x="1153.9" y="691.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.9" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.14%)</title><rect x="1153.9" y="675.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1156.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.52%)</title><rect x="1155.6" y="675.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.6" y="686.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="1155.6" y="659.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1158.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.14%)</title><rect x="1158.9" y="659.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1161.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="1160.6" y="659.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1163.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (14 samples, 0.33%)</title><rect x="1161.7" y="675.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (14 samples, 0.33%)</title><rect x="1161.7" y="659.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (14 samples, 0.33%)</title><rect x="1161.7" y="643.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (1 samples, 0.02%)</title><rect x="1161.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1161.7" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.7" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.02%)</title><rect x="1161.7" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1164.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (13 samples, 0.31%)</title><rect x="1162.0" y="627.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.0" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (13 samples, 0.31%)</title><rect x="1162.0" y="611.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1165.0" y="622.0"></text>
</g>
<g>
<title>[asyncWorker tid=13388] (87 samples, 2.06%)</title><rect x="1165.6" y="819.0" width="24.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1168.6" y="830.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (87 samples, 2.06%)</title><rect x="1165.6" y="803.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (87 samples, 2.06%)</title><rect x="1165.6" y="787.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.6" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (87 samples, 2.06%)</title><rect x="1165.6" y="771.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.6" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.17%)</title><rect x="1165.6" y="755.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7 samples, 0.17%)</title><rect x="1165.6" y="739.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.17%)</title><rect x="1165.6" y="723.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.17%)</title><rect x="1165.6" y="707.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.17%)</title><rect x="1165.6" y="691.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1168.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (80 samples, 1.90%)</title><rect x="1167.6" y="755.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.6" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (80 samples, 1.90%)</title><rect x="1167.6" y="739.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.6" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 1.02%)</title><rect x="1167.6" y="723.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.74%)</title><rect x="1167.6" y="707.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1170.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.43%)</title><rect x="1167.6" y="691.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (18 samples, 0.43%)</title><rect x="1167.6" y="675.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.6" y="686.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="1167.6" y="659.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1170.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.31%)</title><rect x="1172.6" y="691.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.6" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13 samples, 0.31%)</title><rect x="1172.6" y="675.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1175.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.28%)</title><rect x="1176.3" y="707.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.28%)</title><rect x="1176.3" y="691.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.28%)</title><rect x="1176.3" y="675.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="1176.3" y="659.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1179.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="1178.0" y="659.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.0" y="670.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="1178.0" y="643.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1181.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$329/12548492.action (37 samples, 0.88%)</title><rect x="1179.6" y="723.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeDelete$4 (37 samples, 0.88%)</title><rect x="1179.6" y="707.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.delete (37 samples, 0.88%)</title><rect x="1179.6" y="691.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.14%)</title><rect x="1179.6" y="675.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.43%)</title><rect x="1181.3" y="675.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="1181.3" y="659.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.12%)</title><rect x="1183.8" y="659.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="1185.2" y="659.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (13 samples, 0.31%)</title><rect x="1186.4" y="675.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (13 samples, 0.31%)</title><rect x="1186.4" y="659.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (13 samples, 0.31%)</title><rect x="1186.4" y="643.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getValue (4 samples, 0.09%)</title><rect x="1186.4" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.09%)</title><rect x="1186.4" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.09%)</title><rect x="1186.4" y="595.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (9 samples, 0.21%)</title><rect x="1187.5" y="627.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (9 samples, 0.21%)</title><rect x="1187.5" y="611.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
</g>
</svg>
