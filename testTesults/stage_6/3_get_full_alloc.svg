<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="725"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="725"> </text>
<g id="frames">
<g>
<title>all (6,271 samples, 100.00%)</title><rect x="10.0" y="691.0" width="1180.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="702.0">all</text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-1 tid=13570] (183 samples, 2.92%)</title><rect x="10.0" y="675.0" width="34.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="686.0">[F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (183 samples, 2.92%)</title><rect x="10.0" y="659.0" width="34.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (183 samples, 2.92%)</title><rect x="10.0" y="643.0" width="34.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (183 samples, 2.92%)</title><rect x="10.0" y="627.0" width="34.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (183 samples, 2.92%)</title><rect x="10.0" y="611.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (183 samples, 2.92%)</title><rect x="10.0" y="595.0" width="34.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (86 samples, 1.37%)</title><rect x="10.0" y="579.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (86 samples, 1.37%)</title><rect x="10.0" y="563.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (86 samples, 1.37%)</title><rect x="10.0" y="547.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (86 samples, 1.37%)</title><rect x="10.0" y="531.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (86 samples, 1.37%)</title><rect x="10.0" y="515.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (86 samples, 1.37%)</title><rect x="10.0" y="499.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (75 samples, 1.20%)</title><rect x="10.0" y="483.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (75 samples, 1.20%)</title><rect x="10.0" y="467.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.16%)</title><rect x="10.0" y="451.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.06%)</title><rect x="10.0" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.06%)</title><rect x="10.0" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.06%)</title><rect x="10.0" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (4 samples, 0.06%)</title><rect x="10.0" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.06%)</title><rect x="10.0" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="10.0" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.06%)</title><rect x="10.0" y="339.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (6 samples, 0.10%)</title><rect x="10.8" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.10%)</title><rect x="10.8" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.10%)</title><rect x="10.8" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.10%)</title><rect x="10.8" y="387.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (63 samples, 1.00%)</title><rect x="11.9" y="451.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (19 samples, 0.30%)</title><rect x="11.9" y="435.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.14%)</title><rect x="11.9" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.9" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="11.9" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.11%)</title><rect x="12.3" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="12.3" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="15.3" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.05%)</title><rect x="12.8" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="15.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.16%)</title><rect x="13.6" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.16%)</title><rect x="13.6" y="403.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.16%)</title><rect x="13.6" y="387.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (10 samples, 0.16%)</title><rect x="13.6" y="371.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.16%)</title><rect x="13.6" y="355.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (10 samples, 0.16%)</title><rect x="13.6" y="339.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.16%)</title><rect x="13.6" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.16%)</title><rect x="13.6" y="307.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.16%)</title><rect x="13.6" y="291.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="16.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (44 samples, 0.70%)</title><rect x="15.5" y="435.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.5" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.10%)</title><rect x="15.5" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="18.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="16.6" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="16.6" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="16.6" y="387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="16.6" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.11%)</title><rect x="16.6" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.11%)</title><rect x="16.6" y="339.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="17.9" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="17.9" y="403.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (27 samples, 0.43%)</title><rect x="18.7" y="419.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (11 samples, 0.18%)</title><rect x="18.7" y="403.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 0.16%)</title><rect x="18.7" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.16%)</title><rect x="18.7" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="18.7" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="21.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.06%)</title><rect x="19.2" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.06%)</title><rect x="19.2" y="339.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="20.2" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="20.2" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="23.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (16 samples, 0.26%)</title><rect x="20.7" y="403.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.7" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.06%)</title><rect x="20.7" y="387.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="23.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="21.5" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="21.5" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="21.5" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="21.5" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="21.5" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="21.5" y="307.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (7 samples, 0.11%)</title><rect x="22.4" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="22.6" y="371.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="22.6" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="22.6" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.10%)</title><rect x="22.6" y="323.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="25.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.03%)</title><rect x="23.7" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="23.7" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="23.7" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (11 samples, 0.18%)</title><rect x="24.1" y="483.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (7 samples, 0.11%)</title><rect x="24.1" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (7 samples, 0.11%)</title><rect x="24.1" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="24.1" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="24.1" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="24.1" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="27.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.08%)</title><rect x="24.5" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.08%)</title><rect x="24.5" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.5" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="24.5" y="387.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.06%)</title><rect x="25.4" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="25.6" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="28.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (97 samples, 1.55%)</title><rect x="26.2" y="579.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (38 samples, 0.61%)</title><rect x="26.2" y="563.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (38 samples, 0.61%)</title><rect x="26.2" y="547.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (38 samples, 0.61%)</title><rect x="26.2" y="531.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (9 samples, 0.14%)</title><rect x="26.2" y="515.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (9 samples, 0.14%)</title><rect x="26.2" y="499.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.14%)</title><rect x="26.2" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.14%)</title><rect x="26.2" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.14%)</title><rect x="26.2" y="451.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.2" y="462.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="26.2" y="435.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="29.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.05%)</title><rect x="27.9" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="30.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.18%)</title><rect x="28.4" y="515.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.4" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="28.4" y="499.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="31.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="29.0" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="29.8" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="32.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (15 samples, 0.24%)</title><rect x="30.5" y="515.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.24%)</title><rect x="30.5" y="499.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.16%)</title><rect x="30.5" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.5" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (5 samples, 0.08%)</title><rect x="30.5" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.5" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (5 samples, 0.08%)</title><rect x="30.5" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="33.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.08%)</title><rect x="31.5" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.08%)</title><rect x="31.5" y="451.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="34.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.08%)</title><rect x="32.4" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.08%)</title><rect x="32.4" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.08%)</title><rect x="32.4" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (4 samples, 0.06%)</title><rect x="32.4" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.4" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.06%)</title><rect x="32.4" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="35.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (59 samples, 0.94%)</title><rect x="33.3" y="563.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 0.94%)</title><rect x="33.3" y="547.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (59 samples, 0.94%)</title><rect x="33.3" y="531.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (59 samples, 0.94%)</title><rect x="33.3" y="515.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.21%)</title><rect x="33.3" y="499.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (3 samples, 0.05%)</title><rect x="33.3" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (3 samples, 0.05%)</title><rect x="33.3" y="467.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="36.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (4 samples, 0.06%)</title><rect x="33.9" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (4 samples, 0.06%)</title><rect x="33.9" y="467.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="36.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.10%)</title><rect x="34.6" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.10%)</title><rect x="34.6" y="467.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="37.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingInt (2 samples, 0.03%)</title><rect x="35.8" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="35.8" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="35.8" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$300/548450126.get$Lambda (2 samples, 0.03%)</title><rect x="35.8" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.8" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$300 (2 samples, 0.03%)</title><rect x="35.8" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="38.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (2 samples, 0.03%)</title><rect x="36.2" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (15 samples, 0.24%)</title><rect x="36.9" y="499.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.22%)</title><rect x="36.9" y="483.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (14 samples, 0.22%)</title><rect x="36.9" y="467.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.21%)</title><rect x="36.9" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.21%)</title><rect x="36.9" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (8 samples, 0.13%)</title><rect x="36.9" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (8 samples, 0.13%)</title><rect x="36.9" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (8 samples, 0.13%)</title><rect x="36.9" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (8 samples, 0.13%)</title><rect x="36.9" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (8 samples, 0.13%)</title><rect x="36.9" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.08%)</title><rect x="36.9" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.08%)</title><rect x="36.9" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="39.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.05%)</title><rect x="37.8" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.8" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.05%)</title><rect x="37.8" y="323.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="40.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (5 samples, 0.08%)</title><rect x="38.4" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (5 samples, 0.08%)</title><rect x="38.4" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap (5 samples, 0.08%)</title><rect x="38.4" y="387.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="41.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (11 samples, 0.18%)</title><rect x="39.7" y="499.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (10 samples, 0.16%)</title><rect x="39.9" y="483.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.14%)</title><rect x="39.9" y="467.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (9 samples, 0.14%)</title><rect x="39.9" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.11%)</title><rect x="39.9" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.11%)</title><rect x="39.9" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (7 samples, 0.11%)</title><rect x="39.9" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (7 samples, 0.11%)</title><rect x="39.9" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.9" y="398.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (7 samples, 0.11%)</title><rect x="39.9" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.9" y="382.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (7 samples, 0.11%)</title><rect x="39.9" y="355.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (7 samples, 0.11%)</title><rect x="39.9" y="339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.11%)</title><rect x="39.9" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (7 samples, 0.11%)</title><rect x="39.9" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (7 samples, 0.11%)</title><rect x="39.9" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (7 samples, 0.11%)</title><rect x="39.9" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (7 samples, 0.11%)</title><rect x="39.9" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (7 samples, 0.11%)</title><rect x="39.9" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.11%)</title><rect x="39.9" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.11%)</title><rect x="39.9" y="211.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="39.9" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="39.9" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="42.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="40.3" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="40.3" y="163.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="43.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.03%)</title><rect x="41.2" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.03%)</title><rect x="41.2" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.2" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="41.2" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.2" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="41.2" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="44.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (14 samples, 0.22%)</title><rect x="41.8" y="499.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 0.22%)</title><rect x="41.8" y="483.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.22%)</title><rect x="41.8" y="467.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.13%)</title><rect x="41.8" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.13%)</title><rect x="41.8" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.8" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="41.8" y="419.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="44.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.10%)</title><rect x="43.3" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.3" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.10%)</title><rect x="43.3" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="46.3" y="446.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-3 tid=13378] (233 samples, 3.72%)</title><rect x="44.4" y="675.0" width="43.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="47.4" y="686.0">[For..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (233 samples, 3.72%)</title><rect x="44.4" y="659.0" width="43.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.4" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (233 samples, 3.72%)</title><rect x="44.4" y="643.0" width="43.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (233 samples, 3.72%)</title><rect x="44.4" y="627.0" width="43.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.4" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (233 samples, 3.72%)</title><rect x="44.4" y="611.0" width="43.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (233 samples, 3.72%)</title><rect x="44.4" y="595.0" width="43.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (97 samples, 1.55%)</title><rect x="44.4" y="579.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (97 samples, 1.55%)</title><rect x="44.4" y="563.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (97 samples, 1.55%)</title><rect x="44.4" y="547.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (97 samples, 1.55%)</title><rect x="44.4" y="531.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (97 samples, 1.55%)</title><rect x="44.4" y="515.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (97 samples, 1.55%)</title><rect x="44.4" y="499.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (73 samples, 1.16%)</title><rect x="44.4" y="483.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (73 samples, 1.16%)</title><rect x="44.4" y="467.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.14%)</title><rect x="44.4" y="451.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.05%)</title><rect x="44.4" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.05%)</title><rect x="44.4" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.05%)</title><rect x="44.4" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (3 samples, 0.05%)</title><rect x="44.4" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.05%)</title><rect x="44.4" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="44.4" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="44.4" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="47.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (6 samples, 0.10%)</title><rect x="45.0" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.10%)</title><rect x="45.0" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.10%)</title><rect x="45.0" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.10%)</title><rect x="45.0" y="387.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="48.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (60 samples, 0.96%)</title><rect x="46.1" y="451.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (19 samples, 0.30%)</title><rect x="46.1" y="435.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 0.16%)</title><rect x="46.1" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.1" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="46.1" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="49.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.13%)</title><rect x="46.5" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="46.5" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="49.5" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.05%)</title><rect x="47.3" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="50.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.14%)</title><rect x="48.0" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.05%)</title><rect x="48.0" y="403.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.10%)</title><rect x="48.6" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.10%)</title><rect x="48.6" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (6 samples, 0.10%)</title><rect x="48.6" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.10%)</title><rect x="48.6" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (6 samples, 0.10%)</title><rect x="48.6" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.10%)</title><rect x="48.6" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.10%)</title><rect x="48.6" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.10%)</title><rect x="48.6" y="291.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="51.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (41 samples, 0.65%)</title><rect x="49.7" y="435.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="49.7" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="52.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="50.3" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="50.3" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="50.3" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="50.3" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="50.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="50.3" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="53.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="51.0" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="51.0" y="403.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (30 samples, 0.48%)</title><rect x="51.8" y="419.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (9 samples, 0.14%)</title><rect x="51.8" y="403.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.13%)</title><rect x="51.8" y="387.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.13%)</title><rect x="51.8" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="51.8" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="54.8" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="52.3" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="55.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="52.7" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="52.7" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="55.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (21 samples, 0.33%)</title><rect x="53.5" y="403.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="53.5" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="56.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.08%)</title><rect x="53.8" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.08%)</title><rect x="53.8" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.08%)</title><rect x="53.8" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.08%)</title><rect x="53.8" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.08%)</title><rect x="53.8" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="53.8" y="307.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="56.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.05%)</title><rect x="54.8" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.05%)</title><rect x="54.8" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="57.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (11 samples, 0.18%)</title><rect x="55.3" y="387.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (2 samples, 0.03%)</title><rect x="55.3" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (2 samples, 0.03%)</title><rect x="55.3" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="55.7" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.03%)</title><rect x="55.7" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="58.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.11%)</title><rect x="56.1" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.11%)</title><rect x="56.1" y="355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.11%)</title><rect x="56.1" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.11%)</title><rect x="56.1" y="323.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="59.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.06%)</title><rect x="57.4" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="57.4" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.06%)</title><rect x="57.4" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="60.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (24 samples, 0.38%)</title><rect x="58.2" y="483.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.2" y="494.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="58.2" y="467.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="61.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (4 samples, 0.06%)</title><rect x="59.1" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (4 samples, 0.06%)</title><rect x="59.1" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="59.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="59.1" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="59.1" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="59.5" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="59.5" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.5" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="59.5" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="62.5" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.10%)</title><rect x="59.9" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.14%)</title><rect x="61.0" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.0" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="61.0" y="451.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="61.7" y="451.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="62.3" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (136 samples, 2.17%)</title><rect x="62.7" y="579.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (64 samples, 1.02%)</title><rect x="62.7" y="563.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (64 samples, 1.02%)</title><rect x="62.7" y="547.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (64 samples, 1.02%)</title><rect x="62.7" y="531.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (14 samples, 0.22%)</title><rect x="62.7" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (14 samples, 0.22%)</title><rect x="62.7" y="499.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.22%)</title><rect x="62.7" y="483.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.08%)</title><rect x="62.7" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="62.7" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="65.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.14%)</title><rect x="63.6" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.14%)</title><rect x="63.6" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.6" y="462.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="63.6" y="435.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="66.6" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.11%)</title><rect x="65.3" y="515.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="68.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.29%)</title><rect x="66.6" y="515.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.6" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="66.6" y="499.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="69.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.14%)</title><rect x="67.8" y="499.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="70.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="69.5" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="72.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (25 samples, 0.40%)</title><rect x="70.0" y="515.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (25 samples, 0.40%)</title><rect x="70.0" y="499.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.30%)</title><rect x="70.0" y="483.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.0" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (9 samples, 0.14%)</title><rect x="70.0" y="467.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.0" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (9 samples, 0.14%)</title><rect x="70.0" y="451.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="73.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.16%)</title><rect x="71.7" y="467.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.16%)</title><rect x="71.7" y="451.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="74.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.10%)</title><rect x="73.6" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.10%)</title><rect x="73.6" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.10%)</title><rect x="73.6" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (4 samples, 0.06%)</title><rect x="73.6" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.6" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.06%)</title><rect x="73.6" y="419.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="76.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="74.4" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="74.4" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.4" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="74.4" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="74.4" y="387.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="77.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (72 samples, 1.15%)</title><rect x="74.7" y="563.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (72 samples, 1.15%)</title><rect x="74.7" y="547.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (72 samples, 1.15%)</title><rect x="74.7" y="531.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (72 samples, 1.15%)</title><rect x="74.7" y="515.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.7" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.21%)</title><rect x="74.7" y="499.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (3 samples, 0.05%)</title><rect x="74.9" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (3 samples, 0.05%)</title><rect x="74.9" y="467.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="77.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.14%)</title><rect x="75.5" y="483.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.5" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.14%)</title><rect x="75.5" y="467.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="78.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (5 samples, 0.08%)</title><rect x="77.4" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (5 samples, 0.08%)</title><rect x="77.4" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (4 samples, 0.06%)</title><rect x="77.4" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="80.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (25 samples, 0.40%)</title><rect x="78.3" y="499.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.35%)</title><rect x="78.3" y="483.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (22 samples, 0.35%)</title><rect x="78.3" y="467.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (22 samples, 0.35%)</title><rect x="78.3" y="451.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (22 samples, 0.35%)</title><rect x="78.3" y="435.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (15 samples, 0.24%)</title><rect x="78.3" y="419.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (15 samples, 0.24%)</title><rect x="78.3" y="403.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (15 samples, 0.24%)</title><rect x="78.3" y="387.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (15 samples, 0.24%)</title><rect x="78.3" y="371.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (15 samples, 0.24%)</title><rect x="78.3" y="355.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.11%)</title><rect x="78.3" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.3" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.11%)</title><rect x="78.3" y="323.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="81.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.13%)</title><rect x="79.6" y="339.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.6" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (8 samples, 0.13%)</title><rect x="79.6" y="323.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="82.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (7 samples, 0.11%)</title><rect x="81.1" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (7 samples, 0.11%)</title><rect x="81.1" y="403.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.1" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.11%)</title><rect x="81.1" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="84.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (3 samples, 0.05%)</title><rect x="82.4" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (3 samples, 0.05%)</title><rect x="82.4" y="467.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="85.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (16 samples, 0.26%)</title><rect x="83.0" y="499.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.0" y="510.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (3 samples, 0.05%)</title><rect x="83.0" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="83.0" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="83.0" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.0" y="462.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.get$Lambda (3 samples, 0.05%)</title><rect x="83.0" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.0" y="446.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$313 (3 samples, 0.05%)</title><rect x="83.0" y="419.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (13 samples, 0.21%)</title><rect x="83.6" y="483.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.19%)</title><rect x="83.6" y="467.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.19%)</title><rect x="83.6" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.13%)</title><rect x="83.6" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.13%)</title><rect x="83.6" y="419.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (8 samples, 0.13%)</title><rect x="83.6" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (8 samples, 0.13%)</title><rect x="83.6" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.6" y="398.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (8 samples, 0.13%)</title><rect x="83.6" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.6" y="382.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (8 samples, 0.13%)</title><rect x="83.6" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (8 samples, 0.13%)</title><rect x="83.6" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.13%)</title><rect x="83.6" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (8 samples, 0.13%)</title><rect x="83.6" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.6" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (8 samples, 0.13%)</title><rect x="83.6" y="291.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (8 samples, 0.13%)</title><rect x="83.6" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (8 samples, 0.13%)</title><rect x="83.6" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (8 samples, 0.13%)</title><rect x="83.6" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.13%)</title><rect x="83.6" y="227.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="83.6" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="83.6" y="195.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="83.6" y="179.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="86.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.10%)</title><rect x="83.9" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="83.9" y="163.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="86.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (3 samples, 0.05%)</title><rect x="85.1" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (3 samples, 0.05%)</title><rect x="85.1" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.1" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (3 samples, 0.05%)</title><rect x="85.1" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="88.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (12 samples, 0.19%)</title><rect x="86.0" y="499.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.19%)</title><rect x="86.0" y="483.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.19%)</title><rect x="86.0" y="467.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.13%)</title><rect x="86.0" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.13%)</title><rect x="86.0" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.0" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="86.0" y="419.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="89.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.06%)</title><rect x="87.5" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.5" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.06%)</title><rect x="87.5" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="90.5" y="446.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-5 tid=13380] (235 samples, 3.75%)</title><rect x="88.3" y="675.0" width="44.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="91.3" y="686.0">[For..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (235 samples, 3.75%)</title><rect x="88.3" y="659.0" width="44.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.3" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (235 samples, 3.75%)</title><rect x="88.3" y="643.0" width="44.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.3" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (235 samples, 3.75%)</title><rect x="88.3" y="627.0" width="44.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (235 samples, 3.75%)</title><rect x="88.3" y="611.0" width="44.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.3" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (235 samples, 3.75%)</title><rect x="88.3" y="595.0" width="44.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.3" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (101 samples, 1.61%)</title><rect x="88.3" y="579.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (101 samples, 1.61%)</title><rect x="88.3" y="563.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (101 samples, 1.61%)</title><rect x="88.3" y="547.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (101 samples, 1.61%)</title><rect x="88.3" y="531.0" width="19.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (101 samples, 1.61%)</title><rect x="88.3" y="515.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (101 samples, 1.61%)</title><rect x="88.3" y="499.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (83 samples, 1.32%)</title><rect x="88.3" y="483.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (83 samples, 1.32%)</title><rect x="88.3" y="467.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.35%)</title><rect x="88.3" y="451.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.24%)</title><rect x="88.3" y="435.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (15 samples, 0.24%)</title><rect x="88.3" y="419.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.24%)</title><rect x="88.3" y="403.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (15 samples, 0.24%)</title><rect x="88.3" y="387.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (15 samples, 0.24%)</title><rect x="88.3" y="371.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.24%)</title><rect x="88.3" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.24%)</title><rect x="88.3" y="339.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="91.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (7 samples, 0.11%)</title><rect x="91.1" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (7 samples, 0.11%)</title><rect x="91.1" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.11%)</title><rect x="91.1" y="403.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.11%)</title><rect x="91.1" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (53 samples, 0.85%)</title><rect x="92.4" y="451.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (13 samples, 0.21%)</title><rect x="92.4" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.11%)</title><rect x="92.4" y="419.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.11%)</title><rect x="92.4" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.05%)</title><rect x="92.4" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.4" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.05%)</title><rect x="92.4" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="95.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="93.2" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="93.2" y="371.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.10%)</title><rect x="93.7" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.08%)</title><rect x="93.9" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.08%)</title><rect x="93.9" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.08%)</title><rect x="93.9" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.08%)</title><rect x="93.9" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (5 samples, 0.08%)</title><rect x="93.9" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.08%)</title><rect x="93.9" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.08%)</title><rect x="93.9" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.08%)</title><rect x="93.9" y="291.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="96.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (40 samples, 0.64%)</title><rect x="94.9" y="435.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.9" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="94.9" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="95.4" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="95.4" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="95.4" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="95.4" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="95.4" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="95.4" y="339.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="98.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.05%)</title><rect x="96.2" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.05%)</title><rect x="96.2" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (30 samples, 0.48%)</title><rect x="96.7" y="419.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (14 samples, 0.22%)</title><rect x="96.7" y="403.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.18%)</title><rect x="96.7" y="387.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.7" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="96.7" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="99.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.14%)</title><rect x="97.1" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="97.1" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="100.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="97.5" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="97.5" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="100.5" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="97.9" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="100.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.05%)</title><rect x="98.8" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.05%)</title><rect x="98.8" y="371.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (16 samples, 0.26%)</title><rect x="99.4" y="403.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="99.4" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="99.4" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="99.4" y="355.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="99.4" y="339.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.18%)</title><rect x="99.4" y="323.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.4" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.18%)</title><rect x="99.4" y="307.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="102.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="101.4" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="101.4" y="371.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="104.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (8 samples, 0.13%)</title><rect x="102.4" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.13%)</title><rect x="102.4" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.13%)</title><rect x="102.4" y="419.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="105.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (18 samples, 0.29%)</title><rect x="103.9" y="483.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.9" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="103.9" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="106.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (5 samples, 0.08%)</title><rect x="104.3" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (5 samples, 0.08%)</title><rect x="104.3" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="104.3" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.06%)</title><rect x="104.5" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.06%)</title><rect x="104.5" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.5" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="104.5" y="387.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="107.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.16%)</title><rect x="105.4" y="467.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.4" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="105.4" y="451.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="106.2" y="451.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="109.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="106.9" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (134 samples, 2.14%)</title><rect x="107.3" y="579.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (52 samples, 0.83%)</title><rect x="107.3" y="563.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (52 samples, 0.83%)</title><rect x="107.3" y="547.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (52 samples, 0.83%)</title><rect x="107.3" y="531.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (15 samples, 0.24%)</title><rect x="107.3" y="515.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (15 samples, 0.24%)</title><rect x="107.3" y="499.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.24%)</title><rect x="107.3" y="483.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="107.3" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="107.3" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="110.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.21%)</title><rect x="107.7" y="467.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.21%)</title><rect x="107.7" y="451.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.7" y="462.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.21%)</title><rect x="107.7" y="435.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="110.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.10%)</title><rect x="110.1" y="515.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="113.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.18%)</title><rect x="111.2" y="515.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.2" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="111.2" y="499.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="114.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="112.0" y="499.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="115.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="112.7" y="499.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="115.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (20 samples, 0.32%)</title><rect x="113.3" y="515.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (20 samples, 0.32%)</title><rect x="113.3" y="499.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.22%)</title><rect x="113.3" y="483.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.3" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (9 samples, 0.14%)</title><rect x="113.3" y="467.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.3" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (9 samples, 0.14%)</title><rect x="113.3" y="451.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="116.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.08%)</title><rect x="115.0" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.0" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.08%)</title><rect x="115.0" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="118.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.10%)</title><rect x="115.9" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.10%)</title><rect x="115.9" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.10%)</title><rect x="115.9" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (5 samples, 0.08%)</title><rect x="115.9" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (5 samples, 0.08%)</title><rect x="115.9" y="419.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (82 samples, 1.31%)</title><rect x="117.1" y="563.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (82 samples, 1.31%)</title><rect x="117.1" y="547.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (82 samples, 1.31%)</title><rect x="117.1" y="531.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (82 samples, 1.31%)</title><rect x="117.1" y="515.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.24%)</title><rect x="117.1" y="499.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (2 samples, 0.03%)</title><rect x="117.1" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (2 samples, 0.03%)</title><rect x="117.1" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="120.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (5 samples, 0.08%)</title><rect x="117.4" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (5 samples, 0.08%)</title><rect x="117.4" y="467.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="120.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.13%)</title><rect x="118.4" y="483.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.13%)</title><rect x="118.4" y="467.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="121.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (2 samples, 0.03%)</title><rect x="119.9" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.9" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="119.9" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="119.9" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="119.9" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.get$Lambda (2 samples, 0.03%)</title><rect x="119.9" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.9" y="446.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$311 (2 samples, 0.03%)</title><rect x="119.9" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="122.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (3 samples, 0.05%)</title><rect x="120.3" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.3" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySet (3 samples, 0.05%)</title><rect x="120.3" y="483.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="123.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (8 samples, 0.13%)</title><rect x="120.8" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (8 samples, 0.13%)</title><rect x="120.8" y="483.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (3 samples, 0.05%)</title><rect x="120.8" y="467.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="123.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="121.4" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="121.4" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (3 samples, 0.05%)</title><rect x="121.4" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.4" y="446.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (3 samples, 0.05%)</title><rect x="121.4" y="419.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="124.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.mapMerger (2 samples, 0.03%)</title><rect x="122.0" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="122.0" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="122.0" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$44/597255128.get$Lambda (2 samples, 0.03%)</title><rect x="122.0" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="430.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$44 (2 samples, 0.03%)</title><rect x="122.0" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="125.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (20 samples, 0.32%)</title><rect x="122.3" y="499.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.26%)</title><rect x="122.3" y="483.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (16 samples, 0.26%)</title><rect x="122.3" y="467.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.19%)</title><rect x="122.3" y="451.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.19%)</title><rect x="122.3" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (10 samples, 0.16%)</title><rect x="122.3" y="419.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (10 samples, 0.16%)</title><rect x="122.3" y="403.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (10 samples, 0.16%)</title><rect x="122.3" y="387.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (10 samples, 0.16%)</title><rect x="122.3" y="371.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (10 samples, 0.16%)</title><rect x="122.3" y="355.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.08%)</title><rect x="122.3" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.3" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.08%)</title><rect x="122.3" y="323.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="125.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.08%)</title><rect x="123.3" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.3" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (5 samples, 0.08%)</title><rect x="123.3" y="323.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="126.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.03%)</title><rect x="124.2" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (2 samples, 0.03%)</title><rect x="124.2" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.2" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="124.2" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="127.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (4 samples, 0.06%)</title><rect x="124.6" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (4 samples, 0.06%)</title><rect x="124.6" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.6" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (4 samples, 0.06%)</title><rect x="124.6" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="127.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (4 samples, 0.06%)</title><rect x="125.3" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.3" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (4 samples, 0.06%)</title><rect x="125.3" y="467.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="128.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (23 samples, 0.37%)</title><rect x="126.1" y="499.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (22 samples, 0.35%)</title><rect x="126.3" y="483.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.29%)</title><rect x="126.3" y="467.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18 samples, 0.29%)</title><rect x="126.3" y="451.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.22%)</title><rect x="126.3" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (14 samples, 0.22%)</title><rect x="126.3" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (14 samples, 0.22%)</title><rect x="126.3" y="403.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (14 samples, 0.22%)</title><rect x="126.3" y="387.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.3" y="398.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (14 samples, 0.22%)</title><rect x="126.3" y="371.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.3" y="382.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (14 samples, 0.22%)</title><rect x="126.3" y="355.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (14 samples, 0.22%)</title><rect x="126.3" y="339.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.22%)</title><rect x="126.3" y="323.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (14 samples, 0.22%)</title><rect x="126.3" y="307.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (14 samples, 0.22%)</title><rect x="126.3" y="291.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (14 samples, 0.22%)</title><rect x="126.3" y="275.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (14 samples, 0.22%)</title><rect x="126.3" y="259.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (14 samples, 0.22%)</title><rect x="126.3" y="243.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.22%)</title><rect x="126.3" y="227.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.22%)</title><rect x="126.3" y="211.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.22%)</title><rect x="126.3" y="195.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="126.3" y="179.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="129.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.16%)</title><rect x="127.0" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.0" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="127.0" y="163.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="130.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (2 samples, 0.03%)</title><rect x="128.9" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (2 samples, 0.03%)</title><rect x="128.9" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (2 samples, 0.03%)</title><rect x="128.9" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.03%)</title><rect x="129.3" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.03%)</title><rect x="129.3" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.3" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="129.3" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.3" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="129.3" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (4 samples, 0.06%)</title><rect x="129.7" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (4 samples, 0.06%)</title><rect x="129.7" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (11 samples, 0.18%)</title><rect x="130.4" y="499.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.18%)</title><rect x="130.4" y="483.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 0.18%)</title><rect x="130.4" y="467.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.11%)</title><rect x="130.4" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="130.4" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.4" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="130.4" y="419.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="133.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.06%)</title><rect x="131.7" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.06%)</title><rect x="131.7" y="435.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="134.7" y="446.0"></text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=13313] (207 samples, 3.30%)</title><rect x="132.5" y="675.0" width="38.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="135.5" y="686.0">[Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (207 samples, 3.30%)</title><rect x="132.5" y="659.0" width="38.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.5" y="670.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.16%)</title><rect x="132.5" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.16%)</title><rect x="132.5" y="627.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1317658293.get$Lambda (6 samples, 0.10%)</title><rect x="132.5" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$229 (6 samples, 0.10%)</title><rect x="132.5" y="595.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="135.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$233/1843774215.get$Lambda (4 samples, 0.06%)</title><rect x="133.6" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$233 (4 samples, 0.06%)</title><rect x="133.6" y="595.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="136.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (4 samples, 0.06%)</title><rect x="134.4" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="134.4" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.get$Lambda (4 samples, 0.06%)</title><rect x="134.4" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$230 (4 samples, 0.06%)</title><rect x="134.4" y="595.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (58 samples, 0.92%)</title><rect x="135.1" y="643.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/778276218.accept (56 samples, 0.89%)</title><rect x="135.1" y="627.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (56 samples, 0.89%)</title><rect x="135.1" y="611.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (56 samples, 0.89%)</title><rect x="135.1" y="595.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (56 samples, 0.89%)</title><rect x="135.1" y="579.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (56 samples, 0.89%)</title><rect x="135.1" y="563.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (56 samples, 0.89%)</title><rect x="135.1" y="547.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.89%)</title><rect x="135.1" y="531.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.89%)</title><rect x="135.1" y="515.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (56 samples, 0.89%)</title><rect x="135.1" y="499.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (56 samples, 0.89%)</title><rect x="135.1" y="483.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (56 samples, 0.89%)</title><rect x="135.1" y="467.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (56 samples, 0.89%)</title><rect x="135.1" y="451.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (14 samples, 0.22%)</title><rect x="135.1" y="435.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (14 samples, 0.22%)</title><rect x="135.1" y="419.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (14 samples, 0.22%)</title><rect x="135.1" y="403.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (8 samples, 0.13%)</title><rect x="135.1" y="387.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.13%)</title><rect x="135.1" y="371.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.13%)</title><rect x="135.1" y="355.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.13%)</title><rect x="135.1" y="339.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.13%)</title><rect x="135.1" y="323.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="138.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="136.6" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="136.6" y="371.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.10%)</title><rect x="136.6" y="355.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.10%)</title><rect x="136.6" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.10%)</title><rect x="136.6" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.10%)</title><rect x="136.6" y="307.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="139.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.11%)</title><rect x="137.8" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.11%)</title><rect x="137.8" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="137.8" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (7 samples, 0.11%)</title><rect x="137.8" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (7 samples, 0.11%)</title><rect x="137.8" y="371.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="140.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (35 samples, 0.56%)</title><rect x="139.1" y="435.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (18 samples, 0.29%)</title><rect x="139.1" y="419.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.26%)</title><rect x="139.1" y="403.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.26%)</title><rect x="139.1" y="387.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="142.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (2 samples, 0.03%)</title><rect x="142.1" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.1" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="142.1" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="142.1" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="145.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (17 samples, 0.27%)</title><rect x="142.5" y="419.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$162/69677488.get (17 samples, 0.27%)</title><rect x="142.5" y="403.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (17 samples, 0.27%)</title><rect x="142.5" y="387.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.27%)</title><rect x="142.5" y="371.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.27%)</title><rect x="142.5" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.5" y="366.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.26%)</title><rect x="142.7" y="339.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1608485788.accept (2 samples, 0.03%)</title><rect x="145.7" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.03%)</title><rect x="145.7" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.run (2 samples, 0.03%)</title><rect x="145.7" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.03%)</title><rect x="145.7" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.03%)</title><rect x="145.7" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="145.7" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="145.7" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.03%)</title><rect x="145.7" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (6 samples, 0.10%)</title><rect x="146.0" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.06%)</title><rect x="146.0" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.06%)</title><rect x="146.0" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.06%)</title><rect x="146.0" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.06%)</title><rect x="146.0" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.06%)</title><rect x="146.0" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (4 samples, 0.06%)</title><rect x="146.0" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (4 samples, 0.06%)</title><rect x="146.0" y="531.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="149.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (2 samples, 0.03%)</title><rect x="146.8" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.8" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (2 samples, 0.03%)</title><rect x="146.8" y="611.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="149.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (34 samples, 0.54%)</title><rect x="147.2" y="643.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/651216306.run (22 samples, 0.35%)</title><rect x="147.2" y="627.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (22 samples, 0.35%)</title><rect x="147.2" y="611.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.35%)</title><rect x="147.2" y="595.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.35%)</title><rect x="147.2" y="579.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.35%)</title><rect x="147.2" y="563.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (22 samples, 0.35%)</title><rect x="147.2" y="547.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (22 samples, 0.35%)</title><rect x="147.2" y="531.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.35%)</title><rect x="147.2" y="515.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (22 samples, 0.35%)</title><rect x="147.2" y="499.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (22 samples, 0.35%)</title><rect x="147.2" y="483.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (16 samples, 0.26%)</title><rect x="147.2" y="467.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (16 samples, 0.26%)</title><rect x="147.2" y="451.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (16 samples, 0.26%)</title><rect x="147.2" y="435.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (11 samples, 0.18%)</title><rect x="147.2" y="419.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (11 samples, 0.18%)</title><rect x="147.2" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.18%)</title><rect x="147.2" y="387.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.18%)</title><rect x="147.2" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.18%)</title><rect x="147.2" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.2" y="366.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.18%)</title><rect x="147.2" y="339.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="150.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.08%)</title><rect x="149.2" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="149.2" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="149.2" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (5 samples, 0.08%)</title><rect x="149.2" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (5 samples, 0.08%)</title><rect x="149.2" y="355.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="152.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (6 samples, 0.10%)</title><rect x="150.2" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="150.2" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="150.2" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.10%)</title><rect x="150.2" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.10%)</title><rect x="150.2" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.10%)</title><rect x="150.2" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.10%)</title><rect x="150.2" y="371.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="153.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$178/1436643968.run (12 samples, 0.19%)</title><rect x="151.3" y="627.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (12 samples, 0.19%)</title><rect x="151.3" y="611.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="151.3" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="151.3" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.get$Lambda (3 samples, 0.05%)</title><rect x="151.3" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$241 (3 samples, 0.05%)</title><rect x="151.3" y="547.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="154.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.14%)</title><rect x="151.9" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.14%)</title><rect x="151.9" y="579.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.14%)</title><rect x="151.9" y="563.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.14%)</title><rect x="151.9" y="547.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="154.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (48 samples, 0.77%)</title><rect x="153.6" y="643.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.21%)</title><rect x="153.6" y="627.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.6" y="638.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.21%)</title><rect x="153.6" y="611.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.6" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.21%)</title><rect x="153.6" y="595.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.21%)</title><rect x="153.6" y="579.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.6" y="590.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.21%)</title><rect x="153.6" y="563.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="156.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (35 samples, 0.56%)</title><rect x="156.0" y="627.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="156.0" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="156.0" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$298/2007698387.get$Lambda (6 samples, 0.10%)</title><rect x="156.0" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$298 (6 samples, 0.10%)</title><rect x="156.0" y="563.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="159.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (29 samples, 0.46%)</title><rect x="157.1" y="611.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.1" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.19%)</title><rect x="157.1" y="595.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="160.1" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (17 samples, 0.27%)</title><rect x="159.4" y="595.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.4" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (17 samples, 0.27%)</title><rect x="159.4" y="579.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.4" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (17 samples, 0.27%)</title><rect x="159.4" y="563.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="162.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (33 samples, 0.53%)</title><rect x="162.6" y="643.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="162.6" y="627.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="162.6" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$228/1337456006.get$Lambda (5 samples, 0.08%)</title><rect x="162.6" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$228 (5 samples, 0.08%)</title><rect x="162.6" y="579.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="165.6" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.22%)</title><rect x="163.5" y="627.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (3 samples, 0.05%)</title><rect x="163.5" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.5" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (3 samples, 0.05%)</title><rect x="163.5" y="595.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="166.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.18%)</title><rect x="164.1" y="611.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.1" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.18%)</title><rect x="164.1" y="595.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="167.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (14 samples, 0.22%)</title><rect x="166.2" y="627.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.2" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (14 samples, 0.22%)</title><rect x="166.2" y="611.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="169.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 0.05%)</title><rect x="168.8" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.05%)</title><rect x="168.8" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (3 samples, 0.05%)</title><rect x="168.8" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.05%)</title><rect x="168.8" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.05%)</title><rect x="168.8" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.05%)</title><rect x="168.8" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.05%)</title><rect x="168.8" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.05%)</title><rect x="168.8" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.05%)</title><rect x="168.8" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.8" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.05%)</title><rect x="168.8" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="171.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (10 samples, 0.16%)</title><rect x="169.6" y="643.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (10 samples, 0.16%)</title><rect x="169.6" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (10 samples, 0.16%)</title><rect x="169.6" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (10 samples, 0.16%)</title><rect x="169.6" y="595.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="172.6" y="606.0"></text>
</g>
<g>
<title>[HttpClient-2-SelectorManager tid=13321] (3 samples, 0.05%)</title><rect x="171.4" y="675.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="174.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3 samples, 0.05%)</title><rect x="171.4" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.05%)</title><rect x="171.4" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.05%)</title><rect x="171.4" y="627.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="174.4" y="638.0"></text>
</g>
<g>
<title>[HttpClient-3-SelectorManager tid=13329] (3 samples, 0.05%)</title><rect x="172.0" y="675.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="175.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3 samples, 0.05%)</title><rect x="172.0" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.05%)</title><rect x="172.0" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.05%)</title><rect x="172.0" y="627.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="175.0" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13314] (196 samples, 3.13%)</title><rect x="172.8" y="675.0" width="36.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="175.8" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (196 samples, 3.13%)</title><rect x="172.8" y="659.0" width="36.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.8" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.03%)</title><rect x="172.8" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.8" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.03%)</title><rect x="172.8" y="627.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="175.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (194 samples, 3.09%)</title><rect x="173.1" y="643.0" width="36.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (194 samples, 3.09%)</title><rect x="173.1" y="627.0" width="36.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.1" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (194 samples, 3.09%)</title><rect x="173.1" y="611.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.1" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (188 samples, 3.00%)</title><rect x="173.1" y="595.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.1" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (188 samples, 3.00%)</title><rect x="173.1" y="579.0" width="35.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.1" y="590.0">one..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (186 samples, 2.97%)</title><rect x="173.1" y="563.0" width="35.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.1" y="574.0">Re..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (186 samples, 2.97%)</title><rect x="173.1" y="547.0" width="35.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.1" y="558.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="173.1" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="173.1" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="173.1" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="173.1" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.1" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="173.1" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="176.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="173.5" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="173.5" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="173.5" y="499.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="176.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (182 samples, 2.90%)</title><rect x="173.9" y="531.0" width="34.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.9" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (18 samples, 0.29%)</title><rect x="174.1" y="515.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.05%)</title><rect x="174.1" y="499.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="177.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.19%)</title><rect x="175.2" y="499.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (12 samples, 0.19%)</title><rect x="175.2" y="483.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (12 samples, 0.19%)</title><rect x="175.2" y="467.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (9 samples, 0.14%)</title><rect x="175.4" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (9 samples, 0.14%)</title><rect x="175.4" y="435.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (6 samples, 0.10%)</title><rect x="175.4" y="419.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="178.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="176.7" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="176.7" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="176.7" y="387.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="179.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="177.1" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="177.1" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (149 samples, 2.38%)</title><rect x="177.5" y="515.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.5" y="526.0">ru..</text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="177.5" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (6 samples, 0.10%)</title><rect x="177.8" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.10%)</title><rect x="177.8" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.05%)</title><rect x="177.8" y="467.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="180.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="178.4" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="178.4" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="178.4" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="181.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (85 samples, 1.36%)</title><rect x="179.0" y="499.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 1.36%)</title><rect x="179.0" y="483.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 1.36%)</title><rect x="179.0" y="467.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 1.36%)</title><rect x="179.0" y="451.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="179.0" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="179.0" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="179.2" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="179.2" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="179.2" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="182.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (4 samples, 0.06%)</title><rect x="179.7" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (39 samples, 0.62%)</title><rect x="180.5" y="435.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.08%)</title><rect x="180.5" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.06%)</title><rect x="180.5" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="180.5" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.5" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.03%)</title><rect x="180.5" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="180.9" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.9" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="180.9" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.26%)</title><rect x="181.4" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.26%)</title><rect x="181.4" y="403.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.4" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.06%)</title><rect x="181.4" y="387.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="184.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (8 samples, 0.13%)</title><rect x="182.2" y="387.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.13%)</title><rect x="182.2" y="371.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (8 samples, 0.13%)</title><rect x="182.2" y="355.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.13%)</title><rect x="182.2" y="339.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.08%)</title><rect x="182.2" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="182.2" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="182.2" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="182.2" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="182.2" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="182.2" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="182.2" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="182.2" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.2" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="182.2" y="195.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="185.2" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.05%)</title><rect x="182.5" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.5" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.05%)</title><rect x="182.5" y="291.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="185.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.06%)</title><rect x="183.7" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="183.7" y="371.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="186.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (2 samples, 0.03%)</title><rect x="184.4" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (9 samples, 0.14%)</title><rect x="184.8" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.8" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (9 samples, 0.14%)</title><rect x="184.8" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.8" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.10%)</title><rect x="184.8" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.8" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.10%)</title><rect x="184.8" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.8" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.10%)</title><rect x="184.8" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.8" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="184.8" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="187.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="185.2" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.2" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="185.2" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.2" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="185.2" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="188.2" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (3 samples, 0.05%)</title><rect x="185.9" y="387.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="188.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.10%)</title><rect x="186.7" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="186.7" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="189.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="187.3" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.05%)</title><rect x="187.3" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="190.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (28 samples, 0.45%)</title><rect x="187.8" y="435.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (4 samples, 0.06%)</title><rect x="188.0" y="419.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="191.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.03%)</title><rect x="188.8" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (2 samples, 0.03%)</title><rect x="188.8" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="191.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (21 samples, 0.33%)</title><rect x="189.1" y="419.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (21 samples, 0.33%)</title><rect x="189.1" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Class[] (2 samples, 0.03%)</title><rect x="189.1" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="192.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.05%)</title><rect x="189.5" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="192.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (10 samples, 0.16%)</title><rect x="190.1" y="387.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (10 samples, 0.16%)</title><rect x="190.1" y="371.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (10 samples, 0.16%)</title><rect x="190.1" y="355.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (10 samples, 0.16%)</title><rect x="190.1" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.1" y="350.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (10 samples, 0.16%)</title><rect x="190.1" y="323.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="193.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.05%)</title><rect x="192.0" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (3 samples, 0.05%)</title><rect x="192.0" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.03%)</title><rect x="192.0" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2 samples, 0.03%)</title><rect x="192.0" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="195.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.05%)</title><rect x="192.5" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.5" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.05%)</title><rect x="192.5" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.5" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.05%)</title><rect x="192.5" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="195.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10 samples, 0.16%)</title><rect x="193.1" y="435.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.03%)</title><rect x="193.1" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2 samples, 0.03%)</title><rect x="193.1" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="196.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.11%)</title><rect x="193.7" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.10%)</title><rect x="193.8" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.10%)</title><rect x="193.8" y="387.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (4 samples, 0.06%)</title><rect x="193.8" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="196.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="194.6" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="194.6" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="194.6" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="197.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (56 samples, 0.89%)</title><rect x="195.0" y="499.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (56 samples, 0.89%)</title><rect x="195.0" y="483.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (28 samples, 0.45%)</title><rect x="195.0" y="467.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (2 samples, 0.03%)</title><rect x="195.0" y="451.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="198.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (26 samples, 0.41%)</title><rect x="195.3" y="451.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.35%)</title><rect x="195.3" y="435.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.35%)</title><rect x="195.3" y="419.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.3" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.03%)</title><rect x="195.3" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="198.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="195.7" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="198.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.21%)</title><rect x="196.3" y="403.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (13 samples, 0.21%)</title><rect x="196.3" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.21%)</title><rect x="196.3" y="371.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.05%)</title><rect x="196.3" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (3 samples, 0.05%)</title><rect x="196.3" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.05%)</title><rect x="196.3" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="196.3" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="196.3" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="196.3" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="196.3" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="196.3" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="196.3" y="227.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="199.3" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.06%)</title><rect x="196.9" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.06%)</title><rect x="196.9" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="196.9" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="196.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="196.9" y="291.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="199.9" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="197.2" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.2" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="197.2" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="200.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="197.6" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.10%)</title><rect x="197.6" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="200.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.06%)</title><rect x="198.7" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="198.7" y="387.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="201.7" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.06%)</title><rect x="199.5" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.5" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.06%)</title><rect x="199.5" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.5" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.06%)</title><rect x="199.5" y="403.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (28 samples, 0.45%)</title><rect x="200.2" y="467.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="200.2" y="451.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="203.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="200.8" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (4 samples, 0.06%)</title><rect x="200.8" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (4 samples, 0.06%)</title><rect x="200.8" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="200.8" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="200.8" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.8" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="200.8" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="203.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="201.2" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="201.2" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.2" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="201.2" y="355.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="204.2" y="366.0"></text>
</g>
<g>
<title>java/net/URI.create (13 samples, 0.21%)</title><rect x="201.6" y="451.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.6" y="462.0"></text>
</g>
<g>
<title>java.net.URI (3 samples, 0.05%)</title><rect x="201.6" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="204.6" y="446.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (10 samples, 0.16%)</title><rect x="202.1" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (9 samples, 0.14%)</title><rect x="202.3" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.3" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8 samples, 0.13%)</title><rect x="202.5" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="202.5" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="202.5" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="202.5" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="205.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="202.9" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.9" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="202.9" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="205.9" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4 samples, 0.06%)</title><rect x="203.2" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.2" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.06%)</title><rect x="203.2" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.2" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.06%)</title><rect x="203.2" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="203.2" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="203.2" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="203.4" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.4" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="203.4" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="206.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.10%)</title><rect x="204.0" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (4 samples, 0.06%)</title><rect x="204.0" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="207.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="204.8" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (2 samples, 0.03%)</title><rect x="205.1" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (2 samples, 0.03%)</title><rect x="205.1" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.03%)</title><rect x="205.1" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2 samples, 0.03%)</title><rect x="205.1" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.1" y="414.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.03%)</title><rect x="205.1" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.03%)</title><rect x="205.1" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.03%)</title><rect x="205.1" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.1" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="205.1" y="339.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="208.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (5 samples, 0.08%)</title><rect x="205.5" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.03%)</title><rect x="205.7" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.03%)</title><rect x="205.7" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (2 samples, 0.03%)</title><rect x="205.7" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="208.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="206.1" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="206.1" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (9 samples, 0.14%)</title><rect x="206.4" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="206.4" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.4" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="206.4" y="483.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.11%)</title><rect x="206.8" y="499.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.11%)</title><rect x="206.8" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="206.8" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (2 samples, 0.03%)</title><rect x="206.8" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="206.8" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="209.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.08%)</title><rect x="207.2" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="207.2" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.2" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.03%)</title><rect x="207.2" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="210.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.05%)</title><rect x="207.6" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.6" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.05%)</title><rect x="207.6" y="435.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="210.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="208.1" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="208.1" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="208.1" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="208.1" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="211.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.06%)</title><rect x="208.5" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="208.7" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.7" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="208.7" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="211.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="209.3" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="209.3" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="590.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="209.3" y="563.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="212.3" y="574.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13322] (189 samples, 3.01%)</title><rect x="209.6" y="675.0" width="35.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="212.6" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (189 samples, 3.01%)</title><rect x="209.6" y="659.0" width="35.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.6" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.08%)</title><rect x="209.6" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.6" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.08%)</title><rect x="209.6" y="627.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="212.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (184 samples, 2.93%)</title><rect x="210.6" y="643.0" width="34.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.6" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (184 samples, 2.93%)</title><rect x="210.6" y="627.0" width="34.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.6" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (184 samples, 2.93%)</title><rect x="210.6" y="611.0" width="34.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.6" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 0.64%)</title><rect x="210.6" y="595.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.64%)</title><rect x="210.6" y="579.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.6" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (36 samples, 0.57%)</title><rect x="210.6" y="563.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.13%)</title><rect x="210.6" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="210.6" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="210.6" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="210.6" y="499.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="213.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="211.2" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.2" y="510.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="211.2" y="483.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="214.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (28 samples, 0.45%)</title><rect x="212.1" y="547.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.11%)</title><rect x="212.1" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.11%)</title><rect x="212.1" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.1" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.11%)</title><rect x="212.1" y="499.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="215.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (8 samples, 0.13%)</title><rect x="213.4" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (8 samples, 0.13%)</title><rect x="213.4" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (8 samples, 0.13%)</title><rect x="213.4" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.11%)</title><rect x="213.4" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="213.4" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (7 samples, 0.11%)</title><rect x="213.4" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.4" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (7 samples, 0.11%)</title><rect x="213.4" y="435.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="216.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (13 samples, 0.21%)</title><rect x="214.9" y="531.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.21%)</title><rect x="214.9" y="515.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.21%)</title><rect x="214.9" y="499.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.21%)</title><rect x="214.9" y="483.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.21%)</title><rect x="214.9" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.9" y="478.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.21%)</title><rect x="214.9" y="451.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="217.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.06%)</title><rect x="217.4" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="217.4" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="217.4" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="217.4" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="220.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="217.7" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.7" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="217.7" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="220.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (34 samples, 0.54%)</title><rect x="218.1" y="595.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.16%)</title><rect x="218.3" y="579.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.16%)</title><rect x="218.3" y="563.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.37%)</title><rect x="220.2" y="579.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.37%)</title><rect x="220.2" y="563.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.2" y="574.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.27%)</title><rect x="220.2" y="547.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="223.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="223.6" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="223.6" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.08%)</title><rect x="223.6" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.6" y="526.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="223.6" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="226.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.14%)</title><rect x="224.5" y="595.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="224.5" y="579.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="224.5" y="563.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="224.5" y="547.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="227.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="225.8" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="225.8" y="531.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="228.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 1.61%)</title><rect x="226.2" y="595.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 1.61%)</title><rect x="226.2" y="579.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.2" y="590.0"></text>
</g>
<g>
<title>char[] (54 samples, 0.86%)</title><rect x="226.2" y="563.0" width="10.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="229.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.19%)</title><rect x="236.4" y="563.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="239.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.56%)</title><rect x="238.6" y="563.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.56%)</title><rect x="238.6" y="547.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.56%)</title><rect x="238.6" y="531.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.6" y="542.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.56%)</title><rect x="238.6" y="515.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="241.6" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13330] (191 samples, 3.05%)</title><rect x="245.2" y="675.0" width="35.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="248.2" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (191 samples, 3.05%)</title><rect x="245.2" y="659.0" width="35.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.2" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.14%)</title><rect x="245.2" y="643.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.14%)</title><rect x="245.2" y="627.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="248.2" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (182 samples, 2.90%)</title><rect x="246.9" y="643.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.9" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (182 samples, 2.90%)</title><rect x="246.9" y="627.0" width="34.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.9" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (182 samples, 2.90%)</title><rect x="246.9" y="611.0" width="34.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.9" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 0.73%)</title><rect x="246.9" y="595.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 0.73%)</title><rect x="246.9" y="579.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.9" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (37 samples, 0.59%)</title><rect x="246.9" y="563.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.30%)</title><rect x="246.9" y="547.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.30%)</title><rect x="246.9" y="531.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.30%)</title><rect x="246.9" y="515.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.29%)</title><rect x="247.1" y="499.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.1" y="510.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.29%)</title><rect x="247.1" y="483.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="250.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (18 samples, 0.29%)</title><rect x="250.5" y="547.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="250.5" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="250.5" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="250.5" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="250.5" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.5" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="250.5" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="253.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="250.9" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="250.9" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="250.9" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="253.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (5 samples, 0.08%)</title><rect x="251.4" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (5 samples, 0.08%)</title><rect x="251.4" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (4 samples, 0.06%)</title><rect x="251.6" y="499.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="251.6" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="251.6" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (2 samples, 0.03%)</title><rect x="251.6" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.6" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (2 samples, 0.03%)</title><rect x="251.6" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="254.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="252.0" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="252.0" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.03%)</title><rect x="252.0" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="255.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (8 samples, 0.13%)</title><rect x="252.4" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="252.4" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="252.4" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="252.4" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="252.4" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="255.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.10%)</title><rect x="252.7" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.7" y="478.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="252.7" y="451.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="255.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.14%)</title><rect x="253.9" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="253.9" y="547.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="253.9" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.14%)</title><rect x="253.9" y="515.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="256.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.48%)</title><rect x="255.6" y="595.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.6" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.06%)</title><rect x="255.6" y="579.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="258.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.11%)</title><rect x="256.3" y="579.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.11%)</title><rect x="256.3" y="563.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="259.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.30%)</title><rect x="257.6" y="579.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.30%)</title><rect x="257.6" y="563.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.6" y="574.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.21%)</title><rect x="257.6" y="547.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="260.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.10%)</title><rect x="260.1" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.10%)</title><rect x="260.1" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.10%)</title><rect x="260.1" y="515.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.1" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="260.1" y="499.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="263.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="261.2" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="261.2" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="261.2" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="261.2" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.2" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="261.2" y="531.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="264.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.66%)</title><rect x="261.6" y="595.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.66%)</title><rect x="261.6" y="579.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.6" y="590.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.91%)</title><rect x="261.6" y="563.0" width="10.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="264.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.13%)</title><rect x="272.3" y="563.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="275.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.62%)</title><rect x="273.8" y="563.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.62%)</title><rect x="273.8" y="547.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.62%)</title><rect x="273.8" y="531.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.8" y="542.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.62%)</title><rect x="273.8" y="515.0" width="7.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="276.8" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13315] (229 samples, 3.65%)</title><rect x="281.1" y="675.0" width="43.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="284.1" y="686.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (229 samples, 3.65%)</title><rect x="281.1" y="659.0" width="43.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.1" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.08%)</title><rect x="281.1" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.1" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.08%)</title><rect x="281.1" y="627.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="284.1" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (224 samples, 3.57%)</title><rect x="282.1" y="643.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.1" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (224 samples, 3.57%)</title><rect x="282.1" y="627.0" width="42.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.1" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (224 samples, 3.57%)</title><rect x="282.1" y="611.0" width="42.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.1" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (212 samples, 3.38%)</title><rect x="282.1" y="595.0" width="39.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.1" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (212 samples, 3.38%)</title><rect x="282.1" y="579.0" width="39.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.1" y="590.0">one..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (209 samples, 3.33%)</title><rect x="282.1" y="563.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.1" y="574.0">Req..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (208 samples, 3.32%)</title><rect x="282.3" y="547.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.3" y="558.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="282.3" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="282.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="282.3" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="282.3" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.3" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="282.3" y="467.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="285.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="282.7" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="282.7" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.06%)</title><rect x="282.7" y="499.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="285.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (202 samples, 3.22%)</title><rect x="283.4" y="531.0" width="38.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.4" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (16 samples, 0.26%)</title><rect x="283.4" y="515.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/402619484.linkToTargetMethod (3 samples, 0.05%)</title><rect x="283.6" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1576183964.invokeStatic (3 samples, 0.05%)</title><rect x="283.6" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.get$Lambda (3 samples, 0.05%)</title><rect x="283.6" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$136 (3 samples, 0.05%)</title><rect x="283.6" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="286.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.19%)</title><rect x="284.2" y="499.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (12 samples, 0.19%)</title><rect x="284.2" y="483.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (12 samples, 0.19%)</title><rect x="284.2" y="467.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/700141030.linkToTargetMethod (4 samples, 0.06%)</title><rect x="284.3" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/781593468.invokeStatic (4 samples, 0.06%)</title><rect x="284.3" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.get$Lambda (4 samples, 0.06%)</title><rect x="284.3" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.3" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$139 (4 samples, 0.06%)</title><rect x="284.3" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="287.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3 samples, 0.05%)</title><rect x="285.1" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (3 samples, 0.05%)</title><rect x="285.1" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="285.3" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.03%)</title><rect x="285.3" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="288.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.06%)</title><rect x="285.7" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.06%)</title><rect x="285.7" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="285.7" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="288.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="286.0" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="286.0" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="286.0" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="289.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (173 samples, 2.76%)</title><rect x="286.4" y="515.0" width="32.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.4" y="526.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.08%)</title><rect x="286.8" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.08%)</title><rect x="286.8" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="287.0" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="287.0" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="287.0" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="290.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (99 samples, 1.58%)</title><rect x="287.7" y="499.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 1.58%)</title><rect x="287.7" y="483.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 1.58%)</title><rect x="287.7" y="467.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 1.58%)</title><rect x="287.7" y="451.0" width="18.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.06%)</title><rect x="287.7" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.06%)</title><rect x="287.7" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="287.7" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="290.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="288.1" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="288.1" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="288.1" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="291.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (3 samples, 0.05%)</title><rect x="288.5" y="435.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="291.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (49 samples, 0.78%)</title><rect x="289.1" y="435.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.06%)</title><rect x="289.1" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.1" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.06%)</title><rect x="289.1" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.1" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="289.1" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.1" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.03%)</title><rect x="289.1" y="371.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="292.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="289.4" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.4" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="289.4" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="292.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.32%)</title><rect x="289.8" y="419.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (20 samples, 0.32%)</title><rect x="289.8" y="403.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="290.0" y="387.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="293.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (13 samples, 0.21%)</title><rect x="290.7" y="387.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.21%)</title><rect x="290.7" y="371.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (13 samples, 0.21%)</title><rect x="290.7" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.21%)</title><rect x="290.7" y="339.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.11%)</title><rect x="290.7" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (3 samples, 0.05%)</title><rect x="290.7" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.05%)</title><rect x="290.7" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="290.7" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="290.7" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="290.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="290.7" y="227.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="290.7" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="290.7" y="195.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="293.7" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.06%)</title><rect x="291.3" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.3" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (4 samples, 0.06%)</title><rect x="291.3" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="294.3" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.08%)</title><rect x="292.1" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.1" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.08%)</title><rect x="292.1" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="292.1" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="292.1" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="292.1" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="295.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.05%)</title><rect x="292.4" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.4" y="302.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.05%)</title><rect x="292.4" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="295.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="293.2" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="293.2" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="296.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (19 samples, 0.30%)</title><rect x="293.6" y="419.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.6" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (19 samples, 0.30%)</title><rect x="293.6" y="403.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.6" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 0.30%)</title><rect x="293.6" y="387.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.6" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 0.30%)</title><rect x="293.6" y="371.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.6" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 0.30%)</title><rect x="293.6" y="355.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.6" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.08%)</title><rect x="293.6" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="296.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="294.5" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="294.5" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.5" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="294.5" y="307.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="297.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.14%)</title><rect x="295.5" y="339.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="295.5" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.14%)</title><rect x="295.5" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.5" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="295.5" y="291.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="298.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="297.1" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.05%)</title><rect x="297.1" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="300.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.05%)</title><rect x="297.7" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="297.9" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="297.9" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="300.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (27 samples, 0.43%)</title><rect x="298.3" y="435.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (7 samples, 0.11%)</title><rect x="298.5" y="419.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="301.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (19 samples, 0.30%)</title><rect x="299.8" y="419.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (19 samples, 0.30%)</title><rect x="299.8" y="403.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Class[] (2 samples, 0.03%)</title><rect x="299.8" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="302.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="300.2" y="387.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="303.2" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.05%)</title><rect x="300.5" y="387.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="303.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.14%)</title><rect x="301.1" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (9 samples, 0.14%)</title><rect x="301.1" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (9 samples, 0.14%)</title><rect x="301.1" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (9 samples, 0.14%)</title><rect x="301.1" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.1" y="350.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (9 samples, 0.14%)</title><rect x="301.1" y="323.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="304.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.05%)</title><rect x="302.8" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.05%)</title><rect x="302.8" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.05%)</title><rect x="302.8" y="355.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="305.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (16 samples, 0.26%)</title><rect x="303.4" y="435.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.06%)</title><rect x="303.4" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2 samples, 0.03%)</title><rect x="303.4" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="306.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="303.7" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="303.7" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.03%)</title><rect x="303.7" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="306.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (11 samples, 0.18%)</title><rect x="304.3" y="419.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="304.3" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="304.3" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.14%)</title><rect x="304.7" y="403.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.14%)</title><rect x="304.7" y="387.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.11%)</title><rect x="304.7" y="371.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="307.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="306.0" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="306.0" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="306.0" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="309.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (67 samples, 1.07%)</title><rect x="306.4" y="499.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (67 samples, 1.07%)</title><rect x="306.4" y="483.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20 samples, 0.32%)</title><rect x="306.4" y="467.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (4 samples, 0.06%)</title><rect x="306.4" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="309.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (16 samples, 0.26%)</title><rect x="307.1" y="451.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.26%)</title><rect x="307.1" y="435.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.26%)</title><rect x="307.1" y="419.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.13%)</title><rect x="308.1" y="403.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (8 samples, 0.13%)</title><rect x="308.1" y="387.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.13%)</title><rect x="308.1" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.06%)</title><rect x="308.1" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (4 samples, 0.06%)</title><rect x="308.1" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.06%)</title><rect x="308.1" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="308.1" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="308.1" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="308.1" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="308.1" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="308.1" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="308.1" y="227.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="311.1" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.05%)</title><rect x="308.8" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.05%)</title><rect x="308.8" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="308.8" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="308.8" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="308.8" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="311.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="309.6" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.6" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.05%)</title><rect x="309.6" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="312.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (2 samples, 0.03%)</title><rect x="310.1" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="310.1" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (2 samples, 0.03%)</title><rect x="310.1" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="310.1" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="310.1" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="310.1" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.1" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="310.1" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="313.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (45 samples, 0.72%)</title><rect x="310.5" y="467.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.14%)</title><rect x="310.7" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (9 samples, 0.14%)</title><rect x="310.7" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (9 samples, 0.14%)</title><rect x="310.7" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.14%)</title><rect x="310.7" y="403.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.05%)</title><rect x="310.7" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="310.7" y="371.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="313.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.10%)</title><rect x="311.3" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.10%)</title><rect x="311.3" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.3" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="311.3" y="355.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="314.3" y="366.0"></text>
</g>
<g>
<title>java/net/URI.create (20 samples, 0.32%)</title><rect x="312.4" y="451.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.4" y="462.0"></text>
</g>
<g>
<title>java.net.URI (3 samples, 0.05%)</title><rect x="312.4" y="435.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="315.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (17 samples, 0.27%)</title><rect x="313.0" y="435.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.0" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (16 samples, 0.26%)</title><rect x="313.1" y="419.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="313.1" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="313.1" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="313.3" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.3" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="313.3" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="316.3" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (13 samples, 0.21%)</title><rect x="313.7" y="403.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="313.7" y="387.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="313.7" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.13%)</title><rect x="313.9" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.9" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="313.9" y="339.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="316.9" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4 samples, 0.06%)</title><rect x="315.4" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="315.4" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="315.4" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="315.4" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.4" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="315.4" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="318.4" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.03%)</title><rect x="315.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.8" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.03%)</title><rect x="315.8" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="315.8" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="315.8" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (7 samples, 0.11%)</title><rect x="316.1" y="451.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (5 samples, 0.08%)</title><rect x="316.1" y="435.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="319.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="317.1" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="317.1" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="317.1" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="320.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (6 samples, 0.10%)</title><rect x="317.5" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (6 samples, 0.10%)</title><rect x="317.5" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.10%)</title><rect x="317.5" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (6 samples, 0.10%)</title><rect x="317.5" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.5" y="414.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (6 samples, 0.10%)</title><rect x="317.5" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="317.5" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.5" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.06%)</title><rect x="317.5" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="320.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.03%)</title><rect x="318.2" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.03%)</title><rect x="318.2" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.toString (2 samples, 0.03%)</title><rect x="318.6" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="318.6" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/75958954.invoke (2 samples, 0.03%)</title><rect x="318.6" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="318.6" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="318.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="318.6" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.6" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="318.6" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="321.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (5 samples, 0.08%)</title><rect x="319.0" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.03%)</title><rect x="319.0" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.03%)</title><rect x="319.0" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (2 samples, 0.03%)</title><rect x="319.0" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="322.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.05%)</title><rect x="319.3" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="319.3" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.05%)</title><rect x="319.3" y="467.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="322.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="319.9" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (6 samples, 0.10%)</title><rect x="320.3" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.08%)</title><rect x="320.5" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.08%)</title><rect x="320.5" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="320.5" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (3 samples, 0.05%)</title><rect x="320.5" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="320.5" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="323.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="321.0" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="321.4" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="321.4" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="321.4" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="321.4" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="324.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.14%)</title><rect x="322.0" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.0" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.03%)</title><rect x="322.0" y="579.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.10%)</title><rect x="322.5" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.10%)</title><rect x="322.5" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="574.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="322.5" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="325.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="322.9" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="322.9" y="531.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.06%)</title><rect x="322.9" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.9" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="322.9" y="499.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="325.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="323.7" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="323.7" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.7" y="590.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="323.7" y="563.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="326.7" y="574.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13323] (190 samples, 3.03%)</title><rect x="324.2" y="675.0" width="35.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="327.2" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (190 samples, 3.03%)</title><rect x="324.2" y="659.0" width="35.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.2" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.06%)</title><rect x="324.2" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.2" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.06%)</title><rect x="324.2" y="627.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="327.2" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (186 samples, 2.97%)</title><rect x="325.0" y="643.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.0" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (186 samples, 2.97%)</title><rect x="325.0" y="627.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.0" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (186 samples, 2.97%)</title><rect x="325.0" y="611.0" width="35.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.0" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 0.56%)</title><rect x="325.0" y="595.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 0.56%)</title><rect x="325.0" y="579.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.0" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (31 samples, 0.49%)</title><rect x="325.0" y="563.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.22%)</title><rect x="325.0" y="547.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.22%)</title><rect x="325.0" y="531.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.22%)</title><rect x="325.0" y="515.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.13%)</title><rect x="325.0" y="499.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="328.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.10%)</title><rect x="326.5" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.5" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="326.5" y="483.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="329.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (17 samples, 0.27%)</title><rect x="327.6" y="547.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="327.8" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="327.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.06%)</title><rect x="327.8" y="499.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="330.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (7 samples, 0.11%)</title><rect x="328.6" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (7 samples, 0.11%)</title><rect x="328.6" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="328.6" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="328.6" y="483.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (5 samples, 0.08%)</title><rect x="328.6" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (5 samples, 0.08%)</title><rect x="328.6" y="451.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="331.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (2 samples, 0.03%)</title><rect x="329.5" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (5 samples, 0.08%)</title><rect x="329.9" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="329.9" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="329.9" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="329.9" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="329.9" y="467.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="332.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.06%)</title><rect x="330.8" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="330.8" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="330.8" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="330.8" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="333.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="331.2" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.2" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="331.2" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="334.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.48%)</title><rect x="331.6" y="595.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.6" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.05%)</title><rect x="331.6" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="334.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.08%)</title><rect x="332.1" y="579.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.08%)</title><rect x="332.1" y="563.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="335.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.35%)</title><rect x="333.1" y="579.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.35%)</title><rect x="333.1" y="563.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.1" y="574.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.35%)</title><rect x="333.1" y="547.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="336.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="337.2" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="337.2" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="337.2" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="337.4" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.4" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="337.4" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="340.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.87%)</title><rect x="338.0" y="595.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.0" y="606.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.87%)</title><rect x="338.0" y="579.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.0" y="590.0">o..</text>
</g>
<g>
<title>char[] (70 samples, 1.12%)</title><rect x="338.0" y="563.0" width="13.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="341.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.19%)</title><rect x="351.1" y="563.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="354.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.56%)</title><rect x="353.4" y="563.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.56%)</title><rect x="353.4" y="547.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.56%)</title><rect x="353.4" y="531.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.4" y="542.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.56%)</title><rect x="353.4" y="515.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="356.4" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13331] (194 samples, 3.09%)</title><rect x="360.0" y="675.0" width="36.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.0" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (194 samples, 3.09%)</title><rect x="360.0" y="659.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.0" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.11%)</title><rect x="360.0" y="643.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.0" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.11%)</title><rect x="360.0" y="627.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="363.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (187 samples, 2.98%)</title><rect x="361.3" y="643.0" width="35.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.3" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (187 samples, 2.98%)</title><rect x="361.3" y="627.0" width="35.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.3" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (187 samples, 2.98%)</title><rect x="361.3" y="611.0" width="35.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.3" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 0.64%)</title><rect x="361.3" y="595.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.64%)</title><rect x="361.3" y="579.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.3" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.53%)</title><rect x="361.3" y="563.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.21%)</title><rect x="361.3" y="547.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.21%)</title><rect x="361.3" y="531.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.21%)</title><rect x="361.3" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="361.3" y="499.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="364.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.13%)</title><rect x="362.3" y="499.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.3" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="362.3" y="483.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (20 samples, 0.32%)</title><rect x="363.8" y="547.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="363.9" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="363.9" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.13%)</title><rect x="363.9" y="499.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="366.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (6 samples, 0.10%)</title><rect x="365.4" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (6 samples, 0.10%)</title><rect x="365.4" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="365.4" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="365.4" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (6 samples, 0.10%)</title><rect x="365.4" y="467.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.4" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (6 samples, 0.10%)</title><rect x="365.4" y="451.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="368.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (5 samples, 0.08%)</title><rect x="366.6" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="366.6" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="366.6" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="366.6" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="366.8" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.8" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="366.8" y="451.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="369.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.11%)</title><rect x="367.5" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.11%)</title><rect x="367.5" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="367.5" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="367.5" y="515.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="370.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="368.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="368.5" y="499.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="371.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31 samples, 0.49%)</title><rect x="368.8" y="595.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.8" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.11%)</title><rect x="368.8" y="579.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="371.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.14%)</title><rect x="370.2" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.14%)</title><rect x="370.2" y="563.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="373.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.24%)</title><rect x="371.8" y="579.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.24%)</title><rect x="371.8" y="563.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.8" y="574.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.19%)</title><rect x="371.8" y="547.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="374.1" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="374.1" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="374.1" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.1" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="374.1" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="377.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.11%)</title><rect x="374.7" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.11%)</title><rect x="374.7" y="579.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="374.7" y="563.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="374.7" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="377.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="375.2" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.2" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="375.2" y="531.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="378.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 1.74%)</title><rect x="376.0" y="595.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 1.74%)</title><rect x="376.0" y="579.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.0" y="590.0"></text>
</g>
<g>
<title>char[] (64 samples, 1.02%)</title><rect x="376.0" y="563.0" width="12.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="379.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="388.0" y="563.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="391.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.62%)</title><rect x="389.2" y="563.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.62%)</title><rect x="389.2" y="547.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.62%)</title><rect x="389.2" y="531.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.2" y="542.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.62%)</title><rect x="389.2" y="515.0" width="7.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="392.2" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13324] (181 samples, 2.89%)</title><rect x="396.5" y="675.0" width="34.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="399.5" y="686.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (181 samples, 2.89%)</title><rect x="396.5" y="659.0" width="34.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.5" y="670.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (181 samples, 2.89%)</title><rect x="396.5" y="643.0" width="34.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (181 samples, 2.89%)</title><rect x="396.5" y="627.0" width="34.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.5" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (181 samples, 2.89%)</title><rect x="396.5" y="611.0" width="34.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.5" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 0.57%)</title><rect x="396.5" y="595.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.57%)</title><rect x="396.5" y="579.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.5" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.53%)</title><rect x="396.5" y="563.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.24%)</title><rect x="396.5" y="547.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.24%)</title><rect x="396.5" y="531.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.24%)</title><rect x="396.5" y="515.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.18%)</title><rect x="396.5" y="499.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="399.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="398.6" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.6" y="510.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="398.6" y="483.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="401.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (18 samples, 0.29%)</title><rect x="399.3" y="547.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="399.3" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="399.3" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="399.3" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="399.3" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="399.3" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="402.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.18%)</title><rect x="399.7" y="531.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.18%)</title><rect x="399.7" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.18%)</title><rect x="399.7" y="499.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="402.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (3 samples, 0.05%)</title><rect x="401.8" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (3 samples, 0.05%)</title><rect x="401.8" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (2 samples, 0.03%)</title><rect x="402.0" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.03%)</title><rect x="402.3" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="402.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="402.3" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="402.3" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="402.7" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="402.7" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="402.7" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="402.7" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="405.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (34 samples, 0.54%)</title><rect x="403.3" y="595.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.22%)</title><rect x="403.3" y="579.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.22%)</title><rect x="403.3" y="563.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="406.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.32%)</title><rect x="405.9" y="579.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.32%)</title><rect x="405.9" y="563.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.9" y="574.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.27%)</title><rect x="405.9" y="547.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="408.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="409.1" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="409.1" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="409.1" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.1" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="409.1" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="409.7" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="409.7" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="409.7" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="409.7" y="547.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="412.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="410.2" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.2" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="410.2" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="413.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 1.69%)</title><rect x="410.6" y="595.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 1.69%)</title><rect x="410.6" y="579.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.6" y="590.0"></text>
</g>
<g>
<title>char[] (56 samples, 0.89%)</title><rect x="410.6" y="563.0" width="10.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="413.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.21%)</title><rect x="421.1" y="563.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="424.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.59%)</title><rect x="423.6" y="563.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.59%)</title><rect x="423.6" y="547.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.59%)</title><rect x="423.6" y="531.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.6" y="542.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.59%)</title><rect x="423.6" y="515.0" width="7.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="426.6" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13332] (191 samples, 3.05%)</title><rect x="430.6" y="675.0" width="35.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="433.6" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (191 samples, 3.05%)</title><rect x="430.6" y="659.0" width="35.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.6" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (191 samples, 3.05%)</title><rect x="430.6" y="643.0" width="35.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.6" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (191 samples, 3.05%)</title><rect x="430.6" y="627.0" width="35.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.6" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (191 samples, 3.05%)</title><rect x="430.6" y="611.0" width="35.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.6" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.53%)</title><rect x="430.6" y="595.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 0.53%)</title><rect x="430.6" y="579.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.6" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (28 samples, 0.45%)</title><rect x="430.6" y="563.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.16%)</title><rect x="430.6" y="547.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.16%)</title><rect x="430.6" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.16%)</title><rect x="430.6" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="430.6" y="499.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="433.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="431.5" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.5" y="510.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="431.5" y="483.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="434.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (18 samples, 0.29%)</title><rect x="432.4" y="547.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="432.6" y="531.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="432.6" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.13%)</title><rect x="432.6" y="499.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="435.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (7 samples, 0.11%)</title><rect x="434.1" y="531.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (7 samples, 0.11%)</title><rect x="434.1" y="515.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="434.1" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="434.1" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (2 samples, 0.03%)</title><rect x="434.1" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.1" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (2 samples, 0.03%)</title><rect x="434.1" y="451.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="437.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (5 samples, 0.08%)</title><rect x="434.5" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.06%)</title><rect x="434.7" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.06%)</title><rect x="434.7" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (4 samples, 0.06%)</title><rect x="434.7" y="451.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="437.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (2 samples, 0.03%)</title><rect x="435.4" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="435.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="435.4" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="435.4" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.08%)</title><rect x="435.8" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="435.8" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="435.8" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="435.8" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.8" y="526.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="435.8" y="499.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="438.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (39 samples, 0.62%)</title><rect x="436.8" y="595.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.8" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.05%)</title><rect x="436.8" y="579.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="439.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.18%)</title><rect x="437.3" y="579.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.18%)</title><rect x="437.3" y="563.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="440.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.40%)</title><rect x="439.4" y="579.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.40%)</title><rect x="439.4" y="563.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.4" y="574.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.16%)</title><rect x="439.4" y="547.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="442.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="441.3" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="444.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.19%)</title><rect x="441.8" y="547.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.19%)</title><rect x="441.8" y="531.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.19%)</title><rect x="441.8" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.8" y="526.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.19%)</title><rect x="441.8" y="499.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.19%)</title><rect x="444.1" y="595.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.19%)</title><rect x="444.1" y="579.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.19%)</title><rect x="444.1" y="563.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.13%)</title><rect x="444.1" y="547.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="447.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="445.6" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.6" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="445.6" y="531.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="448.6" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 1.71%)</title><rect x="446.4" y="595.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 1.71%)</title><rect x="446.4" y="579.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.4" y="590.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.94%)</title><rect x="446.4" y="563.0" width="11.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="449.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.30%)</title><rect x="457.5" y="563.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="460.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.46%)</title><rect x="461.0" y="563.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.46%)</title><rect x="461.0" y="547.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.46%)</title><rect x="461.0" y="531.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.0" y="542.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.46%)</title><rect x="461.0" y="515.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="464.0" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13317] (129 samples, 2.06%)</title><rect x="466.5" y="675.0" width="24.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="469.5" y="686.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (129 samples, 2.06%)</title><rect x="466.5" y="659.0" width="24.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.5" y="670.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.05%)</title><rect x="466.5" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.5" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3 samples, 0.05%)</title><rect x="466.5" y="627.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="469.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (126 samples, 2.01%)</title><rect x="467.1" y="643.0" width="23.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.1" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (126 samples, 2.01%)</title><rect x="467.1" y="627.0" width="23.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.1" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (126 samples, 2.01%)</title><rect x="467.1" y="611.0" width="23.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.1" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (115 samples, 1.83%)</title><rect x="467.1" y="595.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.1" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 1.83%)</title><rect x="467.1" y="579.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.1" y="590.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (115 samples, 1.83%)</title><rect x="467.1" y="563.0" width="21.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.1" y="574.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (115 samples, 1.83%)</title><rect x="467.1" y="547.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.1" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (114 samples, 1.82%)</title><rect x="467.2" y="531.0" width="21.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.2" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (6 samples, 0.10%)</title><rect x="467.2" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.08%)</title><rect x="467.2" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (5 samples, 0.08%)</title><rect x="467.2" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (5 samples, 0.08%)</title><rect x="467.2" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4 samples, 0.06%)</title><rect x="467.4" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.06%)</title><rect x="467.4" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="467.6" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="467.6" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="467.6" y="387.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="470.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (91 samples, 1.45%)</title><rect x="468.4" y="515.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.03%)</title><rect x="468.8" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.03%)</title><rect x="468.8" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.03%)</title><rect x="468.8" y="467.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="471.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.05%)</title><rect x="469.1" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.05%)</title><rect x="469.1" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.03%)</title><rect x="469.1" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (60 samples, 0.96%)</title><rect x="469.7" y="499.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (60 samples, 0.96%)</title><rect x="469.7" y="483.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (60 samples, 0.96%)</title><rect x="469.7" y="467.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (60 samples, 0.96%)</title><rect x="469.7" y="451.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="469.7" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="469.7" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="469.7" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="472.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2 samples, 0.03%)</title><rect x="470.1" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="473.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (39 samples, 0.62%)</title><rect x="470.4" y="435.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.08%)</title><rect x="470.4" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.4" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.06%)</title><rect x="470.4" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.05%)</title><rect x="470.4" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.4" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.05%)</title><rect x="470.4" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="473.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.22%)</title><rect x="471.4" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.22%)</title><rect x="471.4" y="403.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="471.8" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="474.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.08%)</title><rect x="472.5" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.08%)</title><rect x="472.5" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.08%)</title><rect x="472.5" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.08%)</title><rect x="472.5" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.05%)</title><rect x="472.5" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.5" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.05%)</title><rect x="472.5" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.5" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.05%)</title><rect x="472.5" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.5" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="473.1" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.1" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="473.1" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="473.1" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="473.1" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="473.1" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="476.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="473.6" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="473.6" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="476.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (15 samples, 0.24%)</title><rect x="474.0" y="419.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.0" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (15 samples, 0.24%)</title><rect x="474.0" y="403.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.0" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 0.19%)</title><rect x="474.0" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.0" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.19%)</title><rect x="474.0" y="371.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.0" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.19%)</title><rect x="474.0" y="355.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.0" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.13%)</title><rect x="474.0" y="339.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="477.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="475.5" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="475.5" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.5" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="475.5" y="307.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="478.5" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (3 samples, 0.05%)</title><rect x="476.3" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="479.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="476.8" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="476.8" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="479.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.05%)</title><rect x="477.2" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="477.2" y="403.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="480.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (10 samples, 0.16%)</title><rect x="477.8" y="435.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (2 samples, 0.03%)</title><rect x="477.8" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="480.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.13%)</title><rect x="478.2" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.13%)</title><rect x="478.2" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Class[] (3 samples, 0.05%)</title><rect x="478.2" y="387.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="481.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.05%)</title><rect x="478.9" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (3 samples, 0.05%)</title><rect x="478.9" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (3 samples, 0.05%)</title><rect x="478.9" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (3 samples, 0.05%)</title><rect x="478.9" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.9" y="350.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (3 samples, 0.05%)</title><rect x="478.9" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="481.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (7 samples, 0.11%)</title><rect x="479.7" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="479.9" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="482.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.06%)</title><rect x="480.2" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="480.2" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="480.2" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="480.2" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="483.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="480.6" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="480.6" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="480.6" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="483.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (24 samples, 0.38%)</title><rect x="481.0" y="499.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (24 samples, 0.38%)</title><rect x="481.0" y="483.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.18%)</title><rect x="481.0" y="467.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (2 samples, 0.03%)</title><rect x="481.0" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="484.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.14%)</title><rect x="481.4" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.14%)</title><rect x="481.4" y="435.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.14%)</title><rect x="481.4" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.4" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.05%)</title><rect x="481.5" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.5" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.05%)</title><rect x="481.5" y="387.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="484.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.08%)</title><rect x="482.1" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.08%)</title><rect x="482.1" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.08%)</title><rect x="482.1" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="482.1" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="482.1" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="482.1" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="482.1" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="482.1" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="482.1" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="482.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="482.1" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="482.1" y="227.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="485.1" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.05%)</title><rect x="482.5" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.05%)</title><rect x="482.5" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.5" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="482.7" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="482.7" y="307.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (2 samples, 0.03%)</title><rect x="483.1" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="483.1" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (2 samples, 0.03%)</title><rect x="483.1" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="483.1" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="483.1" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="483.1" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.1" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="483.1" y="371.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="486.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (11 samples, 0.18%)</title><rect x="483.4" y="467.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.4" y="478.0"></text>
</g>
<g>
<title>java/net/URI.create (2 samples, 0.03%)</title><rect x="483.6" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2 samples, 0.03%)</title><rect x="483.6" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.6" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.03%)</title><rect x="483.6" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.6" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.03%)</title><rect x="483.6" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.06%)</title><rect x="484.0" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.05%)</title><rect x="484.2" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="484.2" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.05%)</title><rect x="484.2" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="487.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.05%)</title><rect x="484.7" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.05%)</title><rect x="484.7" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.05%)</title><rect x="484.7" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.05%)</title><rect x="484.7" y="403.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.7" y="414.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.05%)</title><rect x="484.7" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="484.7" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.7" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="484.7" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="487.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (2 samples, 0.03%)</title><rect x="485.5" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (3 samples, 0.05%)</title><rect x="485.9" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.9" y="526.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (3 samples, 0.05%)</title><rect x="485.9" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.9" y="510.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (3 samples, 0.05%)</title><rect x="485.9" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.9" y="494.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (3 samples, 0.05%)</title><rect x="485.9" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.9" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (2 samples, 0.03%)</title><rect x="485.9" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="488.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (12 samples, 0.19%)</title><rect x="486.4" y="515.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.16%)</title><rect x="486.8" y="499.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.16%)</title><rect x="486.8" y="483.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.10%)</title><rect x="486.8" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (6 samples, 0.10%)</title><rect x="486.8" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="486.8" y="435.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.06%)</title><rect x="487.9" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="487.9" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.9" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.03%)</title><rect x="487.9" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="490.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="488.3" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.03%)</title><rect x="488.3" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="491.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.14%)</title><rect x="488.7" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="489.1" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="489.1" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.1" y="574.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="489.1" y="547.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="492.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="489.6" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="489.6" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.06%)</title><rect x="489.6" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.6" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="489.6" y="499.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="492.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="490.4" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="490.4" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="490.4" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="490.4" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="490.4" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.4" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="490.4" y="515.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="493.4" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13325] (187 samples, 2.98%)</title><rect x="490.8" y="675.0" width="35.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="493.8" y="686.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (187 samples, 2.98%)</title><rect x="490.8" y="659.0" width="35.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.8" y="670.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (187 samples, 2.98%)</title><rect x="490.8" y="643.0" width="35.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="493.8" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (187 samples, 2.98%)</title><rect x="490.8" y="627.0" width="35.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.8" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (187 samples, 2.98%)</title><rect x="490.8" y="611.0" width="35.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.8" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (52 samples, 0.83%)</title><rect x="490.8" y="595.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (52 samples, 0.83%)</title><rect x="490.8" y="579.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.8" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (43 samples, 0.69%)</title><rect x="490.8" y="563.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.14%)</title><rect x="490.8" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="490.8" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="490.8" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.13%)</title><rect x="491.0" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="491.0" y="483.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="494.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (34 samples, 0.54%)</title><rect x="492.5" y="547.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.35%)</title><rect x="492.7" y="531.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.35%)</title><rect x="492.7" y="515.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.35%)</title><rect x="492.7" y="499.0" width="4.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="495.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (7 samples, 0.11%)</title><rect x="496.8" y="531.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (7 samples, 0.11%)</title><rect x="496.8" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (7 samples, 0.11%)</title><rect x="496.8" y="499.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.10%)</title><rect x="497.0" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.10%)</title><rect x="497.0" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.10%)</title><rect x="497.0" y="451.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="500.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (4 samples, 0.06%)</title><rect x="498.1" y="531.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="498.1" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="498.1" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="498.1" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="498.1" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="501.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.14%)</title><rect x="498.9" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="498.9" y="547.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="498.9" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="498.9" y="515.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="501.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="499.8" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.8" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="499.8" y="499.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="502.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.48%)</title><rect x="500.6" y="595.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.6" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.08%)</title><rect x="500.6" y="579.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="503.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.13%)</title><rect x="501.5" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.13%)</title><rect x="501.5" y="563.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="504.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.27%)</title><rect x="503.0" y="579.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.27%)</title><rect x="503.0" y="563.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.0" y="574.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.19%)</title><rect x="503.0" y="547.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="506.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="505.3" y="547.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="508.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="506.2" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="506.2" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="506.2" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="506.2" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.2" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="506.2" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="509.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 1.64%)</title><rect x="506.6" y="595.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 1.64%)</title><rect x="506.6" y="579.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.6" y="590.0"></text>
</g>
<g>
<title>char[] (63 samples, 1.00%)</title><rect x="506.6" y="563.0" width="11.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="509.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.29%)</title><rect x="518.4" y="563.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="521.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.35%)</title><rect x="521.8" y="563.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.35%)</title><rect x="521.8" y="547.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.35%)</title><rect x="521.8" y="531.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.8" y="542.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.35%)</title><rect x="521.8" y="515.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="524.8" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13333] (186 samples, 2.97%)</title><rect x="526.0" y="675.0" width="35.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="529.0" y="686.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (186 samples, 2.97%)</title><rect x="526.0" y="659.0" width="35.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="670.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.11%)</title><rect x="526.0" y="643.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.0" y="654.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.11%)</title><rect x="526.0" y="627.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="529.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 2.85%)</title><rect x="527.3" y="643.0" width="33.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.3" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (179 samples, 2.85%)</title><rect x="527.3" y="627.0" width="33.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.3" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (179 samples, 2.85%)</title><rect x="527.3" y="611.0" width="33.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.3" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.53%)</title><rect x="527.3" y="595.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 0.53%)</title><rect x="527.3" y="579.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.3" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (29 samples, 0.46%)</title><rect x="527.3" y="563.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.08%)</title><rect x="527.3" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="527.3" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="527.3" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="527.3" y="499.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="530.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (24 samples, 0.38%)</title><rect x="528.2" y="547.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="528.4" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="528.4" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.08%)</title><rect x="528.4" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="531.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (15 samples, 0.24%)</title><rect x="529.3" y="531.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (15 samples, 0.24%)</title><rect x="529.3" y="515.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="529.3" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="529.3" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (6 samples, 0.10%)</title><rect x="529.3" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (6 samples, 0.10%)</title><rect x="529.3" y="451.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="532.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (9 samples, 0.14%)</title><rect x="530.5" y="499.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="530.5" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="530.5" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (4 samples, 0.06%)</title><rect x="530.5" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.5" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (4 samples, 0.06%)</title><rect x="530.5" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="533.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.08%)</title><rect x="531.2" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.08%)</title><rect x="531.2" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (5 samples, 0.08%)</title><rect x="531.2" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="534.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.05%)</title><rect x="532.2" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="532.2" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="532.2" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="532.2" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="532.4" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.4" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="532.4" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="535.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.06%)</title><rect x="532.7" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="532.7" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="532.7" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="532.7" y="515.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="535.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 0.40%)</title><rect x="533.5" y="595.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.5" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.03%)</title><rect x="533.5" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="536.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.19%)</title><rect x="533.9" y="579.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.19%)</title><rect x="533.9" y="563.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="536.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.18%)</title><rect x="536.1" y="579.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.18%)</title><rect x="536.1" y="563.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.1" y="574.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.10%)</title><rect x="536.1" y="547.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="537.2" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="537.2" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.08%)</title><rect x="537.2" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.2" y="526.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="537.2" y="499.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="540.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.05%)</title><rect x="538.2" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="606.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="538.2" y="579.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="541.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="538.8" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="538.8" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="538.8" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="538.8" y="547.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="541.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 1.75%)</title><rect x="540.3" y="595.0" width="20.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 1.75%)</title><rect x="540.3" y="579.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.3" y="590.0"></text>
</g>
<g>
<title>char[] (56 samples, 0.89%)</title><rect x="540.3" y="563.0" width="10.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="543.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.38%)</title><rect x="550.8" y="563.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="553.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.48%)</title><rect x="555.3" y="563.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.48%)</title><rect x="555.3" y="547.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.48%)</title><rect x="555.3" y="531.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.3" y="542.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.48%)</title><rect x="555.3" y="515.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="558.3" y="526.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13374] (200 samples, 3.19%)</title><rect x="561.0" y="675.0" width="37.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="564.0" y="686.0">[as..</text>
</g>
<g>
<title>java/lang/Thread.run (200 samples, 3.19%)</title><rect x="561.0" y="659.0" width="37.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.0" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (200 samples, 3.19%)</title><rect x="561.0" y="643.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.0" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (200 samples, 3.19%)</title><rect x="561.0" y="627.0" width="37.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.0" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (110 samples, 1.75%)</title><rect x="561.0" y="611.0" width="20.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 1.75%)</title><rect x="561.0" y="595.0" width="20.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (110 samples, 1.75%)</title><rect x="561.0" y="579.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (110 samples, 1.75%)</title><rect x="561.0" y="563.0" width="20.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (110 samples, 1.75%)</title><rect x="561.0" y="547.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (110 samples, 1.75%)</title><rect x="561.0" y="531.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="561.0" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="561.0" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.05%)</title><rect x="561.0" y="483.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="564.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (105 samples, 1.67%)</title><rect x="561.7" y="515.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (105 samples, 1.67%)</title><rect x="561.7" y="499.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (105 samples, 1.67%)</title><rect x="561.7" y="483.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="561.7" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="561.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.get$Lambda (2 samples, 0.03%)</title><rect x="561.7" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$194 (2 samples, 0.03%)</title><rect x="561.7" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (68 samples, 1.08%)</title><rect x="562.1" y="467.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (68 samples, 1.08%)</title><rect x="562.1" y="451.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (67 samples, 1.07%)</title><rect x="562.1" y="435.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (67 samples, 1.07%)</title><rect x="562.1" y="419.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (67 samples, 1.07%)</title><rect x="562.1" y="403.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (67 samples, 1.07%)</title><rect x="562.1" y="387.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (67 samples, 1.07%)</title><rect x="562.1" y="371.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (67 samples, 1.07%)</title><rect x="562.1" y="355.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="562.1" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="562.1" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="562.3" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="562.3" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="562.3" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="565.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (63 samples, 1.00%)</title><rect x="562.8" y="339.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="562.8" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="562.8" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.81%)</title><rect x="563.2" y="323.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.81%)</title><rect x="563.2" y="307.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (50 samples, 0.80%)</title><rect x="563.2" y="291.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (50 samples, 0.80%)</title><rect x="563.2" y="275.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.03%)</title><rect x="563.6" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.03%)</title><rect x="563.6" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (46 samples, 0.73%)</title><rect x="564.0" y="259.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="564.0" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="564.0" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2 samples, 0.03%)</title><rect x="564.0" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.0" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="564.0" y="195.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="567.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.13%)</title><rect x="564.3" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="564.3" y="227.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.13%)</title><rect x="564.3" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.3" y="222.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="564.3" y="195.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="567.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (33 samples, 0.53%)</title><rect x="566.2" y="243.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (13 samples, 0.21%)</title><rect x="566.4" y="227.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.11%)</title><rect x="566.4" y="211.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.4" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.11%)</title><rect x="566.4" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.4" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.11%)</title><rect x="566.4" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.11%)</title><rect x="566.4" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.4" y="174.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="566.4" y="147.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="569.4" y="158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (4 samples, 0.06%)</title><rect x="568.1" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.06%)</title><rect x="568.1" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (4 samples, 0.06%)</title><rect x="568.1" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4 samples, 0.06%)</title><rect x="568.1" y="163.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.1" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (4 samples, 0.06%)</title><rect x="568.1" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.1" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4 samples, 0.06%)</title><rect x="568.1" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (4 samples, 0.06%)</title><rect x="568.1" y="115.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.06%)</title><rect x="568.1" y="99.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="568.1" y="83.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="568.1" y="67.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.1" y="78.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="568.1" y="51.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.1" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (19 samples, 0.30%)</title><rect x="568.9" y="227.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.30%)</title><rect x="568.9" y="211.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.30%)</title><rect x="568.9" y="195.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.9" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.03%)</title><rect x="568.9" y="179.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="571.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (15 samples, 0.24%)</title><rect x="569.6" y="179.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (15 samples, 0.24%)</title><rect x="569.6" y="163.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.6" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (15 samples, 0.24%)</title><rect x="569.6" y="147.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="569.6" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="569.6" y="115.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.6" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (4 samples, 0.06%)</title><rect x="569.6" y="99.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.6" y="110.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (4 samples, 0.06%)</title><rect x="569.6" y="83.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="572.6" y="94.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.10%)</title><rect x="570.6" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.6" y="142.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.10%)</title><rect x="570.6" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="570.6" y="99.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="570.6" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="570.6" y="67.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="573.6" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.06%)</title><rect x="570.9" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.9" y="110.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.06%)</title><rect x="570.9" y="83.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="573.9" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="571.7" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.7" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.06%)</title><rect x="571.7" y="115.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="574.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (3 samples, 0.05%)</title><rect x="572.8" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="575.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.10%)</title><rect x="573.6" y="323.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.08%)</title><rect x="573.8" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="573.8" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="573.8" y="275.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.08%)</title><rect x="573.8" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.08%)</title><rect x="573.8" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.08%)</title><rect x="573.8" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (5 samples, 0.08%)</title><rect x="573.8" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.08%)</title><rect x="573.8" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.08%)</title><rect x="573.8" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (3 samples, 0.05%)</title><rect x="573.8" y="163.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="576.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="574.3" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="574.3" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (34 samples, 0.54%)</title><rect x="575.1" y="467.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (32 samples, 0.51%)</title><rect x="575.4" y="451.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (30 samples, 0.48%)</title><rect x="575.6" y="435.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (30 samples, 0.48%)</title><rect x="575.6" y="419.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.48%)</title><rect x="575.6" y="403.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (30 samples, 0.48%)</title><rect x="575.6" y="387.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (30 samples, 0.48%)</title><rect x="575.6" y="371.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (30 samples, 0.48%)</title><rect x="575.6" y="355.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (19 samples, 0.30%)</title><rect x="575.6" y="339.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (19 samples, 0.30%)</title><rect x="575.6" y="323.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (19 samples, 0.30%)</title><rect x="575.6" y="307.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (18 samples, 0.29%)</title><rect x="575.6" y="291.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (18 samples, 0.29%)</title><rect x="575.6" y="275.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (18 samples, 0.29%)</title><rect x="575.6" y="259.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (18 samples, 0.29%)</title><rect x="575.6" y="243.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (8 samples, 0.13%)</title><rect x="575.6" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.6" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.05%)</title><rect x="575.6" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="575.6" y="195.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.6" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="575.6" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="575.6" y="163.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="578.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (5 samples, 0.08%)</title><rect x="576.2" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (5 samples, 0.08%)</title><rect x="576.2" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (5 samples, 0.08%)</title><rect x="576.2" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (4 samples, 0.06%)</title><rect x="576.2" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="576.2" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (4 samples, 0.06%)</title><rect x="576.2" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.2" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (4 samples, 0.06%)</title><rect x="576.2" y="115.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="579.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.16%)</title><rect x="577.1" y="227.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="577.3" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="577.3" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="580.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.11%)</title><rect x="577.7" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.11%)</title><rect x="577.7" y="195.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="580.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (11 samples, 0.18%)</title><rect x="579.2" y="339.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (10 samples, 0.16%)</title><rect x="579.4" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.05%)</title><rect x="580.1" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="580.3" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.03%)</title><rect x="580.9" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.9" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.03%)</title><rect x="580.9" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (2 samples, 0.03%)</title><rect x="580.9" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.03%)</title><rect x="580.9" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.9" y="270.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (2 samples, 0.03%)</title><rect x="580.9" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="583.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (5 samples, 0.08%)</title><rect x="581.7" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.08%)</title><rect x="581.7" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5 samples, 0.08%)</title><rect x="581.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5 samples, 0.08%)</title><rect x="581.7" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="581.7" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="581.7" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.08%)</title><rect x="581.7" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.08%)</title><rect x="581.7" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.08%)</title><rect x="581.7" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.08%)</title><rect x="581.7" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5 samples, 0.08%)</title><rect x="581.7" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4 samples, 0.06%)</title><rect x="581.7" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.06%)</title><rect x="581.7" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.06%)</title><rect x="581.7" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.06%)</title><rect x="581.7" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.06%)</title><rect x="581.7" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.05%)</title><rect x="581.8" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.05%)</title><rect x="581.8" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (3 samples, 0.05%)</title><rect x="581.8" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.05%)</title><rect x="581.8" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.05%)</title><rect x="581.8" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (3 samples, 0.05%)</title><rect x="581.8" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.05%)</title><rect x="581.8" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (2 samples, 0.03%)</title><rect x="581.8" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="581.8" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="581.8" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="581.8" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="584.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (85 samples, 1.36%)</title><rect x="582.6" y="611.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (85 samples, 1.36%)</title><rect x="582.6" y="595.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (74 samples, 1.18%)</title><rect x="582.6" y="579.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (74 samples, 1.18%)</title><rect x="582.6" y="563.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (74 samples, 1.18%)</title><rect x="582.6" y="547.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (73 samples, 1.16%)</title><rect x="582.8" y="531.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (73 samples, 1.16%)</title><rect x="582.8" y="515.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (73 samples, 1.16%)</title><rect x="582.8" y="499.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (73 samples, 1.16%)</title><rect x="582.8" y="483.0" width="13.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (30 samples, 0.48%)</title><rect x="582.8" y="467.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 0.48%)</title><rect x="582.8" y="451.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (30 samples, 0.48%)</title><rect x="582.8" y="435.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (30 samples, 0.48%)</title><rect x="582.8" y="419.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.48%)</title><rect x="582.8" y="403.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (30 samples, 0.48%)</title><rect x="582.8" y="387.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (30 samples, 0.48%)</title><rect x="582.8" y="371.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (30 samples, 0.48%)</title><rect x="582.8" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 0.48%)</title><rect x="582.8" y="339.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (29 samples, 0.46%)</title><rect x="582.8" y="323.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (28 samples, 0.45%)</title><rect x="582.8" y="307.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (28 samples, 0.45%)</title><rect x="582.8" y="291.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="582.8" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="582.8" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.get$Lambda (2 samples, 0.03%)</title><rect x="582.8" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$295 (2 samples, 0.03%)</title><rect x="582.8" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="585.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (25 samples, 0.40%)</title><rect x="583.3" y="275.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (23 samples, 0.37%)</title><rect x="583.7" y="259.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (2 samples, 0.03%)</title><rect x="583.7" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.03%)</title><rect x="583.7" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.03%)</title><rect x="583.7" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="583.7" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (21 samples, 0.33%)</title><rect x="584.1" y="243.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.03%)</title><rect x="584.3" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.03%)</title><rect x="584.3" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="584.3" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="584.3" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$269/2074766541.get (2 samples, 0.03%)</title><rect x="584.3" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (2 samples, 0.03%)</title><rect x="584.3" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="587.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="584.7" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="584.7" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="584.7" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="587.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="585.0" y="227.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="588.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.05%)</title><rect x="585.4" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (3 samples, 0.05%)</title><rect x="585.4" y="211.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="588.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.18%)</title><rect x="586.0" y="227.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (11 samples, 0.18%)</title><rect x="586.0" y="211.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11 samples, 0.18%)</title><rect x="586.0" y="195.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="586.0" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="586.0" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="586.0" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="586.0" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="586.0" y="115.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="589.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.03%)</title><rect x="586.4" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.03%)</title><rect x="586.4" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="586.4" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="586.4" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="589.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$285/552175013.get$Lambda (2 samples, 0.03%)</title><rect x="586.4" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.4" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$285 (2 samples, 0.03%)</title><rect x="586.4" y="99.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="589.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.06%)</title><rect x="586.7" y="179.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="586.7" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (4 samples, 0.06%)</title><rect x="586.7" y="147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="586.7" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="586.7" y="115.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="586.7" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="589.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="587.1" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="587.1" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.1" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="587.1" y="83.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="590.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.05%)</title><rect x="587.5" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="587.7" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="587.7" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="587.7" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="587.7" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="587.7" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="587.7" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.7" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="587.7" y="67.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="590.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (43 samples, 0.69%)</title><rect x="588.4" y="467.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.10%)</title><rect x="588.6" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="588.8" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="588.8" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.8" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="588.8" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="591.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.05%)</title><rect x="589.2" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="589.2" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="589.4" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.4" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="589.4" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="592.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.13%)</title><rect x="589.7" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.13%)</title><rect x="589.7" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.13%)</title><rect x="589.7" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.10%)</title><rect x="590.1" y="403.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (6 samples, 0.10%)</title><rect x="590.1" y="387.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.10%)</title><rect x="590.1" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.05%)</title><rect x="590.5" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.05%)</title><rect x="590.5" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.5" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="590.7" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="590.7" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="593.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (28 samples, 0.45%)</title><rect x="591.3" y="451.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.10%)</title><rect x="591.6" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="591.6" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="591.8" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.8" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="591.8" y="387.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="594.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (20 samples, 0.32%)</title><rect x="592.8" y="435.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="592.8" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="592.8" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="592.8" y="387.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="593.1" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.1" y="398.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="593.1" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="596.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.06%)</title><rect x="593.7" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.06%)</title><rect x="593.7" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="593.9" y="387.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="596.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="594.6" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="594.6" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="594.6" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="594.6" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.11%)</title><rect x="594.6" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.11%)</title><rect x="594.6" y="339.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="597.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.05%)</title><rect x="596.0" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="596.0" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.0" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.03%)</title><rect x="596.0" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="599.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (11 samples, 0.18%)</title><rect x="596.5" y="579.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.18%)</title><rect x="596.5" y="563.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.18%)</title><rect x="596.5" y="547.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (11 samples, 0.18%)</title><rect x="596.5" y="531.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11 samples, 0.18%)</title><rect x="596.5" y="515.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="596.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="596.5" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="596.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$209/1048249134.get$Lambda (2 samples, 0.03%)</title><rect x="596.5" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$209 (2 samples, 0.03%)</title><rect x="596.5" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="599.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (9 samples, 0.14%)</title><rect x="596.9" y="499.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (9 samples, 0.14%)</title><rect x="596.9" y="483.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.14%)</title><rect x="596.9" y="467.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.14%)</title><rect x="596.9" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.14%)</title><rect x="596.9" y="435.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.14%)</title><rect x="596.9" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (4 samples, 0.06%)</title><rect x="596.9" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.06%)</title><rect x="596.9" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.06%)</title><rect x="596.9" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.03%)</title><rect x="596.9" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.03%)</title><rect x="597.3" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.03%)</title><rect x="597.3" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.03%)</title><rect x="597.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.03%)</title><rect x="597.6" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.03%)</title><rect x="597.6" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.05%)</title><rect x="598.0" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.05%)</title><rect x="598.0" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.05%)</title><rect x="598.0" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.05%)</title><rect x="598.0" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (3 samples, 0.05%)</title><rect x="598.0" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="598.0" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="598.0" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="598.0" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="601.0" y="302.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13375] (195 samples, 3.11%)</title><rect x="598.6" y="675.0" width="36.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="601.6" y="686.0">[as..</text>
</g>
<g>
<title>java/lang/Thread.run (195 samples, 3.11%)</title><rect x="598.6" y="659.0" width="36.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (195 samples, 3.11%)</title><rect x="598.6" y="643.0" width="36.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.6" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (195 samples, 3.11%)</title><rect x="598.6" y="627.0" width="36.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (113 samples, 1.80%)</title><rect x="598.6" y="611.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.6" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (113 samples, 1.80%)</title><rect x="598.6" y="595.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.6" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (113 samples, 1.80%)</title><rect x="598.6" y="579.0" width="21.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.6" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (112 samples, 1.79%)</title><rect x="598.8" y="563.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (112 samples, 1.79%)</title><rect x="598.8" y="547.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (112 samples, 1.79%)</title><rect x="598.8" y="531.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (107 samples, 1.71%)</title><rect x="599.2" y="515.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (107 samples, 1.71%)</title><rect x="599.2" y="499.0" width="20.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (107 samples, 1.71%)</title><rect x="599.2" y="483.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (56 samples, 0.89%)</title><rect x="599.3" y="467.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (56 samples, 0.89%)</title><rect x="599.3" y="451.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (56 samples, 0.89%)</title><rect x="599.3" y="435.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (56 samples, 0.89%)</title><rect x="599.3" y="419.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (56 samples, 0.89%)</title><rect x="599.3" y="403.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (56 samples, 0.89%)</title><rect x="599.3" y="387.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (56 samples, 0.89%)</title><rect x="599.3" y="371.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (56 samples, 0.89%)</title><rect x="599.3" y="355.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (54 samples, 0.86%)</title><rect x="599.7" y="339.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (46 samples, 0.73%)</title><rect x="599.9" y="323.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (46 samples, 0.73%)</title><rect x="599.9" y="307.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (44 samples, 0.70%)</title><rect x="600.1" y="291.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (44 samples, 0.70%)</title><rect x="600.1" y="275.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="600.1" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="600.1" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="600.1" y="227.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="603.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (39 samples, 0.62%)</title><rect x="601.0" y="259.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.16%)</title><rect x="601.0" y="243.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.16%)</title><rect x="601.0" y="227.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (10 samples, 0.16%)</title><rect x="601.0" y="211.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.0" y="222.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="601.0" y="195.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.06%)</title><rect x="603.1" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="603.1" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="603.1" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.1" y="222.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="603.1" y="195.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="606.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (16 samples, 0.26%)</title><rect x="604.2" y="243.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (7 samples, 0.11%)</title><rect x="604.2" y="227.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="604.2" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.2" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.05%)</title><rect x="604.2" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.05%)</title><rect x="604.2" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="604.2" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.2" y="174.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="604.2" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.2" y="158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (3 samples, 0.05%)</title><rect x="605.0" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.0" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.05%)</title><rect x="605.0" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (3 samples, 0.05%)</title><rect x="605.0" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.05%)</title><rect x="605.0" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.0" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (3 samples, 0.05%)</title><rect x="605.0" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.0" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.05%)</title><rect x="605.0" y="131.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (3 samples, 0.05%)</title><rect x="605.0" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.05%)</title><rect x="605.0" y="99.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="605.0" y="83.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="605.0" y="67.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="605.0" y="51.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.0" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (9 samples, 0.14%)</title><rect x="605.6" y="227.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.6" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.14%)</title><rect x="605.6" y="211.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.14%)</title><rect x="605.6" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.11%)</title><rect x="605.9" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.9" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (7 samples, 0.11%)</title><rect x="605.9" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.9" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.11%)</title><rect x="605.9" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.9" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="605.9" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="605.9" y="115.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.9" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="605.9" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.9" y="110.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="605.9" y="83.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="608.9" y="94.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="606.3" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.3" y="142.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="606.3" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="606.3" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="606.3" y="83.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.3" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="606.3" y="67.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="609.3" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="606.7" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.7" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.05%)</title><rect x="606.7" y="115.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="609.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.08%)</title><rect x="607.4" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.4" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="607.4" y="227.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="610.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.10%)</title><rect x="608.7" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2 samples, 0.03%)</title><rect x="609.1" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="609.9" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="609.9" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="610.1" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="610.1" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="610.1" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="613.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (46 samples, 0.73%)</title><rect x="610.6" y="467.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="610.6" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="610.6" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="610.6" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="610.6" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="610.6" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="613.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (44 samples, 0.70%)</title><rect x="611.0" y="451.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (42 samples, 0.67%)</title><rect x="611.0" y="435.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (42 samples, 0.67%)</title><rect x="611.0" y="419.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41 samples, 0.65%)</title><rect x="611.0" y="403.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (41 samples, 0.65%)</title><rect x="611.0" y="387.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (41 samples, 0.65%)</title><rect x="611.0" y="371.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (41 samples, 0.65%)</title><rect x="611.0" y="355.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (20 samples, 0.32%)</title><rect x="611.0" y="339.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (20 samples, 0.32%)</title><rect x="611.0" y="323.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (20 samples, 0.32%)</title><rect x="611.0" y="307.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (19 samples, 0.30%)</title><rect x="611.0" y="291.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (19 samples, 0.30%)</title><rect x="611.0" y="275.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (19 samples, 0.30%)</title><rect x="611.0" y="259.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (19 samples, 0.30%)</title><rect x="611.0" y="243.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (10 samples, 0.16%)</title><rect x="611.0" y="227.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.0" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.05%)</title><rect x="611.0" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="611.2" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="611.2" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.2" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="611.2" y="163.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="614.2" y="174.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (2 samples, 0.03%)</title><rect x="611.6" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.6" y="222.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (2 samples, 0.03%)</title><rect x="611.6" y="195.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="614.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.03%)</title><rect x="611.9" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.03%)</title><rect x="611.9" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.03%)</title><rect x="611.9" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="611.9" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="611.9" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.03%)</title><rect x="611.9" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.9" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.03%)</title><rect x="611.9" y="115.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="614.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (3 samples, 0.05%)</title><rect x="612.3" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.3" y="222.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="612.3" y="195.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="615.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.14%)</title><rect x="612.9" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.06%)</title><rect x="612.9" y="211.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="615.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="613.6" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.6" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="613.6" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="616.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="614.0" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.05%)</title><rect x="614.0" y="195.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="617.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (21 samples, 0.33%)</title><rect x="614.8" y="339.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (4 samples, 0.06%)</title><rect x="614.8" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="617.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (17 samples, 0.27%)</title><rect x="615.5" y="323.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (3 samples, 0.05%)</title><rect x="616.1" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="619.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="617.0" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="620.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.05%)</title><rect x="617.6" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.03%)</title><rect x="618.2" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.03%)</title><rect x="618.9" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.03%)</title><rect x="618.9" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.03%)</title><rect x="618.9" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (2 samples, 0.03%)</title><rect x="618.9" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (2 samples, 0.03%)</title><rect x="618.9" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (2 samples, 0.03%)</title><rect x="618.9" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="618.9" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="618.9" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="618.9" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.9" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="618.9" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="621.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.03%)</title><rect x="619.5" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.05%)</title><rect x="619.9" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.05%)</title><rect x="619.9" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.05%)</title><rect x="619.9" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.05%)</title><rect x="619.9" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.05%)</title><rect x="619.9" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="622.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (10 samples, 0.16%)</title><rect x="620.4" y="611.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (10 samples, 0.16%)</title><rect x="620.4" y="595.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (10 samples, 0.16%)</title><rect x="620.4" y="579.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (10 samples, 0.16%)</title><rect x="620.4" y="563.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.16%)</title><rect x="620.4" y="547.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.16%)</title><rect x="620.4" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.16%)</title><rect x="620.4" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.16%)</title><rect x="620.4" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.16%)</title><rect x="620.4" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.16%)</title><rect x="620.4" y="467.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (10 samples, 0.16%)</title><rect x="620.4" y="451.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (8 samples, 0.13%)</title><rect x="620.4" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (8 samples, 0.13%)</title><rect x="620.4" y="419.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.13%)</title><rect x="620.4" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8 samples, 0.13%)</title><rect x="620.4" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.13%)</title><rect x="620.4" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.08%)</title><rect x="620.4" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (4 samples, 0.06%)</title><rect x="620.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.06%)</title><rect x="620.4" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.06%)</title><rect x="620.4" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.06%)</title><rect x="620.4" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.05%)</title><rect x="620.6" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.05%)</title><rect x="620.6" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.05%)</title><rect x="620.6" y="243.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="623.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.05%)</title><rect x="621.4" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.05%)</title><rect x="621.4" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (3 samples, 0.05%)</title><rect x="621.4" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.05%)</title><rect x="621.4" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.05%)</title><rect x="621.4" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (3 samples, 0.05%)</title><rect x="621.4" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.05%)</title><rect x="621.4" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (2 samples, 0.03%)</title><rect x="621.5" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="621.9" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="621.9" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.03%)</title><rect x="621.9" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.03%)</title><rect x="621.9" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.03%)</title><rect x="621.9" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.9" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.03%)</title><rect x="621.9" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.03%)</title><rect x="621.9" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.9" y="350.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (2 samples, 0.03%)</title><rect x="621.9" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="624.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (69 samples, 1.10%)</title><rect x="622.3" y="611.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (69 samples, 1.10%)</title><rect x="622.3" y="595.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (55 samples, 0.88%)</title><rect x="622.3" y="579.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (55 samples, 0.88%)</title><rect x="622.3" y="563.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (55 samples, 0.88%)</title><rect x="622.3" y="547.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (54 samples, 0.86%)</title><rect x="622.5" y="531.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (54 samples, 0.86%)</title><rect x="622.5" y="515.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (54 samples, 0.86%)</title><rect x="622.5" y="499.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (54 samples, 0.86%)</title><rect x="622.5" y="483.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.38%)</title><rect x="622.5" y="467.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.38%)</title><rect x="622.5" y="451.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24 samples, 0.38%)</title><rect x="622.5" y="435.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24 samples, 0.38%)</title><rect x="622.5" y="419.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.38%)</title><rect x="622.5" y="403.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (24 samples, 0.38%)</title><rect x="622.5" y="387.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24 samples, 0.38%)</title><rect x="622.5" y="371.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (21 samples, 0.33%)</title><rect x="622.5" y="355.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.33%)</title><rect x="622.5" y="339.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19 samples, 0.30%)</title><rect x="622.5" y="323.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="622.5" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="625.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (15 samples, 0.24%)</title><rect x="623.1" y="307.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (15 samples, 0.24%)</title><rect x="623.1" y="291.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15 samples, 0.24%)</title><rect x="623.1" y="275.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14 samples, 0.22%)</title><rect x="623.2" y="259.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (3 samples, 0.05%)</title><rect x="623.2" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (3 samples, 0.05%)</title><rect x="623.2" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.2" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (3 samples, 0.05%)</title><rect x="623.2" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (3 samples, 0.05%)</title><rect x="623.2" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="623.4" y="179.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="626.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (11 samples, 0.18%)</title><rect x="623.8" y="243.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.03%)</title><rect x="624.0" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.03%)</title><rect x="624.0" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="624.0" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="624.0" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="624.0" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="624.0" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.0" y="158.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="624.0" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.0" y="142.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.03%)</title><rect x="624.0" y="115.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="627.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="624.4" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="624.4" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="624.6" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="624.6" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="624.6" y="163.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="627.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.06%)</title><rect x="625.1" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (4 samples, 0.06%)</title><rect x="625.1" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.06%)</title><rect x="625.1" y="195.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="625.5" y="179.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="625.5" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="625.5" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="625.5" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="625.5" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="625.5" y="99.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.5" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="625.5" y="83.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.03%)</title><rect x="626.1" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.03%)</title><rect x="626.1" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.apply (2 samples, 0.03%)</title><rect x="626.1" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.03%)</title><rect x="626.1" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="626.1" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="626.1" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="629.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (3 samples, 0.05%)</title><rect x="626.4" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.05%)</title><rect x="626.4" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (3 samples, 0.05%)</title><rect x="626.4" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="629.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (30 samples, 0.48%)</title><rect x="627.0" y="467.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.19%)</title><rect x="627.4" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.19%)</title><rect x="627.4" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.19%)</title><rect x="627.4" y="419.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (10 samples, 0.16%)</title><rect x="627.8" y="403.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (10 samples, 0.16%)</title><rect x="627.8" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.16%)</title><rect x="627.8" y="371.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="627.8" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="627.8" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.8" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (4 samples, 0.06%)</title><rect x="627.8" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.8" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (4 samples, 0.06%)</title><rect x="627.8" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="630.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="628.5" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="628.5" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="628.5" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="628.5" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="628.5" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="628.5" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="628.5" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="628.5" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="628.5" y="227.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.5" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.05%)</title><rect x="628.9" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.05%)</title><rect x="628.9" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.9" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="629.1" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.1" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="629.1" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="632.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (16 samples, 0.26%)</title><rect x="629.6" y="451.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="629.6" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="629.6" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.6" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="629.6" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="632.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.06%)</title><rect x="630.0" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="630.0" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="630.0" y="403.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="633.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (10 samples, 0.16%)</title><rect x="630.8" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="630.8" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="630.8" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="630.8" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="633.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="631.1" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.1" y="398.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="631.1" y="371.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="634.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.03%)</title><rect x="631.7" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="631.7" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="632.3" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (14 samples, 0.22%)</title><rect x="632.6" y="579.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.22%)</title><rect x="632.6" y="563.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14 samples, 0.22%)</title><rect x="632.6" y="547.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (14 samples, 0.22%)</title><rect x="632.6" y="531.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14 samples, 0.22%)</title><rect x="632.6" y="515.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (13 samples, 0.21%)</title><rect x="632.8" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (13 samples, 0.21%)</title><rect x="632.8" y="483.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (13 samples, 0.21%)</title><rect x="632.8" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (13 samples, 0.21%)</title><rect x="632.8" y="451.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (13 samples, 0.21%)</title><rect x="632.8" y="435.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (13 samples, 0.21%)</title><rect x="632.8" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (8 samples, 0.13%)</title><rect x="632.8" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8 samples, 0.13%)</title><rect x="632.8" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8 samples, 0.13%)</title><rect x="632.8" y="371.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.05%)</title><rect x="632.8" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.05%)</title><rect x="632.8" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.05%)</title><rect x="632.8" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.05%)</title><rect x="632.8" y="307.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="635.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.08%)</title><rect x="633.4" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.08%)</title><rect x="633.4" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3 samples, 0.05%)</title><rect x="633.8" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.05%)</title><rect x="633.8" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.03%)</title><rect x="633.8" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.03%)</title><rect x="633.8" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="633.8" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.03%)</title><rect x="633.8" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="636.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (4 samples, 0.06%)</title><rect x="634.3" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (4 samples, 0.06%)</title><rect x="634.3" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (4 samples, 0.06%)</title><rect x="634.3" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="634.3" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="634.3" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="634.3" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="634.3" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (2 samples, 0.03%)</title><rect x="634.3" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.03%)</title><rect x="634.3" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="634.3" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="634.3" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.03%)</title><rect x="634.3" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (2 samples, 0.03%)</title><rect x="634.3" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.03%)</title><rect x="634.3" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2 samples, 0.03%)</title><rect x="634.3" y="179.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="637.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (2 samples, 0.03%)</title><rect x="634.7" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.7" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="634.7" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.7" y="350.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13376] (202 samples, 3.22%)</title><rect x="635.3" y="675.0" width="38.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="638.3" y="686.0">[as..</text>
</g>
<g>
<title>java/lang/Thread.run (202 samples, 3.22%)</title><rect x="635.3" y="659.0" width="38.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.3" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (202 samples, 3.22%)</title><rect x="635.3" y="643.0" width="38.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.3" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (202 samples, 3.22%)</title><rect x="635.3" y="627.0" width="38.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.3" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (114 samples, 1.82%)</title><rect x="635.3" y="611.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (114 samples, 1.82%)</title><rect x="635.3" y="595.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (114 samples, 1.82%)</title><rect x="635.3" y="579.0" width="21.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (114 samples, 1.82%)</title><rect x="635.3" y="563.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.3" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (114 samples, 1.82%)</title><rect x="635.3" y="547.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.3" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (114 samples, 1.82%)</title><rect x="635.3" y="531.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.3" y="542.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="635.3" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="635.3" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1335583175.get$Lambda (2 samples, 0.03%)</title><rect x="635.5" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$238 (2 samples, 0.03%)</title><rect x="635.5" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="638.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="635.8" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="635.8" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="636.2" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="636.2" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="636.4" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="636.4" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="636.4" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="639.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (102 samples, 1.63%)</title><rect x="637.0" y="515.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (102 samples, 1.63%)</title><rect x="637.0" y="499.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (102 samples, 1.63%)</title><rect x="637.0" y="483.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (66 samples, 1.05%)</title><rect x="637.2" y="467.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (66 samples, 1.05%)</title><rect x="637.2" y="451.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (65 samples, 1.04%)</title><rect x="637.2" y="435.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (65 samples, 1.04%)</title><rect x="637.2" y="419.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (65 samples, 1.04%)</title><rect x="637.2" y="403.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (65 samples, 1.04%)</title><rect x="637.2" y="387.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (65 samples, 1.04%)</title><rect x="637.2" y="371.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (65 samples, 1.04%)</title><rect x="637.2" y="355.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="637.2" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="637.2" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.03%)</title><rect x="637.2" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="640.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="637.5" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="637.5" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (61 samples, 0.97%)</title><rect x="637.9" y="339.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (49 samples, 0.78%)</title><rect x="637.9" y="323.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (49 samples, 0.78%)</title><rect x="637.9" y="307.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (45 samples, 0.72%)</title><rect x="637.9" y="291.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (45 samples, 0.72%)</title><rect x="637.9" y="275.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="637.9" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="637.9" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="637.9" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="637.9" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="637.9" y="195.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="640.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (41 samples, 0.65%)</title><rect x="638.7" y="259.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.08%)</title><rect x="638.7" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.08%)</title><rect x="638.7" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (5 samples, 0.08%)</title><rect x="638.7" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.7" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="638.7" y="195.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="641.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="639.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="639.6" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.6" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="639.6" y="211.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="642.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.05%)</title><rect x="640.2" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="640.2" y="227.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="640.2" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.2" y="222.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="640.2" y="195.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="643.2" y="206.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="640.7" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="640.7" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="643.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (20 samples, 0.32%)</title><rect x="641.1" y="243.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (9 samples, 0.14%)</title><rect x="641.1" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="641.1" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.1" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.06%)</title><rect x="641.1" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.06%)</title><rect x="641.1" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="641.1" y="163.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.1" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="641.1" y="147.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.1" y="158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (4 samples, 0.06%)</title><rect x="642.1" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.06%)</title><rect x="642.1" y="195.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (4 samples, 0.06%)</title><rect x="642.1" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4 samples, 0.06%)</title><rect x="642.1" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.1" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (4 samples, 0.06%)</title><rect x="642.1" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4 samples, 0.06%)</title><rect x="642.1" y="131.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (4 samples, 0.06%)</title><rect x="642.1" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.06%)</title><rect x="642.1" y="99.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="642.1" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="642.1" y="67.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="642.2" y="51.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.2" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="642.2" y="35.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="645.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (11 samples, 0.18%)</title><rect x="642.8" y="227.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.8" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.18%)</title><rect x="642.8" y="211.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.18%)</title><rect x="642.8" y="195.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.13%)</title><rect x="643.2" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.2" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (8 samples, 0.13%)</title><rect x="643.2" y="163.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.13%)</title><rect x="643.2" y="147.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="643.2" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="643.2" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.2" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="643.2" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.2" y="110.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="643.2" y="83.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="646.2" y="94.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.06%)</title><rect x="643.6" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.6" y="142.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.06%)</title><rect x="643.6" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="643.6" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="643.6" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="643.6" y="67.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="646.6" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="643.9" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.9" y="110.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="643.9" y="83.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="646.9" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="644.3" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.3" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="644.3" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="647.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.03%)</title><rect x="644.9" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.03%)</title><rect x="644.9" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="644.9" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.03%)</title><rect x="644.9" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (2 samples, 0.03%)</title><rect x="644.9" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="644.9" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="644.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="644.9" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.9" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="644.9" y="115.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="647.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.10%)</title><rect x="645.3" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="645.6" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.06%)</title><rect x="645.6" y="211.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="648.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="646.4" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="646.4" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="646.4" y="259.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="649.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="647.3" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="650.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.14%)</title><rect x="647.7" y="323.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.06%)</title><rect x="648.3" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.06%)</title><rect x="648.3" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.06%)</title><rect x="648.3" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.06%)</title><rect x="648.3" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.06%)</title><rect x="648.3" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.06%)</title><rect x="648.3" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (4 samples, 0.06%)</title><rect x="648.3" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.06%)</title><rect x="648.3" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.06%)</title><rect x="648.3" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.03%)</title><rect x="648.3" y="163.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="651.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="648.6" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="648.6" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.03%)</title><rect x="648.6" y="131.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="651.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (35 samples, 0.56%)</title><rect x="649.6" y="467.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="649.8" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="649.8" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="649.8" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="649.8" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="649.8" y="387.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="652.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (32 samples, 0.51%)</title><rect x="650.1" y="451.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (26 samples, 0.41%)</title><rect x="650.1" y="435.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (26 samples, 0.41%)</title><rect x="650.1" y="419.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (25 samples, 0.40%)</title><rect x="650.1" y="403.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (25 samples, 0.40%)</title><rect x="650.1" y="387.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (25 samples, 0.40%)</title><rect x="650.1" y="371.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (25 samples, 0.40%)</title><rect x="650.1" y="355.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 0.08%)</title><rect x="650.1" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.08%)</title><rect x="650.1" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 0.08%)</title><rect x="650.1" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (5 samples, 0.08%)</title><rect x="650.1" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5 samples, 0.08%)</title><rect x="650.1" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 0.08%)</title><rect x="650.1" y="259.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 0.08%)</title><rect x="650.1" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.03%)</title><rect x="650.1" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.05%)</title><rect x="650.5" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="650.7" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="650.7" y="195.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (20 samples, 0.32%)</title><rect x="651.1" y="339.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (18 samples, 0.29%)</title><rect x="651.3" y="323.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (9 samples, 0.14%)</title><rect x="651.7" y="307.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (3 samples, 0.05%)</title><rect x="651.7" y="291.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="654.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (2 samples, 0.03%)</title><rect x="652.4" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="655.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="652.8" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.06%)</title><rect x="653.3" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="653.7" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.03%)</title><rect x="654.3" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="655.0" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="655.0" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="655.0" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="655.0" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="655.0" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="658.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.06%)</title><rect x="655.4" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (3 samples, 0.05%)</title><rect x="655.4" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.05%)</title><rect x="655.4" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (3 samples, 0.05%)</title><rect x="655.4" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (3 samples, 0.05%)</title><rect x="655.4" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (3 samples, 0.05%)</title><rect x="655.4" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="655.4" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.05%)</title><rect x="655.4" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.05%)</title><rect x="655.4" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.4" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="655.4" y="291.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="658.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.05%)</title><rect x="656.2" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.03%)</title><rect x="656.2" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.06%)</title><rect x="656.7" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.06%)</title><rect x="656.7" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.05%)</title><rect x="656.7" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.05%)</title><rect x="656.7" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.05%)</title><rect x="656.7" y="547.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="659.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (6 samples, 0.10%)</title><rect x="657.5" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (6 samples, 0.10%)</title><rect x="657.5" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (6 samples, 0.10%)</title><rect x="657.5" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (6 samples, 0.10%)</title><rect x="657.5" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="657.5" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="657.5" y="531.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.10%)</title><rect x="657.5" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.10%)</title><rect x="657.5" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.10%)</title><rect x="657.5" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.10%)</title><rect x="657.5" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6 samples, 0.10%)</title><rect x="657.5" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4 samples, 0.06%)</title><rect x="657.5" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.06%)</title><rect x="657.5" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.06%)</title><rect x="657.5" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.06%)</title><rect x="657.5" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.06%)</title><rect x="657.5" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.05%)</title><rect x="657.5" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (2 samples, 0.03%)</title><rect x="657.7" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.03%)</title><rect x="657.7" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.03%)</title><rect x="657.7" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.03%)</title><rect x="657.7" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.03%)</title><rect x="657.7" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="658.2" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.03%)</title><rect x="658.2" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.03%)</title><rect x="658.2" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.03%)</title><rect x="658.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.03%)</title><rect x="658.2" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.03%)</title><rect x="658.2" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.2" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.03%)</title><rect x="658.2" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.2" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.03%)</title><rect x="658.2" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="661.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (78 samples, 1.24%)</title><rect x="658.6" y="611.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (78 samples, 1.24%)</title><rect x="658.6" y="595.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (68 samples, 1.08%)</title><rect x="658.6" y="579.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (68 samples, 1.08%)</title><rect x="658.6" y="563.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (68 samples, 1.08%)</title><rect x="658.6" y="547.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (67 samples, 1.07%)</title><rect x="658.8" y="531.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (67 samples, 1.07%)</title><rect x="658.8" y="515.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (67 samples, 1.07%)</title><rect x="658.8" y="499.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (67 samples, 1.07%)</title><rect x="658.8" y="483.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (29 samples, 0.46%)</title><rect x="658.8" y="467.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 0.46%)</title><rect x="658.8" y="451.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29 samples, 0.46%)</title><rect x="658.8" y="435.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (29 samples, 0.46%)</title><rect x="658.8" y="419.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (29 samples, 0.46%)</title><rect x="658.8" y="403.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (29 samples, 0.46%)</title><rect x="658.8" y="387.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29 samples, 0.46%)</title><rect x="658.8" y="371.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.43%)</title><rect x="658.8" y="355.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.43%)</title><rect x="658.8" y="339.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 0.43%)</title><rect x="658.8" y="323.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (27 samples, 0.43%)</title><rect x="658.8" y="307.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (27 samples, 0.43%)</title><rect x="658.8" y="291.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (27 samples, 0.43%)</title><rect x="658.8" y="275.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (26 samples, 0.41%)</title><rect x="659.0" y="259.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (25 samples, 0.40%)</title><rect x="659.2" y="243.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="659.2" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="659.2" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.get$Lambda (2 samples, 0.03%)</title><rect x="659.2" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$289 (2 samples, 0.03%)</title><rect x="659.2" y="179.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="662.2" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.08%)</title><rect x="659.7" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.7" y="238.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.03%)</title><rect x="659.7" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="659.7" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="659.7" y="179.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="662.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.03%)</title><rect x="660.3" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2 samples, 0.03%)</title><rect x="660.3" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="663.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.13%)</title><rect x="660.7" y="227.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="660.7" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="660.7" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="663.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.08%)</title><rect x="661.2" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.08%)</title><rect x="661.2" y="195.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.06%)</title><rect x="661.2" y="179.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="664.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.11%)</title><rect x="662.6" y="227.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (7 samples, 0.11%)</title><rect x="662.6" y="211.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (7 samples, 0.11%)</title><rect x="662.6" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.03%)</title><rect x="662.8" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="662.8" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="665.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="663.3" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="663.3" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="663.3" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="663.3" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="663.3" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="663.3" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.3" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="663.3" y="83.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="666.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (2 samples, 0.03%)</title><rect x="663.9" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.03%)</title><rect x="663.9" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (2 samples, 0.03%)</title><rect x="663.9" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="666.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (38 samples, 0.61%)</title><rect x="664.3" y="467.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.03%)</title><rect x="664.3" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="664.3" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="664.3" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.3" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="664.3" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="664.3" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.3" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="664.3" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="667.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2 samples, 0.03%)</title><rect x="664.6" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (9 samples, 0.14%)</title><rect x="665.0" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.14%)</title><rect x="665.0" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.14%)</title><rect x="665.0" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.10%)</title><rect x="665.6" y="403.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (6 samples, 0.10%)</title><rect x="665.6" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.10%)</title><rect x="665.6" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="665.6" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="665.6" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="665.6" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="665.6" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="665.6" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="665.6" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="665.6" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="665.6" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="665.6" y="227.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="668.6" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="666.0" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="666.0" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="666.3" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="666.3" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="669.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (25 samples, 0.40%)</title><rect x="666.7" y="451.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="666.7" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="669.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.06%)</title><rect x="667.1" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="667.1" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="667.1" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="670.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="667.5" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="667.5" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="670.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (19 samples, 0.30%)</title><rect x="667.8" y="435.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="667.8" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="667.8" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="667.8" y="387.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="668.8" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="398.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="668.8" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="671.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.08%)</title><rect x="669.3" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.08%)</title><rect x="669.3" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.3" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="669.3" y="387.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="672.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="670.3" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="670.3" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="670.3" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="670.3" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.3" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="670.3" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="673.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.06%)</title><rect x="670.7" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="670.7" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.7" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.03%)</title><rect x="670.7" y="387.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="673.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="671.0" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.0" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.03%)</title><rect x="671.0" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="674.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10 samples, 0.16%)</title><rect x="671.4" y="579.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.16%)</title><rect x="671.4" y="563.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.16%)</title><rect x="671.4" y="547.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (10 samples, 0.16%)</title><rect x="671.4" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.16%)</title><rect x="671.4" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (10 samples, 0.16%)</title><rect x="671.4" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (10 samples, 0.16%)</title><rect x="671.4" y="483.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (10 samples, 0.16%)</title><rect x="671.4" y="467.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (10 samples, 0.16%)</title><rect x="671.4" y="451.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (10 samples, 0.16%)</title><rect x="671.4" y="435.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (10 samples, 0.16%)</title><rect x="671.4" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (8 samples, 0.13%)</title><rect x="671.4" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (8 samples, 0.13%)</title><rect x="671.4" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (8 samples, 0.13%)</title><rect x="671.4" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.11%)</title><rect x="671.6" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.11%)</title><rect x="671.6" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (4 samples, 0.06%)</title><rect x="671.6" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.6" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.05%)</title><rect x="671.6" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.6" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.05%)</title><rect x="671.6" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.6" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.05%)</title><rect x="671.6" y="275.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="674.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.03%)</title><rect x="672.4" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.03%)</title><rect x="672.9" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.03%)</title><rect x="672.9" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.03%)</title><rect x="672.9" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.03%)</title><rect x="672.9" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.03%)</title><rect x="672.9" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.9" y="350.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13377] (207 samples, 3.30%)</title><rect x="673.3" y="675.0" width="38.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="676.3" y="686.0">[as..</text>
</g>
<g>
<title>java/lang/Thread.run (207 samples, 3.30%)</title><rect x="673.3" y="659.0" width="38.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.3" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (207 samples, 3.30%)</title><rect x="673.3" y="643.0" width="38.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.3" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (207 samples, 3.30%)</title><rect x="673.3" y="627.0" width="38.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.3" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (119 samples, 1.90%)</title><rect x="673.3" y="611.0" width="22.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (119 samples, 1.90%)</title><rect x="673.3" y="595.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (119 samples, 1.90%)</title><rect x="673.3" y="579.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.3" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (119 samples, 1.90%)</title><rect x="673.3" y="563.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.3" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (119 samples, 1.90%)</title><rect x="673.3" y="547.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (119 samples, 1.90%)</title><rect x="673.3" y="531.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="673.3" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="673.3" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.03%)</title><rect x="673.3" y="483.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (115 samples, 1.83%)</title><rect x="673.9" y="515.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (115 samples, 1.83%)</title><rect x="673.9" y="499.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (115 samples, 1.83%)</title><rect x="673.9" y="483.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (77 samples, 1.23%)</title><rect x="674.0" y="467.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (77 samples, 1.23%)</title><rect x="674.0" y="451.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (77 samples, 1.23%)</title><rect x="674.0" y="435.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (77 samples, 1.23%)</title><rect x="674.0" y="419.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (77 samples, 1.23%)</title><rect x="674.0" y="403.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (77 samples, 1.23%)</title><rect x="674.0" y="387.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (77 samples, 1.23%)</title><rect x="674.0" y="371.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (77 samples, 1.23%)</title><rect x="674.0" y="355.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="674.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="674.0" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="674.0" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="674.0" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="674.0" y="275.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (75 samples, 1.20%)</title><rect x="674.4" y="339.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (59 samples, 0.94%)</title><rect x="674.6" y="323.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (59 samples, 0.94%)</title><rect x="674.6" y="307.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (56 samples, 0.89%)</title><rect x="674.8" y="291.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (56 samples, 0.89%)</title><rect x="674.8" y="275.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="675.0" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="675.0" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="675.0" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="675.0" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="675.0" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.03%)</title><rect x="675.0" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.03%)</title><rect x="675.0" y="163.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="678.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (52 samples, 0.83%)</title><rect x="675.5" y="259.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.11%)</title><rect x="675.7" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.11%)</title><rect x="675.7" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (7 samples, 0.11%)</title><rect x="675.7" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.7" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="675.7" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="678.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.08%)</title><rect x="677.1" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="677.1" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="677.1" y="211.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.1" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="677.1" y="195.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="680.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="678.0" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="678.0" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="678.0" y="211.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="681.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (33 samples, 0.53%)</title><rect x="678.4" y="243.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (16 samples, 0.26%)</title><rect x="678.4" y="227.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="678.4" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.4" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.06%)</title><rect x="678.4" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.4" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.06%)</title><rect x="678.4" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="678.4" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.4" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="678.4" y="147.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.4" y="158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (10 samples, 0.16%)</title><rect x="679.5" y="211.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (10 samples, 0.16%)</title><rect x="679.5" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (10 samples, 0.16%)</title><rect x="679.5" y="179.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (10 samples, 0.16%)</title><rect x="679.5" y="163.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.5" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (10 samples, 0.16%)</title><rect x="679.5" y="147.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.5" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (10 samples, 0.16%)</title><rect x="679.5" y="131.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (10 samples, 0.16%)</title><rect x="679.5" y="115.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (10 samples, 0.16%)</title><rect x="679.5" y="99.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.16%)</title><rect x="679.5" y="83.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.16%)</title><rect x="679.5" y="67.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.5" y="78.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="679.5" y="51.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="682.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="680.4" y="51.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="680.4" y="35.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="683.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (17 samples, 0.27%)</title><rect x="681.4" y="227.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.4" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.27%)</title><rect x="681.4" y="211.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17 samples, 0.27%)</title><rect x="681.4" y="195.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.4" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="681.4" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.4" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.21%)</title><rect x="681.9" y="179.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.9" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (13 samples, 0.21%)</title><rect x="681.9" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.9" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.21%)</title><rect x="681.9" y="147.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.9" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="681.9" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="681.9" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.9" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="681.9" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.9" y="110.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="681.9" y="83.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="684.9" y="94.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.10%)</title><rect x="682.5" y="131.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.5" y="142.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.10%)</title><rect x="682.5" y="115.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.06%)</title><rect x="682.5" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="682.5" y="83.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.5" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="682.5" y="67.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="685.5" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="683.3" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.3" y="110.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="683.3" y="83.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="686.3" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="683.6" y="131.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.6" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.06%)</title><rect x="683.6" y="115.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="686.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.05%)</title><rect x="684.8" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="685.0" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="685.0" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="685.3" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="685.3" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="685.3" y="259.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="688.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.03%)</title><rect x="685.7" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12 samples, 0.19%)</title><rect x="686.3" y="323.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="686.3" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="686.3" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/1697199018.get$Lambda (2 samples, 0.03%)</title><rect x="686.3" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$204 (2 samples, 0.03%)</title><rect x="686.3" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="689.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (4 samples, 0.06%)</title><rect x="687.0" y="307.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="690.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.05%)</title><rect x="687.8" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="687.8" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="687.8" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.05%)</title><rect x="687.8" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.05%)</title><rect x="687.8" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.05%)</title><rect x="687.8" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (3 samples, 0.05%)</title><rect x="687.8" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.05%)</title><rect x="687.8" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.05%)</title><rect x="687.8" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="687.8" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="687.8" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (37 samples, 0.59%)</title><rect x="688.5" y="467.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (35 samples, 0.56%)</title><rect x="688.9" y="451.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (33 samples, 0.53%)</title><rect x="688.9" y="435.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (33 samples, 0.53%)</title><rect x="688.9" y="419.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (32 samples, 0.51%)</title><rect x="688.9" y="403.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (32 samples, 0.51%)</title><rect x="688.9" y="387.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (32 samples, 0.51%)</title><rect x="688.9" y="371.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (32 samples, 0.51%)</title><rect x="688.9" y="355.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (17 samples, 0.27%)</title><rect x="688.9" y="339.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (17 samples, 0.27%)</title><rect x="688.9" y="323.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (17 samples, 0.27%)</title><rect x="688.9" y="307.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (17 samples, 0.27%)</title><rect x="688.9" y="291.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (17 samples, 0.27%)</title><rect x="688.9" y="275.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (17 samples, 0.27%)</title><rect x="688.9" y="259.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (17 samples, 0.27%)</title><rect x="688.9" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (15 samples, 0.24%)</title><rect x="688.9" y="227.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.9" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (5 samples, 0.08%)</title><rect x="688.9" y="211.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="688.9" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="688.9" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.9" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="688.9" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="691.9" y="174.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.05%)</title><rect x="689.3" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.3" y="206.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="689.3" y="179.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="692.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (9 samples, 0.14%)</title><rect x="690.0" y="211.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (7 samples, 0.11%)</title><rect x="690.0" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (7 samples, 0.11%)</title><rect x="690.0" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (4 samples, 0.06%)</title><rect x="690.0" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="690.0" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (4 samples, 0.06%)</title><rect x="690.0" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (4 samples, 0.06%)</title><rect x="690.0" y="115.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="693.0" y="126.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.05%)</title><rect x="690.8" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.run (3 samples, 0.05%)</title><rect x="690.8" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (3 samples, 0.05%)</title><rect x="690.8" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.8" y="142.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (3 samples, 0.05%)</title><rect x="690.8" y="115.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.05%)</title><rect x="690.8" y="99.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.8" y="110.0"></text>
</g>
<g>
<title>java.lang.Integer (3 samples, 0.05%)</title><rect x="690.8" y="83.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="691.4" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="691.4" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.4" y="190.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="691.4" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="694.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.03%)</title><rect x="691.7" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (15 samples, 0.24%)</title><rect x="692.1" y="339.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (3 samples, 0.05%)</title><rect x="692.1" y="323.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="695.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (12 samples, 0.19%)</title><rect x="692.7" y="323.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (2 samples, 0.03%)</title><rect x="692.7" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="695.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (8 samples, 0.13%)</title><rect x="693.0" y="307.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (2 samples, 0.03%)</title><rect x="693.0" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="696.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.03%)</title><rect x="693.4" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="696.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="693.8" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="696.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="694.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.03%)</title><rect x="694.2" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.03%)</title><rect x="694.6" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.03%)</title><rect x="695.1" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="695.1" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="695.1" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="698.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.05%)</title><rect x="695.7" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.05%)</title><rect x="695.7" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.05%)</title><rect x="695.7" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.05%)</title><rect x="695.7" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.05%)</title><rect x="695.7" y="547.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="698.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (13 samples, 0.21%)</title><rect x="696.2" y="611.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (13 samples, 0.21%)</title><rect x="696.2" y="595.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (13 samples, 0.21%)</title><rect x="696.2" y="579.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (13 samples, 0.21%)</title><rect x="696.2" y="563.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.21%)</title><rect x="696.2" y="547.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.21%)</title><rect x="696.2" y="531.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.21%)</title><rect x="696.2" y="515.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.21%)</title><rect x="696.2" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13 samples, 0.21%)</title><rect x="696.2" y="483.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13 samples, 0.21%)</title><rect x="696.2" y="467.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (13 samples, 0.21%)</title><rect x="696.2" y="451.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (12 samples, 0.19%)</title><rect x="696.2" y="435.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.18%)</title><rect x="696.4" y="419.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.16%)</title><rect x="696.6" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (10 samples, 0.16%)</title><rect x="696.6" y="387.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.16%)</title><rect x="696.6" y="371.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.05%)</title><rect x="696.6" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (2 samples, 0.03%)</title><rect x="696.8" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.03%)</title><rect x="696.8" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.03%)</title><rect x="696.8" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.03%)</title><rect x="696.8" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.03%)</title><rect x="696.8" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="696.8" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.03%)</title><rect x="696.8" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="699.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.11%)</title><rect x="697.2" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.11%)</title><rect x="697.2" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (7 samples, 0.11%)</title><rect x="697.2" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.11%)</title><rect x="697.2" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.11%)</title><rect x="697.2" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (7 samples, 0.11%)</title><rect x="697.2" y="275.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.11%)</title><rect x="697.2" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="697.2" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="697.2" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.get$Lambda (2 samples, 0.03%)</title><rect x="697.2" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$250 (2 samples, 0.03%)</title><rect x="697.2" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="700.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (3 samples, 0.05%)</title><rect x="697.8" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="697.9" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="697.9" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (72 samples, 1.15%)</title><rect x="698.7" y="611.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (72 samples, 1.15%)</title><rect x="698.7" y="595.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (63 samples, 1.00%)</title><rect x="698.7" y="579.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (63 samples, 1.00%)</title><rect x="698.7" y="563.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (63 samples, 1.00%)</title><rect x="698.7" y="547.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.03%)</title><rect x="698.7" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.03%)</title><rect x="698.7" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.03%)</title><rect x="698.7" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.03%)</title><rect x="698.7" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (61 samples, 0.97%)</title><rect x="699.1" y="531.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (61 samples, 0.97%)</title><rect x="699.1" y="515.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (61 samples, 0.97%)</title><rect x="699.1" y="499.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (61 samples, 0.97%)</title><rect x="699.1" y="483.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (28 samples, 0.45%)</title><rect x="699.1" y="467.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28 samples, 0.45%)</title><rect x="699.1" y="451.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (28 samples, 0.45%)</title><rect x="699.1" y="435.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (28 samples, 0.45%)</title><rect x="699.1" y="419.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.45%)</title><rect x="699.1" y="403.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (28 samples, 0.45%)</title><rect x="699.1" y="387.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (28 samples, 0.45%)</title><rect x="699.1" y="371.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.43%)</title><rect x="699.1" y="355.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.43%)</title><rect x="699.1" y="339.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 0.43%)</title><rect x="699.1" y="323.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (24 samples, 0.38%)</title><rect x="699.3" y="307.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (24 samples, 0.38%)</title><rect x="699.3" y="291.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (23 samples, 0.37%)</title><rect x="699.4" y="275.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (22 samples, 0.35%)</title><rect x="699.6" y="259.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (21 samples, 0.33%)</title><rect x="699.8" y="243.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.08%)</title><rect x="700.0" y="227.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.0" y="238.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.03%)</title><rect x="700.0" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.05%)</title><rect x="700.4" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.05%)</title><rect x="700.4" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.05%)</title><rect x="700.4" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="700.4" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="703.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="700.4" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.03%)</title><rect x="700.4" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.4" y="142.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (2 samples, 0.03%)</title><rect x="700.4" y="115.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="703.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.06%)</title><rect x="701.0" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="701.1" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="701.1" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="701.1" y="179.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="704.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.13%)</title><rect x="702.3" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (8 samples, 0.13%)</title><rect x="702.3" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.13%)</title><rect x="702.3" y="195.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="702.3" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="702.3" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.get$Lambda (2 samples, 0.03%)</title><rect x="702.3" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (2 samples, 0.03%)</title><rect x="702.3" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="705.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="702.8" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="702.8" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="702.8" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="702.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.05%)</title><rect x="703.2" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.4" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="703.4" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="703.4" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="703.4" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="703.4" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="703.4" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.4" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="703.4" y="67.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="706.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.03%)</title><rect x="703.8" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.03%)</title><rect x="703.8" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="703.8" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="703.8" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="706.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (33 samples, 0.53%)</title><rect x="704.3" y="467.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (4 samples, 0.06%)</title><rect x="704.3" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="704.3" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.06%)</title><rect x="704.3" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.3" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.06%)</title><rect x="704.3" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="704.3" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.3" y="398.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="704.3" y="371.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="707.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.06%)</title><rect x="705.1" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="705.1" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="705.1" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="705.1" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="708.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="705.5" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="705.5" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.16%)</title><rect x="705.8" y="451.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.16%)</title><rect x="705.8" y="435.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.16%)</title><rect x="705.8" y="419.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.13%)</title><rect x="706.2" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (8 samples, 0.13%)</title><rect x="706.2" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.13%)</title><rect x="706.2" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="706.2" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="706.2" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.2" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="706.2" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.2" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="706.2" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="709.2" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="706.8" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="706.8" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="707.2" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.2" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.05%)</title><rect x="707.2" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="710.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (15 samples, 0.24%)</title><rect x="707.7" y="451.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="707.7" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="710.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (12 samples, 0.19%)</title><rect x="708.3" y="435.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="708.3" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="708.3" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="708.3" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.05%)</title><rect x="709.0" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.05%)</title><rect x="709.0" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="709.0" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="709.0" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.0" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="709.0" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="712.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="709.6" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="709.6" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="709.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="709.6" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="709.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="709.6" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.05%)</title><rect x="710.0" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.03%)</title><rect x="710.2" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="710.2" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="710.2" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="713.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (9 samples, 0.14%)</title><rect x="710.5" y="579.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.14%)</title><rect x="710.5" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.14%)</title><rect x="710.5" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (9 samples, 0.14%)</title><rect x="710.5" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.14%)</title><rect x="710.5" y="515.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="710.5" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (7 samples, 0.11%)</title><rect x="710.9" y="499.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 0.11%)</title><rect x="710.9" y="483.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7 samples, 0.11%)</title><rect x="710.9" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7 samples, 0.11%)</title><rect x="710.9" y="451.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7 samples, 0.11%)</title><rect x="710.9" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7 samples, 0.11%)</title><rect x="710.9" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (5 samples, 0.08%)</title><rect x="711.1" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5 samples, 0.08%)</title><rect x="711.1" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5 samples, 0.08%)</title><rect x="711.1" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.08%)</title><rect x="711.1" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.08%)</title><rect x="711.1" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.03%)</title><rect x="711.1" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.03%)</title><rect x="711.7" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.03%)</title><rect x="711.7" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.03%)</title><rect x="711.7" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.03%)</title><rect x="711.7" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.03%)</title><rect x="711.7" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>[asyncWorker tid=13381] (317 samples, 5.06%)</title><rect x="712.2" y="675.0" width="59.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="715.2" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (317 samples, 5.06%)</title><rect x="712.2" y="659.0" width="59.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.2" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (317 samples, 5.06%)</title><rect x="712.2" y="643.0" width="59.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.2" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (317 samples, 5.06%)</title><rect x="712.2" y="627.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.2" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.10%)</title><rect x="712.2" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.10%)</title><rect x="712.2" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.08%)</title><rect x="712.2" y="579.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.08%)</title><rect x="712.2" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.08%)</title><rect x="712.2" y="547.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="715.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (311 samples, 4.96%)</title><rect x="713.4" y="611.0" width="58.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.4" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (311 samples, 4.96%)</title><rect x="713.4" y="595.0" width="58.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.4" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 0.75%)</title><rect x="713.4" y="579.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (32 samples, 0.51%)</title><rect x="713.4" y="563.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.37%)</title><rect x="713.4" y="547.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.37%)</title><rect x="713.4" y="531.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.4" y="542.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.35%)</title><rect x="713.4" y="515.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="716.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.14%)</title><rect x="717.7" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.14%)</title><rect x="717.7" y="531.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="720.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.24%)</title><rect x="719.4" y="563.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.24%)</title><rect x="719.4" y="547.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.24%)</title><rect x="719.4" y="531.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="719.4" y="515.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="722.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.14%)</title><rect x="720.5" y="515.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.5" y="526.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="720.5" y="499.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="723.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (264 samples, 4.21%)</title><rect x="722.2" y="579.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.2" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (264 samples, 4.21%)</title><rect x="722.2" y="563.0" width="49.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.2" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (264 samples, 4.21%)</title><rect x="722.2" y="547.0" width="49.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.2" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (211 samples, 3.36%)</title><rect x="722.2" y="531.0" width="39.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.2" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (211 samples, 3.36%)</title><rect x="722.2" y="515.0" width="39.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.2" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (43 samples, 0.69%)</title><rect x="722.2" y="499.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.38%)</title><rect x="722.2" y="483.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (24 samples, 0.38%)</title><rect x="722.2" y="467.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.38%)</title><rect x="722.2" y="451.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (24 samples, 0.38%)</title><rect x="722.2" y="435.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (24 samples, 0.38%)</title><rect x="722.2" y="419.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.38%)</title><rect x="722.2" y="403.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.2" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.38%)</title><rect x="722.2" y="387.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="725.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (19 samples, 0.30%)</title><rect x="726.7" y="483.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (19 samples, 0.30%)</title><rect x="726.7" y="467.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.30%)</title><rect x="726.7" y="451.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.7" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.30%)</title><rect x="726.7" y="435.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (164 samples, 2.62%)</title><rect x="730.3" y="499.0" width="30.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.3" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (54 samples, 0.86%)</title><rect x="730.3" y="483.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.33%)</title><rect x="730.3" y="467.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.3" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="730.3" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="733.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (19 samples, 0.30%)</title><rect x="730.7" y="451.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.7" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.06%)</title><rect x="730.7" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="733.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.05%)</title><rect x="731.4" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.05%)</title><rect x="731.4" y="419.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="734.4" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.10%)</title><rect x="732.0" y="435.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="735.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.10%)</title><rect x="733.1" y="435.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.10%)</title><rect x="733.1" y="419.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (33 samples, 0.53%)</title><rect x="734.3" y="467.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.10%)</title><rect x="734.3" y="451.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="737.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.43%)</title><rect x="735.4" y="451.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.43%)</title><rect x="735.4" y="435.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (27 samples, 0.43%)</title><rect x="735.4" y="419.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.43%)</title><rect x="735.4" y="403.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (27 samples, 0.43%)</title><rect x="735.4" y="387.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (27 samples, 0.43%)</title><rect x="735.4" y="371.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.43%)</title><rect x="735.4" y="355.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.43%)</title><rect x="735.4" y="339.0" width="5.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="738.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (110 samples, 1.75%)</title><rect x="740.5" y="483.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.16%)</title><rect x="740.5" y="467.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.22%)</title><rect x="742.3" y="467.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.22%)</title><rect x="742.3" y="451.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.22%)</title><rect x="742.3" y="435.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.22%)</title><rect x="742.3" y="419.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.22%)</title><rect x="742.3" y="403.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.22%)</title><rect x="742.3" y="387.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="745.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="745.0" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="745.0" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="748.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (82 samples, 1.31%)</title><rect x="745.7" y="467.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (31 samples, 0.49%)</title><rect x="745.7" y="451.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (19 samples, 0.30%)</title><rect x="745.7" y="435.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.7" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.05%)</title><rect x="745.7" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="748.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16 samples, 0.26%)</title><rect x="746.3" y="419.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.3" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.06%)</title><rect x="746.3" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="749.3" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="747.2" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="750.2" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.11%)</title><rect x="748.0" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.11%)</title><rect x="748.0" y="387.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="751.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.19%)</title><rect x="749.3" y="435.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.3" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (12 samples, 0.19%)</title><rect x="749.3" y="419.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="752.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (51 samples, 0.81%)</title><rect x="751.6" y="451.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.6" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.11%)</title><rect x="751.6" y="435.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="754.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.26%)</title><rect x="752.9" y="435.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.26%)</title><rect x="752.9" y="419.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.26%)</title><rect x="752.9" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.26%)</title><rect x="752.9" y="387.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.26%)</title><rect x="752.9" y="371.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.26%)</title><rect x="752.9" y="355.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="755.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="755.9" y="435.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.13%)</title><rect x="755.9" y="419.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="758.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (20 samples, 0.32%)</title><rect x="757.4" y="435.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.06%)</title><rect x="757.4" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (4 samples, 0.06%)</title><rect x="757.4" y="403.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="760.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="758.2" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.08%)</title><rect x="758.2" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="761.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.18%)</title><rect x="759.1" y="419.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.18%)</title><rect x="759.1" y="403.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.18%)</title><rect x="759.1" y="387.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (11 samples, 0.18%)</title><rect x="759.1" y="371.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="762.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.06%)</title><rect x="761.2" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="761.2" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.2" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.06%)</title><rect x="761.2" y="467.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="764.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (53 samples, 0.85%)</title><rect x="761.9" y="531.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.9" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="761.9" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="764.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (20 samples, 0.32%)</title><rect x="762.3" y="515.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (20 samples, 0.32%)</title><rect x="762.3" y="499.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.32%)</title><rect x="762.3" y="483.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.11%)</title><rect x="762.3" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="762.3" y="451.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="765.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.21%)</title><rect x="763.6" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.21%)</title><rect x="763.6" y="451.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.6" y="462.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.21%)</title><rect x="763.6" y="435.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="766.6" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.10%)</title><rect x="766.1" y="515.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="769.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.40%)</title><rect x="767.2" y="515.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.2" y="526.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.21%)</title><rect x="767.2" y="499.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="770.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.08%)</title><rect x="769.6" y="499.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="772.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="770.6" y="499.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="773.6" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13382] (317 samples, 5.06%)</title><rect x="771.9" y="675.0" width="59.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="774.9" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (317 samples, 5.06%)</title><rect x="771.9" y="659.0" width="59.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.9" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (317 samples, 5.06%)</title><rect x="771.9" y="643.0" width="59.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.9" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (317 samples, 5.06%)</title><rect x="771.9" y="627.0" width="59.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.9" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.14%)</title><rect x="771.9" y="611.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.14%)</title><rect x="771.9" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.14%)</title><rect x="771.9" y="579.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.14%)</title><rect x="771.9" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.14%)</title><rect x="771.9" y="547.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (308 samples, 4.91%)</title><rect x="773.6" y="611.0" width="57.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.6" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (308 samples, 4.91%)</title><rect x="773.6" y="595.0" width="57.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.6" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 0.88%)</title><rect x="773.6" y="579.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.61%)</title><rect x="773.6" y="563.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (25 samples, 0.40%)</title><rect x="773.6" y="547.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.6" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (25 samples, 0.40%)</title><rect x="773.6" y="531.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.6" y="542.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.38%)</title><rect x="773.6" y="515.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="776.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.21%)</title><rect x="778.3" y="547.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.3" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13 samples, 0.21%)</title><rect x="778.3" y="531.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="781.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.27%)</title><rect x="780.7" y="563.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.27%)</title><rect x="780.7" y="547.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.27%)</title><rect x="780.7" y="531.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="780.7" y="515.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="783.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.18%)</title><rect x="781.9" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.9" y="526.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.18%)</title><rect x="781.9" y="499.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="784.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (253 samples, 4.03%)</title><rect x="783.9" y="579.0" width="47.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.9" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (253 samples, 4.03%)</title><rect x="783.9" y="563.0" width="47.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.9" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (253 samples, 4.03%)</title><rect x="783.9" y="547.0" width="47.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.9" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (209 samples, 3.33%)</title><rect x="783.9" y="531.0" width="39.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.9" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (209 samples, 3.33%)</title><rect x="783.9" y="515.0" width="39.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.9" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (43 samples, 0.69%)</title><rect x="783.9" y="499.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.35%)</title><rect x="783.9" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (22 samples, 0.35%)</title><rect x="783.9" y="467.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.35%)</title><rect x="783.9" y="451.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (22 samples, 0.35%)</title><rect x="783.9" y="435.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (22 samples, 0.35%)</title><rect x="783.9" y="419.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.35%)</title><rect x="783.9" y="403.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.9" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.35%)</title><rect x="783.9" y="387.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="786.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.33%)</title><rect x="788.1" y="483.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.33%)</title><rect x="788.1" y="467.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.33%)</title><rect x="788.1" y="451.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.1" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.33%)</title><rect x="788.1" y="435.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (153 samples, 2.44%)</title><rect x="792.0" y="499.0" width="28.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.0" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (55 samples, 0.88%)</title><rect x="792.0" y="483.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (20 samples, 0.32%)</title><rect x="792.0" y="467.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.0" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.10%)</title><rect x="792.0" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="795.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.22%)</title><rect x="793.2" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.2" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="793.2" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="796.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.08%)</title><rect x="793.5" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.5" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.08%)</title><rect x="793.5" y="419.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="796.5" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="794.5" y="435.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="797.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="795.2" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="795.2" y="419.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="798.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.56%)</title><rect x="795.8" y="467.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.8" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.13%)</title><rect x="795.8" y="451.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="798.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.43%)</title><rect x="797.3" y="451.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.43%)</title><rect x="797.3" y="435.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (27 samples, 0.43%)</title><rect x="797.3" y="419.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.43%)</title><rect x="797.3" y="403.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (27 samples, 0.43%)</title><rect x="797.3" y="387.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (27 samples, 0.43%)</title><rect x="797.3" y="371.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.43%)</title><rect x="797.3" y="355.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.43%)</title><rect x="797.3" y="339.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="800.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (98 samples, 1.56%)</title><rect x="802.4" y="483.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.11%)</title><rect x="802.4" y="467.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="805.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.14%)</title><rect x="803.7" y="467.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.14%)</title><rect x="803.7" y="451.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.14%)</title><rect x="803.7" y="435.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.14%)</title><rect x="803.7" y="419.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.14%)</title><rect x="803.7" y="403.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.14%)</title><rect x="803.7" y="387.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="806.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.10%)</title><rect x="805.4" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.10%)</title><rect x="805.4" y="451.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="808.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (76 samples, 1.21%)</title><rect x="806.5" y="467.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (31 samples, 0.49%)</title><rect x="806.7" y="451.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.38%)</title><rect x="806.7" y="435.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.7" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.06%)</title><rect x="806.7" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="809.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.32%)</title><rect x="807.5" y="419.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.5" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.08%)</title><rect x="807.5" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="810.5" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.16%)</title><rect x="808.4" y="403.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="811.4" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.08%)</title><rect x="810.3" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="810.3" y="387.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="813.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.11%)</title><rect x="811.2" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.2" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.11%)</title><rect x="811.2" y="419.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="814.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (44 samples, 0.70%)</title><rect x="812.5" y="451.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.13%)</title><rect x="812.5" y="435.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="815.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="814.0" y="435.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="814.0" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="814.0" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="814.0" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.18%)</title><rect x="814.0" y="371.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.18%)</title><rect x="814.0" y="355.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="817.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="816.1" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="816.1" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="819.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (21 samples, 0.33%)</title><rect x="816.9" y="435.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (2 samples, 0.03%)</title><rect x="816.9" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (2 samples, 0.03%)</title><rect x="816.9" y="403.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="819.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.18%)</title><rect x="817.2" y="419.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (11 samples, 0.18%)</title><rect x="817.2" y="403.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="820.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.13%)</title><rect x="819.3" y="419.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.13%)</title><rect x="819.3" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.13%)</title><rect x="819.3" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.13%)</title><rect x="819.3" y="371.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="822.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (13 samples, 0.21%)</title><rect x="820.8" y="499.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.21%)</title><rect x="820.8" y="483.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.8" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.21%)</title><rect x="820.8" y="467.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="823.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (44 samples, 0.70%)</title><rect x="823.3" y="531.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.3" y="542.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="823.3" y="515.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="826.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (17 samples, 0.27%)</title><rect x="824.2" y="515.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (17 samples, 0.27%)</title><rect x="824.2" y="499.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.27%)</title><rect x="824.2" y="483.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.11%)</title><rect x="824.2" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="824.2" y="451.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="827.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.16%)</title><rect x="825.5" y="467.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.16%)</title><rect x="825.5" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.5" y="462.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="825.5" y="435.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="828.5" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.06%)</title><rect x="827.4" y="515.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="830.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.29%)</title><rect x="828.2" y="515.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.2" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="828.2" y="499.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="831.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.16%)</title><rect x="828.7" y="499.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="831.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="830.6" y="499.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="833.6" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13383] (316 samples, 5.04%)</title><rect x="831.5" y="675.0" width="59.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="834.5" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (316 samples, 5.04%)</title><rect x="831.5" y="659.0" width="59.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.5" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (316 samples, 5.04%)</title><rect x="831.5" y="643.0" width="59.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.5" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (316 samples, 5.04%)</title><rect x="831.5" y="627.0" width="59.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.5" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.08%)</title><rect x="831.5" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.08%)</title><rect x="831.5" y="595.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.08%)</title><rect x="831.5" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.08%)</title><rect x="831.5" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.08%)</title><rect x="831.5" y="547.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="834.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (311 samples, 4.96%)</title><rect x="832.5" y="611.0" width="58.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.5" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (311 samples, 4.96%)</title><rect x="832.5" y="595.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.5" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.77%)</title><rect x="832.5" y="579.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 0.53%)</title><rect x="832.5" y="563.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.30%)</title><rect x="832.5" y="547.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.30%)</title><rect x="832.5" y="531.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.5" y="542.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.29%)</title><rect x="832.5" y="515.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="835.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.22%)</title><rect x="836.1" y="547.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.1" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.22%)</title><rect x="836.1" y="531.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="839.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.24%)</title><rect x="838.7" y="563.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.24%)</title><rect x="838.7" y="547.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.24%)</title><rect x="838.7" y="531.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="838.7" y="515.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="841.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.16%)</title><rect x="839.6" y="515.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.6" y="526.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="839.6" y="499.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="842.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (263 samples, 4.19%)</title><rect x="841.5" y="579.0" width="49.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.5" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (263 samples, 4.19%)</title><rect x="841.5" y="563.0" width="49.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.5" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (263 samples, 4.19%)</title><rect x="841.5" y="547.0" width="49.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.5" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (205 samples, 3.27%)</title><rect x="841.5" y="531.0" width="38.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.5" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (205 samples, 3.27%)</title><rect x="841.5" y="515.0" width="38.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.5" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.51%)</title><rect x="841.5" y="499.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.21%)</title><rect x="841.5" y="483.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (13 samples, 0.21%)</title><rect x="841.5" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.21%)</title><rect x="841.5" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (13 samples, 0.21%)</title><rect x="841.5" y="435.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (13 samples, 0.21%)</title><rect x="841.5" y="419.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.21%)</title><rect x="841.5" y="403.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.5" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.21%)</title><rect x="841.5" y="387.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="844.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (19 samples, 0.30%)</title><rect x="844.0" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (19 samples, 0.30%)</title><rect x="844.0" y="467.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.30%)</title><rect x="844.0" y="451.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.0" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.30%)</title><rect x="844.0" y="435.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="847.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (158 samples, 2.52%)</title><rect x="847.5" y="499.0" width="29.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.5" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (46 samples, 0.73%)</title><rect x="847.5" y="483.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (20 samples, 0.32%)</title><rect x="847.5" y="467.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.5" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.10%)</title><rect x="847.5" y="451.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="850.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.22%)</title><rect x="848.7" y="451.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.7" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="848.7" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="851.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.11%)</title><rect x="849.2" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.2" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.11%)</title><rect x="849.2" y="419.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="852.2" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.05%)</title><rect x="850.5" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="853.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (26 samples, 0.41%)</title><rect x="851.3" y="467.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.10%)</title><rect x="851.3" y="451.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="854.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.32%)</title><rect x="852.4" y="451.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.32%)</title><rect x="852.4" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (20 samples, 0.32%)</title><rect x="852.4" y="419.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.32%)</title><rect x="852.4" y="403.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (20 samples, 0.32%)</title><rect x="852.4" y="387.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (20 samples, 0.32%)</title><rect x="852.4" y="371.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.32%)</title><rect x="852.4" y="355.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.32%)</title><rect x="852.4" y="339.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="855.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (112 samples, 1.79%)</title><rect x="856.2" y="483.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.2" y="494.0">r..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="856.2" y="467.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="859.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.26%)</title><rect x="856.8" y="467.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.26%)</title><rect x="856.8" y="451.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.26%)</title><rect x="856.8" y="435.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.26%)</title><rect x="856.8" y="419.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.26%)</title><rect x="856.8" y="403.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.26%)</title><rect x="856.8" y="387.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="859.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.11%)</title><rect x="859.8" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.11%)</title><rect x="859.8" y="451.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="862.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (86 samples, 1.37%)</title><rect x="861.1" y="467.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (37 samples, 0.59%)</title><rect x="861.1" y="451.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.43%)</title><rect x="861.1" y="435.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.41%)</title><rect x="861.3" y="419.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.3" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.11%)</title><rect x="861.3" y="403.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="864.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.10%)</title><rect x="862.6" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.10%)</title><rect x="862.6" y="387.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="865.6" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.11%)</title><rect x="863.7" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="866.7" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.10%)</title><rect x="865.0" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.10%)</title><rect x="865.0" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="868.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.16%)</title><rect x="866.2" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.2" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (10 samples, 0.16%)</title><rect x="866.2" y="419.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="869.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (49 samples, 0.78%)</title><rect x="868.0" y="451.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.06%)</title><rect x="868.0" y="435.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="871.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (15 samples, 0.24%)</title><rect x="868.8" y="435.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (15 samples, 0.24%)</title><rect x="868.8" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.24%)</title><rect x="868.8" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.24%)</title><rect x="868.8" y="387.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.24%)</title><rect x="868.8" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.24%)</title><rect x="868.8" y="355.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="871.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="871.6" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.08%)</title><rect x="871.6" y="419.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="874.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (25 samples, 0.40%)</title><rect x="872.6" y="435.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.08%)</title><rect x="872.6" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.08%)</title><rect x="872.6" y="403.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="875.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.10%)</title><rect x="873.5" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.10%)</title><rect x="873.5" y="403.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="876.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.22%)</title><rect x="874.6" y="419.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.22%)</title><rect x="874.6" y="403.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.22%)</title><rect x="874.6" y="387.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 0.22%)</title><rect x="874.6" y="371.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="877.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (15 samples, 0.24%)</title><rect x="877.3" y="499.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.24%)</title><rect x="877.3" y="483.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.3" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.24%)</title><rect x="877.3" y="467.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="880.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (58 samples, 0.92%)</title><rect x="880.1" y="531.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.1" y="542.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="880.1" y="515.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="883.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (13 samples, 0.21%)</title><rect x="882.0" y="515.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (13 samples, 0.21%)</title><rect x="882.0" y="499.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.21%)</title><rect x="882.0" y="483.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.10%)</title><rect x="882.0" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="882.0" y="451.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.11%)</title><rect x="883.1" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.11%)</title><rect x="883.1" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.1" y="462.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="883.1" y="435.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="886.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.06%)</title><rect x="884.4" y="515.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="887.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 0.49%)</title><rect x="885.2" y="515.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.2" y="526.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.29%)</title><rect x="885.2" y="499.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="888.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.14%)</title><rect x="888.6" y="499.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="891.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="890.2" y="499.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="893.2" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13384] (315 samples, 5.02%)</title><rect x="891.0" y="675.0" width="59.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="894.0" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (315 samples, 5.02%)</title><rect x="891.0" y="659.0" width="59.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.0" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (315 samples, 5.02%)</title><rect x="891.0" y="643.0" width="59.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.0" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (315 samples, 5.02%)</title><rect x="891.0" y="627.0" width="59.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.0" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.22%)</title><rect x="891.0" y="611.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (14 samples, 0.22%)</title><rect x="891.0" y="595.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.22%)</title><rect x="891.0" y="579.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.22%)</title><rect x="891.0" y="563.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.22%)</title><rect x="891.0" y="547.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="894.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (301 samples, 4.80%)</title><rect x="893.6" y="611.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.6" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (301 samples, 4.80%)</title><rect x="893.6" y="595.0" width="56.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.6" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 0.83%)</title><rect x="893.6" y="579.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (41 samples, 0.65%)</title><rect x="893.6" y="563.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.51%)</title><rect x="893.6" y="547.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.6" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (32 samples, 0.51%)</title><rect x="893.6" y="531.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.6" y="542.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.49%)</title><rect x="893.6" y="515.0" width="5.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="896.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.14%)</title><rect x="899.7" y="547.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.14%)</title><rect x="899.7" y="531.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="902.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.18%)</title><rect x="901.4" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.18%)</title><rect x="901.4" y="547.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.18%)</title><rect x="901.4" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="901.4" y="515.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="904.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.11%)</title><rect x="902.1" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.1" y="526.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="902.1" y="499.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="905.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (249 samples, 3.97%)</title><rect x="903.4" y="579.0" width="46.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.4" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (249 samples, 3.97%)</title><rect x="903.4" y="563.0" width="46.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.4" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (249 samples, 3.97%)</title><rect x="903.4" y="547.0" width="46.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.4" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (203 samples, 3.24%)</title><rect x="903.4" y="531.0" width="38.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.4" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (203 samples, 3.24%)</title><rect x="903.4" y="515.0" width="38.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.4" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (46 samples, 0.73%)</title><rect x="903.4" y="499.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.26%)</title><rect x="903.4" y="483.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (16 samples, 0.26%)</title><rect x="903.4" y="467.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.26%)</title><rect x="903.4" y="451.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (16 samples, 0.26%)</title><rect x="903.4" y="435.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (16 samples, 0.26%)</title><rect x="903.4" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.26%)</title><rect x="903.4" y="403.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.4" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.26%)</title><rect x="903.4" y="387.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="906.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (30 samples, 0.48%)</title><rect x="906.4" y="483.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (30 samples, 0.48%)</title><rect x="906.4" y="467.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (30 samples, 0.48%)</title><rect x="906.4" y="451.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.4" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.48%)</title><rect x="906.4" y="435.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="909.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (148 samples, 2.36%)</title><rect x="912.1" y="499.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.1" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (45 samples, 0.72%)</title><rect x="912.1" y="483.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.37%)</title><rect x="912.1" y="467.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.1" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="912.1" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="915.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 0.33%)</title><rect x="912.5" y="451.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.5" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.08%)</title><rect x="912.5" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="915.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.08%)</title><rect x="913.4" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.08%)</title><rect x="913.4" y="419.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="916.4" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.11%)</title><rect x="914.3" y="435.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="917.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.06%)</title><rect x="915.7" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="915.7" y="419.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.35%)</title><rect x="916.4" y="467.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.4" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="916.4" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="919.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.32%)</title><rect x="916.8" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.32%)</title><rect x="916.8" y="435.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (20 samples, 0.32%)</title><rect x="916.8" y="419.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.32%)</title><rect x="916.8" y="403.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (20 samples, 0.32%)</title><rect x="916.8" y="387.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (20 samples, 0.32%)</title><rect x="916.8" y="371.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.32%)</title><rect x="916.8" y="355.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.32%)</title><rect x="916.8" y="339.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="919.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (103 samples, 1.64%)</title><rect x="920.5" y="483.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.10%)</title><rect x="920.5" y="467.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="923.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.22%)</title><rect x="921.7" y="467.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.22%)</title><rect x="921.7" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.22%)</title><rect x="921.7" y="435.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.22%)</title><rect x="921.7" y="419.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.22%)</title><rect x="921.7" y="403.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.22%)</title><rect x="921.7" y="387.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="924.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.06%)</title><rect x="924.3" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.06%)</title><rect x="924.3" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="927.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (79 samples, 1.26%)</title><rect x="925.1" y="467.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (42 samples, 0.67%)</title><rect x="925.1" y="451.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.48%)</title><rect x="925.1" y="435.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.1" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.05%)</title><rect x="925.1" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="928.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 0.43%)</title><rect x="925.6" y="419.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.6" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="925.6" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="928.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.10%)</title><rect x="926.2" y="403.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.10%)</title><rect x="926.2" y="387.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="929.2" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.08%)</title><rect x="927.3" y="403.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="930.3" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (13 samples, 0.21%)</title><rect x="928.3" y="403.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.21%)</title><rect x="928.3" y="387.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="931.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.19%)</title><rect x="930.7" y="435.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.7" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (12 samples, 0.19%)</title><rect x="930.7" y="419.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="933.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (37 samples, 0.59%)</title><rect x="933.0" y="451.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.08%)</title><rect x="933.0" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="936.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.13%)</title><rect x="933.9" y="435.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.13%)</title><rect x="933.9" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.13%)</title><rect x="933.9" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.13%)</title><rect x="933.9" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.13%)</title><rect x="933.9" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.13%)</title><rect x="933.9" y="355.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="936.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (23 samples, 0.37%)</title><rect x="935.6" y="435.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.08%)</title><rect x="935.6" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.08%)</title><rect x="935.6" y="403.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="938.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="936.5" y="419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.13%)</title><rect x="936.5" y="403.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="939.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.16%)</title><rect x="938.0" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.16%)</title><rect x="938.0" y="403.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.16%)</title><rect x="938.0" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.16%)</title><rect x="938.0" y="371.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="941.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (9 samples, 0.14%)</title><rect x="939.9" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.14%)</title><rect x="939.9" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.14%)</title><rect x="939.9" y="467.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="942.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (46 samples, 0.73%)</title><rect x="941.6" y="531.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.6" y="542.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="941.6" y="515.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="944.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (19 samples, 0.30%)</title><rect x="942.9" y="515.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (19 samples, 0.30%)</title><rect x="942.9" y="499.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.30%)</title><rect x="942.9" y="483.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.11%)</title><rect x="942.9" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="942.9" y="451.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="945.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.19%)</title><rect x="944.3" y="467.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.19%)</title><rect x="944.3" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.3" y="462.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.19%)</title><rect x="944.3" y="435.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="947.3" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.08%)</title><rect x="946.5" y="515.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="949.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.24%)</title><rect x="947.5" y="515.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.5" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="947.5" y="499.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="950.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="949.0" y="499.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="952.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="949.7" y="499.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="952.7" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13385] (322 samples, 5.13%)</title><rect x="950.3" y="675.0" width="60.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="953.3" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (322 samples, 5.13%)</title><rect x="950.3" y="659.0" width="60.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.3" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (322 samples, 5.13%)</title><rect x="950.3" y="643.0" width="60.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.3" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (322 samples, 5.13%)</title><rect x="950.3" y="627.0" width="60.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.3" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.10%)</title><rect x="950.3" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.10%)</title><rect x="950.3" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.10%)</title><rect x="950.3" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.10%)</title><rect x="950.3" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.10%)</title><rect x="950.3" y="547.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="953.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (316 samples, 5.04%)</title><rect x="951.4" y="611.0" width="59.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.4" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (316 samples, 5.04%)</title><rect x="951.4" y="595.0" width="59.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.4" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 0.88%)</title><rect x="951.4" y="579.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 0.62%)</title><rect x="951.4" y="563.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.53%)</title><rect x="951.4" y="547.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.53%)</title><rect x="951.4" y="531.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.4" y="542.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.53%)</title><rect x="951.4" y="515.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="954.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.10%)</title><rect x="957.6" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.6" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.10%)</title><rect x="957.6" y="531.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="960.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.26%)</title><rect x="958.7" y="563.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.26%)</title><rect x="958.7" y="547.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.26%)</title><rect x="958.7" y="531.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="958.7" y="515.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="961.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.16%)</title><rect x="959.9" y="515.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.9" y="526.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="959.9" y="499.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="962.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (261 samples, 4.16%)</title><rect x="961.8" y="579.0" width="49.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.8" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (261 samples, 4.16%)</title><rect x="961.8" y="563.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.8" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (261 samples, 4.16%)</title><rect x="961.8" y="547.0" width="49.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.8" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (214 samples, 3.41%)</title><rect x="961.8" y="531.0" width="40.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.8" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (214 samples, 3.41%)</title><rect x="961.8" y="515.0" width="40.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.8" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (43 samples, 0.69%)</title><rect x="961.8" y="499.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.29%)</title><rect x="961.8" y="483.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (18 samples, 0.29%)</title><rect x="961.8" y="467.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="964.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.29%)</title><rect x="961.8" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (18 samples, 0.29%)</title><rect x="961.8" y="435.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (18 samples, 0.29%)</title><rect x="961.8" y="419.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.29%)</title><rect x="961.8" y="403.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.29%)</title><rect x="961.8" y="387.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="964.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (25 samples, 0.40%)</title><rect x="965.1" y="483.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (25 samples, 0.40%)</title><rect x="965.1" y="467.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.40%)</title><rect x="965.1" y="451.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.1" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.40%)</title><rect x="965.1" y="435.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (161 samples, 2.57%)</title><rect x="969.8" y="499.0" width="30.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.8" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (62 samples, 0.99%)</title><rect x="969.8" y="483.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (33 samples, 0.53%)</title><rect x="969.8" y="467.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.8" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="969.8" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="972.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (31 samples, 0.49%)</title><rect x="970.2" y="451.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.2" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.06%)</title><rect x="970.2" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="973.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (14 samples, 0.22%)</title><rect x="971.0" y="435.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.0" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (14 samples, 0.22%)</title><rect x="971.0" y="419.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="974.0" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="973.6" y="435.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="976.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (9 samples, 0.14%)</title><rect x="974.4" y="435.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="977.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.14%)</title><rect x="974.4" y="419.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="977.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.46%)</title><rect x="976.1" y="467.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.1" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.06%)</title><rect x="976.1" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="979.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.40%)</title><rect x="976.8" y="451.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.40%)</title><rect x="976.8" y="435.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (25 samples, 0.40%)</title><rect x="976.8" y="419.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.40%)</title><rect x="976.8" y="403.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (25 samples, 0.40%)</title><rect x="976.8" y="387.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (25 samples, 0.40%)</title><rect x="976.8" y="371.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.40%)</title><rect x="976.8" y="355.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.40%)</title><rect x="976.8" y="339.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="979.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (99 samples, 1.58%)</title><rect x="981.5" y="483.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.11%)</title><rect x="981.5" y="467.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="984.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.21%)</title><rect x="982.8" y="467.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.21%)</title><rect x="982.8" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.21%)</title><rect x="982.8" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.21%)</title><rect x="982.8" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.21%)</title><rect x="982.8" y="403.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.21%)</title><rect x="982.8" y="387.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="985.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="985.3" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.08%)</title><rect x="985.3" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="988.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (74 samples, 1.18%)</title><rect x="986.2" y="467.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (24 samples, 0.38%)</title><rect x="986.2" y="451.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.33%)</title><rect x="986.2" y="435.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.2" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (7 samples, 0.11%)</title><rect x="986.2" y="419.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="989.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.22%)</title><rect x="987.5" y="419.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.5" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="987.5" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="990.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.08%)</title><rect x="987.9" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.08%)</title><rect x="987.9" y="387.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="990.9" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="988.8" y="403.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="991.8" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="989.6" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="989.6" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="992.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.05%)</title><rect x="990.2" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.2" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.05%)</title><rect x="990.2" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="993.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (50 samples, 0.80%)</title><rect x="990.7" y="451.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.10%)</title><rect x="990.7" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="993.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="991.9" y="435.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="991.9" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="991.9" y="403.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="991.9" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.18%)</title><rect x="991.9" y="371.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.18%)</title><rect x="991.9" y="355.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="994.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.11%)</title><rect x="993.9" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.11%)</title><rect x="993.9" y="419.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="996.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (26 samples, 0.41%)</title><rect x="995.2" y="435.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.08%)</title><rect x="995.2" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.08%)</title><rect x="995.2" y="403.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="998.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="996.2" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.13%)</title><rect x="996.2" y="403.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="999.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="997.7" y="419.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="997.7" y="403.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="997.7" y="387.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (13 samples, 0.21%)</title><rect x="997.7" y="371.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1000.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.16%)</title><rect x="1000.1" y="499.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.16%)</title><rect x="1000.1" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.1" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.16%)</title><rect x="1000.1" y="467.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1003.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (47 samples, 0.75%)</title><rect x="1002.0" y="531.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="542.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="1002.0" y="515.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1005.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (15 samples, 0.24%)</title><rect x="1003.1" y="515.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (15 samples, 0.24%)</title><rect x="1003.1" y="499.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.24%)</title><rect x="1003.1" y="483.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.11%)</title><rect x="1003.1" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="1003.1" y="451.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1006.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.13%)</title><rect x="1004.5" y="467.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.13%)</title><rect x="1004.5" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.5" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="1004.5" y="435.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1007.5" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.06%)</title><rect x="1006.0" y="515.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1009.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.35%)</title><rect x="1006.7" y="515.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.7" y="526.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.18%)</title><rect x="1006.7" y="499.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1009.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="1008.8" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1011.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="1009.5" y="499.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1012.5" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13386] (318 samples, 5.07%)</title><rect x="1010.9" y="675.0" width="59.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1013.9" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (318 samples, 5.07%)</title><rect x="1010.9" y="659.0" width="59.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.9" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (318 samples, 5.07%)</title><rect x="1010.9" y="643.0" width="59.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.9" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (318 samples, 5.07%)</title><rect x="1010.9" y="627.0" width="59.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.9" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.13%)</title><rect x="1010.9" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.13%)</title><rect x="1010.9" y="595.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.13%)</title><rect x="1010.9" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.13%)</title><rect x="1010.9" y="563.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1013.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.13%)</title><rect x="1010.9" y="547.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1013.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (310 samples, 4.94%)</title><rect x="1012.4" y="611.0" width="58.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.4" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (310 samples, 4.94%)</title><rect x="1012.4" y="595.0" width="58.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.4" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.73%)</title><rect x="1012.4" y="579.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1015.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.43%)</title><rect x="1012.4" y="563.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.32%)</title><rect x="1012.4" y="547.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (20 samples, 0.32%)</title><rect x="1012.4" y="531.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.4" y="542.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.30%)</title><rect x="1012.4" y="515.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1015.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.11%)</title><rect x="1016.1" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1019.1" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.11%)</title><rect x="1016.1" y="531.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1019.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.30%)</title><rect x="1017.5" y="563.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.30%)</title><rect x="1017.5" y="547.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.30%)</title><rect x="1017.5" y="531.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="1017.5" y="515.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1020.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.22%)</title><rect x="1018.4" y="515.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.4" y="526.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.22%)</title><rect x="1018.4" y="499.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1021.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (264 samples, 4.21%)</title><rect x="1021.0" y="579.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.0" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (264 samples, 4.21%)</title><rect x="1021.0" y="563.0" width="49.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.0" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (264 samples, 4.21%)</title><rect x="1021.0" y="547.0" width="49.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.0" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (214 samples, 3.41%)</title><rect x="1021.0" y="531.0" width="40.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.0" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (214 samples, 3.41%)</title><rect x="1021.0" y="515.0" width="40.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.0" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.67%)</title><rect x="1021.0" y="499.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.33%)</title><rect x="1021.0" y="483.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 0.33%)</title><rect x="1021.0" y="467.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.33%)</title><rect x="1021.0" y="451.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.33%)</title><rect x="1021.0" y="435.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.33%)</title><rect x="1021.0" y="419.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.33%)</title><rect x="1021.0" y="403.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.33%)</title><rect x="1021.0" y="387.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1024.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.33%)</title><rect x="1025.0" y="483.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.33%)</title><rect x="1025.0" y="467.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1028.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.33%)</title><rect x="1025.0" y="451.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.0" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.33%)</title><rect x="1025.0" y="435.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1028.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (155 samples, 2.47%)</title><rect x="1028.9" y="499.0" width="29.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.9" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (43 samples, 0.69%)</title><rect x="1028.9" y="483.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.33%)</title><rect x="1028.9" y="467.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 0.33%)</title><rect x="1028.9" y="451.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.9" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.08%)</title><rect x="1028.9" y="435.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1031.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.05%)</title><rect x="1029.9" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.9" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.05%)</title><rect x="1029.9" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1032.9" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.06%)</title><rect x="1030.4" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1033.4" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (9 samples, 0.14%)</title><rect x="1031.2" y="435.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.14%)</title><rect x="1031.2" y="419.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1034.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.35%)</title><rect x="1032.9" y="467.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.9" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.11%)</title><rect x="1032.9" y="451.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1035.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.24%)</title><rect x="1034.2" y="451.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.24%)</title><rect x="1034.2" y="435.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (15 samples, 0.24%)</title><rect x="1034.2" y="419.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.24%)</title><rect x="1034.2" y="403.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (15 samples, 0.24%)</title><rect x="1034.2" y="387.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (15 samples, 0.24%)</title><rect x="1034.2" y="371.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.24%)</title><rect x="1034.2" y="355.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.24%)</title><rect x="1034.2" y="339.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1037.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (112 samples, 1.79%)</title><rect x="1037.0" y="483.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.0" y="494.0">r..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="1037.0" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1040.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.19%)</title><rect x="1037.4" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.19%)</title><rect x="1037.4" y="451.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.19%)</title><rect x="1037.4" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.19%)</title><rect x="1037.4" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.19%)</title><rect x="1037.4" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.19%)</title><rect x="1037.4" y="387.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1040.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="1039.7" y="467.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.13%)</title><rect x="1039.7" y="451.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1042.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (90 samples, 1.44%)</title><rect x="1041.2" y="467.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (35 samples, 0.56%)</title><rect x="1041.2" y="451.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 0.49%)</title><rect x="1041.2" y="435.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.2" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.06%)</title><rect x="1041.2" y="419.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1044.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 0.43%)</title><rect x="1041.9" y="419.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.9" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (10 samples, 0.16%)</title><rect x="1041.9" y="403.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1044.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.10%)</title><rect x="1043.8" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.10%)</title><rect x="1043.8" y="387.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1046.8" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.10%)</title><rect x="1044.9" y="403.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1047.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.08%)</title><rect x="1046.1" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="1046.1" y="387.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1049.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.06%)</title><rect x="1047.0" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.0" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.06%)</title><rect x="1047.0" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1050.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (55 samples, 0.88%)</title><rect x="1047.7" y="451.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.11%)</title><rect x="1047.7" y="435.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1050.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.21%)</title><rect x="1049.1" y="435.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.21%)</title><rect x="1049.1" y="419.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.21%)</title><rect x="1049.1" y="403.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.21%)</title><rect x="1049.1" y="387.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.21%)</title><rect x="1049.1" y="371.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.21%)</title><rect x="1049.1" y="355.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1052.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.16%)</title><rect x="1051.5" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (10 samples, 0.16%)</title><rect x="1051.5" y="419.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1054.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (25 samples, 0.40%)</title><rect x="1053.4" y="435.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.06%)</title><rect x="1053.4" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (4 samples, 0.06%)</title><rect x="1053.4" y="403.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1056.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.13%)</title><rect x="1054.1" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.13%)</title><rect x="1054.1" y="403.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1057.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="1055.6" y="419.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="1055.6" y="403.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.21%)</title><rect x="1055.6" y="387.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (13 samples, 0.21%)</title><rect x="1055.6" y="371.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1058.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (17 samples, 0.27%)</title><rect x="1058.1" y="499.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.27%)</title><rect x="1058.1" y="483.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.1" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.27%)</title><rect x="1058.1" y="467.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1061.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (50 samples, 0.80%)</title><rect x="1061.3" y="531.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.3" y="542.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="1061.3" y="515.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1064.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (19 samples, 0.30%)</title><rect x="1062.2" y="515.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (19 samples, 0.30%)</title><rect x="1062.2" y="499.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.30%)</title><rect x="1062.2" y="483.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.11%)</title><rect x="1062.2" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.11%)</title><rect x="1062.2" y="451.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1065.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.19%)</title><rect x="1063.6" y="467.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.19%)</title><rect x="1063.6" y="451.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.6" y="462.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.19%)</title><rect x="1063.6" y="435.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1066.6" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.10%)</title><rect x="1065.8" y="515.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1068.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.32%)</title><rect x="1066.9" y="515.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.9" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="1066.9" y="499.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1069.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.11%)</title><rect x="1068.4" y="499.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1071.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="1069.8" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1072.8" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13387] (321 samples, 5.12%)</title><rect x="1070.7" y="675.0" width="60.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1073.7" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (321 samples, 5.12%)</title><rect x="1070.7" y="659.0" width="60.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1073.7" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (321 samples, 5.12%)</title><rect x="1070.7" y="643.0" width="60.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.7" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (321 samples, 5.12%)</title><rect x="1070.7" y="627.0" width="60.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.7" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.14%)</title><rect x="1070.7" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.14%)</title><rect x="1070.7" y="595.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.14%)</title><rect x="1070.7" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.14%)</title><rect x="1070.7" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.14%)</title><rect x="1070.7" y="547.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1073.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (312 samples, 4.98%)</title><rect x="1072.4" y="611.0" width="58.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.4" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (312 samples, 4.98%)</title><rect x="1072.4" y="595.0" width="58.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.4" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (54 samples, 0.86%)</title><rect x="1072.4" y="579.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 0.56%)</title><rect x="1072.4" y="563.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.37%)</title><rect x="1072.4" y="547.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.37%)</title><rect x="1072.4" y="531.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.4" y="542.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.30%)</title><rect x="1072.4" y="515.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1075.4" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="1076.0" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1079.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.19%)</title><rect x="1076.7" y="547.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.19%)</title><rect x="1076.7" y="531.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1079.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.30%)</title><rect x="1079.0" y="563.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.30%)</title><rect x="1079.0" y="547.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.30%)</title><rect x="1079.0" y="531.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.16%)</title><rect x="1079.0" y="515.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1082.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.14%)</title><rect x="1080.9" y="515.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.9" y="526.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="1080.9" y="499.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1083.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (258 samples, 4.11%)</title><rect x="1082.6" y="579.0" width="48.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.6" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (258 samples, 4.11%)</title><rect x="1082.6" y="563.0" width="48.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.6" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (258 samples, 4.11%)</title><rect x="1082.6" y="547.0" width="48.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.6" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (208 samples, 3.32%)</title><rect x="1082.6" y="531.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.6" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (208 samples, 3.32%)</title><rect x="1082.6" y="515.0" width="39.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.6" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (48 samples, 0.77%)</title><rect x="1082.6" y="499.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.43%)</title><rect x="1082.6" y="483.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (27 samples, 0.43%)</title><rect x="1082.6" y="467.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.43%)</title><rect x="1082.6" y="451.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (27 samples, 0.43%)</title><rect x="1082.6" y="435.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (27 samples, 0.43%)</title><rect x="1082.6" y="419.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.43%)</title><rect x="1082.6" y="403.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.43%)</title><rect x="1082.6" y="387.0" width="5.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1085.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.33%)</title><rect x="1087.6" y="483.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.33%)</title><rect x="1087.6" y="467.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.33%)</title><rect x="1087.6" y="451.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.6" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.33%)</title><rect x="1087.6" y="435.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1090.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (153 samples, 2.44%)</title><rect x="1091.6" y="499.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.6" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (44 samples, 0.70%)</title><rect x="1091.6" y="483.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.33%)</title><rect x="1091.6" y="467.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.6" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.06%)</title><rect x="1091.6" y="451.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1094.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.27%)</title><rect x="1092.3" y="451.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.3" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="1092.3" y="435.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1095.3" y="446.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.11%)</title><rect x="1093.1" y="435.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1096.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.10%)</title><rect x="1094.4" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.10%)</title><rect x="1094.4" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1097.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (23 samples, 0.37%)</title><rect x="1095.5" y="467.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.06%)</title><rect x="1095.5" y="451.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1098.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (19 samples, 0.30%)</title><rect x="1096.3" y="451.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.30%)</title><rect x="1096.3" y="435.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (19 samples, 0.30%)</title><rect x="1096.3" y="419.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.30%)</title><rect x="1096.3" y="403.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (19 samples, 0.30%)</title><rect x="1096.3" y="387.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (19 samples, 0.30%)</title><rect x="1096.3" y="371.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.30%)</title><rect x="1096.3" y="355.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.30%)</title><rect x="1096.3" y="339.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1099.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (109 samples, 1.74%)</title><rect x="1099.9" y="483.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.10%)</title><rect x="1099.9" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1102.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="1101.0" y="467.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.18%)</title><rect x="1101.0" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="1101.0" y="435.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.18%)</title><rect x="1101.0" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.18%)</title><rect x="1101.0" y="403.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.18%)</title><rect x="1101.0" y="387.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1104.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.11%)</title><rect x="1103.1" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.11%)</title><rect x="1103.1" y="451.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1106.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (85 samples, 1.36%)</title><rect x="1104.4" y="467.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (46 samples, 0.73%)</title><rect x="1104.4" y="451.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (38 samples, 0.61%)</title><rect x="1104.4" y="435.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.10%)</title><rect x="1104.4" y="419.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1107.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (32 samples, 0.51%)</title><rect x="1105.5" y="419.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.5" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.06%)</title><rect x="1105.5" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1108.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (11 samples, 0.18%)</title><rect x="1106.3" y="403.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (11 samples, 0.18%)</title><rect x="1106.3" y="387.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1109.3" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.11%)</title><rect x="1108.3" y="403.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1111.3" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (10 samples, 0.16%)</title><rect x="1109.7" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.16%)</title><rect x="1109.7" y="387.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1112.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.13%)</title><rect x="1111.5" y="435.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.5" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.13%)</title><rect x="1111.5" y="419.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1114.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (39 samples, 0.62%)</title><rect x="1113.0" y="451.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.08%)</title><rect x="1113.0" y="435.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1116.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="1114.0" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="1114.0" y="419.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.16%)</title><rect x="1114.0" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.16%)</title><rect x="1114.0" y="387.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.16%)</title><rect x="1114.0" y="371.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.16%)</title><rect x="1114.0" y="355.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1117.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.10%)</title><rect x="1115.9" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.10%)</title><rect x="1115.9" y="419.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1118.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (18 samples, 0.29%)</title><rect x="1117.0" y="435.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.05%)</title><rect x="1117.0" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (3 samples, 0.05%)</title><rect x="1117.0" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1120.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.10%)</title><rect x="1117.6" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.10%)</title><rect x="1117.6" y="403.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1120.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.14%)</title><rect x="1118.7" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.14%)</title><rect x="1118.7" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.14%)</title><rect x="1118.7" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.14%)</title><rect x="1118.7" y="371.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1121.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (7 samples, 0.11%)</title><rect x="1120.4" y="499.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.11%)</title><rect x="1120.4" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.11%)</title><rect x="1120.4" y="467.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1123.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (50 samples, 0.80%)</title><rect x="1121.7" y="531.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.7" y="542.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="1121.7" y="515.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1124.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (17 samples, 0.27%)</title><rect x="1122.6" y="515.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (17 samples, 0.27%)</title><rect x="1122.6" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.27%)</title><rect x="1122.6" y="483.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.13%)</title><rect x="1122.6" y="467.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.13%)</title><rect x="1122.6" y="451.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1125.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.14%)</title><rect x="1124.1" y="467.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.14%)</title><rect x="1124.1" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.1" y="462.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="1124.1" y="435.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1127.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.13%)</title><rect x="1125.8" y="515.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1128.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.32%)</title><rect x="1127.3" y="515.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.3" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.13%)</title><rect x="1127.3" y="499.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1130.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.10%)</title><rect x="1128.8" y="499.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1131.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.10%)</title><rect x="1130.0" y="499.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1133.0" y="510.0"></text>
</g>
<g>
<title>[asyncWorker tid=13388] (313 samples, 4.99%)</title><rect x="1131.1" y="675.0" width="58.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1134.1" y="686.0">[async..</text>
</g>
<g>
<title>java/lang/Thread.run (313 samples, 4.99%)</title><rect x="1131.1" y="659.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.1" y="670.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (313 samples, 4.99%)</title><rect x="1131.1" y="643.0" width="58.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.1" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (313 samples, 4.99%)</title><rect x="1131.1" y="627.0" width="58.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.1" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.10%)</title><rect x="1131.1" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.10%)</title><rect x="1131.1" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.10%)</title><rect x="1131.1" y="579.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.10%)</title><rect x="1131.1" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.10%)</title><rect x="1131.1" y="547.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1134.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (307 samples, 4.90%)</title><rect x="1132.2" y="611.0" width="57.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.2" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (307 samples, 4.90%)</title><rect x="1132.2" y="595.0" width="57.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.2" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (68 samples, 1.08%)</title><rect x="1132.2" y="579.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 0.85%)</title><rect x="1132.2" y="563.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (48 samples, 0.77%)</title><rect x="1132.2" y="547.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (48 samples, 0.77%)</title><rect x="1132.2" y="531.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.2" y="542.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.73%)</title><rect x="1132.2" y="515.0" width="8.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1135.2" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1140.9" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1143.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.08%)</title><rect x="1141.3" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.3" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.08%)</title><rect x="1141.3" y="531.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1144.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.24%)</title><rect x="1142.2" y="563.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.24%)</title><rect x="1142.2" y="547.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.24%)</title><rect x="1142.2" y="531.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.13%)</title><rect x="1142.2" y="515.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1145.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.11%)</title><rect x="1143.7" y="515.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.7" y="526.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="1143.7" y="499.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1146.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (239 samples, 3.81%)</title><rect x="1145.0" y="579.0" width="45.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.0" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (239 samples, 3.81%)</title><rect x="1145.0" y="563.0" width="45.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.0" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (239 samples, 3.81%)</title><rect x="1145.0" y="547.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.0" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (209 samples, 3.33%)</title><rect x="1145.0" y="531.0" width="39.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.0" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (209 samples, 3.33%)</title><rect x="1145.0" y="515.0" width="39.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.0" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (58 samples, 0.92%)</title><rect x="1145.0" y="499.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.27%)</title><rect x="1145.0" y="483.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (17 samples, 0.27%)</title><rect x="1145.0" y="467.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.27%)</title><rect x="1145.0" y="451.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (17 samples, 0.27%)</title><rect x="1145.0" y="435.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (17 samples, 0.27%)</title><rect x="1145.0" y="419.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.27%)</title><rect x="1145.0" y="403.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.27%)</title><rect x="1145.0" y="387.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1148.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (41 samples, 0.65%)</title><rect x="1148.2" y="483.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1151.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (41 samples, 0.65%)</title><rect x="1148.2" y="467.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (41 samples, 0.65%)</title><rect x="1148.2" y="451.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.2" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (41 samples, 0.65%)</title><rect x="1148.2" y="435.0" width="7.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1151.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (146 samples, 2.33%)</title><rect x="1155.9" y="499.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.9" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (37 samples, 0.59%)</title><rect x="1155.9" y="483.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (19 samples, 0.30%)</title><rect x="1155.9" y="467.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.9" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="1155.9" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1158.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.27%)</title><rect x="1156.3" y="451.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.3" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.11%)</title><rect x="1156.3" y="435.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1159.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.08%)</title><rect x="1157.6" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.6" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.08%)</title><rect x="1157.6" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1160.6" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.05%)</title><rect x="1158.6" y="435.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1161.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1159.1" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="1159.1" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1162.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.29%)</title><rect x="1159.5" y="467.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.5" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="1159.5" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1162.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.26%)</title><rect x="1159.9" y="451.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.26%)</title><rect x="1159.9" y="435.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (16 samples, 0.26%)</title><rect x="1159.9" y="419.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.26%)</title><rect x="1159.9" y="403.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (16 samples, 0.26%)</title><rect x="1159.9" y="387.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (16 samples, 0.26%)</title><rect x="1159.9" y="371.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.26%)</title><rect x="1159.9" y="355.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.26%)</title><rect x="1159.9" y="339.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1162.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (109 samples, 1.74%)</title><rect x="1162.9" y="483.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.18%)</title><rect x="1162.9" y="467.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1165.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="1165.0" y="467.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="1165.0" y="451.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.16%)</title><rect x="1165.0" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.16%)</title><rect x="1165.0" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.16%)</title><rect x="1165.0" y="403.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.16%)</title><rect x="1165.0" y="387.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1168.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="1166.9" y="467.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.08%)</title><rect x="1166.9" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1169.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (83 samples, 1.32%)</title><rect x="1167.8" y="467.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (48 samples, 0.77%)</title><rect x="1167.8" y="451.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (40 samples, 0.64%)</title><rect x="1167.8" y="435.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.8" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.05%)</title><rect x="1167.8" y="419.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1170.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (37 samples, 0.59%)</title><rect x="1168.4" y="419.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.4" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.08%)</title><rect x="1168.4" y="403.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1171.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.06%)</title><rect x="1169.3" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.06%)</title><rect x="1169.3" y="387.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1172.3" y="398.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (11 samples, 0.18%)</title><rect x="1170.1" y="403.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1173.1" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (17 samples, 0.27%)</title><rect x="1172.1" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1175.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.27%)</title><rect x="1172.1" y="387.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1175.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.13%)</title><rect x="1175.3" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.3" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.13%)</title><rect x="1175.3" y="419.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1178.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (35 samples, 0.56%)</title><rect x="1176.8" y="451.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.10%)</title><rect x="1176.8" y="435.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1179.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="1178.0" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="1178.0" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="1178.0" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="1178.0" y="387.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.11%)</title><rect x="1178.0" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.11%)</title><rect x="1178.0" y="355.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1181.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.08%)</title><rect x="1179.3" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.08%)</title><rect x="1179.3" y="419.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1182.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (17 samples, 0.27%)</title><rect x="1180.2" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.08%)</title><rect x="1180.2" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.08%)</title><rect x="1180.2" y="403.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1183.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.10%)</title><rect x="1181.2" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.10%)</title><rect x="1181.2" y="403.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1184.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="1182.3" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="1182.3" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.10%)</title><rect x="1182.3" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.10%)</title><rect x="1182.3" y="371.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1185.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (5 samples, 0.08%)</title><rect x="1183.4" y="499.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.08%)</title><rect x="1183.4" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.08%)</title><rect x="1183.4" y="467.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1186.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (30 samples, 0.48%)</title><rect x="1184.4" y="531.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.4" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="1184.4" y="515.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1187.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (14 samples, 0.22%)</title><rect x="1185.1" y="515.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (14 samples, 0.22%)</title><rect x="1185.1" y="499.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.22%)</title><rect x="1185.1" y="483.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.08%)</title><rect x="1185.1" y="467.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="1185.1" y="451.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1188.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.14%)</title><rect x="1186.0" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.14%)</title><rect x="1186.0" y="451.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.0" y="462.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="1186.0" y="435.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1189.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.05%)</title><rect x="1187.7" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1190.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.14%)</title><rect x="1188.3" y="515.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.3" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1188.3" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1191.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.08%)</title><rect x="1188.7" y="499.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="1189.6" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1192.6" y="510.0"></text>
</g>
</g>
</svg>
