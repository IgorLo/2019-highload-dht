<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (7,682 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-1 tid=13570] (55 samples, 0.72%)</title><rect x="10.0" y="707.0" width="8.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (55 samples, 0.72%)</title><rect x="10.0" y="691.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (55 samples, 0.72%)</title><rect x="10.0" y="675.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (54 samples, 0.70%)</title><rect x="10.2" y="659.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (54 samples, 0.70%)</title><rect x="10.2" y="643.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (54 samples, 0.70%)</title><rect x="10.2" y="627.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (19 samples, 0.25%)</title><rect x="10.2" y="611.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19 samples, 0.25%)</title><rect x="10.2" y="595.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (19 samples, 0.25%)</title><rect x="10.2" y="579.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (19 samples, 0.25%)</title><rect x="10.2" y="563.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (19 samples, 0.25%)</title><rect x="10.2" y="547.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (19 samples, 0.25%)</title><rect x="10.2" y="531.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (17 samples, 0.22%)</title><rect x="10.2" y="515.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (17 samples, 0.22%)</title><rect x="10.2" y="499.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.04%)</title><rect x="10.2" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (3 samples, 0.04%)</title><rect x="10.2" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (3 samples, 0.04%)</title><rect x="10.2" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="10.2" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="10.2" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (12 samples, 0.16%)</title><rect x="10.6" y="483.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (6 samples, 0.08%)</title><rect x="10.6" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.05%)</title><rect x="10.6" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="10.8" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.8" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="10.9" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="10.9" y="403.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.03%)</title><rect x="11.2" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (6 samples, 0.08%)</title><rect x="11.5" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="11.5" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="11.5" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="11.5" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="11.5" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="11.5" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="11.5" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (4 samples, 0.05%)</title><rect x="11.8" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (3 samples, 0.04%)</title><rect x="12.0" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2 samples, 0.03%)</title><rect x="12.5" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="12.5" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.5" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="12.5" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (2 samples, 0.03%)</title><rect x="12.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (35 samples, 0.46%)</title><rect x="13.1" y="611.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.18%)</title><rect x="13.1" y="595.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (14 samples, 0.18%)</title><rect x="13.1" y="579.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (14 samples, 0.18%)</title><rect x="13.1" y="563.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (2 samples, 0.03%)</title><rect x="13.1" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (2 samples, 0.03%)</title><rect x="13.1" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="13.1" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="13.1" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="13.1" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="13.1" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="16.1" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="13.4" y="547.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="16.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="14.1" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (4 samples, 0.05%)</title><rect x="14.6" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.05%)</title><rect x="14.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="14.6" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.04%)</title><rect x="14.6" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.04%)</title><rect x="14.6" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="17.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (21 samples, 0.27%)</title><rect x="15.2" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (21 samples, 0.27%)</title><rect x="15.2" y="579.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (21 samples, 0.27%)</title><rect x="15.2" y="563.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (21 samples, 0.27%)</title><rect x="15.2" y="547.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.08%)</title><rect x="15.2" y="531.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (2 samples, 0.03%)</title><rect x="15.4" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.4" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (2 samples, 0.03%)</title><rect x="15.4" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="18.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="15.7" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.04%)</title><rect x="15.7" y="499.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="18.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (2 samples, 0.03%)</title><rect x="16.3" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (2 samples, 0.03%)</title><rect x="16.3" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.09%)</title><rect x="16.6" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.05%)</title><rect x="16.6" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.05%)</title><rect x="16.6" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="16.6" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="16.6" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4 samples, 0.05%)</title><rect x="16.6" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (4 samples, 0.05%)</title><rect x="16.6" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (4 samples, 0.05%)</title><rect x="16.6" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (4 samples, 0.05%)</title><rect x="16.6" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (4 samples, 0.05%)</title><rect x="16.6" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.05%)</title><rect x="16.6" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (4 samples, 0.05%)</title><rect x="16.6" y="355.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (3 samples, 0.04%)</title><rect x="17.2" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (3 samples, 0.04%)</title><rect x="17.2" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (3 samples, 0.04%)</title><rect x="17.7" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (3 samples, 0.04%)</title><rect x="17.7" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.03%)</title><rect x="17.8" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.8" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (2 samples, 0.03%)</title><rect x="17.8" y="483.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="20.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (2 samples, 0.03%)</title><rect x="18.1" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="18.1" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.03%)</title><rect x="18.1" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="18.1" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="18.1" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.1" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="18.1" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.1" y="462.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-3 tid=13378] (256 samples, 3.33%)</title><rect x="18.4" y="707.0" width="39.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="21.4" y="718.0">[Fo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (256 samples, 3.33%)</title><rect x="18.4" y="691.0" width="39.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.4" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (256 samples, 3.33%)</title><rect x="18.4" y="675.0" width="39.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.4" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (256 samples, 3.33%)</title><rect x="18.4" y="659.0" width="39.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.4" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (256 samples, 3.33%)</title><rect x="18.4" y="643.0" width="39.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.4" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (256 samples, 3.33%)</title><rect x="18.4" y="627.0" width="39.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.4" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (111 samples, 1.44%)</title><rect x="18.4" y="611.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (111 samples, 1.44%)</title><rect x="18.4" y="595.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (111 samples, 1.44%)</title><rect x="18.4" y="579.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (111 samples, 1.44%)</title><rect x="18.4" y="563.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (111 samples, 1.44%)</title><rect x="18.4" y="547.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (111 samples, 1.44%)</title><rect x="18.4" y="531.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (89 samples, 1.16%)</title><rect x="18.4" y="515.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (89 samples, 1.16%)</title><rect x="18.4" y="499.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.26%)</title><rect x="18.4" y="483.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.13%)</title><rect x="18.4" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (10 samples, 0.13%)</title><rect x="18.4" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.13%)</title><rect x="18.4" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (10 samples, 0.13%)</title><rect x="18.4" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.13%)</title><rect x="18.4" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="18.4" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="18.4" y="371.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="21.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (10 samples, 0.13%)</title><rect x="20.0" y="467.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.13%)</title><rect x="20.0" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="20.0" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="20.0" y="419.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="23.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (65 samples, 0.85%)</title><rect x="21.5" y="483.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (27 samples, 0.35%)</title><rect x="21.5" y="467.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (15 samples, 0.20%)</title><rect x="21.5" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (15 samples, 0.20%)</title><rect x="21.5" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.5" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="21.5" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="24.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="22.0" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.0" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="22.0" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="25.0" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.08%)</title><rect x="22.4" y="419.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="23.4" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="23.4" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="26.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.16%)</title><rect x="23.8" y="451.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.8" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="23.8" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.12%)</title><rect x="24.3" y="435.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.12%)</title><rect x="24.3" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (9 samples, 0.12%)</title><rect x="24.3" y="403.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.12%)</title><rect x="24.3" y="387.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (9 samples, 0.12%)</title><rect x="24.3" y="371.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (9 samples, 0.12%)</title><rect x="24.3" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="24.3" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="24.3" y="323.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="27.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (38 samples, 0.49%)</title><rect x="25.7" y="467.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.7" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="25.7" y="451.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="26.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="26.0" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="26.0" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="26.0" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="26.0" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="26.0" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="29.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="26.4" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="26.4" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="29.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (30 samples, 0.39%)</title><rect x="26.9" y="451.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (17 samples, 0.22%)</title><rect x="26.9" y="435.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 0.18%)</title><rect x="26.9" y="419.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.9" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="26.9" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (12 samples, 0.16%)</title><rect x="27.2" y="403.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="27.2" y="387.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="30.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="27.5" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.5" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="27.5" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="30.5" y="382.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="28.1" y="387.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="31.1" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="28.7" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="28.7" y="371.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="31.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.04%)</title><rect x="29.0" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="29.0" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="32.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (13 samples, 0.17%)</title><rect x="29.5" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.5" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="29.5" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="29.8" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="29.8" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="29.8" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="29.8" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="29.8" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="29.8" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="32.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="30.1" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="30.1" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="33.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (6 samples, 0.08%)</title><rect x="30.6" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.05%)</title><rect x="30.9" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.05%)</title><rect x="30.9" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.05%)</title><rect x="30.9" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.05%)</title><rect x="30.9" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="33.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.05%)</title><rect x="31.5" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="31.5" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.5" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="31.5" y="451.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="34.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (22 samples, 0.29%)</title><rect x="32.1" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (10 samples, 0.13%)</title><rect x="32.1" y="499.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (10 samples, 0.13%)</title><rect x="32.1" y="483.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="32.1" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.12%)</title><rect x="32.3" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.12%)</title><rect x="32.3" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.3" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="32.3" y="419.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="35.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.14%)</title><rect x="33.8" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.8" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="33.8" y="483.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="36.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="34.7" y="483.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="37.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="35.2" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="38.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (145 samples, 1.89%)</title><rect x="35.5" y="611.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.5" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (61 samples, 0.79%)</title><rect x="35.5" y="595.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (61 samples, 0.79%)</title><rect x="35.5" y="579.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (61 samples, 0.79%)</title><rect x="35.5" y="563.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (18 samples, 0.23%)</title><rect x="35.5" y="547.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (18 samples, 0.23%)</title><rect x="35.5" y="531.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.23%)</title><rect x="35.5" y="515.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.08%)</title><rect x="35.5" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="35.5" y="483.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="38.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.16%)</title><rect x="36.4" y="499.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.16%)</title><rect x="36.4" y="483.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.4" y="494.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="36.4" y="467.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="39.4" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.09%)</title><rect x="38.3" y="547.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="41.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.22%)</title><rect x="39.3" y="547.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.3" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="39.3" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.10%)</title><rect x="39.8" y="531.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="42.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="41.0" y="531.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="44.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (19 samples, 0.25%)</title><rect x="42.0" y="547.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (19 samples, 0.25%)</title><rect x="42.0" y="531.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.0" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.17%)</title><rect x="42.0" y="515.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.05%)</title><rect x="42.0" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.0" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.05%)</title><rect x="42.0" y="483.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="45.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.12%)</title><rect x="42.6" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.12%)</title><rect x="42.6" y="483.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.08%)</title><rect x="43.9" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.08%)</title><rect x="43.9" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.08%)</title><rect x="43.9" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (3 samples, 0.04%)</title><rect x="43.9" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.9" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (3 samples, 0.04%)</title><rect x="43.9" y="451.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="46.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (3 samples, 0.04%)</title><rect x="44.4" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (3 samples, 0.04%)</title><rect x="44.4" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.04%)</title><rect x="44.4" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.4" y="446.0"></text>
</g>
<g>
<title>java.util.Optional (3 samples, 0.04%)</title><rect x="44.4" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="47.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (84 samples, 1.09%)</title><rect x="44.9" y="595.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (84 samples, 1.09%)</title><rect x="44.9" y="579.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (84 samples, 1.09%)</title><rect x="44.9" y="563.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (84 samples, 1.09%)</title><rect x="44.9" y="547.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.23%)</title><rect x="44.9" y="531.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (4 samples, 0.05%)</title><rect x="45.0" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (4 samples, 0.05%)</title><rect x="45.0" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.17%)</title><rect x="45.6" y="515.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.17%)</title><rect x="45.6" y="499.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="48.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingInt (3 samples, 0.04%)</title><rect x="47.6" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="47.6" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="47.6" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$300/548450126.get$Lambda (3 samples, 0.04%)</title><rect x="47.6" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.6" y="494.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$300 (3 samples, 0.04%)</title><rect x="47.6" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="50.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (3 samples, 0.04%)</title><rect x="48.1" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.1" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (2 samples, 0.03%)</title><rect x="48.1" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="48.1" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="48.1" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.get$Lambda (2 samples, 0.03%)</title><rect x="48.1" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.1" y="478.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$310 (2 samples, 0.03%)</title><rect x="48.1" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="51.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (11 samples, 0.14%)</title><rect x="48.7" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (11 samples, 0.14%)</title><rect x="48.7" y="515.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (6 samples, 0.08%)</title><rect x="48.7" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="49.6" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="49.6" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (4 samples, 0.05%)</title><rect x="49.6" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (4 samples, 0.05%)</title><rect x="49.6" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (20 samples, 0.26%)</title><rect x="50.4" y="531.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.23%)</title><rect x="50.4" y="515.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18 samples, 0.23%)</title><rect x="50.4" y="499.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.21%)</title><rect x="50.4" y="483.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.21%)</title><rect x="50.4" y="467.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (14 samples, 0.18%)</title><rect x="50.4" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (14 samples, 0.18%)</title><rect x="50.4" y="435.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (14 samples, 0.18%)</title><rect x="50.4" y="419.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (14 samples, 0.18%)</title><rect x="50.4" y="403.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (14 samples, 0.18%)</title><rect x="50.4" y="387.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.09%)</title><rect x="50.4" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.4" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.09%)</title><rect x="50.4" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="53.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (7 samples, 0.09%)</title><rect x="51.5" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (7 samples, 0.09%)</title><rect x="51.5" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="54.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.03%)</title><rect x="52.5" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (2 samples, 0.03%)</title><rect x="52.5" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="52.5" y="419.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="55.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2 samples, 0.03%)</title><rect x="52.9" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2 samples, 0.03%)</title><rect x="52.9" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.9" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (2 samples, 0.03%)</title><rect x="52.9" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.03%)</title><rect x="53.2" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (2 samples, 0.03%)</title><rect x="53.2" y="499.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="56.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (18 samples, 0.23%)</title><rect x="53.5" y="531.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.5" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (2 samples, 0.03%)</title><rect x="53.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="53.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="53.5" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="494.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.get$Lambda (2 samples, 0.03%)</title><rect x="53.5" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.5" y="478.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$313 (2 samples, 0.03%)</title><rect x="53.5" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="56.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (16 samples, 0.21%)</title><rect x="53.8" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.20%)</title><rect x="53.8" y="499.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (15 samples, 0.20%)</title><rect x="53.8" y="483.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.17%)</title><rect x="53.8" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.17%)</title><rect x="53.8" y="451.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (13 samples, 0.17%)</title><rect x="53.8" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (13 samples, 0.17%)</title><rect x="53.8" y="419.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.8" y="430.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (13 samples, 0.17%)</title><rect x="53.8" y="403.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.8" y="414.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (13 samples, 0.17%)</title><rect x="53.8" y="387.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (13 samples, 0.17%)</title><rect x="53.8" y="371.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.17%)</title><rect x="53.8" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (13 samples, 0.17%)</title><rect x="53.8" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (13 samples, 0.17%)</title><rect x="53.8" y="323.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (13 samples, 0.17%)</title><rect x="53.8" y="307.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (13 samples, 0.17%)</title><rect x="53.8" y="291.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (13 samples, 0.17%)</title><rect x="53.8" y="275.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.17%)</title><rect x="53.8" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.17%)</title><rect x="53.8" y="243.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.17%)</title><rect x="53.8" y="227.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="53.8" y="211.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.07%)</title><rect x="55.0" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="55.0" y="195.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="58.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (10 samples, 0.13%)</title><rect x="56.2" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.13%)</title><rect x="56.2" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.13%)</title><rect x="56.2" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.12%)</title><rect x="56.2" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.12%)</title><rect x="56.2" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.2" y="478.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="56.2" y="451.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="59.2" y="462.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-5 tid=13380] (253 samples, 3.29%)</title><rect x="57.8" y="707.0" width="38.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="60.8" y="718.0">[Fo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (253 samples, 3.29%)</title><rect x="57.8" y="691.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.8" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (253 samples, 3.29%)</title><rect x="57.8" y="675.0" width="38.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.8" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (253 samples, 3.29%)</title><rect x="57.8" y="659.0" width="38.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.8" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (253 samples, 3.29%)</title><rect x="57.8" y="643.0" width="38.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.8" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (253 samples, 3.29%)</title><rect x="57.8" y="627.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.8" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (91 samples, 1.18%)</title><rect x="57.8" y="611.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (91 samples, 1.18%)</title><rect x="57.8" y="595.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$132/146115927.get (91 samples, 1.18%)</title><rect x="57.8" y="579.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$111/2122596403.action (91 samples, 1.18%)</title><rect x="57.8" y="563.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeGet$0 (91 samples, 1.18%)</title><rect x="57.8" y="547.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (91 samples, 1.18%)</title><rect x="57.8" y="531.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (77 samples, 1.00%)</title><rect x="57.8" y="515.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (77 samples, 1.00%)</title><rect x="57.8" y="499.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.21%)</title><rect x="57.8" y="483.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.13%)</title><rect x="57.8" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (10 samples, 0.13%)</title><rect x="57.8" y="451.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.13%)</title><rect x="57.8" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (10 samples, 0.13%)</title><rect x="57.8" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.13%)</title><rect x="57.8" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="57.8" y="387.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="57.8" y="371.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="60.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (6 samples, 0.08%)</title><rect x="59.3" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (6 samples, 0.08%)</title><rect x="59.3" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="59.3" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="59.3" y="419.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="62.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (57 samples, 0.74%)</title><rect x="60.2" y="483.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (19 samples, 0.25%)</title><rect x="60.2" y="467.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 0.13%)</title><rect x="60.2" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.12%)</title><rect x="60.4" y="435.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.4" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="60.4" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="63.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="60.8" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.8" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="60.8" y="403.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="63.8" y="414.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="61.2" y="419.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="61.5" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="61.5" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="64.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.12%)</title><rect x="61.8" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.10%)</title><rect x="61.9" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.10%)</title><rect x="61.9" y="419.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (8 samples, 0.10%)</title><rect x="61.9" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.10%)</title><rect x="61.9" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (8 samples, 0.10%)</title><rect x="61.9" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (8 samples, 0.10%)</title><rect x="61.9" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.10%)</title><rect x="61.9" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.10%)</title><rect x="61.9" y="323.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (38 samples, 0.49%)</title><rect x="63.1" y="467.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.1" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="63.1" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="66.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="63.5" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="63.5" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="63.5" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="63.5" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="63.5" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="63.5" y="371.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="66.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="64.4" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.03%)</title><rect x="64.4" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="67.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (28 samples, 0.36%)</title><rect x="64.7" y="451.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (6 samples, 0.08%)</title><rect x="64.7" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.07%)</title><rect x="64.7" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.05%)</title><rect x="64.8" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="64.8" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="64.8" y="371.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="67.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (22 samples, 0.29%)</title><rect x="65.6" y="435.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="65.8" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="65.8" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="65.8" y="387.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="65.8" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="65.8" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="65.8" y="339.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.05%)</title><rect x="66.7" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.05%)</title><rect x="66.7" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="69.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (11 samples, 0.14%)</title><rect x="67.3" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (6 samples, 0.08%)</title><rect x="67.3" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (6 samples, 0.08%)</title><rect x="67.3" y="387.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="70.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.03%)</title><rect x="68.2" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (2 samples, 0.03%)</title><rect x="68.2" y="387.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="68.5" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="68.5" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="68.5" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (3 samples, 0.04%)</title><rect x="68.5" y="355.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (4 samples, 0.05%)</title><rect x="69.0" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="69.0" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.0" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="69.0" y="451.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="72.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (14 samples, 0.18%)</title><rect x="69.6" y="515.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (4 samples, 0.05%)</title><rect x="69.6" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (4 samples, 0.05%)</title><rect x="69.6" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="69.6" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="69.6" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="69.6" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="72.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.12%)</title><rect x="70.4" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.4" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="70.4" y="483.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="73.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="71.3" y="483.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="74.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (162 samples, 2.11%)</title><rect x="71.7" y="611.0" width="24.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.7" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (70 samples, 0.91%)</title><rect x="71.7" y="595.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$130/1708331305.apply (70 samples, 0.91%)</title><rect x="71.7" y="579.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.parse (70 samples, 0.91%)</title><rect x="71.7" y="563.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (10 samples, 0.13%)</title><rect x="71.7" y="547.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480155761.invoke (10 samples, 0.13%)</title><rect x="71.7" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="71.7" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="71.7" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="71.7" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.09%)</title><rect x="72.2" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.09%)</title><rect x="72.2" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.2" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="72.2" y="467.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.2" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="73.3" y="547.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="76.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.35%)</title><rect x="74.2" y="547.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.2" y="558.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="74.2" y="531.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="77.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.16%)</title><rect x="75.7" y="531.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="78.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="77.6" y="531.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (27 samples, 0.35%)</title><rect x="78.4" y="547.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (27 samples, 0.35%)</title><rect x="78.4" y="531.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.4" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.18%)</title><rect x="78.4" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.4" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.05%)</title><rect x="78.4" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.4" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.05%)</title><rect x="78.4" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="81.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.13%)</title><rect x="79.0" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.0" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.13%)</title><rect x="79.0" y="483.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="82.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (13 samples, 0.17%)</title><rect x="80.5" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.17%)</title><rect x="80.5" y="499.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (13 samples, 0.17%)</title><rect x="80.5" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/2050835901.get (11 samples, 0.14%)</title><rect x="80.5" y="467.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (11 samples, 0.14%)</title><rect x="80.5" y="451.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="83.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="82.2" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="82.2" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.2" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="82.2" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.2" y="446.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="82.2" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (92 samples, 1.20%)</title><rect x="82.5" y="595.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (92 samples, 1.20%)</title><rect x="82.5" y="579.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$144/396809346.accept (92 samples, 1.20%)</title><rect x="82.5" y="563.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$9 (92 samples, 1.20%)</title><rect x="82.5" y="547.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.17%)</title><rect x="82.5" y="531.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (3 samples, 0.04%)</title><rect x="82.5" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.5" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (3 samples, 0.04%)</title><rect x="82.5" y="499.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="85.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.spliterator (5 samples, 0.07%)</title><rect x="83.0" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySpliterator (5 samples, 0.07%)</title><rect x="83.0" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="86.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.07%)</title><rect x="83.7" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.07%)</title><rect x="83.7" y="499.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="86.7" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparingLong (4 samples, 0.05%)</title><rect x="84.7" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.7" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.04%)</title><rect x="84.8" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="84.8" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="84.8" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.8" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.get$Lambda (3 samples, 0.04%)</title><rect x="84.8" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.8" y="478.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$311 (3 samples, 0.04%)</title><rect x="84.8" y="451.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="87.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (4 samples, 0.05%)</title><rect x="85.3" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.3" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$EntrySet (4 samples, 0.05%)</title><rect x="85.3" y="515.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="88.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (8 samples, 0.10%)</title><rect x="85.9" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (8 samples, 0.10%)</title><rect x="85.9" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (3 samples, 0.04%)</title><rect x="85.9" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="88.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="86.3" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="86.3" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.get$Lambda (4 samples, 0.05%)</title><rect x="86.3" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.3" y="478.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$$Lambda$43 (4 samples, 0.05%)</title><rect x="86.3" y="451.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="89.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (28 samples, 0.36%)</title><rect x="87.1" y="531.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (27 samples, 0.35%)</title><rect x="87.1" y="515.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (27 samples, 0.35%)</title><rect x="87.1" y="499.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.27%)</title><rect x="87.1" y="483.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (21 samples, 0.27%)</title><rect x="87.1" y="467.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (15 samples, 0.20%)</title><rect x="87.1" y="451.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (15 samples, 0.20%)</title><rect x="87.1" y="435.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$43/333362446.accept (15 samples, 0.20%)</title><rect x="87.1" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (15 samples, 0.20%)</title><rect x="87.1" y="403.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (15 samples, 0.20%)</title><rect x="87.1" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.07%)</title><rect x="87.1" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.1" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.07%)</title><rect x="87.1" y="355.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="90.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.13%)</title><rect x="87.9" y="371.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.9" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10 samples, 0.13%)</title><rect x="87.9" y="355.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (6 samples, 0.08%)</title><rect x="89.4" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$42/1179381257.get (6 samples, 0.08%)</title><rect x="89.4" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (6 samples, 0.08%)</title><rect x="89.4" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="92.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (6 samples, 0.08%)</title><rect x="90.3" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (6 samples, 0.08%)</title><rect x="90.3" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.3" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (6 samples, 0.08%)</title><rect x="90.3" y="451.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="93.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (22 samples, 0.29%)</title><rect x="91.4" y="531.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.4" y="542.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (2 samples, 0.03%)</title><rect x="91.4" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="91.4" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="91.4" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.4" y="494.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.get$Lambda (2 samples, 0.03%)</title><rect x="91.4" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.4" y="478.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$313 (2 samples, 0.03%)</title><rect x="91.4" y="451.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="94.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (20 samples, 0.26%)</title><rect x="91.7" y="515.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.23%)</title><rect x="91.7" y="499.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18 samples, 0.23%)</title><rect x="91.7" y="483.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.21%)</title><rect x="91.7" y="467.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.21%)</title><rect x="91.7" y="451.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySpliterator.forEachRemaining (16 samples, 0.21%)</title><rect x="91.7" y="435.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (16 samples, 0.21%)</title><rect x="91.7" y="419.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.7" y="430.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$313/1549469834.apply (16 samples, 0.21%)</title><rect x="91.7" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.7" y="414.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (16 samples, 0.21%)</title><rect x="91.7" y="387.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$311/309056739.compare (16 samples, 0.21%)</title><rect x="91.7" y="371.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.21%)</title><rect x="91.7" y="355.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/1706559361.compare (16 samples, 0.21%)</title><rect x="91.7" y="339.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (16 samples, 0.21%)</title><rect x="91.7" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$309/1779836935.applyAsLong (16 samples, 0.21%)</title><rect x="91.7" y="307.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$sendActualResponse$8 (16 samples, 0.21%)</title><rect x="91.7" y="291.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.getTimeStamp (16 samples, 0.21%)</title><rect x="91.7" y="275.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (16 samples, 0.21%)</title><rect x="91.7" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.21%)</title><rect x="91.7" y="243.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.21%)</title><rect x="91.7" y="227.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.20%)</title><rect x="91.9" y="211.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.9" y="222.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.20%)</title><rect x="91.9" y="195.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="94.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.03%)</title><rect x="94.5" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (2 samples, 0.03%)</title><rect x="94.5" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="97.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendResponse (12 samples, 0.16%)</title><rect x="94.8" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.16%)</title><rect x="94.8" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.16%)</title><rect x="94.8" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.13%)</title><rect x="94.8" y="483.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.13%)</title><rect x="94.8" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="478.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="94.8" y="451.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="97.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.03%)</title><rect x="96.3" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.3" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.03%)</title><rect x="96.3" y="467.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="99.3" y="478.0"></text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=13313] (1,310 samples, 17.05%)</title><rect x="96.6" y="707.0" width="201.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="99.6" y="718.0">[HttpClient-1-SelectorMana..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,310 samples, 17.05%)</title><rect x="96.6" y="691.0" width="201.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.6" y="702.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.52%)</title><rect x="96.6" y="675.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.52%)</title><rect x="96.6" y="659.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$229/1317658293.get$Lambda (24 samples, 0.31%)</title><rect x="96.6" y="643.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$229 (24 samples, 0.31%)</title><rect x="96.6" y="627.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="99.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$233/1843774215.get$Lambda (16 samples, 0.21%)</title><rect x="100.3" y="643.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$233 (16 samples, 0.21%)</title><rect x="100.3" y="627.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (30 samples, 0.39%)</title><rect x="102.8" y="675.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.39%)</title><rect x="102.8" y="659.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.get$Lambda (30 samples, 0.39%)</title><rect x="102.8" y="643.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$230 (30 samples, 0.39%)</title><rect x="102.8" y="627.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="105.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (278 samples, 3.62%)</title><rect x="107.4" y="675.0" width="42.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.4" y="686.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$231/778276218.accept (225 samples, 2.93%)</title><rect x="107.4" y="659.0" width="34.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (225 samples, 2.93%)</title><rect x="107.4" y="643.0" width="34.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.4" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (225 samples, 2.93%)</title><rect x="107.4" y="627.0" width="34.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.4" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (225 samples, 2.93%)</title><rect x="107.4" y="611.0" width="34.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.4" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (225 samples, 2.93%)</title><rect x="107.4" y="595.0" width="34.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.4" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (225 samples, 2.93%)</title><rect x="107.4" y="579.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.4" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (225 samples, 2.93%)</title><rect x="107.4" y="563.0" width="34.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.4" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (225 samples, 2.93%)</title><rect x="107.4" y="547.0" width="34.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.4" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (225 samples, 2.93%)</title><rect x="107.4" y="531.0" width="34.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.4" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (225 samples, 2.93%)</title><rect x="107.4" y="515.0" width="34.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (225 samples, 2.93%)</title><rect x="107.4" y="499.0" width="34.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.4" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (225 samples, 2.93%)</title><rect x="107.4" y="483.0" width="34.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (60 samples, 0.78%)</title><rect x="107.4" y="467.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (60 samples, 0.78%)</title><rect x="107.4" y="451.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (60 samples, 0.78%)</title><rect x="107.4" y="435.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (28 samples, 0.36%)</title><rect x="107.4" y="419.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (28 samples, 0.36%)</title><rect x="107.4" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (28 samples, 0.36%)</title><rect x="107.4" y="387.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (28 samples, 0.36%)</title><rect x="107.4" y="371.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (28 samples, 0.36%)</title><rect x="107.4" y="355.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="110.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.42%)</title><rect x="111.7" y="419.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.42%)</title><rect x="111.7" y="403.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 0.42%)</title><rect x="111.7" y="387.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.42%)</title><rect x="111.7" y="371.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.42%)</title><rect x="111.7" y="355.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (32 samples, 0.42%)</title><rect x="111.7" y="339.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="114.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (6 samples, 0.08%)</title><rect x="116.6" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (6 samples, 0.08%)</title><rect x="116.6" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (6 samples, 0.08%)</title><rect x="116.6" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (6 samples, 0.08%)</title><rect x="116.6" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (6 samples, 0.08%)</title><rect x="116.6" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (4 samples, 0.05%)</title><rect x="116.6" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (4 samples, 0.05%)</title><rect x="116.6" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="116.6" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.05%)</title><rect x="116.6" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.05%)</title><rect x="116.6" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.6" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="116.6" y="307.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="119.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="117.2" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="117.2" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="117.2" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (2 samples, 0.03%)</title><rect x="117.2" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (2 samples, 0.03%)</title><rect x="117.2" y="323.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.26%)</title><rect x="117.5" y="467.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.26%)</title><rect x="117.5" y="451.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.26%)</title><rect x="117.5" y="435.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (20 samples, 0.26%)</title><rect x="117.5" y="419.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (20 samples, 0.26%)</title><rect x="117.5" y="403.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="120.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (139 samples, 1.81%)</title><rect x="120.6" y="467.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.6" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (85 samples, 1.11%)</title><rect x="120.6" y="451.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 0.85%)</title><rect x="120.6" y="435.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.85%)</title><rect x="120.6" y="419.0" width="10.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="123.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (20 samples, 0.26%)</title><rect x="130.6" y="435.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (20 samples, 0.26%)</title><rect x="130.6" y="419.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (20 samples, 0.26%)</title><rect x="130.6" y="403.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="133.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (54 samples, 0.70%)</title><rect x="133.7" y="451.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$162/69677488.get (54 samples, 0.70%)</title><rect x="133.7" y="435.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (54 samples, 0.70%)</title><rect x="133.7" y="419.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.70%)</title><rect x="133.7" y="403.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.70%)</title><rect x="133.7" y="387.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="133.7" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="136.7" y="382.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.68%)</title><rect x="134.0" y="371.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$234/1608485788.accept (53 samples, 0.69%)</title><rect x="141.9" y="659.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (53 samples, 0.69%)</title><rect x="141.9" y="643.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$230/1585989864.run (53 samples, 0.69%)</title><rect x="141.9" y="627.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (53 samples, 0.69%)</title><rect x="141.9" y="611.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (53 samples, 0.69%)</title><rect x="141.9" y="595.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (53 samples, 0.69%)</title><rect x="141.9" y="579.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (53 samples, 0.69%)</title><rect x="141.9" y="563.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (53 samples, 0.69%)</title><rect x="141.9" y="547.0" width="8.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="144.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (65 samples, 0.85%)</title><rect x="150.1" y="675.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (48 samples, 0.62%)</title><rect x="150.1" y="659.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (48 samples, 0.62%)</title><rect x="150.1" y="643.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (48 samples, 0.62%)</title><rect x="150.1" y="627.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (48 samples, 0.62%)</title><rect x="150.1" y="611.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (48 samples, 0.62%)</title><rect x="150.1" y="595.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (48 samples, 0.62%)</title><rect x="150.1" y="579.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (48 samples, 0.62%)</title><rect x="150.1" y="563.0" width="7.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="153.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (17 samples, 0.22%)</title><rect x="157.5" y="659.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (17 samples, 0.22%)</title><rect x="157.5" y="643.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="160.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (214 samples, 2.79%)</title><rect x="160.1" y="675.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.1" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/651216306.run (101 samples, 1.31%)</title><rect x="160.1" y="659.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (101 samples, 1.31%)</title><rect x="160.1" y="643.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (101 samples, 1.31%)</title><rect x="160.1" y="627.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (101 samples, 1.31%)</title><rect x="160.1" y="611.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (101 samples, 1.31%)</title><rect x="160.1" y="595.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (101 samples, 1.31%)</title><rect x="160.1" y="579.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$167/1152171064.run (101 samples, 1.31%)</title><rect x="160.1" y="563.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (101 samples, 1.31%)</title><rect x="160.1" y="547.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (99 samples, 1.29%)</title><rect x="160.1" y="531.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (99 samples, 1.29%)</title><rect x="160.1" y="515.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (66 samples, 0.86%)</title><rect x="160.1" y="499.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (66 samples, 0.86%)</title><rect x="160.1" y="483.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (66 samples, 0.86%)</title><rect x="160.1" y="467.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (45 samples, 0.59%)</title><rect x="160.1" y="451.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (45 samples, 0.59%)</title><rect x="160.1" y="435.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.59%)</title><rect x="160.1" y="419.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (45 samples, 0.59%)</title><rect x="160.1" y="403.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (45 samples, 0.59%)</title><rect x="160.1" y="387.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="398.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.59%)</title><rect x="160.1" y="371.0" width="6.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="163.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (21 samples, 0.27%)</title><rect x="167.0" y="451.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.27%)</title><rect x="167.0" y="435.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.27%)</title><rect x="167.0" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (21 samples, 0.27%)</title><rect x="167.0" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (21 samples, 0.27%)</title><rect x="167.0" y="387.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="170.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (33 samples, 0.43%)</title><rect x="170.2" y="499.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.43%)</title><rect x="170.2" y="483.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.43%)</title><rect x="170.2" y="467.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (33 samples, 0.43%)</title><rect x="170.2" y="451.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.43%)</title><rect x="170.2" y="435.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (33 samples, 0.43%)</title><rect x="170.2" y="419.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (33 samples, 0.43%)</title><rect x="170.2" y="403.0" width="5.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="173.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="175.3" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="175.3" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="175.3" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1645018886.get$Lambda (2 samples, 0.03%)</title><rect x="175.3" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245 (2 samples, 0.03%)</title><rect x="175.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="178.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$178/1436643968.run (113 samples, 1.47%)</title><rect x="175.6" y="659.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (113 samples, 1.47%)</title><rect x="175.6" y="643.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.57%)</title><rect x="175.6" y="627.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.57%)</title><rect x="175.6" y="611.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.get$Lambda (44 samples, 0.57%)</title><rect x="175.6" y="595.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$241 (44 samples, 0.57%)</title><rect x="175.6" y="579.0" width="6.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="178.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (69 samples, 0.90%)</title><rect x="182.3" y="627.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (69 samples, 0.90%)</title><rect x="182.3" y="611.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (69 samples, 0.90%)</title><rect x="182.3" y="595.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (68 samples, 0.89%)</title><rect x="182.3" y="579.0" width="10.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="185.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (385 samples, 5.01%)</title><rect x="192.9" y="675.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.9" y="686.0">jdk/in..</text>
</g>
<g>
<title>java/time/Instant.now (103 samples, 1.34%)</title><rect x="192.9" y="659.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.9" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (103 samples, 1.34%)</title><rect x="192.9" y="643.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.9" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (103 samples, 1.34%)</title><rect x="192.9" y="627.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.9" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (103 samples, 1.34%)</title><rect x="192.9" y="611.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.9" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (103 samples, 1.34%)</title><rect x="192.9" y="595.0" width="15.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="195.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (282 samples, 3.67%)</title><rect x="208.8" y="659.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.8" y="670.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.86%)</title><rect x="208.8" y="643.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.86%)</title><rect x="208.8" y="627.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$298/2007698387.get$Lambda (66 samples, 0.86%)</title><rect x="208.8" y="611.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$298 (66 samples, 0.86%)</title><rect x="208.8" y="595.0" width="10.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="211.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (216 samples, 2.81%)</title><rect x="218.9" y="643.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.9" y="654.0">jd..</text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 1.15%)</title><rect x="218.9" y="627.0" width="13.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="221.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (128 samples, 1.67%)</title><rect x="232.4" y="627.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (128 samples, 1.67%)</title><rect x="232.4" y="611.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.4" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (128 samples, 1.67%)</title><rect x="232.4" y="595.0" width="19.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="235.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (221 samples, 2.88%)</title><rect x="252.1" y="675.0" width="33.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.1" y="686.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.22%)</title><rect x="252.1" y="659.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.22%)</title><rect x="252.1" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$228/1337456006.get$Lambda (17 samples, 0.22%)</title><rect x="252.1" y="627.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$228 (17 samples, 0.22%)</title><rect x="252.1" y="611.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="255.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (116 samples, 1.51%)</title><rect x="254.7" y="659.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (52 samples, 0.68%)</title><rect x="254.7" y="643.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (52 samples, 0.68%)</title><rect x="254.7" y="627.0" width="8.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="257.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (64 samples, 0.83%)</title><rect x="262.7" y="643.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (60 samples, 0.78%)</title><rect x="262.7" y="627.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="265.7" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.05%)</title><rect x="271.9" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (88 samples, 1.15%)</title><rect x="272.5" y="659.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (74 samples, 0.96%)</title><rect x="272.5" y="643.0" width="11.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="275.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (14 samples, 0.18%)</title><rect x="283.9" y="643.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (38 samples, 0.49%)</title><rect x="286.0" y="675.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 0.49%)</title><rect x="286.0" y="659.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (38 samples, 0.49%)</title><rect x="286.0" y="643.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (38 samples, 0.49%)</title><rect x="286.0" y="627.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (38 samples, 0.49%)</title><rect x="286.0" y="611.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (38 samples, 0.49%)</title><rect x="286.0" y="595.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (38 samples, 0.49%)</title><rect x="286.0" y="579.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (38 samples, 0.49%)</title><rect x="286.0" y="563.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (38 samples, 0.49%)</title><rect x="286.0" y="547.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (38 samples, 0.49%)</title><rect x="286.0" y="531.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="289.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (39 samples, 0.51%)</title><rect x="291.9" y="675.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (39 samples, 0.51%)</title><rect x="291.9" y="659.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (39 samples, 0.51%)</title><rect x="291.9" y="643.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (39 samples, 0.51%)</title><rect x="291.9" y="627.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="294.9" y="638.0"></text>
</g>
<g>
<title>[HttpClient-2-SelectorManager tid=13321] (4 samples, 0.05%)</title><rect x="297.9" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="300.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4 samples, 0.05%)</title><rect x="297.9" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.05%)</title><rect x="297.9" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.9" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4 samples, 0.05%)</title><rect x="297.9" y="659.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="300.9" y="670.0"></text>
</g>
<g>
<title>[HttpClient-3-SelectorManager tid=13329] (4 samples, 0.05%)</title><rect x="298.5" y="707.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="301.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4 samples, 0.05%)</title><rect x="298.5" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.05%)</title><rect x="298.5" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4 samples, 0.05%)</title><rect x="298.5" y="659.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="301.5" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13314] (306 samples, 3.98%)</title><rect x="299.2" y="707.0" width="47.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="302.2" y="718.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (306 samples, 3.98%)</title><rect x="299.2" y="691.0" width="47.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.2" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.07%)</title><rect x="299.2" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.07%)</title><rect x="299.2" y="659.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="302.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (301 samples, 3.92%)</title><rect x="300.0" y="675.0" width="46.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.0" y="686.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (301 samples, 3.92%)</title><rect x="300.0" y="659.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.0" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (301 samples, 3.92%)</title><rect x="300.0" y="643.0" width="46.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.0" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (287 samples, 3.74%)</title><rect x="300.0" y="627.0" width="44.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.0" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (287 samples, 3.74%)</title><rect x="300.0" y="611.0" width="44.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.0" y="622.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (283 samples, 3.68%)</title><rect x="300.0" y="595.0" width="43.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.0" y="606.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (283 samples, 3.68%)</title><rect x="300.0" y="579.0" width="43.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.0" y="590.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="300.0" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="300.0" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="300.0" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="303.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (281 samples, 3.66%)</title><rect x="300.3" y="563.0" width="43.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.3" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (30 samples, 0.39%)</title><rect x="300.3" y="547.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="300.5" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="300.5" y="515.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="303.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (26 samples, 0.34%)</title><rect x="300.8" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (26 samples, 0.34%)</title><rect x="300.8" y="515.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (26 samples, 0.34%)</title><rect x="300.8" y="499.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/700141030.linkToTargetMethod (11 samples, 0.14%)</title><rect x="300.9" y="483.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/781593468.invokeStatic (11 samples, 0.14%)</title><rect x="300.9" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$139/2078666046.get$Lambda (11 samples, 0.14%)</title><rect x="300.9" y="451.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.9" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$139 (11 samples, 0.14%)</title><rect x="300.9" y="435.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="303.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (7 samples, 0.09%)</title><rect x="302.6" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (7 samples, 0.09%)</title><rect x="302.6" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (2 samples, 0.03%)</title><rect x="302.6" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="305.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.07%)</title><rect x="302.9" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.07%)</title><rect x="302.9" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.07%)</title><rect x="302.9" y="419.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="305.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.09%)</title><rect x="303.7" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.09%)</title><rect x="303.7" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.05%)</title><rect x="303.7" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="304.3" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="304.3" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="304.3" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="307.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (230 samples, 2.99%)</title><rect x="304.9" y="547.0" width="35.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.9" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="305.4" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (6 samples, 0.08%)</title><rect x="305.7" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.08%)</title><rect x="305.7" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4 samples, 0.05%)</title><rect x="305.7" y="499.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="308.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="306.3" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="306.3" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="306.3" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="309.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (139 samples, 1.81%)</title><rect x="306.6" y="531.0" width="21.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.6" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (139 samples, 1.81%)</title><rect x="306.6" y="515.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.6" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (139 samples, 1.81%)</title><rect x="306.6" y="499.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (139 samples, 1.81%)</title><rect x="306.6" y="483.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.6" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="306.6" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="306.6" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$126/1021473121.get$Lambda (2 samples, 0.03%)</title><rect x="306.6" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$126 (2 samples, 0.03%)</title><rect x="306.6" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="309.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="306.9" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="306.9" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="307.1" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="307.1" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="307.1" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="310.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.08%)</title><rect x="307.4" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.08%)</title><rect x="307.4" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="307.4" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="310.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="307.7" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="307.7" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="307.7" y="403.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="310.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.03%)</title><rect x="308.3" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (7 samples, 0.09%)</title><rect x="308.6" y="467.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="311.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (68 samples, 0.89%)</title><rect x="309.7" y="467.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.08%)</title><rect x="309.7" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.07%)</title><rect x="309.7" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="309.7" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.7" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.03%)</title><rect x="309.7" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="312.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="310.0" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.0" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.04%)</title><rect x="310.0" y="403.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="313.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30 samples, 0.39%)</title><rect x="310.6" y="451.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30 samples, 0.39%)</title><rect x="310.6" y="435.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.6" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.03%)</title><rect x="310.6" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="313.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.08%)</title><rect x="311.1" y="419.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="314.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.04%)</title><rect x="312.0" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="315.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.14%)</title><rect x="312.6" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.14%)</title><rect x="312.6" y="403.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (11 samples, 0.14%)</title><rect x="312.6" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.14%)</title><rect x="312.6" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.07%)</title><rect x="312.6" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (4 samples, 0.05%)</title><rect x="312.6" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="312.6" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="312.6" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="312.6" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="312.6" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="312.6" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="312.6" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="312.6" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="315.6" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="313.5" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="313.5" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="313.8" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.04%)</title><rect x="313.8" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="316.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.05%)</title><rect x="314.3" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.3" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.05%)</title><rect x="314.3" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="317.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="314.9" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="314.9" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="317.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (21 samples, 0.27%)</title><rect x="315.4" y="451.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.4" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (21 samples, 0.27%)</title><rect x="315.4" y="435.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.4" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.26%)</title><rect x="315.4" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.4" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.26%)</title><rect x="315.4" y="403.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.4" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.26%)</title><rect x="315.4" y="387.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.4" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.09%)</title><rect x="315.4" y="371.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="318.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.14%)</title><rect x="316.4" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.4" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.14%)</title><rect x="316.4" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.4" y="366.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="316.4" y="339.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="319.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="318.1" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="318.1" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="318.1" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.1" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="318.1" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="321.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (5 samples, 0.07%)</title><rect x="318.6" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.07%)</title><rect x="318.6" y="435.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="321.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.07%)</title><rect x="319.4" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="319.4" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="322.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="319.8" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="319.8" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="322.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (34 samples, 0.44%)</title><rect x="320.1" y="467.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (6 samples, 0.08%)</title><rect x="320.1" y="451.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="323.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (28 samples, 0.36%)</title><rect x="321.1" y="451.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (28 samples, 0.36%)</title><rect x="321.1" y="435.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (5 samples, 0.07%)</title><rect x="321.1" y="419.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="324.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="321.8" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="324.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (5 samples, 0.07%)</title><rect x="322.3" y="419.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="325.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (10 samples, 0.13%)</title><rect x="323.0" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (10 samples, 0.13%)</title><rect x="323.0" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.0" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (10 samples, 0.13%)</title><rect x="323.0" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (10 samples, 0.13%)</title><rect x="323.0" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.0" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (10 samples, 0.13%)</title><rect x="323.0" y="355.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="326.0" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.07%)</title><rect x="324.6" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.07%)</title><rect x="324.6" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.6" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.07%)</title><rect x="324.6" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="327.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (17 samples, 0.22%)</title><rect x="325.4" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.03%)</title><rect x="325.4" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="325.7" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="328.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (13 samples, 0.17%)</title><rect x="326.0" y="451.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="326.0" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="326.0" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.14%)</title><rect x="326.3" y="435.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.14%)</title><rect x="326.3" y="419.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.08%)</title><rect x="326.3" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="329.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.07%)</title><rect x="327.2" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.07%)</title><rect x="327.2" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.07%)</title><rect x="327.2" y="371.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="330.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (80 samples, 1.04%)</title><rect x="328.0" y="531.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (80 samples, 1.04%)</title><rect x="328.0" y="515.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (27 samples, 0.35%)</title><rect x="328.0" y="499.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (3 samples, 0.04%)</title><rect x="328.0" y="483.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="331.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (24 samples, 0.31%)</title><rect x="328.4" y="483.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (24 samples, 0.31%)</title><rect x="328.4" y="467.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (24 samples, 0.31%)</title><rect x="328.4" y="451.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.04%)</title><rect x="328.6" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="331.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.04%)</title><rect x="329.0" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="332.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="329.5" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="329.5" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.get$Lambda (2 samples, 0.03%)</title><rect x="329.5" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (2 samples, 0.03%)</title><rect x="329.5" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="332.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.03%)</title><rect x="329.8" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.03%)</title><rect x="329.8" y="419.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="332.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.14%)</title><rect x="330.1" y="435.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (11 samples, 0.14%)</title><rect x="330.1" y="419.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.14%)</title><rect x="330.1" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.05%)</title><rect x="330.1" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (4 samples, 0.05%)</title><rect x="330.1" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="330.1" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="330.1" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="330.1" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="330.1" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="330.1" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="330.1" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="330.1" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="333.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.04%)</title><rect x="330.7" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.7" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.04%)</title><rect x="330.7" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="330.9" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="330.9" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="333.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="331.2" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.05%)</title><rect x="331.2" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="334.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="331.8" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="331.8" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="334.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.toString (3 samples, 0.04%)</title><rect x="332.1" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (3 samples, 0.04%)</title><rect x="332.1" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/866191240.invoke (3 samples, 0.04%)</title><rect x="332.1" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="332.1" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.04%)</title><rect x="332.1" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.04%)</title><rect x="332.1" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.1" y="430.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="332.1" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="335.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (50 samples, 0.65%)</title><rect x="332.6" y="499.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="332.6" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="335.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="333.0" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (5 samples, 0.07%)</title><rect x="333.0" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (5 samples, 0.07%)</title><rect x="333.0" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="333.0" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.07%)</title><rect x="333.0" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.07%)</title><rect x="333.0" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.0" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="333.0" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="336.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI.create (30 samples, 0.39%)</title><rect x="333.8" y="483.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>java.net.URI (7 samples, 0.09%)</title><rect x="333.8" y="467.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="336.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (23 samples, 0.30%)</title><rect x="334.9" y="467.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.9" y="478.0"></text>
</g>
<g>
<title>java.net.URI$Parser (2 samples, 0.03%)</title><rect x="334.9" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="337.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (21 samples, 0.27%)</title><rect x="335.2" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="335.2" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="335.2" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="335.2" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="338.2" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (17 samples, 0.22%)</title><rect x="335.8" y="435.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.12%)</title><rect x="335.8" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.12%)</title><rect x="335.8" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="335.8" y="387.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="338.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.07%)</title><rect x="336.4" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.4" y="398.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="336.4" y="371.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="339.4" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (8 samples, 0.10%)</title><rect x="337.2" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="337.2" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="337.2" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.2" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.08%)</title><rect x="337.5" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (6 samples, 0.08%)</title><rect x="337.5" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="337.5" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="337.5" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="337.5" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="340.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="337.9" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.9" y="350.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="337.9" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="340.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.08%)</title><rect x="338.4" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (2 samples, 0.03%)</title><rect x="338.4" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="341.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.05%)</title><rect x="338.7" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="338.9" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.04%)</title><rect x="338.9" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="341.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4 samples, 0.05%)</title><rect x="339.3" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (4 samples, 0.05%)</title><rect x="339.3" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (4 samples, 0.05%)</title><rect x="339.3" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (4 samples, 0.05%)</title><rect x="339.3" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.3" y="446.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (4 samples, 0.05%)</title><rect x="339.3" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="339.3" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="339.3" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="342.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (2 samples, 0.03%)</title><rect x="339.6" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2 samples, 0.03%)</title><rect x="339.6" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="339.6" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="339.6" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="342.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Replicas.toString (2 samples, 0.03%)</title><rect x="339.9" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="339.9" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/75958954.invoke (2 samples, 0.03%)</title><rect x="339.9" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="339.9" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="339.9" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="339.9" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.9" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="339.9" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="342.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (2 samples, 0.03%)</title><rect x="340.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="340.6" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.6" y="558.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (3 samples, 0.04%)</title><rect x="340.6" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.6" y="542.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (3 samples, 0.04%)</title><rect x="340.6" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.6" y="526.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (3 samples, 0.04%)</title><rect x="340.6" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (2 samples, 0.03%)</title><rect x="340.6" y="483.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="343.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (16 samples, 0.21%)</title><rect x="341.0" y="547.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="341.2" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="341.2" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="344.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.17%)</title><rect x="341.5" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.17%)</title><rect x="341.5" y="515.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="341.5" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/Address.hashCode (4 samples, 0.05%)</title><rect x="341.5" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="341.6" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Integer (3 samples, 0.04%)</title><rect x="341.6" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="344.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.12%)</title><rect x="342.1" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.07%)</title><rect x="342.1" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.1" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.07%)</title><rect x="342.1" y="467.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="345.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.05%)</title><rect x="342.9" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (4 samples, 0.05%)</title><rect x="342.9" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="345.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.05%)</title><rect x="343.5" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="343.5" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="343.5" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="343.5" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="346.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="343.8" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="343.8" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="346.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.14%)</title><rect x="344.1" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.03%)</title><rect x="344.1" y="611.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="347.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="344.4" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="344.4" y="595.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="347.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="345.3" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="345.3" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.3" y="606.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="345.3" y="579.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="348.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="345.8" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="345.8" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="345.9" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="345.9" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="345.9" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.9" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="345.9" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="348.9" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13322] (211 samples, 2.75%)</title><rect x="346.2" y="707.0" width="32.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="349.2" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (211 samples, 2.75%)</title><rect x="346.2" y="691.0" width="32.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.2" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.05%)</title><rect x="346.2" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.05%)</title><rect x="346.2" y="659.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="349.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (207 samples, 2.69%)</title><rect x="346.9" y="675.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.9" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (207 samples, 2.69%)</title><rect x="346.9" y="659.0" width="31.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.9" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (207 samples, 2.69%)</title><rect x="346.9" y="643.0" width="31.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.9" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 0.61%)</title><rect x="346.9" y="627.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 0.61%)</title><rect x="346.9" y="611.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.9" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (44 samples, 0.57%)</title><rect x="346.9" y="595.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.36%)</title><rect x="346.9" y="579.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.36%)</title><rect x="346.9" y="563.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.36%)</title><rect x="346.9" y="547.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.25%)</title><rect x="346.9" y="531.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="349.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.12%)</title><rect x="349.8" y="531.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.8" y="542.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="349.8" y="515.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="352.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (16 samples, 0.21%)</title><rect x="351.2" y="579.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="351.2" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="351.2" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="351.2" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="351.2" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.2" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="351.2" y="499.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="354.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="351.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="351.5" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="351.5" y="531.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="354.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (6 samples, 0.08%)</title><rect x="352.2" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (6 samples, 0.08%)</title><rect x="352.2" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="352.2" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="352.2" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (2 samples, 0.03%)</title><rect x="352.2" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (2 samples, 0.03%)</title><rect x="352.2" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="355.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (4 samples, 0.05%)</title><rect x="352.5" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="352.5" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="352.5" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (4 samples, 0.05%)</title><rect x="352.5" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.5" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (4 samples, 0.05%)</title><rect x="352.5" y="467.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="355.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.04%)</title><rect x="353.2" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="353.2" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="353.2" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="353.2" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="353.2" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="356.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.04%)</title><rect x="353.6" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="353.6" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="353.6" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="353.8" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="353.8" y="531.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="356.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 0.52%)</title><rect x="354.1" y="627.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.04%)</title><rect x="354.1" y="611.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="357.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.09%)</title><rect x="354.5" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.09%)</title><rect x="354.5" y="595.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="357.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.39%)</title><rect x="355.6" y="611.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.39%)</title><rect x="355.6" y="595.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.6" y="606.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.33%)</title><rect x="355.6" y="579.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="358.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="359.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="359.5" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.07%)</title><rect x="359.5" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.5" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="359.5" y="531.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.55%)</title><rect x="360.4" y="627.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.55%)</title><rect x="360.4" y="611.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.4" y="622.0"></text>
</g>
<g>
<title>char[] (61 samples, 0.79%)</title><rect x="360.4" y="595.0" width="9.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="363.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.22%)</title><rect x="369.7" y="595.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="372.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 0.53%)</title><rect x="372.4" y="595.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 0.53%)</title><rect x="372.4" y="579.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (41 samples, 0.53%)</title><rect x="372.4" y="563.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.4" y="574.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.53%)</title><rect x="372.4" y="547.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="375.4" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13330] (208 samples, 2.71%)</title><rect x="378.7" y="707.0" width="31.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="381.7" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (208 samples, 2.71%)</title><rect x="378.7" y="691.0" width="31.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.7" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.13%)</title><rect x="378.7" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (10 samples, 0.13%)</title><rect x="378.7" y="659.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="381.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (198 samples, 2.58%)</title><rect x="380.2" y="675.0" width="30.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.2" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (198 samples, 2.58%)</title><rect x="380.2" y="659.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.2" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (198 samples, 2.58%)</title><rect x="380.2" y="643.0" width="30.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.2" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 0.46%)</title><rect x="380.2" y="627.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 0.46%)</title><rect x="380.2" y="611.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.2" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (28 samples, 0.36%)</title><rect x="380.2" y="595.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.13%)</title><rect x="380.2" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="380.2" y="563.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="380.2" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="380.2" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="383.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="380.8" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.8" y="542.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="380.8" y="515.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="383.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (18 samples, 0.23%)</title><rect x="381.7" y="579.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.05%)</title><rect x="381.7" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.05%)</title><rect x="381.7" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.05%)</title><rect x="381.7" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="381.7" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.7" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="381.7" y="499.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="384.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="382.3" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="382.3" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="382.3" y="531.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="385.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (5 samples, 0.07%)</title><rect x="383.1" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (5 samples, 0.07%)</title><rect x="383.1" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="383.1" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="383.1" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (3 samples, 0.04%)</title><rect x="383.1" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.1" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (3 samples, 0.04%)</title><rect x="383.1" y="483.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="386.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (2 samples, 0.03%)</title><rect x="383.6" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (4 samples, 0.05%)</title><rect x="383.9" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="383.9" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="383.9" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="383.9" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="383.9" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="386.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="384.2" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.2" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="384.2" y="483.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="387.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="384.5" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="384.5" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="384.5" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="384.5" y="547.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="387.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18 samples, 0.23%)</title><rect x="385.6" y="627.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.6" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.03%)</title><rect x="385.6" y="611.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="388.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="385.9" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="385.9" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="388.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="386.8" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="386.8" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.8" y="606.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.05%)</title><rect x="386.8" y="579.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="389.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="387.4" y="579.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="390.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="388.3" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="388.3" y="611.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="391.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="388.6" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="388.6" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="388.6" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="388.6" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.6" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="388.6" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="391.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.82%)</title><rect x="389.1" y="627.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.1" y="638.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.82%)</title><rect x="389.1" y="611.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.1" y="622.0">o..</text>
</g>
<g>
<title>char[] (103 samples, 1.34%)</title><rect x="389.1" y="595.0" width="15.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="392.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="404.9" y="595.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="407.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.39%)</title><rect x="406.0" y="595.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.39%)</title><rect x="406.0" y="579.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.39%)</title><rect x="406.0" y="563.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.0" y="574.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.39%)</title><rect x="406.0" y="547.0" width="4.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="409.0" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13315] (38 samples, 0.49%)</title><rect x="410.6" y="707.0" width="5.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="413.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 0.49%)</title><rect x="410.6" y="691.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.05%)</title><rect x="410.6" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.6" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.05%)</title><rect x="410.6" y="659.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="413.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 0.44%)</title><rect x="411.2" y="675.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 0.44%)</title><rect x="411.2" y="659.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34 samples, 0.44%)</title><rect x="411.2" y="643.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 0.39%)</title><rect x="411.2" y="627.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 0.39%)</title><rect x="411.2" y="611.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.2" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (29 samples, 0.38%)</title><rect x="411.2" y="595.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (29 samples, 0.38%)</title><rect x="411.2" y="579.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (29 samples, 0.38%)</title><rect x="411.2" y="563.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (27 samples, 0.35%)</title><rect x="411.4" y="547.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (20 samples, 0.26%)</title><rect x="411.4" y="531.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (20 samples, 0.26%)</title><rect x="411.4" y="515.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (20 samples, 0.26%)</title><rect x="411.4" y="499.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (20 samples, 0.26%)</title><rect x="411.4" y="483.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (10 samples, 0.13%)</title><rect x="411.4" y="467.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.03%)</title><rect x="411.4" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.03%)</title><rect x="411.4" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="411.4" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.4" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="411.4" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="414.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.05%)</title><rect x="411.7" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.05%)</title><rect x="411.7" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.04%)</title><rect x="411.8" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.04%)</title><rect x="411.8" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (3 samples, 0.04%)</title><rect x="411.8" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.04%)</title><rect x="411.8" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.03%)</title><rect x="411.8" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4 samples, 0.05%)</title><rect x="412.3" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.3" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4 samples, 0.05%)</title><rect x="412.3" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.04%)</title><rect x="412.3" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.3" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.04%)</title><rect x="412.3" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.3" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.04%)</title><rect x="412.3" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="412.4" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="412.4" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="412.4" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.4" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="412.4" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="415.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (6 samples, 0.08%)</title><rect x="412.9" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.07%)</title><rect x="413.1" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.07%)</title><rect x="413.1" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.03%)</title><rect x="413.5" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2 samples, 0.03%)</title><rect x="413.5" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2 samples, 0.03%)</title><rect x="413.5" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2 samples, 0.03%)</title><rect x="413.5" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.5" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (2 samples, 0.03%)</title><rect x="413.5" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="416.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (4 samples, 0.05%)</title><rect x="413.8" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.03%)</title><rect x="414.1" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="414.1" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="414.1" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (7 samples, 0.09%)</title><rect x="414.4" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (7 samples, 0.09%)</title><rect x="414.4" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.04%)</title><rect x="414.4" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3 samples, 0.04%)</title><rect x="414.4" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.04%)</title><rect x="414.4" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.04%)</title><rect x="414.4" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="414.4" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="417.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (4 samples, 0.05%)</title><rect x="414.9" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (2 samples, 0.03%)</title><rect x="414.9" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.03%)</title><rect x="415.8" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="415.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="415.8" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="416.1" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="416.1" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.1" y="622.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="416.1" y="595.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="419.1" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13323] (210 samples, 2.73%)</title><rect x="416.4" y="707.0" width="32.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="419.4" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 2.73%)</title><rect x="416.4" y="691.0" width="32.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.4" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.10%)</title><rect x="416.4" y="675.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.4" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.10%)</title><rect x="416.4" y="659.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="419.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 2.63%)</title><rect x="417.7" y="675.0" width="31.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.7" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 2.63%)</title><rect x="417.7" y="659.0" width="31.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.7" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (202 samples, 2.63%)</title><rect x="417.7" y="643.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.7" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.43%)</title><rect x="417.7" y="627.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 0.43%)</title><rect x="417.7" y="611.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.7" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (31 samples, 0.40%)</title><rect x="417.7" y="595.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.14%)</title><rect x="417.7" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="417.7" y="563.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="417.7" y="547.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="417.7" y="531.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="420.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.12%)</title><rect x="418.0" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.0" y="542.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="418.0" y="515.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="421.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (20 samples, 0.26%)</title><rect x="419.4" y="579.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="419.4" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="419.4" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="419.4" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="419.4" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="419.4" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="422.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="419.7" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="419.7" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="419.7" y="531.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="422.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (8 samples, 0.10%)</title><rect x="420.3" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (8 samples, 0.10%)</title><rect x="420.3" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="420.3" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="420.3" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (3 samples, 0.04%)</title><rect x="420.3" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (3 samples, 0.04%)</title><rect x="420.3" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="423.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (5 samples, 0.07%)</title><rect x="420.7" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="420.7" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="420.7" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (2 samples, 0.03%)</title><rect x="420.7" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.7" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (2 samples, 0.03%)</title><rect x="420.7" y="467.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="423.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="421.0" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.04%)</title><rect x="421.0" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.04%)</title><rect x="421.0" y="483.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (6 samples, 0.08%)</title><rect x="421.5" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="421.5" y="547.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="421.5" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="421.5" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="421.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.5" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="421.5" y="483.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="424.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="422.4" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="422.4" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="422.4" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.39%)</title><rect x="422.7" y="627.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.7" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (13 samples, 0.17%)</title><rect x="422.7" y="611.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="425.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.05%)</title><rect x="424.7" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.05%)</title><rect x="424.7" y="595.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="427.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="425.4" y="611.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="425.4" y="595.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="606.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.10%)</title><rect x="425.4" y="579.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="428.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="426.7" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="426.7" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="426.7" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.7" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="426.7" y="531.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="429.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="427.3" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="427.3" y="611.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="430.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.17%)</title><rect x="427.7" y="627.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.17%)</title><rect x="427.7" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.17%)</title><rect x="427.7" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="427.7" y="579.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="430.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="428.7" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.7" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="428.7" y="563.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="431.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.61%)</title><rect x="429.7" y="627.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.61%)</title><rect x="429.7" y="611.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.7" y="622.0"></text>
</g>
<g>
<title>char[] (74 samples, 0.96%)</title><rect x="429.7" y="595.0" width="11.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.14%)</title><rect x="441.0" y="595.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.51%)</title><rect x="442.7" y="595.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.51%)</title><rect x="442.7" y="579.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.51%)</title><rect x="442.7" y="563.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.7" y="574.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.51%)</title><rect x="442.7" y="547.0" width="6.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="445.7" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13331] (224 samples, 2.92%)</title><rect x="448.7" y="707.0" width="34.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="451.7" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (224 samples, 2.92%)</title><rect x="448.7" y="691.0" width="34.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.7" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.18%)</title><rect x="448.7" y="675.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.18%)</title><rect x="448.7" y="659.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="451.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (210 samples, 2.73%)</title><rect x="450.8" y="675.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.8" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (210 samples, 2.73%)</title><rect x="450.8" y="659.0" width="32.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.8" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (210 samples, 2.73%)</title><rect x="450.8" y="643.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.8" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (44 samples, 0.57%)</title><rect x="450.8" y="627.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (44 samples, 0.57%)</title><rect x="450.8" y="611.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.8" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (34 samples, 0.44%)</title><rect x="450.8" y="595.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.17%)</title><rect x="450.8" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.17%)</title><rect x="450.8" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.17%)</title><rect x="450.8" y="547.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.16%)</title><rect x="450.8" y="531.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="453.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (21 samples, 0.27%)</title><rect x="452.8" y="579.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.12%)</title><rect x="453.0" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.12%)</title><rect x="453.0" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="453.0" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="456.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (8 samples, 0.10%)</title><rect x="454.4" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (8 samples, 0.10%)</title><rect x="454.4" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (7 samples, 0.09%)</title><rect x="454.5" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.09%)</title><rect x="454.5" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.09%)</title><rect x="454.5" y="499.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.09%)</title><rect x="454.5" y="483.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="457.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (3 samples, 0.04%)</title><rect x="455.6" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="455.6" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="455.6" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="455.6" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="455.8" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.8" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="455.8" y="483.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="458.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.13%)</title><rect x="456.1" y="595.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="456.1" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="456.1" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="456.1" y="547.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="459.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="457.0" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.0" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="457.0" y="531.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="460.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (35 samples, 0.46%)</title><rect x="457.6" y="627.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.6" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.05%)</title><rect x="457.6" y="611.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="460.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.13%)</title><rect x="458.2" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.13%)</title><rect x="458.2" y="595.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="461.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.27%)</title><rect x="459.8" y="611.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.27%)</title><rect x="459.8" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.8" y="606.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.09%)</title><rect x="459.8" y="579.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="462.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="460.8" y="579.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="463.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="461.9" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="461.9" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.09%)</title><rect x="461.9" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.9" y="558.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="461.9" y="531.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="464.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.08%)</title><rect x="463.0" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.0" y="638.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="463.0" y="611.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="466.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.63%)</title><rect x="463.9" y="627.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.63%)</title><rect x="463.9" y="611.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.9" y="622.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.72%)</title><rect x="463.9" y="595.0" width="8.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="466.9" y="606.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.05%)</title><rect x="472.4" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="475.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.43%)</title><rect x="473.0" y="595.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="476.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.43%)</title><rect x="478.0" y="595.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.43%)</title><rect x="478.0" y="579.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.43%)</title><rect x="478.0" y="563.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.0" y="574.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.43%)</title><rect x="478.0" y="547.0" width="5.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="481.0" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13316] (63 samples, 0.82%)</title><rect x="483.1" y="707.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="486.1" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (63 samples, 0.82%)</title><rect x="483.1" y="691.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.05%)</title><rect x="483.1" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.1" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.05%)</title><rect x="483.1" y="659.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="486.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (59 samples, 0.77%)</title><rect x="483.7" y="675.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59 samples, 0.77%)</title><rect x="483.7" y="659.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (59 samples, 0.77%)</title><rect x="483.7" y="643.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (55 samples, 0.72%)</title><rect x="483.7" y="627.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (55 samples, 0.72%)</title><rect x="483.7" y="611.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.7" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (54 samples, 0.70%)</title><rect x="483.7" y="595.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (54 samples, 0.70%)</title><rect x="483.7" y="579.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (54 samples, 0.70%)</title><rect x="483.7" y="563.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.collect (4 samples, 0.05%)</title><rect x="483.7" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="483.9" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$136/1641591569.accept (2 samples, 0.03%)</title><rect x="483.9" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$collect$13 (2 samples, 0.03%)</title><rect x="483.9" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="483.9" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="483.9" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="483.9" y="451.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="486.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.replication (45 samples, 0.59%)</title><rect x="484.3" y="547.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (30 samples, 0.39%)</title><rect x="484.5" y="531.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (30 samples, 0.39%)</title><rect x="484.5" y="515.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (30 samples, 0.39%)</title><rect x="484.5" y="499.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (30 samples, 0.39%)</title><rect x="484.5" y="483.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (17 samples, 0.22%)</title><rect x="485.1" y="467.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.03%)</title><rect x="485.1" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.03%)</title><rect x="485.1" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.09%)</title><rect x="485.4" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.09%)</title><rect x="485.4" y="435.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.4" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.07%)</title><rect x="485.6" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.07%)</title><rect x="485.6" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (5 samples, 0.07%)</title><rect x="485.6" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.07%)</title><rect x="485.6" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.04%)</title><rect x="485.6" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="485.6" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="485.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="485.6" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="485.6" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="485.6" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="485.6" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="485.6" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="485.6" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="488.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (5 samples, 0.07%)</title><rect x="486.5" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.5" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (5 samples, 0.07%)</title><rect x="486.5" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.5" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.07%)</title><rect x="486.5" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.5" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (5 samples, 0.07%)</title><rect x="486.5" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.5" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (5 samples, 0.07%)</title><rect x="486.5" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="486.6" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.6" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="486.6" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.6" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="486.6" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="489.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="486.9" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="486.9" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="486.9" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.9" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="486.9" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="489.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.04%)</title><rect x="487.3" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="487.4" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="487.4" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="490.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.09%)</title><rect x="487.7" y="467.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.03%)</title><rect x="487.7" y="451.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="490.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (4 samples, 0.05%)</title><rect x="488.2" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (4 samples, 0.05%)</title><rect x="488.2" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.03%)</title><rect x="488.3" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.03%)</title><rect x="488.3" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.03%)</title><rect x="488.3" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2 samples, 0.03%)</title><rect x="488.3" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="491.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2 samples, 0.03%)</title><rect x="488.8" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.create (14 samples, 0.18%)</title><rect x="489.1" y="531.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.get (14 samples, 0.18%)</title><rect x="489.1" y="515.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.04%)</title><rect x="489.1" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.03%)</title><rect x="489.3" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.03%)</title><rect x="489.3" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.03%)</title><rect x="489.3" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HttpRequestCreator.defaultBuilder (10 samples, 0.13%)</title><rect x="489.7" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="489.7" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548299704.invoke (2 samples, 0.03%)</title><rect x="489.7" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/981991839.invoke (2 samples, 0.03%)</title><rect x="489.7" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="489.7" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (4 samples, 0.05%)</title><rect x="490.0" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.0" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3 samples, 0.04%)</title><rect x="490.2" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.03%)</title><rect x="490.3" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.03%)</title><rect x="490.3" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.04%)</title><rect x="490.8" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (3 samples, 0.04%)</title><rect x="490.8" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.04%)</title><rect x="490.8" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.04%)</title><rect x="490.8" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.8" y="446.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.04%)</title><rect x="490.8" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$115/916405303.apply (3 samples, 0.04%)</title><rect x="490.8" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (3 samples, 0.04%)</title><rect x="490.8" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.8" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="490.8" y="371.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="493.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.sendActualResponse (2 samples, 0.03%)</title><rect x="491.2" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/RingTopology.primaryFor (3 samples, 0.04%)</title><rect x="491.6" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="491.6" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="491.6" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="491.7" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.04%)</title><rect x="492.2" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.2" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13324] (215 samples, 2.80%)</title><rect x="492.8" y="707.0" width="33.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="495.8" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (215 samples, 2.80%)</title><rect x="492.8" y="691.0" width="33.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.8" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.09%)</title><rect x="492.8" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.8" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.09%)</title><rect x="492.8" y="659.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="495.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (208 samples, 2.71%)</title><rect x="493.9" y="675.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.9" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (208 samples, 2.71%)</title><rect x="493.9" y="659.0" width="31.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.9" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (208 samples, 2.71%)</title><rect x="493.9" y="643.0" width="31.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.9" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (49 samples, 0.64%)</title><rect x="493.9" y="627.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (49 samples, 0.64%)</title><rect x="493.9" y="611.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.9" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.43%)</title><rect x="493.9" y="595.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.10%)</title><rect x="493.9" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.10%)</title><rect x="493.9" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.10%)</title><rect x="493.9" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="493.9" y="531.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="496.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="494.6" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.6" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="494.6" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (25 samples, 0.33%)</title><rect x="495.1" y="579.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.08%)</title><rect x="495.1" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.08%)</title><rect x="495.1" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.08%)</title><rect x="495.1" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="495.1" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.1" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="495.1" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="498.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="496.0" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="496.0" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="496.0" y="531.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="499.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (9 samples, 0.12%)</title><rect x="496.9" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (9 samples, 0.12%)</title><rect x="496.9" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="496.9" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="496.9" y="515.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (6 samples, 0.08%)</title><rect x="496.9" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (6 samples, 0.08%)</title><rect x="496.9" y="483.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="499.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (3 samples, 0.04%)</title><rect x="497.9" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="498.0" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="498.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.03%)</title><rect x="498.0" y="483.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="501.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (4 samples, 0.05%)</title><rect x="498.3" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="498.3" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="498.3" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="498.3" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="498.3" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="501.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.21%)</title><rect x="498.9" y="595.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.21%)</title><rect x="498.9" y="579.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.21%)</title><rect x="498.9" y="563.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="498.9" y="547.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="501.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="500.5" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.5" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="500.5" y="531.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="503.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 0.52%)</title><rect x="501.4" y="627.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.4" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.13%)</title><rect x="501.4" y="611.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="504.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.20%)</title><rect x="502.9" y="611.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.20%)</title><rect x="502.9" y="595.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="505.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.20%)</title><rect x="505.2" y="611.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.20%)</title><rect x="505.2" y="595.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.2" y="606.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.07%)</title><rect x="505.2" y="579.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="508.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="506.0" y="579.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="509.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.08%)</title><rect x="506.6" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.08%)</title><rect x="506.6" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.08%)</title><rect x="506.6" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="506.6" y="531.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="507.5" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="507.5" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="507.5" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="507.5" y="579.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="510.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 1.50%)</title><rect x="508.1" y="627.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 1.50%)</title><rect x="508.1" y="611.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.1" y="622.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.72%)</title><rect x="508.1" y="595.0" width="8.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="511.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.27%)</title><rect x="516.6" y="595.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="519.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.51%)</title><rect x="519.8" y="595.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.51%)</title><rect x="519.8" y="579.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.51%)</title><rect x="519.8" y="563.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.8" y="574.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.51%)</title><rect x="519.8" y="547.0" width="6.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13332] (210 samples, 2.73%)</title><rect x="525.8" y="707.0" width="32.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="528.8" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 2.73%)</title><rect x="525.8" y="691.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.8" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (210 samples, 2.73%)</title><rect x="525.8" y="675.0" width="32.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.8" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (210 samples, 2.73%)</title><rect x="525.8" y="659.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.8" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (210 samples, 2.73%)</title><rect x="525.8" y="643.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.8" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 0.49%)</title><rect x="525.8" y="627.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 0.49%)</title><rect x="525.8" y="611.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.8" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33 samples, 0.43%)</title><rect x="525.8" y="595.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.14%)</title><rect x="525.8" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="525.8" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="525.8" y="547.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="525.8" y="531.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="528.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (22 samples, 0.29%)</title><rect x="527.5" y="579.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="527.7" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="527.7" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="527.7" y="531.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="530.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (7 samples, 0.09%)</title><rect x="528.4" y="563.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (7 samples, 0.09%)</title><rect x="528.4" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (7 samples, 0.09%)</title><rect x="528.4" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="528.4" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="528.4" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.get$Lambda (5 samples, 0.07%)</title><rect x="528.4" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.4" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$259 (5 samples, 0.07%)</title><rect x="528.4" y="467.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="531.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="529.2" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="529.2" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.03%)</title><rect x="529.2" y="483.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="532.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (9 samples, 0.12%)</title><rect x="529.5" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="529.5" y="547.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.12%)</title><rect x="529.5" y="531.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.12%)</title><rect x="529.5" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="529.5" y="499.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="532.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="530.4" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.4" y="510.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="530.4" y="483.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="533.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.07%)</title><rect x="530.9" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="530.9" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="530.9" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="531.0" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.0" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="531.0" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="534.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.39%)</title><rect x="531.6" y="627.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.6" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.09%)</title><rect x="531.6" y="611.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="534.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="532.7" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="532.7" y="595.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="535.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.22%)</title><rect x="533.6" y="611.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.22%)</title><rect x="533.6" y="595.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.6" y="606.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.14%)</title><rect x="533.6" y="579.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="536.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="535.3" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="538.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="535.6" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="535.6" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="535.6" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.6" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="535.6" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="538.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="536.4" y="627.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="536.4" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="536.4" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="536.4" y="579.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="539.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="537.0" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.0" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="537.0" y="563.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="540.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.76%)</title><rect x="537.3" y="627.0" width="20.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.76%)</title><rect x="537.3" y="611.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.3" y="622.0"></text>
</g>
<g>
<title>char[] (82 samples, 1.07%)</title><rect x="537.3" y="595.0" width="12.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="540.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.26%)</title><rect x="549.9" y="595.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.43%)</title><rect x="553.0" y="595.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.43%)</title><rect x="553.0" y="579.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.43%)</title><rect x="553.0" y="563.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.0" y="574.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.43%)</title><rect x="553.0" y="547.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="556.0" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13325] (218 samples, 2.84%)</title><rect x="558.1" y="707.0" width="33.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="561.1" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (218 samples, 2.84%)</title><rect x="558.1" y="691.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.1" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (218 samples, 2.84%)</title><rect x="558.1" y="675.0" width="33.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.1" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (218 samples, 2.84%)</title><rect x="558.1" y="659.0" width="33.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.1" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (218 samples, 2.84%)</title><rect x="558.1" y="643.0" width="33.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 0.49%)</title><rect x="558.1" y="627.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 0.49%)</title><rect x="558.1" y="611.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.1" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (31 samples, 0.40%)</title><rect x="558.1" y="595.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.10%)</title><rect x="558.1" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.10%)</title><rect x="558.1" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.10%)</title><rect x="558.1" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="558.1" y="531.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="561.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="558.7" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.7" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="558.7" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="561.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (23 samples, 0.30%)</title><rect x="559.3" y="579.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="559.4" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="559.4" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="559.4" y="531.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="562.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (4 samples, 0.05%)</title><rect x="560.5" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (4 samples, 0.05%)</title><rect x="560.5" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (4 samples, 0.05%)</title><rect x="560.5" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.05%)</title><rect x="560.5" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.05%)</title><rect x="560.5" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (4 samples, 0.05%)</title><rect x="560.5" y="483.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="563.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.isProxied (11 samples, 0.14%)</title><rect x="561.1" y="563.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.14%)</title><rect x="561.1" y="547.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="561.1" y="531.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="561.1" y="515.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.14%)</title><rect x="561.1" y="499.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="564.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="562.8" y="595.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="562.8" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="562.8" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="562.8" y="547.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="565.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="563.6" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.6" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="563.6" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="566.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 0.56%)</title><rect x="563.9" y="627.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.9" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.05%)</title><rect x="563.9" y="611.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="566.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.17%)</title><rect x="564.5" y="611.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.17%)</title><rect x="564.5" y="595.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="567.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.34%)</title><rect x="566.5" y="611.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.34%)</title><rect x="566.5" y="595.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.5" y="606.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.26%)</title><rect x="566.5" y="579.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="569.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="569.6" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="572.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="570.0" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="570.0" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.04%)</title><rect x="570.0" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.0" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="570.0" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.18%)</title><rect x="570.5" y="627.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.18%)</title><rect x="570.5" y="611.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.18%)</title><rect x="570.5" y="595.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.17%)</title><rect x="570.7" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.7" y="590.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.17%)</title><rect x="570.7" y="563.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="573.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.60%)</title><rect x="572.7" y="627.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.60%)</title><rect x="572.7" y="611.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.7" y="622.0"></text>
</g>
<g>
<title>char[] (64 samples, 0.83%)</title><rect x="572.7" y="595.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="575.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.21%)</title><rect x="582.5" y="595.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="585.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.56%)</title><rect x="584.9" y="595.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.56%)</title><rect x="584.9" y="579.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 0.56%)</title><rect x="584.9" y="563.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.9" y="574.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.56%)</title><rect x="584.9" y="547.0" width="6.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="587.9" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13333] (209 samples, 2.72%)</title><rect x="591.6" y="707.0" width="32.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="594.6" y="718.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (209 samples, 2.72%)</title><rect x="591.6" y="691.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.6" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.08%)</title><rect x="591.6" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.6" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6 samples, 0.08%)</title><rect x="591.6" y="659.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="594.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (203 samples, 2.64%)</title><rect x="592.5" y="675.0" width="31.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.5" y="686.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 2.64%)</title><rect x="592.5" y="659.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.5" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (203 samples, 2.64%)</title><rect x="592.5" y="643.0" width="31.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.5" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.30%)</title><rect x="592.5" y="627.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.30%)</title><rect x="592.5" y="611.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.5" y="622.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (19 samples, 0.25%)</title><rect x="592.5" y="595.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.05%)</title><rect x="592.5" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="592.5" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="592.5" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="592.5" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.5" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="592.5" y="515.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="595.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ShardedService.entity (15 samples, 0.20%)</title><rect x="593.1" y="579.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="593.2" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="593.2" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="593.2" y="531.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="596.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeGet (9 samples, 0.12%)</title><rect x="594.0" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.execGet (9 samples, 0.12%)</title><rect x="594.0" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="594.0" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="594.0" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.get$Lambda (6 samples, 0.08%)</title><rect x="594.0" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.igorlo.AsyncReplicator$$Lambda$256 (6 samples, 0.08%)</title><rect x="594.0" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="597.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.executeAsync (3 samples, 0.04%)</title><rect x="594.9" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="595.1" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="595.1" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.03%)</title><rect x="595.1" y="483.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="598.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.05%)</title><rect x="595.4" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="595.4" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="595.4" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="595.4" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.4" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="595.4" y="531.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="598.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.30%)</title><rect x="596.0" y="627.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.0" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.03%)</title><rect x="596.0" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="599.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.09%)</title><rect x="596.3" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.09%)</title><rect x="596.3" y="595.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="599.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="597.4" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="597.4" y="595.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.4" y="606.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.10%)</title><rect x="597.4" y="579.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="600.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="598.8" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="598.8" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.07%)</title><rect x="598.8" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.8" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="598.8" y="531.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="601.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (156 samples, 2.03%)</title><rect x="599.7" y="627.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.7" y="638.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (156 samples, 2.03%)</title><rect x="599.7" y="611.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.7" y="622.0">o..</text>
</g>
<g>
<title>char[] (124 samples, 1.61%)</title><rect x="599.7" y="595.0" width="19.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="602.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="618.7" y="595.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="621.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.38%)</title><rect x="619.2" y="595.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.38%)</title><rect x="619.2" y="579.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.38%)</title><rect x="619.2" y="563.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.2" y="574.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.38%)</title><rect x="619.2" y="547.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="622.2" y="558.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13374] (223 samples, 2.90%)</title><rect x="623.7" y="707.0" width="34.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="626.7" y="718.0">[a..</text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 2.90%)</title><rect x="623.7" y="691.0" width="34.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.7" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 2.90%)</title><rect x="623.7" y="675.0" width="34.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.7" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 2.90%)</title><rect x="623.7" y="659.0" width="34.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.7" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (120 samples, 1.56%)</title><rect x="623.7" y="643.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (120 samples, 1.56%)</title><rect x="623.7" y="627.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (120 samples, 1.56%)</title><rect x="623.7" y="611.0" width="18.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="623.7" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="626.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (118 samples, 1.54%)</title><rect x="624.0" y="595.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (118 samples, 1.54%)</title><rect x="624.0" y="579.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (118 samples, 1.54%)</title><rect x="624.0" y="563.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.07%)</title><rect x="624.1" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.07%)</title><rect x="624.1" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="624.1" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="624.4" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="624.4" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="624.4" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="627.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (108 samples, 1.41%)</title><rect x="624.9" y="547.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (108 samples, 1.41%)</title><rect x="624.9" y="531.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (108 samples, 1.41%)</title><rect x="624.9" y="515.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="624.9" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="624.9" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.get$Lambda (2 samples, 0.03%)</title><rect x="625.2" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$194 (2 samples, 0.03%)</title><rect x="625.2" y="451.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="628.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (71 samples, 0.92%)</title><rect x="625.5" y="499.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (71 samples, 0.92%)</title><rect x="625.5" y="483.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (71 samples, 0.92%)</title><rect x="625.5" y="467.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (71 samples, 0.92%)</title><rect x="625.5" y="451.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (71 samples, 0.92%)</title><rect x="625.5" y="435.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (71 samples, 0.92%)</title><rect x="625.5" y="419.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (71 samples, 0.92%)</title><rect x="625.5" y="403.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (71 samples, 0.92%)</title><rect x="625.5" y="387.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="625.7" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="625.7" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.03%)</title><rect x="625.7" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="628.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="626.0" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="626.0" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="626.0" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="626.0" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="626.0" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="629.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (66 samples, 0.86%)</title><rect x="626.3" y="371.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56 samples, 0.73%)</title><rect x="626.4" y="355.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56 samples, 0.73%)</title><rect x="626.4" y="339.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (56 samples, 0.73%)</title><rect x="626.4" y="323.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (56 samples, 0.73%)</title><rect x="626.4" y="307.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="626.6" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="626.6" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="626.6" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="629.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (4 samples, 0.05%)</title><rect x="626.9" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.05%)</title><rect x="626.9" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.04%)</title><rect x="627.0" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.04%)</title><rect x="627.0" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.03%)</title><rect x="627.0" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="630.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (49 samples, 0.64%)</title><rect x="627.5" y="291.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="627.5" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.04%)</title><rect x="627.5" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.04%)</title><rect x="627.5" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.5" y="254.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="627.5" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="630.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="628.1" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="628.1" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="628.1" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.1" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="628.1" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="631.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (36 samples, 0.47%)</title><rect x="628.6" y="275.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (17 samples, 0.22%)</title><rect x="628.6" y="259.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.10%)</title><rect x="628.6" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.10%)</title><rect x="628.6" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.6" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.10%)</title><rect x="628.6" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="628.6" y="195.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.6" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="628.6" y="179.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="631.6" y="190.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (9 samples, 0.12%)</title><rect x="629.8" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.12%)</title><rect x="629.8" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (9 samples, 0.12%)</title><rect x="629.8" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (9 samples, 0.12%)</title><rect x="629.8" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.8" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (9 samples, 0.12%)</title><rect x="629.8" y="179.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.8" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (9 samples, 0.12%)</title><rect x="629.8" y="163.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (9 samples, 0.12%)</title><rect x="629.8" y="147.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (9 samples, 0.12%)</title><rect x="629.8" y="131.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.12%)</title><rect x="629.8" y="115.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.12%)</title><rect x="629.8" y="99.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="629.8" y="83.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="632.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="630.3" y="83.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="630.3" y="67.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="633.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (19 samples, 0.25%)</title><rect x="631.2" y="259.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.25%)</title><rect x="631.2" y="243.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.25%)</title><rect x="631.2" y="227.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.2" y="238.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.04%)</title><rect x="631.2" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.2" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.04%)</title><rect x="631.2" y="195.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="634.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.21%)</title><rect x="631.6" y="211.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (16 samples, 0.21%)</title><rect x="631.6" y="195.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.21%)</title><rect x="631.6" y="179.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="631.6" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="631.6" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.6" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (3 samples, 0.04%)</title><rect x="631.6" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.6" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (3 samples, 0.04%)</title><rect x="631.6" y="115.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="634.6" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.08%)</title><rect x="632.3" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.3" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.08%)</title><rect x="632.3" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.07%)</title><rect x="632.4" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.07%)</title><rect x="632.4" y="115.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="635.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.08%)</title><rect x="633.2" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.08%)</title><rect x="633.2" y="147.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="636.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.07%)</title><rect x="634.1" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="634.3" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.05%)</title><rect x="634.3" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (4 samples, 0.05%)</title><rect x="634.3" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="634.3" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.04%)</title><rect x="634.4" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.04%)</title><rect x="634.4" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.4" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="634.4" y="163.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="637.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.03%)</title><rect x="635.0" y="355.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="638.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (7 samples, 0.09%)</title><rect x="635.3" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.03%)</title><rect x="635.6" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="635.6" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="635.6" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="635.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="635.6" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="635.6" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (2 samples, 0.03%)</title><rect x="635.6" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="635.6" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="635.6" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.9" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.9" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.9" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.9" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="635.9" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="638.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (33 samples, 0.43%)</title><rect x="636.4" y="499.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="636.4" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="636.4" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="636.4" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="636.4" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="636.4" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="639.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (31 samples, 0.40%)</title><rect x="636.7" y="483.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (31 samples, 0.40%)</title><rect x="636.7" y="467.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (31 samples, 0.40%)</title><rect x="636.7" y="451.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (29 samples, 0.38%)</title><rect x="636.7" y="435.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (29 samples, 0.38%)</title><rect x="636.7" y="419.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (29 samples, 0.38%)</title><rect x="636.7" y="403.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (29 samples, 0.38%)</title><rect x="636.7" y="387.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (13 samples, 0.17%)</title><rect x="636.7" y="371.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.17%)</title><rect x="636.7" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (13 samples, 0.17%)</title><rect x="636.7" y="339.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (11 samples, 0.14%)</title><rect x="636.7" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (11 samples, 0.14%)</title><rect x="636.7" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (11 samples, 0.14%)</title><rect x="636.7" y="291.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (11 samples, 0.14%)</title><rect x="636.7" y="275.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (10 samples, 0.13%)</title><rect x="636.7" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.7" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.05%)</title><rect x="636.7" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.7" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.04%)</title><rect x="636.9" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.9" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="636.9" y="211.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="639.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (5 samples, 0.07%)</title><rect x="637.3" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.04%)</title><rect x="637.3" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.04%)</title><rect x="637.3" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="637.3" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="637.3" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.03%)</title><rect x="637.3" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.03%)</title><rect x="637.3" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="640.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="637.8" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="637.8" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.8" y="222.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="637.8" y="195.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="640.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="638.4" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="638.4" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="638.4" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="641.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (16 samples, 0.21%)</title><rect x="638.7" y="371.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (2 samples, 0.03%)</title><rect x="638.7" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="641.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (14 samples, 0.18%)</title><rect x="639.0" y="355.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.07%)</title><rect x="639.8" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.03%)</title><rect x="639.9" y="323.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="642.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.03%)</title><rect x="640.6" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.03%)</title><rect x="640.9" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="641.2" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="641.2" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="641.2" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="644.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.04%)</title><rect x="641.6" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.03%)</title><rect x="641.6" y="531.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.07%)</title><rect x="642.1" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.07%)</title><rect x="642.1" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.07%)</title><rect x="642.1" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.07%)</title><rect x="642.1" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.07%)</title><rect x="642.1" y="579.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="645.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (17 samples, 0.22%)</title><rect x="642.9" y="643.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (17 samples, 0.22%)</title><rect x="642.9" y="627.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (17 samples, 0.22%)</title><rect x="642.9" y="611.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (17 samples, 0.22%)</title><rect x="642.9" y="595.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.22%)</title><rect x="642.9" y="579.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.22%)</title><rect x="642.9" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.22%)</title><rect x="642.9" y="547.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 0.22%)</title><rect x="642.9" y="531.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (17 samples, 0.22%)</title><rect x="642.9" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17 samples, 0.22%)</title><rect x="642.9" y="499.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (17 samples, 0.22%)</title><rect x="642.9" y="483.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (16 samples, 0.21%)</title><rect x="642.9" y="467.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (15 samples, 0.20%)</title><rect x="643.0" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.20%)</title><rect x="643.0" y="435.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (15 samples, 0.20%)</title><rect x="643.0" y="419.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.20%)</title><rect x="643.0" y="403.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.09%)</title><rect x="643.0" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.04%)</title><rect x="643.0" y="371.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (3 samples, 0.04%)</title><rect x="643.5" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.04%)</title><rect x="643.5" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.04%)</title><rect x="643.5" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="643.5" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="643.5" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.03%)</title><rect x="643.5" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="646.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.10%)</title><rect x="644.1" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.10%)</title><rect x="644.1" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (8 samples, 0.10%)</title><rect x="644.1" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (8 samples, 0.10%)</title><rect x="644.1" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8 samples, 0.10%)</title><rect x="644.1" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (8 samples, 0.10%)</title><rect x="644.1" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.10%)</title><rect x="644.1" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (3 samples, 0.04%)</title><rect x="644.4" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="644.4" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="644.4" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="644.5" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="644.5" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="644.5" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="647.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.04%)</title><rect x="644.9" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (2 samples, 0.03%)</title><rect x="644.9" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (81 samples, 1.05%)</title><rect x="645.5" y="643.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (81 samples, 1.05%)</title><rect x="645.5" y="627.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (76 samples, 0.99%)</title><rect x="645.5" y="611.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (76 samples, 0.99%)</title><rect x="645.5" y="595.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (76 samples, 0.99%)</title><rect x="645.5" y="579.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (75 samples, 0.98%)</title><rect x="645.6" y="563.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (75 samples, 0.98%)</title><rect x="645.6" y="547.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (75 samples, 0.98%)</title><rect x="645.6" y="531.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (75 samples, 0.98%)</title><rect x="645.6" y="515.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (30 samples, 0.39%)</title><rect x="645.6" y="499.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 0.39%)</title><rect x="645.6" y="483.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (30 samples, 0.39%)</title><rect x="645.6" y="467.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (30 samples, 0.39%)</title><rect x="645.6" y="451.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.39%)</title><rect x="645.6" y="435.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (30 samples, 0.39%)</title><rect x="645.6" y="419.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (30 samples, 0.39%)</title><rect x="645.6" y="403.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (29 samples, 0.38%)</title><rect x="645.6" y="387.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 0.38%)</title><rect x="645.6" y="371.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (29 samples, 0.38%)</title><rect x="645.6" y="355.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="645.6" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="648.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (26 samples, 0.34%)</title><rect x="646.1" y="339.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (26 samples, 0.34%)</title><rect x="646.1" y="323.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (25 samples, 0.33%)</title><rect x="646.2" y="307.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (25 samples, 0.33%)</title><rect x="646.2" y="291.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (2 samples, 0.03%)</title><rect x="646.2" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.03%)</title><rect x="646.2" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.03%)</title><rect x="646.2" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (2 samples, 0.03%)</title><rect x="646.2" y="227.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="649.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23 samples, 0.30%)</title><rect x="646.5" y="275.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.07%)</title><rect x="646.7" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4 samples, 0.05%)</title><rect x="646.8" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.05%)</title><rect x="646.8" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.05%)</title><rect x="646.8" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="647.2" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="647.2" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="647.2" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.03%)</title><rect x="647.2" y="147.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="650.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="647.5" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (2 samples, 0.03%)</title><rect x="647.8" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="650.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.17%)</title><rect x="648.1" y="259.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (13 samples, 0.17%)</title><rect x="648.1" y="243.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (13 samples, 0.17%)</title><rect x="648.1" y="227.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.05%)</title><rect x="648.2" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="648.2" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.04%)</title><rect x="648.2" y="179.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="651.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="649.0" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="649.0" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (3 samples, 0.04%)</title><rect x="649.0" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="649.0" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.04%)</title><rect x="649.0" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.04%)</title><rect x="649.0" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.0" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="649.0" y="115.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="652.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (4 samples, 0.05%)</title><rect x="649.5" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="649.6" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="649.6" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (3 samples, 0.04%)</title><rect x="649.6" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="649.6" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.04%)</title><rect x="649.6" y="131.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.04%)</title><rect x="649.6" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.6" y="126.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="649.6" y="99.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="652.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (45 samples, 0.59%)</title><rect x="650.2" y="499.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.07%)</title><rect x="650.4" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.07%)</title><rect x="650.4" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.07%)</title><rect x="650.4" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.4" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="650.4" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="650.4" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.4" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="650.4" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="653.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.16%)</title><rect x="651.2" y="483.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.16%)</title><rect x="651.2" y="467.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.16%)</title><rect x="651.2" y="451.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (9 samples, 0.12%)</title><rect x="651.5" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (9 samples, 0.12%)</title><rect x="651.5" y="419.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.12%)</title><rect x="651.5" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="651.6" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="651.6" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="651.6" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="651.6" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="651.6" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="651.6" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="651.6" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="651.6" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="651.6" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="654.6" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.07%)</title><rect x="651.9" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.07%)</title><rect x="651.9" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.07%)</title><rect x="651.9" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.07%)</title><rect x="651.9" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="654.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (27 samples, 0.35%)</title><rect x="653.0" y="483.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="653.1" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="653.1" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.1" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="653.1" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="656.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.12%)</title><rect x="653.5" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.12%)</title><rect x="653.5" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="653.5" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="656.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.07%)</title><rect x="654.1" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.1" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="654.1" y="419.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="657.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (15 samples, 0.20%)</title><rect x="654.8" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="654.8" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="654.8" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="654.8" y="419.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="657.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.07%)</title><rect x="655.1" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="655.1" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="656.1" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.04%)</title><rect x="656.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="656.1" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="656.1" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.1" y="414.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="656.1" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.04%)</title><rect x="656.7" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.03%)</title><rect x="656.8" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="656.8" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="656.8" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5 samples, 0.07%)</title><rect x="657.1" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.07%)</title><rect x="657.1" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.07%)</title><rect x="657.1" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (5 samples, 0.07%)</title><rect x="657.1" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.07%)</title><rect x="657.1" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.07%)</title><rect x="657.1" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5 samples, 0.07%)</title><rect x="657.1" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.07%)</title><rect x="657.1" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (4 samples, 0.05%)</title><rect x="657.1" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.05%)</title><rect x="657.1" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.05%)</title><rect x="657.1" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.04%)</title><rect x="657.1" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="657.1" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.04%)</title><rect x="657.1" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.1" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.04%)</title><rect x="657.1" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="660.1" y="398.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13375] (217 samples, 2.82%)</title><rect x="657.9" y="707.0" width="33.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="660.9" y="718.0">[a..</text>
</g>
<g>
<title>java/lang/Thread.run (217 samples, 2.82%)</title><rect x="657.9" y="691.0" width="33.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.9" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (217 samples, 2.82%)</title><rect x="657.9" y="675.0" width="33.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.9" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (217 samples, 2.82%)</title><rect x="657.9" y="659.0" width="33.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.9" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (114 samples, 1.48%)</title><rect x="657.9" y="643.0" width="17.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (114 samples, 1.48%)</title><rect x="657.9" y="627.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (114 samples, 1.48%)</title><rect x="657.9" y="611.0" width="17.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="657.9" y="595.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="660.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (112 samples, 1.46%)</title><rect x="658.2" y="595.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (112 samples, 1.46%)</title><rect x="658.2" y="579.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (112 samples, 1.46%)</title><rect x="658.2" y="563.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="658.2" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="658.2" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (110 samples, 1.43%)</title><rect x="658.5" y="547.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (110 samples, 1.43%)</title><rect x="658.5" y="531.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (110 samples, 1.43%)</title><rect x="658.5" y="515.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (72 samples, 0.94%)</title><rect x="658.7" y="499.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (72 samples, 0.94%)</title><rect x="658.7" y="483.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (71 samples, 0.92%)</title><rect x="658.7" y="467.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (71 samples, 0.92%)</title><rect x="658.7" y="451.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (71 samples, 0.92%)</title><rect x="658.7" y="435.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (71 samples, 0.92%)</title><rect x="658.7" y="419.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (71 samples, 0.92%)</title><rect x="658.7" y="403.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (71 samples, 0.92%)</title><rect x="658.7" y="387.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="658.7" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="658.7" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="659.0" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="659.0" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (67 samples, 0.87%)</title><rect x="659.3" y="371.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (60 samples, 0.78%)</title><rect x="659.3" y="355.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (60 samples, 0.78%)</title><rect x="659.3" y="339.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (59 samples, 0.77%)</title><rect x="659.3" y="323.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (59 samples, 0.77%)</title><rect x="659.3" y="307.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="659.3" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="659.3" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.04%)</title><rect x="659.3" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="662.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="659.8" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="662.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.03%)</title><rect x="660.1" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.03%)</title><rect x="660.1" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (52 samples, 0.68%)</title><rect x="660.4" y="291.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.05%)</title><rect x="660.4" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.05%)</title><rect x="660.4" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4 samples, 0.05%)</title><rect x="660.4" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.4" y="254.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="660.4" y="227.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="663.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="661.0" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="661.0" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.0" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="661.0" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="664.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.09%)</title><rect x="661.3" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="661.3" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="661.3" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.3" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="661.3" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="664.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (35 samples, 0.46%)</title><rect x="662.5" y="275.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (12 samples, 0.16%)</title><rect x="662.5" y="259.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.12%)</title><rect x="662.5" y="243.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.12%)</title><rect x="662.5" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.12%)</title><rect x="662.5" y="211.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.12%)</title><rect x="662.5" y="195.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.5" y="206.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="662.5" y="179.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="665.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (2 samples, 0.03%)</title><rect x="664.1" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.03%)</title><rect x="664.1" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (2 samples, 0.03%)</title><rect x="664.1" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2 samples, 0.03%)</title><rect x="664.1" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.1" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (2 samples, 0.03%)</title><rect x="664.1" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.1" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2 samples, 0.03%)</title><rect x="664.1" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (2 samples, 0.03%)</title><rect x="664.1" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2 samples, 0.03%)</title><rect x="664.1" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="664.1" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="664.1" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (23 samples, 0.30%)</title><rect x="664.4" y="259.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.30%)</title><rect x="664.4" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.4" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.30%)</title><rect x="664.4" y="227.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="664.4" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="667.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (19 samples, 0.25%)</title><rect x="664.7" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (19 samples, 0.25%)</title><rect x="664.7" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.25%)</title><rect x="664.7" y="179.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="664.7" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="664.7" y="147.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (5 samples, 0.07%)</title><rect x="664.7" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.7" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (5 samples, 0.07%)</title><rect x="664.7" y="115.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="667.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="665.4" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.accept (2 samples, 0.03%)</title><rect x="665.4" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="665.4" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="665.4" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="665.4" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="665.4" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="665.4" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="665.4" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="665.4" y="35.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="668.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (8 samples, 0.10%)</title><rect x="665.7" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (8 samples, 0.10%)</title><rect x="665.7" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.07%)</title><rect x="665.7" y="131.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="665.7" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="665.7" y="99.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="668.7" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.04%)</title><rect x="666.5" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.5" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.04%)</title><rect x="666.5" y="115.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="669.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="667.0" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.05%)</title><rect x="667.0" y="147.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="667.6" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="667.6" y="195.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="670.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.03%)</title><rect x="668.0" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="668.0" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="668.0" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="671.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="668.7" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.04%)</title><rect x="668.7" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="668.7" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="668.7" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.04%)</title><rect x="668.7" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.04%)</title><rect x="668.7" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.04%)</title><rect x="668.7" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (3 samples, 0.04%)</title><rect x="668.7" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.04%)</title><rect x="668.7" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.04%)</title><rect x="668.7" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="668.7" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="668.7" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (2 samples, 0.03%)</title><rect x="668.7" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (2 samples, 0.03%)</title><rect x="668.7" y="147.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="671.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="669.1" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="669.7" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="669.7" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="669.7" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="672.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (35 samples, 0.46%)</title><rect x="670.0" y="499.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (34 samples, 0.44%)</title><rect x="670.2" y="483.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="670.2" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="670.2" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.get$Lambda (2 samples, 0.03%)</title><rect x="670.2" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$148 (2 samples, 0.03%)</title><rect x="670.2" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (30 samples, 0.39%)</title><rect x="670.5" y="467.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (30 samples, 0.39%)</title><rect x="670.5" y="451.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (28 samples, 0.36%)</title><rect x="670.5" y="435.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (28 samples, 0.36%)</title><rect x="670.5" y="419.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (28 samples, 0.36%)</title><rect x="670.5" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (28 samples, 0.36%)</title><rect x="670.5" y="387.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (6 samples, 0.08%)</title><rect x="670.5" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.08%)</title><rect x="670.5" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (6 samples, 0.08%)</title><rect x="670.5" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (6 samples, 0.08%)</title><rect x="670.5" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (6 samples, 0.08%)</title><rect x="670.5" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (6 samples, 0.08%)</title><rect x="670.5" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (6 samples, 0.08%)</title><rect x="670.5" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5 samples, 0.07%)</title><rect x="670.5" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.5" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="670.5" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.5" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.03%)</title><rect x="670.5" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.5" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="670.5" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="673.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.04%)</title><rect x="670.8" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.03%)</title><rect x="670.8" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.03%)</title><rect x="670.8" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="670.8" y="195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="670.8" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.03%)</title><rect x="670.8" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.03%)</title><rect x="670.8" y="147.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="673.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (22 samples, 0.29%)</title><rect x="671.4" y="371.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (22 samples, 0.29%)</title><rect x="671.4" y="355.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (9 samples, 0.12%)</title><rect x="672.3" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (6 samples, 0.08%)</title><rect x="672.8" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.03%)</title><rect x="672.8" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="675.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.03%)</title><rect x="673.1" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.03%)</title><rect x="673.1" y="291.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="676.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.03%)</title><rect x="673.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.03%)</title><rect x="673.4" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="676.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.05%)</title><rect x="673.7" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.04%)</title><rect x="673.9" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (3 samples, 0.04%)</title><rect x="674.3" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.3" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.03%)</title><rect x="674.5" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.run (2 samples, 0.03%)</title><rect x="674.5" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.03%)</title><rect x="674.5" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.5" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.03%)</title><rect x="674.5" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="674.8" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="674.8" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="674.8" y="403.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="677.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.03%)</title><rect x="675.1" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="675.1" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="675.1" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="678.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.05%)</title><rect x="675.4" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.05%)</title><rect x="675.4" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.05%)</title><rect x="675.4" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.05%)</title><rect x="675.4" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.05%)</title><rect x="675.4" y="579.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="678.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (11 samples, 0.14%)</title><rect x="676.0" y="643.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.14%)</title><rect x="676.0" y="627.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.14%)</title><rect x="676.0" y="611.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.14%)</title><rect x="676.0" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.14%)</title><rect x="676.0" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.14%)</title><rect x="676.0" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.14%)</title><rect x="676.0" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.14%)</title><rect x="676.0" y="531.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.14%)</title><rect x="676.0" y="515.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.14%)</title><rect x="676.0" y="499.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.14%)</title><rect x="676.0" y="483.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (10 samples, 0.13%)</title><rect x="676.0" y="467.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 0.12%)</title><rect x="676.2" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="676.2" y="435.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9 samples, 0.12%)</title><rect x="676.2" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.12%)</title><rect x="676.2" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.08%)</title><rect x="676.2" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="676.2" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="679.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.apply (3 samples, 0.04%)</title><rect x="676.5" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.04%)</title><rect x="676.5" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.04%)</title><rect x="676.5" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.03%)</title><rect x="676.6" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.03%)</title><rect x="676.6" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="676.6" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="676.6" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="676.6" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="676.6" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="679.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.04%)</title><rect x="677.1" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.04%)</title><rect x="677.1" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (3 samples, 0.04%)</title><rect x="677.1" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.04%)</title><rect x="677.1" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.04%)</title><rect x="677.1" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (3 samples, 0.04%)</title><rect x="677.1" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.04%)</title><rect x="677.1" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (88 samples, 1.15%)</title><rect x="677.7" y="643.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (88 samples, 1.15%)</title><rect x="677.7" y="627.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (72 samples, 0.94%)</title><rect x="677.7" y="611.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (72 samples, 0.94%)</title><rect x="677.7" y="595.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (72 samples, 0.94%)</title><rect x="677.7" y="579.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.04%)</title><rect x="677.7" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3 samples, 0.04%)</title><rect x="677.7" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.04%)</title><rect x="677.7" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.04%)</title><rect x="677.7" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (3 samples, 0.04%)</title><rect x="677.7" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (3 samples, 0.04%)</title><rect x="677.7" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="677.7" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.04%)</title><rect x="677.7" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.04%)</title><rect x="677.7" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.7" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="677.7" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="680.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (69 samples, 0.90%)</title><rect x="678.2" y="563.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (69 samples, 0.90%)</title><rect x="678.2" y="547.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (69 samples, 0.90%)</title><rect x="678.2" y="531.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (69 samples, 0.90%)</title><rect x="678.2" y="515.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (27 samples, 0.35%)</title><rect x="678.2" y="499.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.35%)</title><rect x="678.2" y="483.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.35%)</title><rect x="678.2" y="467.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (27 samples, 0.35%)</title><rect x="678.2" y="451.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.35%)</title><rect x="678.2" y="435.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (27 samples, 0.35%)</title><rect x="678.2" y="419.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.35%)</title><rect x="678.2" y="403.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.35%)</title><rect x="678.2" y="387.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.35%)</title><rect x="678.2" y="371.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 0.35%)</title><rect x="678.2" y="355.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="678.2" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="681.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (25 samples, 0.33%)</title><rect x="678.5" y="339.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (25 samples, 0.33%)</title><rect x="678.5" y="323.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.05%)</title><rect x="678.5" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.05%)</title><rect x="678.5" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.04%)</title><rect x="678.5" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="681.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (21 samples, 0.27%)</title><rect x="679.1" y="307.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (19 samples, 0.25%)</title><rect x="679.4" y="291.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (2 samples, 0.03%)</title><rect x="679.4" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.03%)</title><rect x="679.4" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.03%)</title><rect x="679.4" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17 samples, 0.22%)</title><rect x="679.7" y="275.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.07%)</title><rect x="679.7" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.05%)</title><rect x="679.9" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (4 samples, 0.05%)</title><rect x="679.9" y="227.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="682.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="680.5" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="681.0" y="259.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (9 samples, 0.12%)</title><rect x="681.0" y="243.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (9 samples, 0.12%)</title><rect x="681.0" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="681.1" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="681.1" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.03%)</title><rect x="681.4" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.03%)</title><rect x="681.4" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="681.7" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="681.7" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="681.7" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="681.7" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="681.7" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="681.7" y="131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="681.7" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="684.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.03%)</title><rect x="682.0" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (42 samples, 0.55%)</title><rect x="682.3" y="499.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.03%)</title><rect x="682.5" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="682.5" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="682.5" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="682.5" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="682.5" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.5" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="682.5" y="403.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="685.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.04%)</title><rect x="682.8" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="682.9" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="682.9" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (13 samples, 0.17%)</title><rect x="683.3" y="483.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.17%)</title><rect x="683.3" y="467.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.17%)</title><rect x="683.3" y="451.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (10 samples, 0.13%)</title><rect x="683.4" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (10 samples, 0.13%)</title><rect x="683.4" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.13%)</title><rect x="683.4" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="683.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="683.4" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (3 samples, 0.04%)</title><rect x="683.4" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (3 samples, 0.04%)</title><rect x="683.4" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="686.4" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.05%)</title><rect x="683.9" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.05%)</title><rect x="683.9" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="683.9" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="683.9" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="683.9" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="686.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="684.2" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.2" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="684.2" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="687.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="684.5" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.04%)</title><rect x="684.5" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="687.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="684.9" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="684.9" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="687.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (23 samples, 0.30%)</title><rect x="685.3" y="483.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="685.3" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="688.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="685.6" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="685.6" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.6" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="685.6" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="688.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="686.0" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="686.0" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="686.2" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.2" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="686.2" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="689.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (15 samples, 0.20%)</title><rect x="686.5" y="467.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="686.5" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="686.5" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="686.5" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="686.9" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.9" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="686.9" y="403.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="689.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.04%)</title><rect x="687.2" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.04%)</title><rect x="687.2" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.2" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="687.2" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="690.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="687.7" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="687.7" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="687.7" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="687.7" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="687.7" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="690.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.05%)</title><rect x="688.2" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (3 samples, 0.04%)</title><rect x="688.3" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.04%)</title><rect x="688.3" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.3" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="688.3" y="403.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="691.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (16 samples, 0.21%)</title><rect x="688.8" y="611.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.21%)</title><rect x="688.8" y="595.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16 samples, 0.21%)</title><rect x="688.8" y="579.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (16 samples, 0.21%)</title><rect x="688.8" y="563.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16 samples, 0.21%)</title><rect x="688.8" y="547.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (15 samples, 0.20%)</title><rect x="688.8" y="531.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (3 samples, 0.04%)</title><rect x="688.9" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="691.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.4" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="689.4" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (9 samples, 0.12%)</title><rect x="689.7" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (9 samples, 0.12%)</title><rect x="689.7" y="499.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (7 samples, 0.09%)</title><rect x="689.7" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7 samples, 0.09%)</title><rect x="689.7" y="467.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7 samples, 0.09%)</title><rect x="689.7" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.04%)</title><rect x="689.7" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.7" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.03%)</title><rect x="689.7" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.05%)</title><rect x="690.2" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.05%)</title><rect x="690.2" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.03%)</title><rect x="690.2" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="690.2" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.2" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="690.2" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.2" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.03%)</title><rect x="690.2" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.03%)</title><rect x="690.8" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.03%)</title><rect x="690.8" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.03%)</title><rect x="690.8" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="690.8" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="690.8" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="690.8" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="690.8" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (2 samples, 0.03%)</title><rect x="690.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.03%)</title><rect x="690.8" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="690.8" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="690.8" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.03%)</title><rect x="690.8" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (2 samples, 0.03%)</title><rect x="690.8" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.03%)</title><rect x="690.8" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2 samples, 0.03%)</title><rect x="690.8" y="259.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="693.8" y="270.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13376] (233 samples, 3.03%)</title><rect x="691.2" y="707.0" width="35.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="694.2" y="718.0">[as..</text>
</g>
<g>
<title>java/lang/Thread.run (233 samples, 3.03%)</title><rect x="691.2" y="691.0" width="35.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (233 samples, 3.03%)</title><rect x="691.2" y="675.0" width="35.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.2" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (233 samples, 3.03%)</title><rect x="691.2" y="659.0" width="35.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.2" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (118 samples, 1.54%)</title><rect x="691.2" y="643.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (118 samples, 1.54%)</title><rect x="691.2" y="627.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (118 samples, 1.54%)</title><rect x="691.2" y="611.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (117 samples, 1.52%)</title><rect x="691.4" y="595.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (117 samples, 1.52%)</title><rect x="691.4" y="579.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (117 samples, 1.52%)</title><rect x="691.4" y="563.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="691.4" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="691.4" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="691.4" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="694.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (110 samples, 1.43%)</title><rect x="691.7" y="547.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (110 samples, 1.43%)</title><rect x="691.7" y="531.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (110 samples, 1.43%)</title><rect x="691.7" y="515.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="691.7" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="691.7" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.get$Lambda (2 samples, 0.03%)</title><rect x="691.9" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$194 (2 samples, 0.03%)</title><rect x="691.9" y="451.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="694.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (76 samples, 0.99%)</title><rect x="692.2" y="499.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (76 samples, 0.99%)</title><rect x="692.2" y="483.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 0.99%)</title><rect x="692.2" y="467.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (76 samples, 0.99%)</title><rect x="692.2" y="451.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (76 samples, 0.99%)</title><rect x="692.2" y="435.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (76 samples, 0.99%)</title><rect x="692.2" y="419.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (76 samples, 0.99%)</title><rect x="692.2" y="403.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (76 samples, 0.99%)</title><rect x="692.2" y="387.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (75 samples, 0.98%)</title><rect x="692.3" y="371.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (68 samples, 0.89%)</title><rect x="692.5" y="355.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (68 samples, 0.89%)</title><rect x="692.5" y="339.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (65 samples, 0.85%)</title><rect x="692.6" y="323.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (65 samples, 0.85%)</title><rect x="692.6" y="307.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.03%)</title><rect x="692.9" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.03%)</title><rect x="692.9" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.03%)</title><rect x="692.9" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.03%)</title><rect x="692.9" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (61 samples, 0.79%)</title><rect x="693.2" y="291.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.08%)</title><rect x="693.2" y="275.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.08%)</title><rect x="693.2" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6 samples, 0.08%)</title><rect x="693.2" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.2" y="254.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="693.2" y="227.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="696.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.08%)</title><rect x="694.2" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.08%)</title><rect x="694.2" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="694.2" y="243.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="697.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.09%)</title><rect x="695.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="695.1" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="695.1" y="243.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.1" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="695.1" y="227.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="698.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (37 samples, 0.48%)</title><rect x="696.3" y="275.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.25%)</title><rect x="696.3" y="259.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.10%)</title><rect x="696.3" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.10%)</title><rect x="696.3" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.3" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.10%)</title><rect x="696.3" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="696.3" y="195.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.3" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="696.3" y="179.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="699.3" y="190.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (10 samples, 0.13%)</title><rect x="697.7" y="243.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (10 samples, 0.13%)</title><rect x="697.7" y="227.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (10 samples, 0.13%)</title><rect x="697.7" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (10 samples, 0.13%)</title><rect x="697.7" y="195.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (10 samples, 0.13%)</title><rect x="697.7" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (10 samples, 0.13%)</title><rect x="697.7" y="163.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (10 samples, 0.13%)</title><rect x="697.7" y="147.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (10 samples, 0.13%)</title><rect x="697.7" y="131.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="697.7" y="115.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="697.7" y="99.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="697.7" y="83.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="700.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="698.2" y="83.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.2" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="698.2" y="67.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="701.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (18 samples, 0.23%)</title><rect x="699.2" y="259.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.23%)</title><rect x="699.2" y="243.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.23%)</title><rect x="699.2" y="227.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.18%)</title><rect x="699.7" y="211.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (14 samples, 0.18%)</title><rect x="699.7" y="195.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.18%)</title><rect x="699.7" y="179.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="699.7" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="699.7" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (6 samples, 0.08%)</title><rect x="699.7" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.7" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (6 samples, 0.08%)</title><rect x="699.7" y="115.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="702.7" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.04%)</title><rect x="700.6" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.6" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.04%)</title><rect x="700.6" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="700.8" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="700.8" y="115.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="703.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.07%)</title><rect x="701.1" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.07%)</title><rect x="701.1" y="147.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="704.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.05%)</title><rect x="702.0" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="702.1" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.04%)</title><rect x="702.1" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="705.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="702.6" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="702.6" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="702.6" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="705.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="702.9" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="702.9" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="702.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.5" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.5" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="703.5" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="706.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (30 samples, 0.39%)</title><rect x="704.0" y="499.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (29 samples, 0.38%)</title><rect x="704.1" y="483.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (26 samples, 0.34%)</title><rect x="704.1" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (26 samples, 0.34%)</title><rect x="704.1" y="451.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 0.34%)</title><rect x="704.1" y="435.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (26 samples, 0.34%)</title><rect x="704.1" y="419.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (26 samples, 0.34%)</title><rect x="704.1" y="403.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (26 samples, 0.34%)</title><rect x="704.1" y="387.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (9 samples, 0.12%)</title><rect x="704.3" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9 samples, 0.12%)</title><rect x="704.3" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (9 samples, 0.12%)</title><rect x="704.3" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (9 samples, 0.12%)</title><rect x="704.3" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (9 samples, 0.12%)</title><rect x="704.3" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (9 samples, 0.12%)</title><rect x="704.3" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (9 samples, 0.12%)</title><rect x="704.3" y="275.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (7 samples, 0.09%)</title><rect x="704.3" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.3" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.04%)</title><rect x="704.3" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.3" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.03%)</title><rect x="704.5" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.5" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="704.5" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="707.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4 samples, 0.05%)</title><rect x="704.8" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.04%)</title><rect x="704.9" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.04%)</title><rect x="704.9" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.9" y="222.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.04%)</title><rect x="704.9" y="195.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="707.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.03%)</title><rect x="705.4" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (16 samples, 0.21%)</title><rect x="705.7" y="371.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (2 samples, 0.03%)</title><rect x="705.7" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (14 samples, 0.18%)</title><rect x="706.0" y="355.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (3 samples, 0.04%)</title><rect x="706.4" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="709.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="706.9" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="709.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.04%)</title><rect x="707.2" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="707.7" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.04%)</title><rect x="707.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.03%)</title><rect x="707.7" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.03%)</title><rect x="707.7" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="710.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.03%)</title><rect x="708.3" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="708.3" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="708.3" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="711.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3 samples, 0.04%)</title><rect x="708.6" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.04%)</title><rect x="708.6" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="708.6" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.04%)</title><rect x="708.6" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.03%)</title><rect x="709.1" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.03%)</title><rect x="709.1" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="712.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.05%)</title><rect x="709.4" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.05%)</title><rect x="709.4" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.05%)</title><rect x="709.4" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.05%)</title><rect x="709.4" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.05%)</title><rect x="709.4" y="579.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="712.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (13 samples, 0.17%)</title><rect x="710.0" y="643.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (13 samples, 0.17%)</title><rect x="710.0" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (13 samples, 0.17%)</title><rect x="710.0" y="611.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (13 samples, 0.17%)</title><rect x="710.0" y="595.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.17%)</title><rect x="710.0" y="579.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.17%)</title><rect x="710.0" y="563.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.17%)</title><rect x="710.0" y="547.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.17%)</title><rect x="710.0" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13 samples, 0.17%)</title><rect x="710.0" y="515.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13 samples, 0.17%)</title><rect x="710.0" y="499.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (13 samples, 0.17%)</title><rect x="710.0" y="483.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (13 samples, 0.17%)</title><rect x="710.0" y="467.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.16%)</title><rect x="710.1" y="451.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.16%)</title><rect x="710.1" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12 samples, 0.16%)</title><rect x="710.1" y="419.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.16%)</title><rect x="710.1" y="403.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.04%)</title><rect x="710.1" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="710.1" y="371.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="713.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.12%)</title><rect x="710.6" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.12%)</title><rect x="710.6" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (9 samples, 0.12%)</title><rect x="710.6" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.12%)</title><rect x="710.6" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.12%)</title><rect x="710.6" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (9 samples, 0.12%)</title><rect x="710.6" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 0.12%)</title><rect x="710.6" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="710.6" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="710.6" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$250/822975415.get$Lambda (2 samples, 0.03%)</title><rect x="710.6" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$250 (2 samples, 0.03%)</title><rect x="710.6" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="713.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="710.9" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="710.9" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="710.9" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="713.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (2 samples, 0.03%)</title><rect x="711.4" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="711.4" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="711.4" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.03%)</title><rect x="711.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (2 samples, 0.03%)</title><rect x="711.7" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (98 samples, 1.28%)</title><rect x="712.0" y="643.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (98 samples, 1.28%)</title><rect x="712.0" y="627.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (78 samples, 1.02%)</title><rect x="712.0" y="611.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (78 samples, 1.02%)</title><rect x="712.0" y="595.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (78 samples, 1.02%)</title><rect x="712.0" y="579.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.03%)</title><rect x="712.0" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.03%)</title><rect x="712.0" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.03%)</title><rect x="712.0" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.03%)</title><rect x="712.0" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (2 samples, 0.03%)</title><rect x="712.0" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/398690014.invoke (2 samples, 0.03%)</title><rect x="712.0" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="712.0" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="712.0" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="712.0" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="712.0" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (76 samples, 0.99%)</title><rect x="712.3" y="563.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (76 samples, 0.99%)</title><rect x="712.3" y="547.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (76 samples, 0.99%)</title><rect x="712.3" y="531.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (76 samples, 0.99%)</title><rect x="712.3" y="515.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 0.47%)</title><rect x="712.3" y="499.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.47%)</title><rect x="712.3" y="483.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 0.47%)</title><rect x="712.3" y="467.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (36 samples, 0.47%)</title><rect x="712.3" y="451.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.47%)</title><rect x="712.3" y="435.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36 samples, 0.47%)</title><rect x="712.3" y="419.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 0.47%)</title><rect x="712.3" y="403.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (34 samples, 0.44%)</title><rect x="712.3" y="387.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.44%)</title><rect x="712.3" y="371.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (33 samples, 0.43%)</title><rect x="712.3" y="355.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (30 samples, 0.39%)</title><rect x="712.4" y="339.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (30 samples, 0.39%)</title><rect x="712.4" y="323.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (29 samples, 0.38%)</title><rect x="712.6" y="307.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (28 samples, 0.36%)</title><rect x="712.7" y="291.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.7" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$119/1774724669.apply (3 samples, 0.04%)</title><rect x="712.7" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (3 samples, 0.04%)</title><rect x="712.7" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (3 samples, 0.04%)</title><rect x="712.7" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (2 samples, 0.03%)</title><rect x="712.7" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (25 samples, 0.33%)</title><rect x="713.2" y="275.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.04%)</title><rect x="713.2" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.04%)</title><rect x="713.2" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.04%)</title><rect x="713.2" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.04%)</title><rect x="713.2" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="713.4" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="713.4" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.4" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="713.4" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.4" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.03%)</title><rect x="713.4" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="716.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="713.7" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="713.7" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (2 samples, 0.03%)</title><rect x="714.0" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="717.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.22%)</title><rect x="714.4" y="259.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (17 samples, 0.22%)</title><rect x="714.4" y="243.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 0.22%)</title><rect x="714.4" y="227.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="714.4" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="714.4" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1289573784.get$Lambda (3 samples, 0.04%)</title><rect x="714.7" y="179.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (3 samples, 0.04%)</title><rect x="714.7" y="163.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="717.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (5 samples, 0.07%)</title><rect x="715.8" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="715.8" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (5 samples, 0.07%)</title><rect x="715.8" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="715.8" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.05%)</title><rect x="716.0" y="147.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.05%)</title><rect x="716.0" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.0" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="716.0" y="115.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="719.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.04%)</title><rect x="716.6" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="716.7" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="716.7" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (2 samples, 0.03%)</title><rect x="716.7" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="716.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="716.7" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="716.7" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.7" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="716.7" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="719.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.apply (2 samples, 0.03%)</title><rect x="717.0" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.03%)</title><rect x="717.0" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="717.0" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="717.0" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="720.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (2 samples, 0.03%)</title><rect x="717.5" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.03%)</title><rect x="717.5" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (2 samples, 0.03%)</title><rect x="717.5" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="720.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (40 samples, 0.52%)</title><rect x="717.8" y="499.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (4 samples, 0.05%)</title><rect x="717.8" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="717.8" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="717.8" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.05%)</title><rect x="717.8" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="717.8" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.8" y="430.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="717.8" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="720.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2 samples, 0.03%)</title><rect x="718.4" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (9 samples, 0.12%)</title><rect x="718.7" y="483.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.12%)</title><rect x="718.7" y="467.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.12%)</title><rect x="718.7" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="718.9" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="721.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.08%)</title><rect x="719.2" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (6 samples, 0.08%)</title><rect x="719.2" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.08%)</title><rect x="719.2" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="719.2" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="719.2" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="719.2" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.2" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="719.2" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="722.2" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.03%)</title><rect x="719.5" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.03%)</title><rect x="719.5" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="719.5" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.5" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="719.5" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="722.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="719.8" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="719.8" y="371.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="722.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (25 samples, 0.33%)</title><rect x="720.1" y="483.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="720.1" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="720.1" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.1" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="720.1" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="723.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="720.4" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="720.4" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="720.4" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="723.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="720.7" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.7" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="720.7" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="723.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (19 samples, 0.25%)</title><rect x="721.0" y="467.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="721.0" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="721.0" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="721.0" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="724.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="721.5" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.5" y="430.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="721.5" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="724.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.04%)</title><rect x="722.0" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.04%)</title><rect x="722.0" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="722.0" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="725.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="722.4" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="722.4" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="722.4" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="722.7" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="722.7" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="722.7" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="722.7" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="722.7" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="722.7" y="371.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="725.7" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.05%)</title><rect x="723.3" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="723.3" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.03%)</title><rect x="723.3" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="726.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.03%)</title><rect x="723.7" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="723.7" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="723.7" y="403.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="726.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (20 samples, 0.26%)</title><rect x="724.0" y="611.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (20 samples, 0.26%)</title><rect x="724.0" y="595.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (20 samples, 0.26%)</title><rect x="724.0" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (20 samples, 0.26%)</title><rect x="724.0" y="563.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (20 samples, 0.26%)</title><rect x="724.0" y="547.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (20 samples, 0.26%)</title><rect x="724.0" y="531.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (17 samples, 0.22%)</title><rect x="724.4" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (17 samples, 0.22%)</title><rect x="724.4" y="499.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (14 samples, 0.18%)</title><rect x="724.4" y="483.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (14 samples, 0.18%)</title><rect x="724.4" y="467.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (14 samples, 0.18%)</title><rect x="724.4" y="451.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.05%)</title><rect x="724.4" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.4" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="724.4" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.4" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="724.4" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.4" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.03%)</title><rect x="724.4" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="727.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="724.7" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="724.7" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="727.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (10 samples, 0.13%)</title><rect x="725.0" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (9 samples, 0.12%)</title><rect x="725.2" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.03%)</title><rect x="725.2" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.03%)</title><rect x="725.5" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5 samples, 0.07%)</title><rect x="725.8" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.05%)</title><rect x="726.0" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.04%)</title><rect x="726.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.04%)</title><rect x="726.1" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (3 samples, 0.04%)</title><rect x="726.1" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="729.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (3 samples, 0.04%)</title><rect x="726.6" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (3 samples, 0.04%)</title><rect x="726.6" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (3 samples, 0.04%)</title><rect x="726.6" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="726.6" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="726.6" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.04%)</title><rect x="726.6" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.04%)</title><rect x="726.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (3 samples, 0.04%)</title><rect x="726.6" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (3 samples, 0.04%)</title><rect x="726.6" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="726.6" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="726.6" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.04%)</title><rect x="726.6" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (3 samples, 0.04%)</title><rect x="726.6" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.04%)</title><rect x="726.6" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (3 samples, 0.04%)</title><rect x="726.6" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="729.6" y="270.0"></text>
</g>
<g>
<title>[asyncHttpClient tid=13377] (227 samples, 2.95%)</title><rect x="727.0" y="707.0" width="34.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="730.0" y="718.0">[a..</text>
</g>
<g>
<title>java/lang/Thread.run (227 samples, 2.95%)</title><rect x="727.0" y="691.0" width="34.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.0" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (227 samples, 2.95%)</title><rect x="727.0" y="675.0" width="34.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.0" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (227 samples, 2.95%)</title><rect x="727.0" y="659.0" width="34.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.0" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (125 samples, 1.63%)</title><rect x="727.0" y="643.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (125 samples, 1.63%)</title><rect x="727.0" y="627.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (125 samples, 1.63%)</title><rect x="727.0" y="611.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/1595917005.apply (125 samples, 1.63%)</title><rect x="727.0" y="595.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (125 samples, 1.63%)</title><rect x="727.0" y="579.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (125 samples, 1.63%)</title><rect x="727.0" y="563.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="727.0" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="727.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/813691942.get$Lambda (2 samples, 0.03%)</title><rect x="727.0" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (2 samples, 0.03%)</title><rect x="727.0" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.09%)</title><rect x="727.5" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.09%)</title><rect x="727.5" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.04%)</title><rect x="727.5" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="730.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="728.0" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="728.0" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="728.0" y="483.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="731.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (113 samples, 1.47%)</title><rect x="728.6" y="547.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (113 samples, 1.47%)</title><rect x="728.6" y="531.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (113 samples, 1.47%)</title><rect x="728.6" y="515.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (75 samples, 0.98%)</title><rect x="728.6" y="499.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (75 samples, 0.98%)</title><rect x="728.6" y="483.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (74 samples, 0.96%)</title><rect x="728.6" y="467.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/812311256.apply (74 samples, 0.96%)</title><rect x="728.6" y="451.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (74 samples, 0.96%)</title><rect x="728.6" y="435.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (74 samples, 0.96%)</title><rect x="728.6" y="419.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/681535753.apply (74 samples, 0.96%)</title><rect x="728.6" y="403.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (74 samples, 0.96%)</title><rect x="728.6" y="387.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (73 samples, 0.95%)</title><rect x="728.7" y="371.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56 samples, 0.73%)</title><rect x="728.7" y="355.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56 samples, 0.73%)</title><rect x="728.7" y="339.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/352851012.apply (56 samples, 0.73%)</title><rect x="728.7" y="323.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (56 samples, 0.73%)</title><rect x="728.7" y="307.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (54 samples, 0.70%)</title><rect x="729.0" y="291.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="729.0" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.09%)</title><rect x="729.0" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (7 samples, 0.09%)</title><rect x="729.0" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.0" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="729.0" y="227.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="732.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.08%)</title><rect x="730.3" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="730.3" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="730.3" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.3" y="254.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="730.3" y="227.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="733.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (33 samples, 0.43%)</title><rect x="731.3" y="275.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (14 samples, 0.18%)</title><rect x="731.3" y="259.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.10%)</title><rect x="731.3" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.10%)</title><rect x="731.3" y="227.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.3" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.10%)</title><rect x="731.3" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="731.3" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.3" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="731.3" y="179.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.3" y="190.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$243/1676765857.test (5 samples, 0.07%)</title><rect x="732.7" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.07%)</title><rect x="732.7" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/148912029.test (5 samples, 0.07%)</title><rect x="732.7" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.07%)</title><rect x="732.7" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1002191352.test (5 samples, 0.07%)</title><rect x="732.7" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.07%)</title><rect x="732.7" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/1564984895.test (5 samples, 0.07%)</title><rect x="732.7" y="147.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.07%)</title><rect x="732.7" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="732.7" y="115.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="732.7" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="732.7" y="83.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="735.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="733.2" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="733.2" y="67.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="736.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (19 samples, 0.25%)</title><rect x="733.5" y="259.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.25%)</title><rect x="733.5" y="243.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.25%)</title><rect x="733.5" y="227.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (15 samples, 0.20%)</title><rect x="733.8" y="211.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (15 samples, 0.20%)</title><rect x="733.8" y="195.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (15 samples, 0.20%)</title><rect x="733.8" y="179.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="733.8" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="733.8" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.8" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2009938921.get$Lambda (2 samples, 0.03%)</title><rect x="733.8" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.8" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (2 samples, 0.03%)</title><rect x="733.8" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="736.8" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.08%)</title><rect x="734.1" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.08%)</title><rect x="734.1" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.03%)</title><rect x="734.1" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="734.1" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="734.1" y="99.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="737.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.05%)</title><rect x="734.4" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.05%)</title><rect x="734.4" y="115.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="737.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.09%)</title><rect x="735.0" y="163.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.09%)</title><rect x="735.0" y="147.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="738.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="736.1" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="736.1" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="739.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.03%)</title><rect x="736.4" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.03%)</title><rect x="736.4" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="736.4" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.03%)</title><rect x="736.4" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798244209.invoke (2 samples, 0.03%)</title><rect x="736.4" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="736.4" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="736.4" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="736.4" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.4" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="736.4" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="739.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.05%)</title><rect x="736.7" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="737.0" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="737.0" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="740.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (4 samples, 0.05%)</title><rect x="737.3" y="355.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="740.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12 samples, 0.16%)</title><rect x="738.1" y="355.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.05%)</title><rect x="738.6" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="738.6" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="738.6" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.05%)</title><rect x="738.6" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.05%)</title><rect x="738.6" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.05%)</title><rect x="738.6" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (4 samples, 0.05%)</title><rect x="738.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.05%)</title><rect x="738.6" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.05%)</title><rect x="738.6" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="738.6" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="738.6" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$211/847920876.get$Lambda (2 samples, 0.03%)</title><rect x="738.7" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$211 (2 samples, 0.03%)</title><rect x="738.7" y="147.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="741.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="739.2" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="739.3" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.3" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="739.3" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.3" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="739.3" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="742.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (2 samples, 0.03%)</title><rect x="739.6" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="739.6" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="742.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (37 samples, 0.48%)</title><rect x="740.2" y="499.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="740.2" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="740.2" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (35 samples, 0.46%)</title><rect x="740.5" y="483.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (33 samples, 0.43%)</title><rect x="740.5" y="467.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (33 samples, 0.43%)</title><rect x="740.5" y="451.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (33 samples, 0.43%)</title><rect x="740.5" y="435.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$148/467291781.apply (33 samples, 0.43%)</title><rect x="740.5" y="419.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (33 samples, 0.43%)</title><rect x="740.5" y="403.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (33 samples, 0.43%)</title><rect x="740.5" y="387.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (11 samples, 0.14%)</title><rect x="740.5" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (11 samples, 0.14%)</title><rect x="740.5" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (11 samples, 0.14%)</title><rect x="740.5" y="339.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/14109257.apply (10 samples, 0.13%)</title><rect x="740.5" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (10 samples, 0.13%)</title><rect x="740.5" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (10 samples, 0.13%)</title><rect x="740.5" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (10 samples, 0.13%)</title><rect x="740.5" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (7 samples, 0.09%)</title><rect x="740.5" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.5" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="740.5" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4 samples, 0.05%)</title><rect x="740.9" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.04%)</title><rect x="740.9" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.04%)</title><rect x="740.9" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="740.9" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="740.9" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/1426329391.get$Lambda (2 samples, 0.03%)</title><rect x="740.9" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$67 (2 samples, 0.03%)</title><rect x="740.9" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="743.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.04%)</title><rect x="741.6" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="741.8" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="741.8" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="744.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (22 samples, 0.29%)</title><rect x="742.2" y="371.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (2 samples, 0.03%)</title><rect x="742.2" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="745.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (20 samples, 0.26%)</title><rect x="742.5" y="355.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.04%)</title><rect x="742.7" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.07%)</title><rect x="743.8" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="744.2" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.05%)</title><rect x="744.5" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.04%)</title><rect x="744.7" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.04%)</title><rect x="744.7" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.03%)</title><rect x="744.7" y="291.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="747.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (3 samples, 0.04%)</title><rect x="745.2" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879492184.linkToTargetMethod (2 samples, 0.03%)</title><rect x="745.2" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="745.2" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$154/1142648242.get$Lambda (2 samples, 0.03%)</title><rect x="745.2" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$154 (2 samples, 0.03%)</title><rect x="745.2" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="748.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.03%)</title><rect x="745.6" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.03%)</title><rect x="745.6" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.03%)</title><rect x="745.6" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1180252003.linkToTargetMethod (2 samples, 0.03%)</title><rect x="745.6" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1341183245.invoke (2 samples, 0.03%)</title><rect x="745.6" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1528542945.invoke (2 samples, 0.03%)</title><rect x="745.6" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="745.6" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="745.6" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="745.6" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.6" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="745.6" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="748.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.03%)</title><rect x="745.9" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.03%)</title><rect x="745.9" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="748.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.07%)</title><rect x="746.2" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.07%)</title><rect x="746.2" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.07%)</title><rect x="746.2" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.07%)</title><rect x="746.2" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.07%)</title><rect x="746.2" y="579.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="749.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/529703397.run (8 samples, 0.10%)</title><rect x="747.0" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8 samples, 0.10%)</title><rect x="747.0" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8 samples, 0.10%)</title><rect x="747.0" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8 samples, 0.10%)</title><rect x="747.0" y="595.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.10%)</title><rect x="747.0" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.10%)</title><rect x="747.0" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.10%)</title><rect x="747.0" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.10%)</title><rect x="747.0" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.10%)</title><rect x="747.0" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.10%)</title><rect x="747.0" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 0.10%)</title><rect x="747.0" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (7 samples, 0.09%)</title><rect x="747.0" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7 samples, 0.09%)</title><rect x="747.0" y="451.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.09%)</title><rect x="747.0" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7 samples, 0.09%)</title><rect x="747.0" y="419.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.09%)</title><rect x="747.0" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.08%)</title><rect x="747.2" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.08%)</title><rect x="747.2" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$226/1513518929.apply (6 samples, 0.08%)</title><rect x="747.2" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.08%)</title><rect x="747.2" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.08%)</title><rect x="747.2" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$133/2121383681.apply (6 samples, 0.08%)</title><rect x="747.2" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.08%)</title><rect x="747.2" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.04%)</title><rect x="747.6" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="747.8" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (89 samples, 1.16%)</title><rect x="748.2" y="643.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (89 samples, 1.16%)</title><rect x="748.2" y="627.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (72 samples, 0.94%)</title><rect x="748.2" y="611.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (72 samples, 0.94%)</title><rect x="748.2" y="595.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (72 samples, 0.94%)</title><rect x="748.2" y="579.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (72 samples, 0.94%)</title><rect x="748.2" y="563.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (72 samples, 0.94%)</title><rect x="748.2" y="547.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72 samples, 0.94%)</title><rect x="748.2" y="531.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72 samples, 0.94%)</title><rect x="748.2" y="515.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (34 samples, 0.44%)</title><rect x="748.2" y="499.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.44%)</title><rect x="748.2" y="483.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (34 samples, 0.44%)</title><rect x="748.2" y="467.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (34 samples, 0.44%)</title><rect x="748.2" y="451.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.44%)</title><rect x="748.2" y="435.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (34 samples, 0.44%)</title><rect x="748.2" y="419.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (34 samples, 0.44%)</title><rect x="748.2" y="403.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (30 samples, 0.39%)</title><rect x="748.2" y="387.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 0.39%)</title><rect x="748.2" y="371.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (30 samples, 0.39%)</title><rect x="748.2" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1378561847.apply (30 samples, 0.39%)</title><rect x="748.2" y="339.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (30 samples, 0.39%)</title><rect x="748.2" y="323.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="748.2" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="748.2" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.get$Lambda (2 samples, 0.03%)</title><rect x="748.2" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$295 (2 samples, 0.03%)</title><rect x="748.2" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="751.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.04%)</title><rect x="748.5" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.04%)</title><rect x="748.5" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.03%)</title><rect x="748.5" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="751.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (25 samples, 0.33%)</title><rect x="749.0" y="307.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="749.0" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="749.0" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (23 samples, 0.30%)</title><rect x="749.3" y="291.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23 samples, 0.30%)</title><rect x="749.3" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="749.3" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="749.3" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.get$Lambda (2 samples, 0.03%)</title><rect x="749.3" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$289 (2 samples, 0.03%)</title><rect x="749.3" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="752.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.03%)</title><rect x="749.6" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="749.9" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="749.9" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="749.9" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="749.9" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="749.9" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="749.9" y="179.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="752.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (3 samples, 0.04%)</title><rect x="750.2" y="259.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="753.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.16%)</title><rect x="751.0" y="259.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$272/1649492786.run (12 samples, 0.16%)</title><rect x="751.0" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (12 samples, 0.16%)</title><rect x="751.0" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.05%)</title><rect x="751.1" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="751.1" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="751.3" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="751.3" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="751.3" y="147.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="754.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.03%)</title><rect x="751.8" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="751.8" y="195.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="754.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.03%)</title><rect x="752.1" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.03%)</title><rect x="752.1" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="752.1" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="752.1" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="752.1" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="752.1" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="755.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.04%)</title><rect x="752.4" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="752.4" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="752.4" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (3 samples, 0.04%)</title><rect x="752.4" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="752.4" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="752.5" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="752.5" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.5" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="752.5" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="755.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$262/1345781214.apply (4 samples, 0.05%)</title><rect x="752.8" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (4 samples, 0.05%)</title><rect x="752.8" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (4 samples, 0.05%)</title><rect x="752.8" y="355.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="755.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (38 samples, 0.49%)</title><rect x="753.5" y="499.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.04%)</title><rect x="753.5" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="753.5" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="753.5" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="753.5" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="753.5" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.5" y="430.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="753.5" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="756.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (7 samples, 0.09%)</title><rect x="754.1" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.09%)</title><rect x="754.1" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.09%)</title><rect x="754.1" y="451.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.05%)</title><rect x="754.4" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1366316812.accept (4 samples, 0.05%)</title><rect x="754.4" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.05%)</title><rect x="754.4" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (27 samples, 0.35%)</title><rect x="755.1" y="483.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="755.1" y="467.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="758.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="755.4" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="755.4" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.4" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="755.4" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="758.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="755.8" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="755.8" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="755.8" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.8" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="755.8" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="758.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (21 samples, 0.27%)</title><rect x="756.1" y="467.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="756.1" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="756.1" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="756.1" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="759.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="756.5" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.5" y="430.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="756.5" y="403.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="759.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.03%)</title><rect x="757.0" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="757.0" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.0" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12 samples, 0.16%)</title><rect x="757.4" y="451.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.4" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.09%)</title><rect x="757.4" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.09%)</title><rect x="757.4" y="419.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="760.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="758.5" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.04%)</title><rect x="758.5" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="761.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/1704856439.apply (2 samples, 0.03%)</title><rect x="759.0" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="759.0" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="759.0" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="762.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (17 samples, 0.22%)</title><rect x="759.3" y="611.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (17 samples, 0.22%)</title><rect x="759.3" y="595.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17 samples, 0.22%)</title><rect x="759.3" y="579.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/8447761.run (17 samples, 0.22%)</title><rect x="759.3" y="563.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (17 samples, 0.22%)</title><rect x="759.3" y="547.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (17 samples, 0.22%)</title><rect x="759.3" y="531.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="759.4" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="759.4" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.03%)</title><rect x="759.4" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.03%)</title><rect x="759.4" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="762.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (14 samples, 0.18%)</title><rect x="759.8" y="515.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (14 samples, 0.18%)</title><rect x="759.8" y="499.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$273/401440728.run (9 samples, 0.12%)</title><rect x="759.8" y="483.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (9 samples, 0.12%)</title><rect x="759.8" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (9 samples, 0.12%)</title><rect x="759.8" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.05%)</title><rect x="759.8" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.8" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="759.8" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="759.9" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.04%)</title><rect x="759.9" y="387.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="762.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.07%)</title><rect x="760.4" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.05%)</title><rect x="760.5" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.03%)</title><rect x="760.8" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.03%)</title><rect x="760.8" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (5 samples, 0.07%)</title><rect x="761.1" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (5 samples, 0.07%)</title><rect x="761.1" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (5 samples, 0.07%)</title><rect x="761.1" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="761.1" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="761.1" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.05%)</title><rect x="761.1" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.05%)</title><rect x="761.1" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1622736301.accept (4 samples, 0.05%)</title><rect x="761.1" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (4 samples, 0.05%)</title><rect x="761.1" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="761.1" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="761.1" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.05%)</title><rect x="761.1" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$295/1359469185.apply (4 samples, 0.05%)</title><rect x="761.1" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.05%)</title><rect x="761.1" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (4 samples, 0.05%)</title><rect x="761.1" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="764.1" y="270.0"></text>
</g>
<g>
<title>[asyncWorker tid=13381] (353 samples, 4.60%)</title><rect x="761.9" y="707.0" width="54.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="764.9" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (353 samples, 4.60%)</title><rect x="761.9" y="691.0" width="54.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.9" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (353 samples, 4.60%)</title><rect x="761.9" y="675.0" width="54.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.9" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (353 samples, 4.60%)</title><rect x="761.9" y="659.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.9" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 0.40%)</title><rect x="761.9" y="643.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (31 samples, 0.40%)</title><rect x="761.9" y="627.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (31 samples, 0.40%)</title><rect x="761.9" y="611.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (31 samples, 0.40%)</title><rect x="761.9" y="595.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (31 samples, 0.40%)</title><rect x="761.9" y="579.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="764.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (322 samples, 4.19%)</title><rect x="766.7" y="643.0" width="49.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (322 samples, 4.19%)</title><rect x="766.7" y="627.0" width="49.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.7" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 0.61%)</title><rect x="766.7" y="611.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 0.55%)</title><rect x="766.7" y="595.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 0.36%)</title><rect x="766.7" y="579.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (28 samples, 0.36%)</title><rect x="766.7" y="563.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.7" y="574.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.35%)</title><rect x="766.7" y="547.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="769.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.18%)</title><rect x="771.0" y="579.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.0" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.18%)</title><rect x="771.0" y="563.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="774.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.07%)</title><rect x="773.1" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="773.1" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="773.1" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="773.3" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.3" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="773.3" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="776.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (275 samples, 3.58%)</title><rect x="773.9" y="611.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.9" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (275 samples, 3.58%)</title><rect x="773.9" y="595.0" width="42.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.9" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (275 samples, 3.58%)</title><rect x="773.9" y="579.0" width="42.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.9" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (237 samples, 3.09%)</title><rect x="773.9" y="563.0" width="36.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.9" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (237 samples, 3.09%)</title><rect x="773.9" y="547.0" width="36.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.9" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (47 samples, 0.61%)</title><rect x="773.9" y="531.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.43%)</title><rect x="773.9" y="515.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (33 samples, 0.43%)</title><rect x="773.9" y="499.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.43%)</title><rect x="773.9" y="483.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (33 samples, 0.43%)</title><rect x="773.9" y="467.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (33 samples, 0.43%)</title><rect x="773.9" y="451.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.43%)</title><rect x="773.9" y="435.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.9" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.43%)</title><rect x="773.9" y="419.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="776.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (14 samples, 0.18%)</title><rect x="779.0" y="515.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (14 samples, 0.18%)</title><rect x="779.0" y="499.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.18%)</title><rect x="779.0" y="483.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.0" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.18%)</title><rect x="779.0" y="467.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="782.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (181 samples, 2.36%)</title><rect x="781.1" y="531.0" width="27.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.1" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (82 samples, 1.07%)</title><rect x="781.1" y="515.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.17%)</title><rect x="781.1" y="499.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (13 samples, 0.17%)</title><rect x="781.1" y="483.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.1" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="781.1" y="467.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="784.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="781.7" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.7" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="781.7" y="451.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="784.7" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="782.2" y="467.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="785.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (69 samples, 0.90%)</title><rect x="783.1" y="499.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.1" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (17 samples, 0.22%)</title><rect x="783.1" y="483.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="786.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (52 samples, 0.68%)</title><rect x="785.7" y="483.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.68%)</title><rect x="785.7" y="467.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (52 samples, 0.68%)</title><rect x="785.7" y="451.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (52 samples, 0.68%)</title><rect x="785.7" y="435.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (52 samples, 0.68%)</title><rect x="785.7" y="419.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (52 samples, 0.68%)</title><rect x="785.7" y="403.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (52 samples, 0.68%)</title><rect x="785.7" y="387.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.68%)</title><rect x="785.7" y="371.0" width="8.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="788.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (99 samples, 1.29%)</title><rect x="793.7" y="515.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.7" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.13%)</title><rect x="793.7" y="499.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="796.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="795.2" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="795.2" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.09%)</title><rect x="795.2" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.09%)</title><rect x="795.2" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.09%)</title><rect x="795.2" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="795.2" y="419.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="798.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (18 samples, 0.23%)</title><rect x="796.3" y="499.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (18 samples, 0.23%)</title><rect x="796.3" y="483.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="799.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (64 samples, 0.83%)</title><rect x="799.1" y="499.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (25 samples, 0.33%)</title><rect x="799.1" y="483.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.30%)</title><rect x="799.1" y="467.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="799.1" y="451.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="802.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.26%)</title><rect x="799.5" y="451.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.5" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="799.5" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="802.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="800.0" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.0" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="800.0" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="803.0" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.12%)</title><rect x="800.5" y="435.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="803.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="801.8" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="801.8" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="804.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.03%)</title><rect x="802.6" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="802.6" y="451.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="805.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (39 samples, 0.51%)</title><rect x="802.9" y="483.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.10%)</title><rect x="802.9" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="805.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="804.1" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="804.1" y="451.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="804.1" y="435.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="804.1" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="804.1" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.16%)</title><rect x="804.1" y="387.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="807.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.10%)</title><rect x="806.0" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.10%)</title><rect x="806.0" y="451.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="809.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (11 samples, 0.14%)</title><rect x="807.2" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.04%)</title><rect x="807.2" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (3 samples, 0.04%)</title><rect x="807.2" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="810.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="807.7" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="807.7" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="810.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.07%)</title><rect x="808.1" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.07%)</title><rect x="808.1" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.07%)</title><rect x="808.1" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.07%)</title><rect x="808.1" y="403.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="811.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (9 samples, 0.12%)</title><rect x="808.9" y="531.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="808.9" y="515.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="808.9" y="499.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="811.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (38 samples, 0.49%)</title><rect x="810.3" y="563.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (14 samples, 0.18%)</title><rect x="810.3" y="547.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (14 samples, 0.18%)</title><rect x="810.3" y="531.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.18%)</title><rect x="810.3" y="515.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 0.05%)</title><rect x="810.3" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="810.3" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.13%)</title><rect x="810.9" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.13%)</title><rect x="810.9" y="483.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="494.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="810.9" y="467.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="813.9" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.13%)</title><rect x="812.4" y="547.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.18%)</title><rect x="814.0" y="547.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.0" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="814.0" y="531.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="817.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="814.3" y="531.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="817.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="815.2" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="818.2" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13382] (341 samples, 4.44%)</title><rect x="816.1" y="707.0" width="52.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="819.1" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (341 samples, 4.44%)</title><rect x="816.1" y="691.0" width="52.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.1" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (341 samples, 4.44%)</title><rect x="816.1" y="675.0" width="52.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.1" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (341 samples, 4.44%)</title><rect x="816.1" y="659.0" width="52.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.1" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.13%)</title><rect x="816.1" y="643.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 0.13%)</title><rect x="816.1" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.13%)</title><rect x="816.1" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.13%)</title><rect x="816.1" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.13%)</title><rect x="816.1" y="579.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="819.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (331 samples, 4.31%)</title><rect x="817.7" y="643.0" width="50.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (331 samples, 4.31%)</title><rect x="817.7" y="627.0" width="50.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.7" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 0.64%)</title><rect x="817.7" y="611.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.35%)</title><rect x="817.7" y="595.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.29%)</title><rect x="817.7" y="579.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.29%)</title><rect x="817.7" y="563.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.7" y="574.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.29%)</title><rect x="817.7" y="547.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="820.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.07%)</title><rect x="821.0" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.0" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.07%)</title><rect x="821.0" y="563.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="824.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.29%)</title><rect x="821.8" y="595.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.29%)</title><rect x="821.8" y="579.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.29%)</title><rect x="821.8" y="563.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="821.8" y="547.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="824.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.16%)</title><rect x="823.3" y="547.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.3" y="558.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="823.3" y="531.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="826.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (282 samples, 3.67%)</title><rect x="825.2" y="611.0" width="43.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.2" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (282 samples, 3.67%)</title><rect x="825.2" y="595.0" width="43.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.2" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (282 samples, 3.67%)</title><rect x="825.2" y="579.0" width="43.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (227 samples, 2.95%)</title><rect x="825.2" y="563.0" width="34.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.2" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (227 samples, 2.95%)</title><rect x="825.2" y="547.0" width="34.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.2" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (48 samples, 0.62%)</title><rect x="825.2" y="531.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.33%)</title><rect x="825.2" y="515.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (25 samples, 0.33%)</title><rect x="825.2" y="499.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.33%)</title><rect x="825.2" y="483.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (25 samples, 0.33%)</title><rect x="825.2" y="467.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (25 samples, 0.33%)</title><rect x="825.2" y="451.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.33%)</title><rect x="825.2" y="435.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.33%)</title><rect x="825.2" y="419.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="828.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (23 samples, 0.30%)</title><rect x="829.0" y="515.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (23 samples, 0.30%)</title><rect x="829.0" y="499.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.30%)</title><rect x="829.0" y="483.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.0" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.30%)</title><rect x="829.0" y="467.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="832.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (170 samples, 2.21%)</title><rect x="832.6" y="531.0" width="26.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (48 samples, 0.62%)</title><rect x="832.6" y="515.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.35%)</title><rect x="832.6" y="499.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (9 samples, 0.12%)</title><rect x="832.6" y="483.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="835.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.23%)</title><rect x="833.9" y="483.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.9" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="833.9" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="836.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="834.2" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.2" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="834.2" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="837.2" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.12%)</title><rect x="834.6" y="467.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="837.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="835.9" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="835.9" y="451.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="838.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (21 samples, 0.27%)</title><rect x="836.7" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.7" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.12%)</title><rect x="836.7" y="483.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="839.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.16%)</title><rect x="838.1" y="483.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="838.1" y="467.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (12 samples, 0.16%)</title><rect x="838.1" y="451.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.16%)</title><rect x="838.1" y="435.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (12 samples, 0.16%)</title><rect x="838.1" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (12 samples, 0.16%)</title><rect x="838.1" y="403.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="838.1" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="838.1" y="371.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="841.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (122 samples, 1.59%)</title><rect x="839.9" y="515.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.9" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.13%)</title><rect x="839.9" y="499.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="842.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.29%)</title><rect x="841.5" y="499.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.29%)</title><rect x="841.5" y="483.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.29%)</title><rect x="841.5" y="467.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.29%)</title><rect x="841.5" y="451.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.29%)</title><rect x="841.5" y="435.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.29%)</title><rect x="841.5" y="419.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="844.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.09%)</title><rect x="844.8" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.09%)</title><rect x="844.8" y="483.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="847.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (83 samples, 1.08%)</title><rect x="845.9" y="499.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (30 samples, 0.39%)</title><rect x="846.1" y="483.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18 samples, 0.23%)</title><rect x="846.1" y="467.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.23%)</title><rect x="846.1" y="451.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.1" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="846.1" y="435.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="849.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="847.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.0" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="847.0" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="850.0" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="847.5" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="850.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="848.2" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="848.2" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="851.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.16%)</title><rect x="848.8" y="467.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.8" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (12 samples, 0.16%)</title><rect x="848.8" y="451.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="851.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (52 samples, 0.68%)</title><rect x="850.7" y="483.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.7" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.07%)</title><rect x="850.7" y="467.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="853.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (19 samples, 0.25%)</title><rect x="851.5" y="467.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (19 samples, 0.25%)</title><rect x="851.5" y="451.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (19 samples, 0.25%)</title><rect x="851.5" y="435.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (19 samples, 0.25%)</title><rect x="851.5" y="419.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.25%)</title><rect x="851.5" y="403.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.25%)</title><rect x="851.5" y="387.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="854.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="854.4" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="854.4" y="451.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="857.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (25 samples, 0.33%)</title><rect x="854.8" y="467.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.10%)</title><rect x="854.8" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.10%)</title><rect x="854.8" y="435.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="857.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.22%)</title><rect x="856.1" y="451.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.22%)</title><rect x="856.1" y="435.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.22%)</title><rect x="856.1" y="419.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (17 samples, 0.22%)</title><rect x="856.1" y="403.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="859.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (9 samples, 0.12%)</title><rect x="858.7" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="858.7" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="858.7" y="499.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="861.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (55 samples, 0.72%)</title><rect x="860.1" y="563.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (22 samples, 0.29%)</title><rect x="860.1" y="547.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (22 samples, 0.29%)</title><rect x="860.1" y="531.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.29%)</title><rect x="860.1" y="515.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.09%)</title><rect x="860.1" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="860.1" y="483.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="863.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.20%)</title><rect x="861.1" y="499.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.20%)</title><rect x="861.1" y="483.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.1" y="494.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.20%)</title><rect x="861.1" y="467.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="864.1" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.10%)</title><rect x="863.4" y="547.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="866.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.33%)</title><rect x="864.7" y="547.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.7" y="558.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="864.7" y="531.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="867.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.13%)</title><rect x="865.9" y="531.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="868.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="867.4" y="531.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="870.4" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13383] (364 samples, 4.74%)</title><rect x="868.5" y="707.0" width="55.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="871.5" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (364 samples, 4.74%)</title><rect x="868.5" y="691.0" width="55.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.5" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (364 samples, 4.74%)</title><rect x="868.5" y="675.0" width="55.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.5" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (364 samples, 4.74%)</title><rect x="868.5" y="659.0" width="55.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.5" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.08%)</title><rect x="868.5" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.08%)</title><rect x="868.5" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.08%)</title><rect x="868.5" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.08%)</title><rect x="868.5" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.08%)</title><rect x="868.5" y="579.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="871.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (358 samples, 4.66%)</title><rect x="869.4" y="643.0" width="55.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.4" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (358 samples, 4.66%)</title><rect x="869.4" y="627.0" width="55.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.4" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (76 samples, 0.99%)</title><rect x="869.4" y="611.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (63 samples, 0.82%)</title><rect x="869.4" y="595.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.48%)</title><rect x="869.4" y="579.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (37 samples, 0.48%)</title><rect x="869.4" y="563.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.4" y="574.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.30%)</title><rect x="869.4" y="547.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.4" y="558.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="873.0" y="547.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.34%)</title><rect x="875.1" y="579.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.1" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (26 samples, 0.34%)</title><rect x="875.1" y="563.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="878.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.17%)</title><rect x="879.1" y="595.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.17%)</title><rect x="879.1" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.17%)</title><rect x="879.1" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="879.1" y="547.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="882.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.12%)</title><rect x="879.7" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.7" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="879.7" y="531.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="882.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (282 samples, 3.67%)</title><rect x="881.1" y="611.0" width="43.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.1" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (282 samples, 3.67%)</title><rect x="881.1" y="595.0" width="43.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.1" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (282 samples, 3.67%)</title><rect x="881.1" y="579.0" width="43.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.1" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (242 samples, 3.15%)</title><rect x="881.1" y="563.0" width="37.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.1" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (242 samples, 3.15%)</title><rect x="881.1" y="547.0" width="37.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.1" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.52%)</title><rect x="881.1" y="531.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.25%)</title><rect x="881.1" y="515.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (19 samples, 0.25%)</title><rect x="881.1" y="499.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.25%)</title><rect x="881.1" y="483.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (19 samples, 0.25%)</title><rect x="881.1" y="467.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (19 samples, 0.25%)</title><rect x="881.1" y="451.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.25%)</title><rect x="881.1" y="435.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.25%)</title><rect x="881.1" y="419.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="884.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.27%)</title><rect x="884.0" y="515.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.27%)</title><rect x="884.0" y="499.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.27%)</title><rect x="884.0" y="483.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.0" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.27%)</title><rect x="884.0" y="467.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="887.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (191 samples, 2.49%)</title><rect x="887.2" y="531.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.2" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (85 samples, 1.11%)</title><rect x="887.2" y="515.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.39%)</title><rect x="887.2" y="499.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (29 samples, 0.38%)</title><rect x="887.4" y="483.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="887.4" y="467.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="890.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (10 samples, 0.13%)</title><rect x="888.3" y="467.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.3" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (10 samples, 0.13%)</title><rect x="888.3" y="451.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="891.3" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="889.9" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="892.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.10%)</title><rect x="890.6" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="890.6" y="451.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="893.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (55 samples, 0.72%)</title><rect x="891.9" y="499.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="891.9" y="483.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="894.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (49 samples, 0.64%)</title><rect x="892.8" y="483.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.64%)</title><rect x="892.8" y="467.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (49 samples, 0.64%)</title><rect x="892.8" y="451.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.64%)</title><rect x="892.8" y="435.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (49 samples, 0.64%)</title><rect x="892.8" y="419.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (49 samples, 0.64%)</title><rect x="892.8" y="403.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 0.64%)</title><rect x="892.8" y="387.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.64%)</title><rect x="892.8" y="371.0" width="7.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="895.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (106 samples, 1.38%)</title><rect x="900.3" y="515.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.3" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.13%)</title><rect x="900.3" y="499.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="903.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="901.8" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="901.8" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="901.8" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="901.8" y="451.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="901.8" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="901.8" y="419.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="904.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (17 samples, 0.22%)</title><rect x="902.8" y="499.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (17 samples, 0.22%)</title><rect x="902.8" y="483.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="905.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (73 samples, 0.95%)</title><rect x="905.4" y="499.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (33 samples, 0.43%)</title><rect x="905.4" y="483.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.38%)</title><rect x="905.4" y="467.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.4" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="905.4" y="451.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="908.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.34%)</title><rect x="905.8" y="451.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.8" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="905.8" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="908.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="906.3" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.3" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="906.3" y="419.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="909.3" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (12 samples, 0.16%)</title><rect x="907.2" y="435.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="910.2" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="909.1" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="909.1" y="419.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="912.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.05%)</title><rect x="909.8" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.8" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.05%)</title><rect x="909.8" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="912.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (40 samples, 0.52%)</title><rect x="910.4" y="483.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="910.4" y="467.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="913.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="911.1" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="911.1" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="911.1" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="911.1" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="911.1" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="911.1" y="387.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="914.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="911.8" y="467.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="911.8" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="914.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (25 samples, 0.33%)</title><rect x="912.7" y="467.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.05%)</title><rect x="912.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (4 samples, 0.05%)</title><rect x="912.7" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="915.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.12%)</title><rect x="913.4" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (9 samples, 0.12%)</title><rect x="913.4" y="435.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="916.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="914.7" y="451.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="914.7" y="435.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="914.7" y="419.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (12 samples, 0.16%)</title><rect x="914.7" y="403.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="917.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (11 samples, 0.14%)</title><rect x="916.6" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.14%)</title><rect x="916.6" y="515.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.14%)</title><rect x="916.6" y="499.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="919.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (40 samples, 0.52%)</title><rect x="918.3" y="563.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (11 samples, 0.14%)</title><rect x="918.3" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (11 samples, 0.14%)</title><rect x="918.3" y="531.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.14%)</title><rect x="918.3" y="515.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="918.3" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="918.3" y="483.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="921.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.10%)</title><rect x="918.7" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.10%)</title><rect x="918.7" y="483.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.7" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="918.7" y="467.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="921.7" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.04%)</title><rect x="920.0" y="547.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="923.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.34%)</title><rect x="920.4" y="547.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.4" y="558.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="920.4" y="531.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="923.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.07%)</title><rect x="922.3" y="531.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="925.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.12%)</title><rect x="923.0" y="531.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="926.0" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13384] (344 samples, 4.48%)</title><rect x="924.4" y="707.0" width="52.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="927.4" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (344 samples, 4.48%)</title><rect x="924.4" y="691.0" width="52.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.4" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (344 samples, 4.48%)</title><rect x="924.4" y="675.0" width="52.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.4" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (344 samples, 4.48%)</title><rect x="924.4" y="659.0" width="52.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.4" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.10%)</title><rect x="924.4" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.10%)</title><rect x="924.4" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.10%)</title><rect x="924.4" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.10%)</title><rect x="924.4" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.10%)</title><rect x="924.4" y="579.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="927.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (336 samples, 4.37%)</title><rect x="925.6" y="643.0" width="51.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.6" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (336 samples, 4.37%)</title><rect x="925.6" y="627.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.6" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 0.69%)</title><rect x="925.6" y="611.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (37 samples, 0.48%)</title><rect x="925.6" y="595.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.39%)</title><rect x="925.6" y="579.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.39%)</title><rect x="925.6" y="563.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.6" y="574.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.36%)</title><rect x="925.6" y="547.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="928.6" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="929.9" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.09%)</title><rect x="930.3" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.3" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.09%)</title><rect x="930.3" y="563.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="933.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.21%)</title><rect x="931.3" y="595.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.21%)</title><rect x="931.3" y="579.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.21%)</title><rect x="931.3" y="563.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="931.3" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.12%)</title><rect x="932.4" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.4" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="932.4" y="531.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="935.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (283 samples, 3.68%)</title><rect x="933.8" y="611.0" width="43.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.8" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (283 samples, 3.68%)</title><rect x="933.8" y="595.0" width="43.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.8" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (283 samples, 3.68%)</title><rect x="933.8" y="579.0" width="43.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.8" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (238 samples, 3.10%)</title><rect x="933.8" y="563.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.8" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (238 samples, 3.10%)</title><rect x="933.8" y="547.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.8" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (51 samples, 0.66%)</title><rect x="933.8" y="531.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.42%)</title><rect x="933.8" y="515.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (32 samples, 0.42%)</title><rect x="933.8" y="499.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.42%)</title><rect x="933.8" y="483.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (32 samples, 0.42%)</title><rect x="933.8" y="467.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (32 samples, 0.42%)</title><rect x="933.8" y="451.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (32 samples, 0.42%)</title><rect x="933.8" y="435.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.42%)</title><rect x="933.8" y="419.0" width="4.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="936.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (19 samples, 0.25%)</title><rect x="938.7" y="515.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (19 samples, 0.25%)</title><rect x="938.7" y="499.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.25%)</title><rect x="938.7" y="483.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.25%)</title><rect x="938.7" y="467.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="941.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (175 samples, 2.28%)</title><rect x="941.6" y="531.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.6" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (52 samples, 0.68%)</title><rect x="941.6" y="515.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.31%)</title><rect x="941.6" y="499.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="941.6" y="483.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="944.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (19 samples, 0.25%)</title><rect x="942.4" y="483.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.4" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="942.4" y="467.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="945.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="943.3" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.3" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="943.3" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="946.3" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.10%)</title><rect x="943.6" y="467.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="946.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="944.8" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="944.8" y="451.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="947.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.36%)</title><rect x="945.3" y="499.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="945.3" y="483.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.29%)</title><rect x="946.2" y="483.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.29%)</title><rect x="946.2" y="467.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (22 samples, 0.29%)</title><rect x="946.2" y="451.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.29%)</title><rect x="946.2" y="435.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (22 samples, 0.29%)</title><rect x="946.2" y="419.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (22 samples, 0.29%)</title><rect x="946.2" y="403.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.29%)</title><rect x="946.2" y="387.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.29%)</title><rect x="946.2" y="371.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="949.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (123 samples, 1.60%)</title><rect x="949.6" y="515.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.6" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.16%)</title><rect x="949.6" y="499.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="952.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.21%)</title><rect x="951.5" y="499.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.21%)</title><rect x="951.5" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.21%)</title><rect x="951.5" y="467.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.21%)</title><rect x="951.5" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.21%)</title><rect x="951.5" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.21%)</title><rect x="951.5" y="419.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="954.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.13%)</title><rect x="953.9" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (10 samples, 0.13%)</title><rect x="953.9" y="483.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="956.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (85 samples, 1.11%)</title><rect x="955.4" y="499.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (37 samples, 0.48%)</title><rect x="955.4" y="483.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 0.40%)</title><rect x="955.4" y="467.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.4" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="955.4" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="958.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (29 samples, 0.38%)</title><rect x="955.8" y="451.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.8" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (10 samples, 0.13%)</title><rect x="955.8" y="435.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="958.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="957.3" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.3" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="957.3" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="960.3" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.12%)</title><rect x="957.9" y="435.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="960.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.08%)</title><rect x="959.3" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="959.3" y="419.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="962.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.08%)</title><rect x="960.2" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.2" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="960.2" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="963.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (48 samples, 0.62%)</title><rect x="961.1" y="483.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="961.1" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="964.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="961.4" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="961.4" y="451.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="961.4" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="961.4" y="419.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="961.4" y="403.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.16%)</title><rect x="961.4" y="387.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="964.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="963.3" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="963.3" y="451.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="966.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (28 samples, 0.36%)</title><rect x="964.2" y="467.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.07%)</title><rect x="964.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (5 samples, 0.07%)</title><rect x="964.2" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="967.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.12%)</title><rect x="965.0" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (9 samples, 0.12%)</title><rect x="965.0" y="435.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="968.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.18%)</title><rect x="966.3" y="451.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.18%)</title><rect x="966.3" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.18%)</title><rect x="966.3" y="419.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 0.18%)</title><rect x="966.3" y="403.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="969.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (12 samples, 0.16%)</title><rect x="968.5" y="531.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="968.5" y="515.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="968.5" y="499.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="971.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (45 samples, 0.59%)</title><rect x="970.3" y="563.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (21 samples, 0.27%)</title><rect x="970.3" y="547.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (21 samples, 0.27%)</title><rect x="970.3" y="531.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.27%)</title><rect x="970.3" y="515.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (9 samples, 0.12%)</title><rect x="970.3" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.12%)</title><rect x="970.3" y="483.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="973.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.16%)</title><rect x="971.7" y="499.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.16%)</title><rect x="971.7" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.7" y="494.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="971.7" y="467.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="974.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.30%)</title><rect x="973.7" y="547.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.7" y="558.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="973.7" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="976.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.12%)</title><rect x="974.8" y="531.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="977.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="976.2" y="531.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="979.2" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13385] (358 samples, 4.66%)</title><rect x="977.3" y="707.0" width="54.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="980.3" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (358 samples, 4.66%)</title><rect x="977.3" y="691.0" width="54.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.3" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (358 samples, 4.66%)</title><rect x="977.3" y="675.0" width="54.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.3" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (358 samples, 4.66%)</title><rect x="977.3" y="659.0" width="54.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.3" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.08%)</title><rect x="977.3" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="980.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.08%)</title><rect x="977.3" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.08%)</title><rect x="977.3" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.08%)</title><rect x="977.3" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.08%)</title><rect x="977.3" y="579.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (352 samples, 4.58%)</title><rect x="978.2" y="643.0" width="54.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.2" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (352 samples, 4.58%)</title><rect x="978.2" y="627.0" width="54.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.2" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 0.77%)</title><rect x="978.2" y="611.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (51 samples, 0.66%)</title><rect x="978.2" y="595.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (46 samples, 0.60%)</title><rect x="978.2" y="579.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (46 samples, 0.60%)</title><rect x="978.2" y="563.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.2" y="574.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.51%)</title><rect x="978.2" y="547.0" width="6.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="981.2" y="558.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="984.2" y="547.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="987.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.07%)</title><rect x="985.2" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.2" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.07%)</title><rect x="985.2" y="563.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="988.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="986.0" y="595.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.10%)</title><rect x="986.0" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.10%)</title><rect x="986.0" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="986.0" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="989.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="986.3" y="547.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.3" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="986.3" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="989.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (293 samples, 3.81%)</title><rect x="987.2" y="611.0" width="45.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.2" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (293 samples, 3.81%)</title><rect x="987.2" y="595.0" width="45.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.2" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (293 samples, 3.81%)</title><rect x="987.2" y="579.0" width="45.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.2" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (233 samples, 3.03%)</title><rect x="987.2" y="563.0" width="35.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.2" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (233 samples, 3.03%)</title><rect x="987.2" y="547.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.2" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (43 samples, 0.56%)</title><rect x="987.2" y="531.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.42%)</title><rect x="987.2" y="515.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (32 samples, 0.42%)</title><rect x="987.2" y="499.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.42%)</title><rect x="987.2" y="483.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (32 samples, 0.42%)</title><rect x="987.2" y="467.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (32 samples, 0.42%)</title><rect x="987.2" y="451.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (32 samples, 0.42%)</title><rect x="987.2" y="435.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.42%)</title><rect x="987.2" y="419.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="990.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (11 samples, 0.14%)</title><rect x="992.2" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (11 samples, 0.14%)</title><rect x="992.2" y="499.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.14%)</title><rect x="992.2" y="483.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.2" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.14%)</title><rect x="992.2" y="467.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="995.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (181 samples, 2.36%)</title><rect x="993.8" y="531.0" width="27.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.8" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (62 samples, 0.81%)</title><rect x="993.8" y="515.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (32 samples, 0.42%)</title><rect x="993.8" y="499.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.8" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.05%)</title><rect x="993.8" y="483.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="996.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.36%)</title><rect x="994.5" y="483.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.5" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="994.5" y="467.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="997.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="995.4" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.4" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="995.4" y="451.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="998.4" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.10%)</title><rect x="996.3" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="999.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.10%)</title><rect x="997.5" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="997.5" y="451.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1000.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.39%)</title><rect x="998.8" y="499.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="998.8" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1001.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (28 samples, 0.36%)</title><rect x="999.1" y="483.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (28 samples, 0.36%)</title><rect x="999.1" y="467.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (28 samples, 0.36%)</title><rect x="999.1" y="451.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.36%)</title><rect x="999.1" y="435.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (28 samples, 0.36%)</title><rect x="999.1" y="419.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (28 samples, 0.36%)</title><rect x="999.1" y="403.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (28 samples, 0.36%)</title><rect x="999.1" y="387.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.36%)</title><rect x="999.1" y="371.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1002.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (119 samples, 1.55%)</title><rect x="1003.4" y="515.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.10%)</title><rect x="1003.4" y="499.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1006.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.29%)</title><rect x="1004.6" y="499.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.29%)</title><rect x="1004.6" y="483.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.29%)</title><rect x="1004.6" y="467.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.29%)</title><rect x="1004.6" y="451.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.29%)</title><rect x="1004.6" y="435.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.29%)</title><rect x="1004.6" y="419.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1007.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.13%)</title><rect x="1008.0" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (10 samples, 0.13%)</title><rect x="1008.0" y="483.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1011.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (79 samples, 1.03%)</title><rect x="1009.5" y="499.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (21 samples, 0.27%)</title><rect x="1009.5" y="483.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18 samples, 0.23%)</title><rect x="1009.5" y="467.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.5" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="1009.5" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1012.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16 samples, 0.21%)</title><rect x="1009.8" y="451.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.8" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.09%)</title><rect x="1009.8" y="435.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1012.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="1010.9" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.9" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="1010.9" y="419.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1013.9" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.04%)</title><rect x="1011.5" y="435.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1014.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1012.0" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1015.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="1012.0" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1015.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.04%)</title><rect x="1012.3" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="1012.3" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1015.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (58 samples, 0.76%)</title><rect x="1012.7" y="483.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.23%)</title><rect x="1012.9" y="467.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.23%)</title><rect x="1012.9" y="451.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.23%)</title><rect x="1012.9" y="435.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.23%)</title><rect x="1012.9" y="419.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.23%)</title><rect x="1012.9" y="403.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.23%)</title><rect x="1012.9" y="387.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1015.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="1015.7" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="1015.7" y="451.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1018.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (33 samples, 0.43%)</title><rect x="1016.6" y="467.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (4 samples, 0.05%)</title><rect x="1016.6" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (4 samples, 0.05%)</title><rect x="1016.6" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1019.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.12%)</title><rect x="1017.2" y="451.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (9 samples, 0.12%)</title><rect x="1017.2" y="435.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1020.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.26%)</title><rect x="1018.6" y="451.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1021.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.26%)</title><rect x="1018.6" y="435.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.26%)</title><rect x="1018.6" y="419.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (20 samples, 0.26%)</title><rect x="1018.6" y="403.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1021.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (9 samples, 0.12%)</title><rect x="1021.6" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="1021.6" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="1021.6" y="499.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1024.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (60 samples, 0.78%)</title><rect x="1023.0" y="563.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (28 samples, 0.36%)</title><rect x="1023.0" y="547.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (28 samples, 0.36%)</title><rect x="1023.0" y="531.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.36%)</title><rect x="1023.0" y="515.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (21 samples, 0.27%)</title><rect x="1023.0" y="499.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.27%)</title><rect x="1023.0" y="483.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1026.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.09%)</title><rect x="1026.3" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.09%)</title><rect x="1026.3" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.3" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="1026.3" y="467.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1029.3" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.09%)</title><rect x="1027.3" y="547.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1030.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.33%)</title><rect x="1028.4" y="547.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.4" y="558.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="1028.4" y="531.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1031.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="1030.6" y="531.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1033.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="1031.5" y="531.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1034.5" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13386] (340 samples, 4.43%)</title><rect x="1032.2" y="707.0" width="52.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1035.2" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (340 samples, 4.43%)</title><rect x="1032.2" y="691.0" width="52.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.2" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (340 samples, 4.43%)</title><rect x="1032.2" y="675.0" width="52.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.2" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (340 samples, 4.43%)</title><rect x="1032.2" y="659.0" width="52.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.2" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.07%)</title><rect x="1032.2" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.07%)</title><rect x="1032.2" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.07%)</title><rect x="1032.2" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.07%)</title><rect x="1032.2" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.07%)</title><rect x="1032.2" y="579.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1035.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (335 samples, 4.36%)</title><rect x="1033.0" y="643.0" width="51.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.0" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (335 samples, 4.36%)</title><rect x="1033.0" y="627.0" width="51.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.0" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 0.68%)</title><rect x="1033.0" y="611.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.40%)</title><rect x="1033.0" y="595.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.25%)</title><rect x="1033.0" y="579.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.25%)</title><rect x="1033.0" y="563.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1036.0" y="574.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.25%)</title><rect x="1033.0" y="547.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1036.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.16%)</title><rect x="1035.9" y="579.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.9" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.16%)</title><rect x="1035.9" y="563.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1038.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.27%)</title><rect x="1037.8" y="595.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.27%)</title><rect x="1037.8" y="579.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.27%)</title><rect x="1037.8" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="1037.8" y="547.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1040.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.25%)</title><rect x="1038.1" y="547.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.1" y="558.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.25%)</title><rect x="1038.1" y="531.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1041.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (283 samples, 3.68%)</title><rect x="1041.0" y="611.0" width="43.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.0" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (283 samples, 3.68%)</title><rect x="1041.0" y="595.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (283 samples, 3.68%)</title><rect x="1041.0" y="579.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.0" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (230 samples, 2.99%)</title><rect x="1041.0" y="563.0" width="35.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.0" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (230 samples, 2.99%)</title><rect x="1041.0" y="547.0" width="35.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.0" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (43 samples, 0.56%)</title><rect x="1041.0" y="531.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.35%)</title><rect x="1041.0" y="515.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (27 samples, 0.35%)</title><rect x="1041.0" y="499.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.35%)</title><rect x="1041.0" y="483.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (27 samples, 0.35%)</title><rect x="1041.0" y="467.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (27 samples, 0.35%)</title><rect x="1041.0" y="451.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.35%)</title><rect x="1041.0" y="435.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.35%)</title><rect x="1041.0" y="419.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1044.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (16 samples, 0.21%)</title><rect x="1045.1" y="515.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (16 samples, 0.21%)</title><rect x="1045.1" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.21%)</title><rect x="1045.1" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.1" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.21%)</title><rect x="1045.1" y="467.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1048.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (172 samples, 2.24%)</title><rect x="1047.6" y="531.0" width="26.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.6" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (51 samples, 0.66%)</title><rect x="1047.6" y="515.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.31%)</title><rect x="1047.6" y="499.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="1047.6" y="483.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1050.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.29%)</title><rect x="1047.9" y="483.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.9" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (9 samples, 0.12%)</title><rect x="1047.9" y="467.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1050.9" y="478.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="1049.3" y="467.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1052.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.10%)</title><rect x="1050.1" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="1050.1" y="451.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1053.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.35%)</title><rect x="1051.3" y="499.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="1051.3" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1054.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.27%)</title><rect x="1052.2" y="483.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.27%)</title><rect x="1052.2" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 0.27%)</title><rect x="1052.2" y="451.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.27%)</title><rect x="1052.2" y="435.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.27%)</title><rect x="1052.2" y="419.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.27%)</title><rect x="1052.2" y="403.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.27%)</title><rect x="1052.2" y="387.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.27%)</title><rect x="1052.2" y="371.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1055.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (121 samples, 1.58%)</title><rect x="1055.4" y="515.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.13%)</title><rect x="1055.4" y="499.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1058.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.26%)</title><rect x="1057.0" y="499.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.26%)</title><rect x="1057.0" y="483.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.26%)</title><rect x="1057.0" y="467.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.26%)</title><rect x="1057.0" y="451.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.26%)</title><rect x="1057.0" y="435.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.26%)</title><rect x="1057.0" y="419.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1060.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (13 samples, 0.17%)</title><rect x="1060.0" y="499.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (13 samples, 0.17%)</title><rect x="1060.0" y="483.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1063.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (78 samples, 1.02%)</title><rect x="1062.0" y="499.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (32 samples, 0.42%)</title><rect x="1062.0" y="483.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 0.40%)</title><rect x="1062.0" y="467.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.0" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="1062.0" y="451.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1065.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.34%)</title><rect x="1062.8" y="451.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.8" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="1062.8" y="435.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1065.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="1063.6" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.6" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="1063.6" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1066.6" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.09%)</title><rect x="1064.4" y="435.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1067.4" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (9 samples, 0.12%)</title><rect x="1065.4" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1068.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.12%)</title><rect x="1065.4" y="419.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1068.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (46 samples, 0.60%)</title><rect x="1067.0" y="483.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.22%)</title><rect x="1067.1" y="467.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.22%)</title><rect x="1067.1" y="451.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.22%)</title><rect x="1067.1" y="435.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.22%)</title><rect x="1067.1" y="419.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.22%)</title><rect x="1067.1" y="403.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.22%)</title><rect x="1067.1" y="387.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1070.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.07%)</title><rect x="1069.7" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.07%)</title><rect x="1069.7" y="451.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1072.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (23 samples, 0.30%)</title><rect x="1070.5" y="467.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (3 samples, 0.04%)</title><rect x="1070.5" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (3 samples, 0.04%)</title><rect x="1070.5" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1073.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.10%)</title><rect x="1071.0" y="451.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (8 samples, 0.10%)</title><rect x="1071.0" y="435.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1074.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1072.2" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1072.2" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1072.2" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (12 samples, 0.16%)</title><rect x="1072.2" y="403.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1075.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (15 samples, 0.20%)</title><rect x="1074.0" y="531.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.20%)</title><rect x="1074.0" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="1074.0" y="499.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1077.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (53 samples, 0.69%)</title><rect x="1076.3" y="563.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (23 samples, 0.30%)</title><rect x="1076.3" y="547.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (23 samples, 0.30%)</title><rect x="1076.3" y="531.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.30%)</title><rect x="1076.3" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.07%)</title><rect x="1076.3" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="1076.3" y="483.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1079.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.23%)</title><rect x="1077.1" y="499.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1080.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.23%)</title><rect x="1077.1" y="483.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.1" y="494.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.23%)</title><rect x="1077.1" y="467.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1080.1" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.13%)</title><rect x="1079.9" y="547.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1082.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.26%)</title><rect x="1081.4" y="547.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.4" y="558.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="1081.4" y="531.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1084.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.07%)</title><rect x="1083.6" y="531.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1086.6" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13387] (340 samples, 4.43%)</title><rect x="1084.5" y="707.0" width="52.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1087.5" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (340 samples, 4.43%)</title><rect x="1084.5" y="691.0" width="52.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.5" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (340 samples, 4.43%)</title><rect x="1084.5" y="675.0" width="52.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.5" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (340 samples, 4.43%)</title><rect x="1084.5" y="659.0" width="52.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.5" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17 samples, 0.22%)</title><rect x="1084.5" y="643.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (17 samples, 0.22%)</title><rect x="1084.5" y="627.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.22%)</title><rect x="1084.5" y="611.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.22%)</title><rect x="1084.5" y="595.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.22%)</title><rect x="1084.5" y="579.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1087.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (323 samples, 4.20%)</title><rect x="1087.1" y="643.0" width="49.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.1" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (323 samples, 4.20%)</title><rect x="1087.1" y="627.0" width="49.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.1" y="638.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (87 samples, 1.13%)</title><rect x="1087.1" y="611.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (69 samples, 0.90%)</title><rect x="1087.1" y="595.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (60 samples, 0.78%)</title><rect x="1087.1" y="579.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (60 samples, 0.78%)</title><rect x="1087.1" y="563.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.1" y="574.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.76%)</title><rect x="1087.1" y="547.0" width="8.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1090.1" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1096.0" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1099.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.12%)</title><rect x="1096.3" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.3" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.12%)</title><rect x="1096.3" y="563.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1099.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.23%)</title><rect x="1097.7" y="595.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.23%)</title><rect x="1097.7" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.23%)</title><rect x="1097.7" y="563.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="1097.7" y="547.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1100.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.14%)</title><rect x="1098.8" y="547.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.8" y="558.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="1098.8" y="531.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1101.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (236 samples, 3.07%)</title><rect x="1100.4" y="611.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.4" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (236 samples, 3.07%)</title><rect x="1100.4" y="595.0" width="36.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.4" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (236 samples, 3.07%)</title><rect x="1100.4" y="579.0" width="36.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.4" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (206 samples, 2.68%)</title><rect x="1100.4" y="563.0" width="31.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.4" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (206 samples, 2.68%)</title><rect x="1100.4" y="547.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.4" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.49%)</title><rect x="1100.4" y="531.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.27%)</title><rect x="1100.4" y="515.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 0.27%)</title><rect x="1100.4" y="499.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.27%)</title><rect x="1100.4" y="483.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (21 samples, 0.27%)</title><rect x="1100.4" y="467.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (21 samples, 0.27%)</title><rect x="1100.4" y="451.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.27%)</title><rect x="1100.4" y="435.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.27%)</title><rect x="1100.4" y="419.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1103.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (17 samples, 0.22%)</title><rect x="1103.7" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (17 samples, 0.22%)</title><rect x="1103.7" y="499.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.22%)</title><rect x="1103.7" y="483.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.22%)</title><rect x="1103.7" y="467.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1106.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (158 samples, 2.06%)</title><rect x="1106.3" y="531.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.3" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (60 samples, 0.78%)</title><rect x="1106.3" y="515.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.31%)</title><rect x="1106.3" y="499.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.3" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="1106.3" y="483.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1109.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.29%)</title><rect x="1106.6" y="483.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="1106.7" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="1106.7" y="451.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1109.7" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="1107.5" y="467.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1110.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (11 samples, 0.14%)</title><rect x="1108.3" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.14%)</title><rect x="1108.3" y="451.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1111.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (36 samples, 0.47%)</title><rect x="1110.0" y="499.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="1110.0" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1113.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.40%)</title><rect x="1110.7" y="483.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.40%)</title><rect x="1110.7" y="467.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (31 samples, 0.40%)</title><rect x="1110.7" y="451.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (31 samples, 0.40%)</title><rect x="1110.7" y="435.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (31 samples, 0.40%)</title><rect x="1110.7" y="419.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (31 samples, 0.40%)</title><rect x="1110.7" y="403.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.40%)</title><rect x="1110.7" y="387.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.40%)</title><rect x="1110.7" y="371.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1113.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (98 samples, 1.28%)</title><rect x="1115.5" y="515.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.5" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.13%)</title><rect x="1115.5" y="499.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1118.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="1117.0" y="499.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="1117.0" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="1117.0" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.16%)</title><rect x="1117.0" y="451.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="1117.0" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.16%)</title><rect x="1117.0" y="419.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1120.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.16%)</title><rect x="1118.9" y="499.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (12 samples, 0.16%)</title><rect x="1118.9" y="483.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1121.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (64 samples, 0.83%)</title><rect x="1120.7" y="499.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (27 samples, 0.35%)</title><rect x="1120.9" y="483.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.27%)</title><rect x="1120.9" y="467.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.9" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="1120.9" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1123.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.23%)</title><rect x="1121.3" y="451.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.3" y="462.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="1121.3" y="435.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1124.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="1122.3" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.3" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="1122.3" y="419.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1125.3" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.09%)</title><rect x="1122.7" y="435.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1125.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1123.8" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="1123.8" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1126.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.08%)</title><rect x="1124.1" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.1" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="1124.1" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1127.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (36 samples, 0.47%)</title><rect x="1125.0" y="483.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="1125.0" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1128.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.10%)</title><rect x="1125.6" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.10%)</title><rect x="1125.6" y="451.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.10%)</title><rect x="1125.6" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.10%)</title><rect x="1125.6" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="1125.6" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="1125.6" y="387.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1128.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="1126.9" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="1126.9" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1129.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (21 samples, 0.27%)</title><rect x="1127.3" y="467.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (9 samples, 0.12%)</title><rect x="1127.3" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (9 samples, 0.12%)</title><rect x="1127.3" y="435.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1130.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.05%)</title><rect x="1128.7" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.05%)</title><rect x="1128.7" y="435.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1131.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.10%)</title><rect x="1129.3" y="451.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.10%)</title><rect x="1129.3" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.10%)</title><rect x="1129.3" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.10%)</title><rect x="1129.3" y="403.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1132.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (10 samples, 0.13%)</title><rect x="1130.6" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="1130.6" y="515.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="1130.6" y="499.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1133.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (30 samples, 0.39%)</title><rect x="1132.1" y="563.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (11 samples, 0.14%)</title><rect x="1132.1" y="547.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (11 samples, 0.14%)</title><rect x="1132.1" y="531.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.14%)</title><rect x="1132.1" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="1132.1" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="1132.1" y="483.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1135.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.10%)</title><rect x="1132.6" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.10%)</title><rect x="1132.6" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.6" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="1132.6" y="467.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1135.6" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.03%)</title><rect x="1133.8" y="547.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1136.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.22%)</title><rect x="1134.1" y="547.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.1" y="558.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="1134.1" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1137.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.07%)</title><rect x="1135.2" y="531.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1138.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="1135.9" y="531.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1138.9" y="542.0"></text>
</g>
<g>
<title>[asyncWorker tid=13388] (347 samples, 4.52%)</title><rect x="1136.7" y="707.0" width="53.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1139.7" y="718.0">[asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (347 samples, 4.52%)</title><rect x="1136.7" y="691.0" width="53.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.7" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (347 samples, 4.52%)</title><rect x="1136.7" y="675.0" width="53.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.7" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (347 samples, 4.52%)</title><rect x="1136.7" y="659.0" width="53.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.7" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (32 samples, 0.42%)</title><rect x="1136.7" y="643.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (32 samples, 0.42%)</title><rect x="1136.7" y="627.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.42%)</title><rect x="1136.7" y="611.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (32 samples, 0.42%)</title><rect x="1136.7" y="595.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (32 samples, 0.42%)</title><rect x="1136.7" y="579.0" width="4.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1139.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$259/144119265.run (315 samples, 4.10%)</title><rect x="1141.6" y="643.0" width="48.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$executeAsync$6 (315 samples, 4.10%)</title><rect x="1141.6" y="627.0" width="48.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.6" y="638.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 0.51%)</title><rect x="1141.6" y="611.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.35%)</title><rect x="1141.6" y="595.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.27%)</title><rect x="1141.6" y="579.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.27%)</title><rect x="1141.6" y="563.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.6" y="574.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.27%)</title><rect x="1141.6" y="547.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1144.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.08%)</title><rect x="1144.8" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.8" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.08%)</title><rect x="1144.8" y="563.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1147.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.16%)</title><rect x="1145.8" y="595.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.16%)</title><rect x="1145.8" y="579.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.16%)</title><rect x="1145.8" y="563.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="1145.8" y="547.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1148.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.10%)</title><rect x="1146.4" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.4" y="558.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="1146.4" y="531.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1149.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator$$Lambda$256/105966427.action (276 samples, 3.59%)</title><rect x="1147.6" y="611.0" width="42.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.6" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.lambda$execGet$1 (276 samples, 3.59%)</title><rect x="1147.6" y="595.0" width="42.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.6" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncReplicator.get (276 samples, 3.59%)</title><rect x="1147.6" y="579.0" width="42.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.6" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.getRow (245 samples, 3.19%)</title><rect x="1147.6" y="563.0" width="37.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.6" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowBy (245 samples, 3.19%)</title><rect x="1147.6" y="547.0" width="37.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.6" y="558.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 0.57%)</title><rect x="1147.6" y="531.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1150.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.26%)</title><rect x="1147.6" y="515.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (20 samples, 0.26%)</title><rect x="1147.6" y="499.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.26%)</title><rect x="1147.6" y="483.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (20 samples, 0.26%)</title><rect x="1147.6" y="467.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (20 samples, 0.26%)</title><rect x="1147.6" y="451.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.26%)</title><rect x="1147.6" y="435.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.26%)</title><rect x="1147.6" y="419.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1150.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (24 samples, 0.31%)</title><rect x="1150.7" y="515.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (24 samples, 0.31%)</title><rect x="1150.7" y="499.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.31%)</title><rect x="1150.7" y="483.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.31%)</title><rect x="1150.7" y="467.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1153.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowIterator (162 samples, 2.11%)</title><rect x="1154.4" y="531.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.4" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (39 samples, 0.51%)</title><rect x="1154.4" y="515.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.30%)</title><rect x="1154.4" y="499.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.4" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="1154.4" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1157.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 0.26%)</title><rect x="1154.8" y="483.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.8" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="1154.8" y="467.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1157.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="1155.6" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.6" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="1155.6" y="451.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1158.6" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="1156.5" y="467.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1159.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1157.3" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="1157.3" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1160.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.21%)</title><rect x="1157.9" y="499.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="1157.9" y="483.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1160.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.14%)</title><rect x="1158.7" y="483.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.14%)</title><rect x="1158.7" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (11 samples, 0.14%)</title><rect x="1158.7" y="451.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.14%)</title><rect x="1158.7" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities$$Lambda$146/149605824.apply (11 samples, 0.14%)</title><rect x="1158.7" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (11 samples, 0.14%)</title><rect x="1158.7" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.14%)</title><rect x="1158.7" y="387.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.14%)</title><rect x="1158.7" y="371.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1161.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (123 samples, 1.60%)</title><rect x="1160.4" y="515.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1163.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.21%)</title><rect x="1160.4" y="499.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1163.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (39 samples, 0.51%)</title><rect x="1162.8" y="499.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (39 samples, 0.51%)</title><rect x="1162.8" y="483.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (39 samples, 0.51%)</title><rect x="1162.8" y="467.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (39 samples, 0.51%)</title><rect x="1162.8" y="451.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.51%)</title><rect x="1162.8" y="435.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.51%)</title><rect x="1162.8" y="419.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1165.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="1168.8" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="1168.8" y="483.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1171.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (62 samples, 0.81%)</title><rect x="1169.7" y="499.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getActualRowIterator (31 samples, 0.40%)</title><rect x="1169.7" y="483.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.33%)</title><rect x="1169.7" y="467.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.7" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="1169.7" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1172.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (23 samples, 0.30%)</title><rect x="1170.0" y="451.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1173.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (12 samples, 0.16%)</title><rect x="1170.2" y="435.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.2" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (12 samples, 0.16%)</title><rect x="1170.2" y="419.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1173.2" y="430.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.04%)</title><rect x="1172.0" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1175.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1172.5" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1175.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="1172.5" y="419.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1175.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.08%)</title><rect x="1173.6" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="1173.6" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1176.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Utilities.getListIterators (31 samples, 0.40%)</title><rect x="1174.5" y="483.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="1174.5" y="467.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1177.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="1174.9" y="467.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="1174.9" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.09%)</title><rect x="1174.9" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.09%)</title><rect x="1174.9" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.09%)</title><rect x="1174.9" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="1174.9" y="387.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1177.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.05%)</title><rect x="1176.0" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.05%)</title><rect x="1176.0" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1179.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (17 samples, 0.22%)</title><rect x="1176.6" y="467.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (2 samples, 0.03%)</title><rect x="1176.6" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Values (2 samples, 0.03%)</title><rect x="1176.6" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1179.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.05%)</title><rect x="1176.9" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (4 samples, 0.05%)</title><rect x="1176.9" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1179.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.14%)</title><rect x="1177.6" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.14%)</title><rect x="1177.6" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.14%)</title><rect x="1177.6" y="419.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (11 samples, 0.14%)</title><rect x="1177.6" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1180.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (39 samples, 0.51%)</title><rect x="1179.2" y="531.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (39 samples, 0.51%)</title><rect x="1179.2" y="515.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.51%)</title><rect x="1179.2" y="499.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1182.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/ServiceUtilities.responseFromRow (31 samples, 0.40%)</title><rect x="1185.2" y="563.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1593180232.linkToTargetMethod (14 samples, 0.18%)</title><rect x="1185.2" y="547.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2023401529.invoke (14 samples, 0.18%)</title><rect x="1185.2" y="531.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.18%)</title><rect x="1185.2" y="515.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.07%)</title><rect x="1185.2" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="1185.2" y="483.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1188.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.12%)</title><rect x="1186.0" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.12%)</title><rect x="1186.0" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.0" y="494.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="1186.0" y="467.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.03%)</title><rect x="1187.4" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.20%)</title><rect x="1187.7" y="547.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="558.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="1187.7" y="531.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1190.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.05%)</title><rect x="1188.9" y="531.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1191.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="1189.5" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
</g>
</svg>
