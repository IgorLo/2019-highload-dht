<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (4,982 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.10%)</title><rect x="10.5" y="883.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.08%)</title><rect x="10.7" y="867.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="10.7" y="851.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.08%)</title><rect x="10.7" y="835.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="10.7" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.7" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="10.7" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="10.7" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.7" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.04%)</title><rect x="10.7" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="782.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.04%)</title><rect x="10.7" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (2 samples, 0.04%)</title><rect x="10.7" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.7" y="750.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="10.7" y="723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (40 samples, 0.80%)</title><rect x="11.9" y="883.0" width="9.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.9" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (39 samples, 0.78%)</title><rect x="12.1" y="867.0" width="9.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (17 samples, 0.34%)</title><rect x="13.8" y="851.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.18%)</title><rect x="14.5" y="835.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.5" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.06%)</title><rect x="16.6" y="835.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="19.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="16.6" y="819.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="19.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="16.6" y="803.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="19.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="16.6" y="787.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="19.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="16.6" y="771.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="19.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="16.6" y="755.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="19.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (12 samples, 0.24%)</title><rect x="17.8" y="851.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.8" y="862.0"></text>
</g>
<g>
<title>[not_walkable] (7 samples, 0.14%)</title><rect x="21.4" y="883.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="23.3" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="26.3" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (33 samples, 0.66%)</title><rect x="23.7" y="883.0" width="7.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="26.7" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.12%)</title><rect x="28.7" y="867.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="31.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.12%)</title><rect x="30.1" y="867.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="33.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="851.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="835.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="33.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="819.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="33.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="803.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="33.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="787.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="33.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="30.4" y="771.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="33.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="30.6" y="755.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="33.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="30.6" y="739.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="33.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.28%)</title><rect x="31.6" y="883.0" width="3.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="32.5" y="867.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="35.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="32.5" y="851.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="35.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="32.5" y="835.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="35.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="32.7" y="819.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="35.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="33.0" y="803.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="36.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="33.2" y="787.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="36.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="33.4" y="771.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="36.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="34.2" y="755.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="37.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="34.4" y="739.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="37.4" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.08%)</title><rect x="34.9" y="883.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="37.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,068 samples, 61.58%)</title><rect x="35.8" y="883.0" width="726.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.8" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,068 samples, 61.58%)</title><rect x="35.8" y="867.0" width="726.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.8" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,068 samples, 61.58%)</title><rect x="35.8" y="851.0" width="726.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.8" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (6 samples, 0.12%)</title><rect x="36.1" y="835.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.12%)</title><rect x="36.1" y="819.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (6 samples, 0.12%)</title><rect x="36.1" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (6 samples, 0.12%)</title><rect x="36.1" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.12%)</title><rect x="36.1" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.12%)</title><rect x="36.1" y="755.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.10%)</title><rect x="37.5" y="835.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="37.5" y="819.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.04%)</title><rect x="38.2" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.04%)</title><rect x="38.2" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (837 samples, 16.80%)</title><rect x="38.7" y="835.0" width="198.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.7" y="846.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (814 samples, 16.34%)</title><rect x="42.7" y="819.0" width="192.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.7" y="830.0">java/util/concurrent/Link..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (574 samples, 11.52%)</title><rect x="45.3" y="803.0" width="135.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.3" y="814.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.46%)</title><rect x="47.4" y="787.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (18 samples, 0.36%)</title><rect x="48.6" y="771.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (10 samples, 0.20%)</title><rect x="50.5" y="755.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (10 samples, 0.20%)</title><rect x="50.5" y="739.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.76%)</title><rect x="52.9" y="787.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="53.3" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="53.3" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="53.3" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (33 samples, 0.66%)</title><rect x="54.1" y="771.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (33 samples, 0.66%)</title><rect x="54.1" y="755.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (4 samples, 0.08%)</title><rect x="58.1" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (12 samples, 0.24%)</title><rect x="59.0" y="739.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (12 samples, 0.24%)</title><rect x="59.0" y="723.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (12 samples, 0.24%)</title><rect x="59.0" y="707.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (39 samples, 0.78%)</title><rect x="61.9" y="787.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 0.78%)</title><rect x="61.9" y="771.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.76%)</title><rect x="61.9" y="755.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.76%)</title><rect x="61.9" y="739.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.76%)</title><rect x="61.9" y="723.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="62.3" y="707.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="65.3" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="62.3" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.3" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="62.8" y="691.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="65.8" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (31 samples, 0.62%)</title><rect x="63.5" y="707.0" width="7.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="66.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.56%)</title><rect x="64.2" y="691.0" width="6.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="67.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.56%)</title><rect x="64.2" y="675.0" width="6.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="67.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.54%)</title><rect x="64.5" y="659.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="67.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.54%)</title><rect x="64.5" y="643.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="67.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.54%)</title><rect x="64.5" y="627.0" width="6.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="67.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.46%)</title><rect x="65.4" y="611.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="68.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.42%)</title><rect x="65.9" y="595.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="68.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.40%)</title><rect x="66.1" y="579.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="69.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (464 samples, 9.31%)</title><rect x="71.3" y="787.0" width="109.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.3" y="798.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (464 samples, 9.31%)</title><rect x="71.3" y="771.0" width="109.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.3" y="782.0">jdk/internal/..</text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="74.0" y="755.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="77.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (227 samples, 4.56%)</title><rect x="74.9" y="755.0" width="53.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="77.9" y="766.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="77.7" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="80.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="78.2" y="739.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="81.2" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="78.7" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="81.7" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (65 samples, 1.30%)</title><rect x="79.4" y="739.0" width="15.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="82.4" y="750.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.06%)</title><rect x="87.0" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="90.0" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.14%)</title><rect x="87.7" y="723.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="90.7" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (6 samples, 0.12%)</title><rect x="87.9" y="707.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="90.9" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (5 samples, 0.10%)</title><rect x="89.3" y="723.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="92.3" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 0.36%)</title><rect x="90.5" y="723.0" width="4.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="93.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.06%)</title><rect x="94.8" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="97.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (4 samples, 0.08%)</title><rect x="95.5" y="739.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="98.5" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (94 samples, 1.89%)</title><rect x="96.5" y="739.0" width="22.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="99.5" y="750.0">_..</text>
</g>
<g>
<title>[unknown] (70 samples, 1.41%)</title><rect x="102.1" y="723.0" width="16.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="105.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.41%)</title><rect x="102.1" y="707.0" width="16.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="105.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.52%)</title><rect x="112.6" y="691.0" width="6.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="115.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.46%)</title><rect x="113.3" y="675.0" width="5.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="116.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="114.5" y="659.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="117.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="117.1" y="643.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="120.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="118.2" y="627.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.14%)</title><rect x="118.7" y="739.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="121.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.08%)</title><rect x="120.4" y="739.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="121.3" y="739.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="124.3" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.06%)</title><rect x="122.3" y="739.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="125.3" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.06%)</title><rect x="123.2" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.2" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (20 samples, 0.40%)</title><rect x="123.9" y="739.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="126.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (214 samples, 4.30%)</title><rect x="128.7" y="755.0" width="50.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="131.7" y="766.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_wait (186 samples, 3.73%)</title><rect x="128.7" y="739.0" width="44.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="131.7" y="750.0">__pt..</text>
</g>
<g>
<title>[unknown] (113 samples, 2.27%)</title><rect x="146.0" y="723.0" width="26.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="149.0" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (113 samples, 2.27%)</title><rect x="146.0" y="707.0" width="26.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="149.0" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (96 samples, 1.93%)</title><rect x="150.0" y="691.0" width="22.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="153.0" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (94 samples, 1.89%)</title><rect x="150.5" y="675.0" width="22.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="153.5" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (85 samples, 1.71%)</title><rect x="152.6" y="659.0" width="20.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="155.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.57%)</title><rect x="154.2" y="643.0" width="18.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="157.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.10%)</title><rect x="159.7" y="627.0" width="13.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="162.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.76%)</title><rect x="163.7" y="611.0" width="9.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="166.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.66%)</title><rect x="164.9" y="595.0" width="7.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="167.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="579.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="174.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="563.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="174.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="547.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="174.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="531.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="174.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="515.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="174.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="171.3" y="499.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="174.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="171.5" y="483.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="174.5" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.14%)</title><rect x="172.7" y="739.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="175.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (14 samples, 0.28%)</title><rect x="174.4" y="739.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="177.4" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.10%)</title><rect x="177.7" y="739.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="180.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="178.9" y="739.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="181.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.08%)</title><rect x="179.3" y="755.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="182.3" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.08%)</title><rect x="180.3" y="755.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="183.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (86 samples, 1.73%)</title><rect x="181.5" y="803.0" width="20.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (86 samples, 1.73%)</title><rect x="181.5" y="787.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.06%)</title><rect x="182.4" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="182.7" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.7" y="766.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.04%)</title><rect x="182.7" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="185.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (64 samples, 1.28%)</title><rect x="183.1" y="771.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.12%)</title><rect x="186.7" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.42%)</title><rect x="188.4" y="755.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.24%)</title><rect x="188.4" y="739.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.18%)</title><rect x="191.2" y="739.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (5 samples, 0.10%)</title><rect x="191.7" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="192.9" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (18 samples, 0.36%)</title><rect x="193.3" y="755.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="197.8" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (15 samples, 0.30%)</title><rect x="198.3" y="771.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (15 samples, 0.30%)</title><rect x="198.3" y="755.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (9 samples, 0.18%)</title><rect x="199.2" y="739.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.04%)</title><rect x="201.4" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (142 samples, 2.85%)</title><rect x="201.9" y="803.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.9" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (142 samples, 2.85%)</title><rect x="201.9" y="787.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.9" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (142 samples, 2.85%)</title><rect x="201.9" y="771.0" width="33.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.9" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (142 samples, 2.85%)</title><rect x="201.9" y="755.0" width="33.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.9" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (142 samples, 2.85%)</title><rect x="201.9" y="739.0" width="33.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.9" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (32 samples, 0.64%)</title><rect x="203.5" y="723.0" width="7.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="206.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="204.9" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="207.9" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="205.6" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="208.6" y="718.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="206.1" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="209.1" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.06%)</title><rect x="206.6" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="209.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="207.5" y="707.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="210.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.10%)</title><rect x="208.2" y="707.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="211.2" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.10%)</title><rect x="209.7" y="707.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="212.7" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (102 samples, 2.05%)</title><rect x="211.3" y="723.0" width="24.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="214.3" y="734.0">p..</text>
</g>
<g>
<title>[unknown] (97 samples, 1.95%)</title><rect x="212.5" y="707.0" width="23.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="215.5" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (97 samples, 1.95%)</title><rect x="212.5" y="691.0" width="23.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="215.5" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 1.81%)</title><rect x="214.2" y="675.0" width="21.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="217.2" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 1.81%)</title><rect x="214.2" y="659.0" width="21.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="217.2" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 1.81%)</title><rect x="214.2" y="643.0" width="21.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="217.2" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.67%)</title><rect x="215.8" y="627.0" width="19.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="218.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.55%)</title><rect x="217.2" y="611.0" width="18.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="220.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.49%)</title><rect x="218.0" y="595.0" width="17.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="221.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (4 samples, 0.08%)</title><rect x="235.5" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.04%)</title><rect x="236.4" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.run (2,212 samples, 44.40%)</title><rect x="237.1" y="835.0" width="524.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.1" y="846.0">ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.run</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (2,212 samples, 44.40%)</title><rect x="237.1" y="819.0" width="524.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.1" y="830.0">ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,952 samples, 39.18%)</title><rect x="237.1" y="803.0" width="462.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.1" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.14%)</title><rect x="237.1" y="787.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="240.1" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.06%)</title><rect x="237.4" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="240.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.04%)</title><rect x="238.1" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="241.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,900 samples, 38.14%)</title><rect x="238.8" y="787.0" width="450.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.8" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 1.32%)</title><rect x="238.8" y="771.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.8" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.12%)</title><rect x="241.6" y="755.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="244.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (47 samples, 0.94%)</title><rect x="243.3" y="755.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.10%)</title><rect x="243.5" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.08%)</title><rect x="243.8" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (6 samples, 0.12%)</title><rect x="244.7" y="739.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.24%)</title><rect x="246.1" y="739.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.08%)</title><rect x="247.6" y="723.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.06%)</title><rect x="247.8" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="248.5" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.46%)</title><rect x="249.0" y="739.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.46%)</title><rect x="249.0" y="723.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="253.2" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="253.2" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.2" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (3 samples, 0.06%)</title><rect x="253.7" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,834 samples, 36.81%)</title><rect x="254.4" y="771.0" width="434.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.4" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,834 samples, 36.81%)</title><rect x="254.4" y="755.0" width="434.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.4" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,834 samples, 36.81%)</title><rect x="254.4" y="739.0" width="434.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.4" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,833 samples, 36.79%)</title><rect x="254.7" y="723.0" width="434.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.7" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.10%)</title><rect x="261.3" y="707.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="264.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.57%)</title><rect x="262.5" y="707.0" width="18.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="265.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.57%)</title><rect x="262.5" y="691.0" width="18.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="265.5" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (65 samples, 1.30%)</title><rect x="262.5" y="675.0" width="15.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.10%)</title><rect x="264.6" y="659.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="267.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.06%)</title><rect x="266.0" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="269.0" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (14 samples, 0.28%)</title><rect x="267.0" y="659.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="270.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (31 samples, 0.62%)</title><rect x="270.3" y="659.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="273.3" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="271.5" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="274.5" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.08%)</title><rect x="272.0" y="643.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="275.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (9 samples, 0.18%)</title><rect x="272.9" y="643.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="275.9" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (7 samples, 0.14%)</title><rect x="275.0" y="643.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="278.0" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="276.7" y="643.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="279.7" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="277.9" y="675.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="280.9" y="686.0"></text>
</g>
<g>
<title>__send (9 samples, 0.18%)</title><rect x="278.4" y="675.0" width="2.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="281.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="280.5" y="675.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="283.5" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.10%)</title><rect x="281.0" y="707.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="284.0" y="718.0"></text>
</g>
<g>
<title>__send (1,717 samples, 34.46%)</title><rect x="282.1" y="707.0" width="406.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="285.1" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (1,698 samples, 34.08%)</title><rect x="286.6" y="691.0" width="402.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="289.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,698 samples, 34.08%)</title><rect x="286.6" y="675.0" width="402.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="289.6" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,671 samples, 33.54%)</title><rect x="293.0" y="659.0" width="395.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="296.0" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,670 samples, 33.52%)</title><rect x="293.3" y="643.0" width="395.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="296.3" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,661 samples, 33.34%)</title><rect x="295.4" y="627.0" width="393.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="298.4" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,654 samples, 33.20%)</title><rect x="297.1" y="611.0" width="391.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="300.1" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,641 samples, 32.94%)</title><rect x="300.1" y="595.0" width="388.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="303.1" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,631 samples, 32.74%)</title><rect x="302.5" y="579.0" width="386.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="305.5" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,529 samples, 30.69%)</title><rect x="326.7" y="563.0" width="362.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="329.7" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,454 samples, 29.19%)</title><rect x="344.4" y="547.0" width="344.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="347.4" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,386 samples, 27.82%)</title><rect x="360.5" y="531.0" width="328.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="363.5" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,310 samples, 26.29%)</title><rect x="378.5" y="515.0" width="310.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="381.5" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,215 samples, 24.39%)</title><rect x="401.0" y="499.0" width="287.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="404.0" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,185 samples, 23.79%)</title><rect x="408.1" y="483.0" width="280.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="411.1" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,148 samples, 23.04%)</title><rect x="416.9" y="467.0" width="271.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="419.9" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,129 samples, 22.66%)</title><rect x="421.4" y="451.0" width="267.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="424.4" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,109 samples, 22.26%)</title><rect x="426.2" y="435.0" width="262.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="429.2" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,063 samples, 21.34%)</title><rect x="437.0" y="419.0" width="251.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="440.0" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,004 samples, 20.15%)</title><rect x="451.0" y="403.0" width="237.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="454.0" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (940 samples, 18.87%)</title><rect x="466.2" y="387.0" width="222.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="469.2" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (827 samples, 16.60%)</title><rect x="492.9" y="371.0" width="195.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="495.9" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (769 samples, 15.44%)</title><rect x="506.7" y="355.0" width="182.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="509.7" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (736 samples, 14.77%)</title><rect x="514.5" y="339.0" width="174.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="517.5" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (717 samples, 14.39%)</title><rect x="519.0" y="323.0" width="169.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="522.0" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (701 samples, 14.07%)</title><rect x="522.8" y="307.0" width="166.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="525.8" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (687 samples, 13.79%)</title><rect x="526.1" y="291.0" width="162.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="529.1" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (679 samples, 13.63%)</title><rect x="528.0" y="275.0" width="160.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="531.0" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (650 samples, 13.05%)</title><rect x="534.9" y="259.0" width="153.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="537.9" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (630 samples, 12.65%)</title><rect x="539.6" y="243.0" width="149.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="542.6" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (618 samples, 12.40%)</title><rect x="542.4" y="227.0" width="146.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="545.4" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (606 samples, 12.16%)</title><rect x="545.3" y="211.0" width="143.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="548.3" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (593 samples, 11.90%)</title><rect x="548.4" y="195.0" width="140.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="551.4" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (564 samples, 11.32%)</title><rect x="555.2" y="179.0" width="133.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="558.2" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (505 samples, 10.14%)</title><rect x="569.2" y="163.0" width="119.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="572.2" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (478 samples, 9.59%)</title><rect x="575.6" y="147.0" width="113.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="578.6" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (406 samples, 8.15%)</title><rect x="592.7" y="131.0" width="96.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="595.7" y="142.0">[unknown]</text>
</g>
<g>
<title>[unknown] (299 samples, 6.00%)</title><rect x="618.0" y="115.0" width="70.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="621.0" y="126.0">[unknown]</text>
</g>
<g>
<title>[unknown] (270 samples, 5.42%)</title><rect x="624.9" y="99.0" width="63.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="627.9" y="110.0">[unknown]</text>
</g>
<g>
<title>[unknown] (259 samples, 5.20%)</title><rect x="627.5" y="83.0" width="61.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="630.5" y="94.0">[unkno..</text>
</g>
<g>
<title>[unknown] (31 samples, 0.62%)</title><rect x="681.5" y="67.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="684.5" y="78.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.48%)</title><rect x="683.1" y="51.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="686.1" y="62.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="685.3" y="35.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="688.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (45 samples, 0.90%)</title><rect x="688.8" y="787.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (44 samples, 0.88%)</title><rect x="689.1" y="771.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (42 samples, 0.84%)</title><rect x="689.5" y="755.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.12%)</title><rect x="692.1" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.12%)</title><rect x="692.1" y="723.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (4 samples, 0.08%)</title><rect x="692.1" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="693.1" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (20 samples, 0.40%)</title><rect x="693.6" y="739.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (19 samples, 0.38%)</title><rect x="693.8" y="723.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.8" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.06%)</title><rect x="697.6" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.10%)</title><rect x="698.3" y="739.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="701.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/1098854345.action (260 samples, 5.22%)</title><rect x="699.5" y="803.0" width="61.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.5" y="814.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$entity$0 (260 samples, 5.22%)</title><rect x="699.5" y="787.0" width="61.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.5" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.get (260 samples, 5.22%)</title><rect x="699.5" y="771.0" width="61.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.5" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.12%)</title><rect x="699.7" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (253 samples, 5.08%)</title><rect x="701.1" y="755.0" width="60.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.1" y="766.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (45 samples, 0.90%)</title><rect x="702.1" y="739.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (43 samples, 0.86%)</title><rect x="702.6" y="723.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (42 samples, 0.84%)</title><rect x="702.8" y="707.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (19 samples, 0.38%)</title><rect x="704.0" y="691.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.endOfData (19 samples, 0.38%)</title><rect x="704.0" y="675.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="706.6" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (5 samples, 0.10%)</title><rect x="707.3" y="659.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.3" y="670.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.16%)</title><rect x="708.5" y="691.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="711.5" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.20%)</title><rect x="710.4" y="691.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="713.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="710.6" y="675.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="713.6" y="686.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.14%)</title><rect x="711.1" y="675.0" width="1.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="714.1" y="686.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.10%)</title><rect x="711.6" y="659.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="714.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (8 samples, 0.16%)</title><rect x="712.7" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.7" y="750.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (8 samples, 0.16%)</title><rect x="712.7" y="723.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.7" y="734.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 0.16%)</title><rect x="712.7" y="707.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.16%)</title><rect x="712.7" y="691.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.16%)</title><rect x="712.7" y="675.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (196 samples, 3.93%)</title><rect x="714.6" y="739.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.6" y="750.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (10 samples, 0.20%)</title><rect x="714.6" y="723.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (10 samples, 0.20%)</title><rect x="714.6" y="707.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (10 samples, 0.20%)</title><rect x="714.6" y="691.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowsIterator (186 samples, 3.73%)</title><rect x="717.0" y="723.0" width="44.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.0" y="734.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (130 samples, 2.61%)</title><rect x="718.4" y="707.0" width="30.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.4" y="718.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="721.7" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (43 samples, 0.86%)</title><rect x="722.5" y="691.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (26 samples, 0.52%)</title><rect x="723.4" y="675.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (4 samples, 0.08%)</title><rect x="728.6" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (13 samples, 0.26%)</title><rect x="729.6" y="675.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (13 samples, 0.26%)</title><rect x="729.6" y="659.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (9 samples, 0.18%)</title><rect x="730.5" y="643.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (70 samples, 1.41%)</title><rect x="732.6" y="691.0" width="16.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (19 samples, 0.38%)</title><rect x="732.6" y="675.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (17 samples, 0.34%)</title><rect x="733.1" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (16 samples, 0.32%)</title><rect x="733.3" y="643.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.06%)</title><rect x="737.1" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.06%)</title><rect x="737.1" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.06%)</title><rect x="737.1" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (39 samples, 0.78%)</title><rect x="737.8" y="675.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (17 samples, 0.34%)</title><rect x="739.3" y="659.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (17 samples, 0.34%)</title><rect x="739.3" y="643.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.20%)</title><rect x="740.9" y="627.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.04%)</title><rect x="742.1" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.06%)</title><rect x="742.6" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.06%)</title><rect x="742.6" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (16 samples, 0.32%)</title><rect x="743.3" y="659.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.10%)</title><rect x="743.3" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.16%)</title><rect x="744.5" y="643.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="745.2" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.06%)</title><rect x="745.7" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.06%)</title><rect x="746.4" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="746.6" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="746.6" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="746.6" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (9 samples, 0.18%)</title><rect x="747.1" y="675.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.18%)</title><rect x="747.1" y="659.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.18%)</title><rect x="747.1" y="643.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.04%)</title><rect x="747.6" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.10%)</title><rect x="748.0" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (50 samples, 1.00%)</title><rect x="749.2" y="707.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (11 samples, 0.22%)</title><rect x="749.9" y="691.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (11 samples, 0.22%)</title><rect x="749.9" y="675.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.22%)</title><rect x="752.5" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.20%)</title><rect x="752.8" y="675.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.12%)</title><rect x="753.7" y="659.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.50%)</title><rect x="755.1" y="691.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.18%)</title><rect x="758.9" y="675.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (2 samples, 0.04%)</title><rect x="760.6" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (6 samples, 0.12%)</title><rect x="761.1" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.1" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,780 samples, 35.73%)</title><rect x="762.5" y="883.0" width="421.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.5" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="763.2" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="766.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.04%)</title><rect x="763.2" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="766.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (492 samples, 9.88%)</title><rect x="763.9" y="867.0" width="116.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.9" y="878.0">one/nio/net/Na..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (17 samples, 0.34%)</title><rect x="765.3" y="851.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (12 samples, 0.24%)</title><rect x="766.5" y="835.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (469 samples, 9.41%)</title><rect x="769.3" y="851.0" width="111.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.3" y="862.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (7 samples, 0.14%)</title><rect x="774.6" y="835.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="777.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (413 samples, 8.29%)</title><rect x="776.2" y="835.0" width="97.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="779.2" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="776.5" y="819.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="779.5" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="776.5" y="803.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="779.5" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.10%)</title><rect x="776.9" y="803.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="779.9" y="814.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.12%)</title><rect x="778.1" y="803.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="781.1" y="814.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="778.6" y="787.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="781.6" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="779.5" y="819.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="782.5" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.12%)</title><rect x="780.5" y="819.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="783.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (388 samples, 7.79%)</title><rect x="782.1" y="819.0" width="91.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="785.1" y="830.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (351 samples, 7.05%)</title><rect x="790.9" y="803.0" width="83.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="793.9" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (351 samples, 7.05%)</title><rect x="790.9" y="787.0" width="83.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="793.9" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (328 samples, 6.58%)</title><rect x="796.4" y="771.0" width="77.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="799.4" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (328 samples, 6.58%)</title><rect x="796.4" y="755.0" width="77.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="799.4" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (315 samples, 6.32%)</title><rect x="799.4" y="739.0" width="74.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="802.4" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (279 samples, 5.60%)</title><rect x="808.0" y="723.0" width="66.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="811.0" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (206 samples, 4.13%)</title><rect x="825.2" y="707.0" width="48.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="828.2" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (143 samples, 2.87%)</title><rect x="840.2" y="691.0" width="33.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="843.2" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (110 samples, 2.21%)</title><rect x="848.0" y="675.0" width="26.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="851.0" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (81 samples, 1.63%)</title><rect x="854.9" y="659.0" width="19.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="857.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="870.7" y="643.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="873.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="871.2" y="627.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="874.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="871.4" y="611.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="874.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="871.9" y="595.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="874.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="872.6" y="579.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="875.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="872.6" y="563.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="872.6" y="547.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="875.6" y="558.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.10%)</title><rect x="874.3" y="835.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="877.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 0.42%)</title><rect x="875.5" y="835.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="878.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,282 samples, 25.73%)</title><rect x="880.4" y="867.0" width="303.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="883.5" y="851.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="886.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,254 samples, 25.17%)</title><rect x="884.2" y="851.0" width="297.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.2" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (849 samples, 17.04%)</title><rect x="885.2" y="835.0" width="201.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.2" y="846.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.06%)</title><rect x="891.6" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (693 samples, 13.91%)</title><rect x="892.3" y="819.0" width="164.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.3" y="830.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (687 samples, 13.79%)</title><rect x="893.7" y="803.0" width="162.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.7" y="814.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (645 samples, 12.95%)</title><rect x="895.1" y="787.0" width="152.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.1" y="798.0">RequestHandler0_ent..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (63 samples, 1.26%)</title><rect x="895.1" y="771.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (31 samples, 0.62%)</title><rect x="895.4" y="755.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (30 samples, 0.60%)</title><rect x="895.6" y="739.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.6" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.08%)</title><rect x="899.6" y="723.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="902.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="900.6" y="723.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="903.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.12%)</title><rect x="901.3" y="723.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (11 samples, 0.22%)</title><rect x="902.7" y="755.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.10%)</title><rect x="904.1" y="739.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.06%)</title><rect x="904.6" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="905.3" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (17 samples, 0.34%)</title><rect x="906.0" y="755.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.34%)</title><rect x="906.0" y="739.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.34%)</title><rect x="906.0" y="723.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.24%)</title><rect x="907.2" y="707.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (582 samples, 11.68%)</title><rect x="910.0" y="771.0" width="137.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.0" y="782.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.18%)</title><rect x="910.0" y="755.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.16%)</title><rect x="910.3" y="739.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.12%)</title><rect x="910.8" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.10%)</title><rect x="911.0" y="707.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.60%)</title><rect x="912.2" y="755.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.60%)</title><rect x="912.2" y="739.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/1098854345.get$Lambda (30 samples, 0.60%)</title><rect x="912.2" y="723.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$61/1098854345.&lt;init&gt; (30 samples, 0.60%)</title><rect x="912.2" y="707.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.44%)</title><rect x="919.3" y="755.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.28%)</title><rect x="921.2" y="739.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.24%)</title><rect x="921.6" y="723.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.24%)</title><rect x="921.6" y="707.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.22%)</title><rect x="921.9" y="691.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.14%)</title><rect x="922.8" y="675.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="924.0" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.executeAsync (521 samples, 10.46%)</title><rect x="924.5" y="755.0" width="123.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.5" y="766.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.22%)</title><rect x="925.0" y="739.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.22%)</title><rect x="925.0" y="723.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.get$Lambda (11 samples, 0.22%)</title><rect x="925.0" y="707.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.&lt;init&gt; (11 samples, 0.22%)</title><rect x="925.0" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (508 samples, 10.20%)</title><rect x="927.6" y="739.0" width="120.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.6" y="750.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (503 samples, 10.10%)</title><rect x="928.8" y="723.0" width="119.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.8" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (6 samples, 0.12%)</title><rect x="929.5" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (5 samples, 0.10%)</title><rect x="930.9" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (460 samples, 9.23%)</title><rect x="932.1" y="707.0" width="108.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.1" y="718.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (43 samples, 0.86%)</title><rect x="932.1" y="691.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (43 samples, 0.86%)</title><rect x="932.1" y="675.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (43 samples, 0.86%)</title><rect x="932.1" y="659.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="935.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (43 samples, 0.86%)</title><rect x="932.1" y="643.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (43 samples, 0.86%)</title><rect x="932.1" y="627.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (416 samples, 8.35%)</title><rect x="942.5" y="691.0" width="98.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.5" y="702.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (416 samples, 8.35%)</title><rect x="942.5" y="675.0" width="98.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.5" y="686.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (416 samples, 8.35%)</title><rect x="942.5" y="659.0" width="98.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.5" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (416 samples, 8.35%)</title><rect x="942.5" y="643.0" width="98.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.5" y="654.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (416 samples, 8.35%)</title><rect x="942.5" y="627.0" width="98.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.5" y="638.0">jdk/internal..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.06%)</title><rect x="943.4" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="946.4" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="944.1" y="611.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="947.1" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="944.9" y="611.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="947.9" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.04%)</title><rect x="945.6" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="948.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (74 samples, 1.49%)</title><rect x="946.0" y="611.0" width="17.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="949.0" y="622.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="949.6" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="952.6" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="950.1" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="953.1" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.04%)</title><rect x="950.5" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="953.5" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.18%)</title><rect x="951.3" y="595.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="954.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (25 samples, 0.50%)</title><rect x="953.6" y="595.0" width="5.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="956.6" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.12%)</title><rect x="960.0" y="595.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="963.0" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.12%)</title><rect x="961.4" y="595.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="964.4" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="962.9" y="595.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="965.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.16%)</title><rect x="963.6" y="611.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="966.6" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (319 samples, 6.40%)</title><rect x="965.5" y="611.0" width="75.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="968.5" y="622.0">pthread_..</text>
</g>
<g>
<title>[unknown] (278 samples, 5.58%)</title><rect x="975.2" y="595.0" width="65.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="978.2" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (278 samples, 5.58%)</title><rect x="975.2" y="579.0" width="65.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="978.2" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (253 samples, 5.08%)</title><rect x="981.1" y="563.0" width="59.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="984.1" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (249 samples, 5.00%)</title><rect x="982.0" y="547.0" width="59.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="985.0" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (245 samples, 4.92%)</title><rect x="983.0" y="531.0" width="58.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="986.0" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (214 samples, 4.30%)</title><rect x="990.3" y="515.0" width="50.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="993.3" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (188 samples, 3.77%)</title><rect x="996.5" y="499.0" width="44.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="999.5" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (176 samples, 3.53%)</title><rect x="999.3" y="483.0" width="41.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1002.3" y="494.0">[un..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="467.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1043.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="451.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1043.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="435.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1043.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="419.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1043.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="403.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1043.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1040.1" y="387.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1043.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1040.3" y="371.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1043.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.24%)</title><rect x="1041.0" y="707.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.24%)</title><rect x="1041.0" y="691.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.10%)</title><rect x="1042.7" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.08%)</title><rect x="1042.9" y="659.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.04%)</title><rect x="1042.9" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.04%)</title><rect x="1042.9" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.04%)</title><rect x="1042.9" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.04%)</title><rect x="1043.4" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="1043.4" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="1043.4" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.34%)</title><rect x="1043.9" y="707.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.34%)</title><rect x="1043.9" y="691.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (12 samples, 0.24%)</title><rect x="1044.1" y="675.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1044.6" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (8 samples, 0.16%)</title><rect x="1045.0" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (8 samples, 0.16%)</title><rect x="1045.0" y="643.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (7 samples, 0.14%)</title><rect x="1045.3" y="627.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.3" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (5 samples, 0.10%)</title><rect x="1045.8" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.8" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (5 samples, 0.10%)</title><rect x="1045.8" y="595.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.08%)</title><rect x="1046.9" y="675.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.08%)</title><rect x="1046.9" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.06%)</title><rect x="1047.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.06%)</title><rect x="1047.2" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.2" y="638.0"></text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (2 samples, 0.04%)</title><rect x="1047.9" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (8 samples, 0.16%)</title><rect x="1048.4" y="787.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.20%)</title><rect x="1050.3" y="787.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.20%)</title><rect x="1050.3" y="771.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.16%)</title><rect x="1050.3" y="755.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1052.2" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="1052.2" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.32%)</title><rect x="1052.6" y="787.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.28%)</title><rect x="1053.1" y="771.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.06%)</title><rect x="1053.1" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.20%)</title><rect x="1054.0" y="755.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.16%)</title><rect x="1054.5" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (66 samples, 1.32%)</title><rect x="1056.4" y="819.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.58%)</title><rect x="1059.3" y="803.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.22%)</title><rect x="1063.5" y="787.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.16%)</title><rect x="1064.2" y="771.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.10%)</title><rect x="1064.9" y="755.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.40%)</title><rect x="1066.1" y="803.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.38%)</title><rect x="1066.4" y="787.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.16%)</title><rect x="1069.0" y="771.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.16%)</title><rect x="1069.0" y="755.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="1070.4" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.10%)</title><rect x="1070.9" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.06%)</title><rect x="1072.0" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (33 samples, 0.66%)</title><rect x="1072.8" y="819.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (33 samples, 0.66%)</title><rect x="1072.8" y="803.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (14 samples, 0.28%)</title><rect x="1073.7" y="787.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.30%)</title><rect x="1077.0" y="787.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.12%)</title><rect x="1077.7" y="771.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1080.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.12%)</title><rect x="1077.7" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1080.7" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.12%)</title><rect x="1077.7" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.7" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.04%)</title><rect x="1078.7" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.12%)</title><rect x="1079.2" y="771.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.12%)</title><rect x="1079.2" y="755.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.10%)</title><rect x="1079.4" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.48%)</title><rect x="1080.6" y="819.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.46%)</title><rect x="1080.8" y="803.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.38%)</title><rect x="1081.8" y="787.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.36%)</title><rect x="1082.0" y="771.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.12%)</title><rect x="1083.4" y="755.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.4" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.12%)</title><rect x="1084.8" y="755.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1087.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (401 samples, 8.05%)</title><rect x="1086.3" y="835.0" width="94.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.3" y="846.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (396 samples, 7.95%)</title><rect x="1087.2" y="819.0" width="93.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.2" y="830.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="1092.9" y="803.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1095.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 2.03%)</title><rect x="1093.4" y="803.0" width="23.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1096.4" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (101 samples, 2.03%)</title><rect x="1093.4" y="787.0" width="23.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1096.4" y="798.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (81 samples, 1.63%)</title><rect x="1093.4" y="771.0" width="19.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1096.4" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.16%)</title><rect x="1094.3" y="755.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1097.3" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.08%)</title><rect x="1096.2" y="755.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.2" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="1097.2" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1100.2" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (20 samples, 0.40%)</title><rect x="1097.6" y="755.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1100.6" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (40 samples, 0.80%)</title><rect x="1102.6" y="755.0" width="9.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1105.6" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.10%)</title><rect x="1105.4" y="739.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1108.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (6 samples, 0.12%)</title><rect x="1106.6" y="739.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1109.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.06%)</title><rect x="1108.0" y="739.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.0" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (6 samples, 0.12%)</title><rect x="1108.8" y="739.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1111.8" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.16%)</title><rect x="1110.2" y="739.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1113.2" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="1112.1" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.1" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.12%)</title><rect x="1112.5" y="771.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1115.5" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.14%)</title><rect x="1114.0" y="771.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1117.0" y="782.0"></text>
</g>
<g>
<title>recv (6 samples, 0.12%)</title><rect x="1115.6" y="771.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1118.6" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.10%)</title><rect x="1117.3" y="803.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1120.3" y="814.0"></text>
</g>
<g>
<title>recv (264 samples, 5.30%)</title><rect x="1118.5" y="803.0" width="62.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1121.5" y="814.0">recv</text>
</g>
<g>
<title>[unknown] (246 samples, 4.94%)</title><rect x="1122.7" y="787.0" width="58.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1125.7" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (246 samples, 4.94%)</title><rect x="1122.7" y="771.0" width="58.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1125.7" y="782.0">[unkno..</text>
</g>
<g>
<title>[unknown] (224 samples, 4.50%)</title><rect x="1127.9" y="755.0" width="53.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1130.9" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (224 samples, 4.50%)</title><rect x="1127.9" y="739.0" width="53.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1130.9" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (210 samples, 4.22%)</title><rect x="1131.3" y="723.0" width="49.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1134.3" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (197 samples, 3.95%)</title><rect x="1134.3" y="707.0" width="46.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1137.3" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (186 samples, 3.73%)</title><rect x="1136.9" y="691.0" width="44.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1139.9" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (156 samples, 3.13%)</title><rect x="1144.1" y="675.0" width="36.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1147.1" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (114 samples, 2.29%)</title><rect x="1154.0" y="659.0" width="27.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1157.0" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (75 samples, 1.51%)</title><rect x="1163.2" y="643.0" width="17.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1166.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.08%)</title><rect x="1168.2" y="627.0" width="12.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.54%)</title><rect x="1174.6" y="611.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1177.6" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.24%)</title><rect x="1181.2" y="851.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.20%)</title><rect x="1181.7" y="835.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1184.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.18%)</title><rect x="1181.9" y="819.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1184.9" y="830.0"></text>
</g>
<g>
<title>start_thread (25 samples, 0.50%)</title><rect x="1184.1" y="883.0" width="5.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1187.1" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (25 samples, 0.50%)</title><rect x="1184.1" y="867.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1187.1" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (25 samples, 0.50%)</title><rect x="1184.1" y="851.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (20 samples, 0.40%)</title><rect x="1184.3" y="835.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (20 samples, 0.40%)</title><rect x="1184.3" y="819.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (20 samples, 0.40%)</title><rect x="1184.3" y="803.0" width="4.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (20 samples, 0.40%)</title><rect x="1184.3" y="787.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (20 samples, 0.40%)</title><rect x="1184.3" y="771.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (20 samples, 0.40%)</title><rect x="1184.3" y="755.0" width="4.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (12 samples, 0.24%)</title><rect x="1184.3" y="739.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.06%)</title><rect x="1184.6" y="723.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.06%)</title><rect x="1184.6" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.04%)</title><rect x="1184.6" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.16%)</title><rect x="1185.3" y="723.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.04%)</title><rect x="1185.7" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.04%)</title><rect x="1185.7" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1185.7" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.04%)</title><rect x="1186.4" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.08%)</title><rect x="1187.2" y="739.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.08%)</title><rect x="1187.2" y="723.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="1187.6" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.6" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1188.1" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1188.1" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1188.1" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1188.1" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1188.1" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1188.1" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.08%)</title><rect x="1189.1" y="835.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.04%)</title><rect x="1189.3" y="819.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
</g>
</svg>
