<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="677"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="677"> </text>
<g id="frames">
<g>
<title>all (314,035 samples, 100.00%)</title><rect x="10.0" y="643.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="654.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (314,027 samples, 100.00%)</title><rect x="10.0" y="627.0" width="1180.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (314,027 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="622.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (314,027 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="606.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (314,027 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="590.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (314,024 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (314,024 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="558.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (314,024 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="542.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entities (314,024 samples, 100.00%)</title><rect x="10.0" y="515.0" width="1180.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="526.0">ru/mail/polis/service/igorlo/AsyncService.entities</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (89,335 samples, 28.45%)</title><rect x="10.0" y="499.0" width="335.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="510.0">ru/mail/polis/dao/DAO.range</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (74,603 samples, 23.76%)</title><rect x="10.0" y="483.0" width="280.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="494.0">ru/mail/polis/dao/Iters.until</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (74,603 samples, 23.76%)</title><rect x="10.0" y="467.0" width="280.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="478.0">ru/mail/polis/dao/Iters$UntilIterator...</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (74,602 samples, 23.76%)</title><rect x="10.0" y="451.0" width="280.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="462.0">com/google/common/collect/TransformedI..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (74,602 samples, 23.76%)</title><rect x="10.0" y="435.0" width="280.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="446.0">com/google/common/collect/AbstractIter..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (74,602 samples, 23.76%)</title><rect x="10.0" y="419.0" width="280.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="430.0">com/google/common/collect/AbstractIter..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (74,602 samples, 23.76%)</title><rect x="10.0" y="403.0" width="280.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0">com/google/common/collect/Iterators$5...</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (74,602 samples, 23.76%)</title><rect x="10.0" y="387.0" width="280.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="398.0">ru/mail/polis/dao/Iters$CollapseEquals..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66,389 samples, 21.14%)</title><rect x="10.0" y="371.0" width="249.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="382.0">com/google/common/collect/Iterato..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (29,143 samples, 9.28%)</title><rect x="10.0" y="355.0" width="109.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/Abs..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (29,143 samples, 9.28%)</title><rect x="10.0" y="339.0" width="109.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/Pri..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (29,143 samples, 9.28%)</title><rect x="10.0" y="323.0" width="109.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/Pri..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="307.0" width="109.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="318.0">com/google/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="291.0" width="109.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="302.0">com/google/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$67/498267487.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="275.0" width="109.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (29,143 samples, 9.28%)</title><rect x="10.0" y="259.0" width="109.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="243.0" width="109.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="254.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29,143 samples, 9.28%)</title><rect x="10.0" y="227.0" width="109.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="211.0" width="109.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29,143 samples, 9.28%)</title><rect x="10.0" y="195.0" width="109.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="206.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$77/1404537422.compare (29,143 samples, 9.28%)</title><rect x="10.0" y="179.0" width="109.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="190.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (29,143 samples, 9.28%)</title><rect x="10.0" y="163.0" width="109.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="174.0">java/util/Com..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow$$Lambda$76/1614006218.apply (29,143 samples, 9.28%)</title><rect x="10.0" y="147.0" width="109.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="158.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (29,143 samples, 9.28%)</title><rect x="10.0" y="131.0" width="109.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="142.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (29,143 samples, 9.28%)</title><rect x="10.0" y="115.0" width="109.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="126.0">java/nio/Dire..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (29,143 samples, 9.28%)</title><rect x="10.0" y="99.0" width="109.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="110.0">java/nio/Dire..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (29,143 samples, 9.28%)</title><rect x="10.0" y="83.0" width="109.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="94.0">java.nio.Dire..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (37,246 samples, 11.86%)</title><rect x="119.5" y="355.0" width="140.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.5" y="366.0">java/util/Priorit..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (37,246 samples, 11.86%)</title><rect x="119.5" y="339.0" width="140.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="350.0">java/util/Priorit..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (37,246 samples, 11.86%)</title><rect x="119.5" y="323.0" width="140.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.5" y="334.0">java/util/Priorit..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (37,246 samples, 11.86%)</title><rect x="119.5" y="307.0" width="140.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.5" y="318.0">java/util/Priorit..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37,246 samples, 11.86%)</title><rect x="119.5" y="291.0" width="140.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.5" y="302.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37,246 samples, 11.86%)</title><rect x="119.5" y="275.0" width="140.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.5" y="286.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (28,805 samples, 9.17%)</title><rect x="119.5" y="259.0" width="108.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.5" y="270.0">com/google/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$SSTableIterator.next (28,805 samples, 9.17%)</title><rect x="119.5" y="243.0" width="108.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.5" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$SSTableIterator.next (28,805 samples, 9.17%)</title><rect x="119.5" y="227.0" width="108.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.5" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.transform (28,805 samples, 9.17%)</title><rect x="119.5" y="211.0" width="108.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.5" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.keyAt (8,336 samples, 2.65%)</title><rect x="119.5" y="195.0" width="31.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="206.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4,150 samples, 1.32%)</title><rect x="119.5" y="179.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,150 samples, 1.32%)</title><rect x="119.5" y="163.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,150 samples, 1.32%)</title><rect x="119.5" y="147.0" width="15.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="122.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,186 samples, 1.33%)</title><rect x="135.1" y="179.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="190.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,186 samples, 1.33%)</title><rect x="135.1" y="163.0" width="15.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="138.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.rowAt (8,297 samples, 2.64%)</title><rect x="150.9" y="195.0" width="31.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.9" y="206.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4,184 samples, 1.33%)</title><rect x="150.9" y="179.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,184 samples, 1.33%)</title><rect x="150.9" y="163.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,184 samples, 1.33%)</title><rect x="150.9" y="147.0" width="15.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="153.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4,113 samples, 1.31%)</title><rect x="166.6" y="179.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.6" y="190.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,113 samples, 1.31%)</title><rect x="166.6" y="163.0" width="15.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="169.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.timestampAt (4,143 samples, 1.32%)</title><rect x="182.0" y="195.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4,143 samples, 1.32%)</title><rect x="182.0" y="179.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,143 samples, 1.32%)</title><rect x="182.0" y="163.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,143 samples, 1.32%)</title><rect x="182.0" y="147.0" width="15.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="185.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.valueAt (4,110 samples, 1.31%)</title><rect x="197.6" y="195.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.6" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,077 samples, 0.66%)</title><rect x="197.6" y="179.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,077 samples, 0.66%)</title><rect x="197.6" y="163.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,077 samples, 0.66%)</title><rect x="197.6" y="147.0" width="7.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="200.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,033 samples, 0.65%)</title><rect x="205.4" y="179.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.4" y="190.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,033 samples, 0.65%)</title><rect x="205.4" y="163.0" width="7.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="208.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (1,188 samples, 0.38%)</title><rect x="213.0" y="195.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.0" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (1,188 samples, 0.38%)</title><rect x="213.0" y="179.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="216.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.of (1,354 samples, 0.43%)</title><rect x="217.5" y="195.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.Value (1,354 samples, 0.43%)</title><rect x="217.5" y="179.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.tombstone (1,377 samples, 0.44%)</title><rect x="222.6" y="195.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.6" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.Value (1,377 samples, 0.44%)</title><rect x="222.6" y="179.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$67/498267487.compare (8,441 samples, 2.69%)</title><rect x="227.8" y="259.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.8" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (8,441 samples, 2.69%)</title><rect x="227.8" y="243.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="254.0">ru..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (8,441 samples, 2.69%)</title><rect x="227.8" y="227.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="238.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8,441 samples, 2.69%)</title><rect x="227.8" y="211.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.8" y="222.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (8,441 samples, 2.69%)</title><rect x="227.8" y="195.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.8" y="206.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8,441 samples, 2.69%)</title><rect x="227.8" y="179.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.8" y="190.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$77/1404537422.compare (8,441 samples, 2.69%)</title><rect x="227.8" y="163.0" width="31.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.8" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8,441 samples, 2.69%)</title><rect x="227.8" y="147.0" width="31.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.8" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow$$Lambda$76/1614006218.apply (8,441 samples, 2.69%)</title><rect x="227.8" y="131.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.8" y="142.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (8,441 samples, 2.69%)</title><rect x="227.8" y="115.0" width="31.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.8" y="126.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8,441 samples, 2.69%)</title><rect x="227.8" y="99.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="110.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8,441 samples, 2.69%)</title><rect x="227.8" y="83.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.8" y="94.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (8,441 samples, 2.69%)</title><rect x="227.8" y="67.0" width="31.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="230.8" y="78.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$70/394456195.apply (8,213 samples, 2.62%)</title><rect x="259.5" y="371.0" width="30.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.5" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (8,213 samples, 2.62%)</title><rect x="259.5" y="355.0" width="30.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8,213 samples, 2.62%)</title><rect x="259.5" y="339.0" width="30.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.5" y="350.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8,213 samples, 2.62%)</title><rect x="259.5" y="323.0" width="30.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.5" y="334.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (8,213 samples, 2.62%)</title><rect x="259.5" y="307.0" width="30.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="262.5" y="318.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (14,732 samples, 4.69%)</title><rect x="290.4" y="483.0" width="55.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.4" y="494.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowsIterator (14,732 samples, 4.69%)</title><rect x="290.4" y="467.0" width="55.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.4" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (14,667 samples, 4.67%)</title><rect x="290.6" y="451.0" width="55.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.6" y="462.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14,665 samples, 4.67%)</title><rect x="290.6" y="435.0" width="55.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.6" y="446.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14,665 samples, 4.67%)</title><rect x="290.6" y="419.0" width="55.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.6" y="430.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14,649 samples, 4.66%)</title><rect x="290.6" y="403.0" width="55.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.6" y="414.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14,649 samples, 4.66%)</title><rect x="290.6" y="387.0" width="55.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.6" y="398.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14,649 samples, 4.66%)</title><rect x="290.6" y="371.0" width="55.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.6" y="382.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14,649 samples, 4.66%)</title><rect x="290.6" y="355.0" width="55.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.6" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$70/394456195.apply (14,649 samples, 4.66%)</title><rect x="290.6" y="339.0" width="55.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.6" y="350.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (14,649 samples, 4.66%)</title><rect x="290.6" y="323.0" width="55.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.6" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14,649 samples, 4.66%)</title><rect x="290.6" y="307.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.6" y="318.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14,649 samples, 4.66%)</title><rect x="290.6" y="291.0" width="55.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="293.6" y="302.0">java...</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.stream (224,689 samples, 71.55%)</title><rect x="345.7" y="499.0" width="844.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.7" y="510.0">ru/mail/polis/service/igorlo/StorageSession.stream</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.next (224,689 samples, 71.55%)</title><rect x="345.7" y="483.0" width="844.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.7" y="494.0">ru/mail/polis/service/igorlo/StorageSession.next</text>
</g>
<g>
<title>one/nio/net/Session.write (1,588 samples, 0.51%)</title><rect x="345.7" y="467.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.7" y="478.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,588 samples, 0.51%)</title><rect x="345.7" y="451.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="348.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession$Chunks.next (223,101 samples, 71.04%)</title><rect x="351.7" y="467.0" width="838.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.7" y="478.0">ru/mail/polis/service/igorlo/StorageSession$Chunks.next</text>
</g>
<g>
<title>byte[] (1,888 samples, 0.60%)</title><rect x="351.7" y="451.0" width="7.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="354.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (660 samples, 0.21%)</title><rect x="358.8" y="451.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (660 samples, 0.21%)</title><rect x="358.8" y="435.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.8" y="446.0"></text>
</g>
<g>
<title>byte[] (660 samples, 0.21%)</title><rect x="358.8" y="419.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="361.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (649 samples, 0.21%)</title><rect x="361.3" y="451.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (649 samples, 0.21%)</title><rect x="361.3" y="435.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (649 samples, 0.21%)</title><rect x="361.3" y="419.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (649 samples, 0.21%)</title><rect x="361.3" y="403.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.3" y="414.0"></text>
</g>
<g>
<title>byte[] (649 samples, 0.21%)</title><rect x="361.3" y="387.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="364.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2,256 samples, 0.72%)</title><rect x="363.7" y="451.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,256 samples, 0.72%)</title><rect x="363.7" y="435.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,256 samples, 0.72%)</title><rect x="363.7" y="419.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.7" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,256 samples, 0.72%)</title><rect x="363.7" y="403.0" width="8.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="366.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2,147 samples, 0.68%)</title><rect x="372.2" y="451.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,147 samples, 0.68%)</title><rect x="372.2" y="435.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.2" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,147 samples, 0.68%)</title><rect x="372.2" y="419.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.2" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,147 samples, 0.68%)</title><rect x="372.2" y="403.0" width="8.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="375.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (208,733 samples, 66.47%)</title><rect x="380.2" y="451.0" width="784.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.2" y="462.0">ru/mail/polis/dao/Iters$UntilIterator.next</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (208,733 samples, 66.47%)</title><rect x="380.2" y="435.0" width="784.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.2" y="446.0">ru/mail/polis/dao/Iters$UntilIterator.next</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (203,053 samples, 64.66%)</title><rect x="380.2" y="419.0" width="763.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.2" y="430.0">com/google/common/collect/TransformedIterator.hasNext</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (203,053 samples, 64.66%)</title><rect x="380.2" y="403.0" width="763.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.2" y="414.0">com/google/common/collect/AbstractIterator.hasNext</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (203,053 samples, 64.66%)</title><rect x="380.2" y="387.0" width="763.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.2" y="398.0">com/google/common/collect/AbstractIterator.tryToComputeNext</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (203,053 samples, 64.66%)</title><rect x="380.2" y="371.0" width="763.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.2" y="382.0">com/google/common/collect/Iterators$5.computeNext</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (203,053 samples, 64.66%)</title><rect x="380.2" y="355.0" width="763.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.2" y="366.0">ru/mail/polis/dao/Iters$CollapseEqualsIterator.next</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (182,945 samples, 58.26%)</title><rect x="380.2" y="339.0" width="687.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.2" y="350.0">com/google/common/collect/Iterators$MergingIterator.next</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (81,920 samples, 26.09%)</title><rect x="380.2" y="323.0" width="307.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.2" y="334.0">java/util/AbstractQueue.remove</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (81,920 samples, 26.09%)</title><rect x="380.2" y="307.0" width="307.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.2" y="318.0">java/util/PriorityQueue.poll</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (81,920 samples, 26.09%)</title><rect x="380.2" y="291.0" width="307.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.2" y="302.0">java/util/PriorityQueue.siftDownUsingComp..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="275.0" width="307.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.2" y="286.0">com/google/common/collect/Iterators$Mergi..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="259.0" width="307.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.2" y="270.0">com/google/common/collect/Iterators$Mergi..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$67/498267487.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="243.0" width="307.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.2" y="254.0">ru/mail/polis/dao/igorlo/Table$$Lambda$67..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (81,920 samples, 26.09%)</title><rect x="380.2" y="227.0" width="307.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.2" y="238.0">ru/mail/polis/dao/igorlo/TableRow.compareTo</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="211.0" width="307.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.2" y="222.0">java/util/Comparator$$Lambda$79/206806726..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (81,920 samples, 26.09%)</title><rect x="380.2" y="195.0" width="307.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.2" y="206.0">java/util/Comparator.lambda$thenComparing..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="179.0" width="307.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.2" y="190.0">java/util/Comparator$$Lambda$79/206806726..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (81,920 samples, 26.09%)</title><rect x="380.2" y="163.0" width="307.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.2" y="174.0">java/util/Comparator.lambda$thenComparing..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$77/1404537422.compare (81,920 samples, 26.09%)</title><rect x="380.2" y="147.0" width="307.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.2" y="158.0">java/util/Comparator$$Lambda$77/140453742..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (81,920 samples, 26.09%)</title><rect x="380.2" y="131.0" width="307.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.2" y="142.0">java/util/Comparator.lambda$comparing$77a..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow$$Lambda$76/1614006218.apply (81,920 samples, 26.09%)</title><rect x="380.2" y="115.0" width="307.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.2" y="126.0">ru/mail/polis/dao/igorlo/TableRow$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (81,920 samples, 26.09%)</title><rect x="380.2" y="99.0" width="307.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.2" y="110.0">ru/mail/polis/dao/igorlo/TableRow.getKey</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (81,920 samples, 26.09%)</title><rect x="380.2" y="83.0" width="307.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.2" y="94.0">java/nio/DirectByteBufferR.asReadOnlyBuffer</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (81,920 samples, 26.09%)</title><rect x="380.2" y="67.0" width="307.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.2" y="78.0">java/nio/DirectByteBufferR.duplicate</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (81,920 samples, 26.09%)</title><rect x="380.2" y="51.0" width="307.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="383.2" y="62.0">java.nio.DirectByteBufferR</text>
</g>
<g>
<title>java/util/PriorityQueue.add (101,025 samples, 32.17%)</title><rect x="688.1" y="323.0" width="379.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.1" y="334.0">java/util/PriorityQueue.add</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (101,025 samples, 32.17%)</title><rect x="688.1" y="307.0" width="379.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.1" y="318.0">java/util/PriorityQueue.offer</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (101,025 samples, 32.17%)</title><rect x="688.1" y="291.0" width="379.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.1" y="302.0">java/util/PriorityQueue.siftUp</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (101,025 samples, 32.17%)</title><rect x="688.1" y="275.0" width="379.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.1" y="286.0">java/util/PriorityQueue.siftUpUsingComparator</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101,025 samples, 32.17%)</title><rect x="688.1" y="259.0" width="379.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.1" y="270.0">com/google/common/collect/Iterators$MergingIterator$..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101,025 samples, 32.17%)</title><rect x="688.1" y="243.0" width="379.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.1" y="254.0">com/google/common/collect/Iterators$MergingIterator$..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (72,448 samples, 23.07%)</title><rect x="688.1" y="227.0" width="272.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.1" y="238.0">com/google/common/collect/Iterators$..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$SSTableIterator.next (72,448 samples, 23.07%)</title><rect x="688.1" y="211.0" width="272.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.1" y="222.0">ru/mail/polis/dao/igorlo/SSTable$SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable$SSTableIterator.next (72,448 samples, 23.07%)</title><rect x="688.1" y="195.0" width="272.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.1" y="206.0">ru/mail/polis/dao/igorlo/SSTable$SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.transform (72,448 samples, 23.07%)</title><rect x="688.1" y="179.0" width="272.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.1" y="190.0">ru/mail/polis/dao/igorlo/SSTable.tra..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.keyAt (20,469 samples, 6.52%)</title><rect x="688.1" y="163.0" width="76.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.1" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10,199 samples, 3.25%)</title><rect x="688.1" y="147.0" width="38.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.1" y="158.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10,199 samples, 3.25%)</title><rect x="688.1" y="131.0" width="38.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="142.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,199 samples, 3.25%)</title><rect x="688.1" y="115.0" width="38.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="691.1" y="126.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10,270 samples, 3.27%)</title><rect x="726.4" y="147.0" width="38.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.4" y="158.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,270 samples, 3.27%)</title><rect x="726.4" y="131.0" width="38.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="729.4" y="142.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.rowAt (20,406 samples, 6.50%)</title><rect x="765.0" y="163.0" width="76.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.0" y="174.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10,232 samples, 3.26%)</title><rect x="765.0" y="147.0" width="38.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.0" y="158.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10,232 samples, 3.26%)</title><rect x="765.0" y="131.0" width="38.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.0" y="142.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,232 samples, 3.26%)</title><rect x="765.0" y="115.0" width="38.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="768.0" y="126.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10,174 samples, 3.24%)</title><rect x="803.4" y="147.0" width="38.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.4" y="158.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,174 samples, 3.24%)</title><rect x="803.4" y="131.0" width="38.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="806.4" y="142.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.timestampAt (10,306 samples, 3.28%)</title><rect x="841.6" y="163.0" width="38.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.6" y="174.0">ru/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10,306 samples, 3.28%)</title><rect x="841.6" y="147.0" width="38.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.6" y="158.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10,306 samples, 3.28%)</title><rect x="841.6" y="131.0" width="38.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.6" y="142.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,306 samples, 3.28%)</title><rect x="841.6" y="115.0" width="38.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="844.6" y="126.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.valueAt (12,255 samples, 3.90%)</title><rect x="880.4" y="163.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.4" y="174.0">ru/m..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,252 samples, 1.99%)</title><rect x="880.4" y="147.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.4" y="158.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,252 samples, 1.99%)</title><rect x="880.4" y="131.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.4" y="142.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,252 samples, 1.99%)</title><rect x="880.4" y="115.0" width="23.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="883.4" y="126.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,003 samples, 1.91%)</title><rect x="903.9" y="147.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.9" y="158.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,003 samples, 1.91%)</title><rect x="903.9" y="131.0" width="22.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="906.9" y="142.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (3,975 samples, 1.27%)</title><rect x="926.4" y="163.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.TableRow (3,975 samples, 1.27%)</title><rect x="926.4" y="147.0" width="15.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="929.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.of (3,304 samples, 1.05%)</title><rect x="941.4" y="163.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.Value (3,304 samples, 1.05%)</title><rect x="941.4" y="147.0" width="12.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="944.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.tombstone (1,733 samples, 0.55%)</title><rect x="953.8" y="163.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.igorlo.Value (1,733 samples, 0.55%)</title><rect x="953.8" y="147.0" width="6.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="956.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$67/498267487.compare (28,577 samples, 9.10%)</title><rect x="960.3" y="227.0" width="107.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.3" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.compareTo (28,577 samples, 9.10%)</title><rect x="960.3" y="211.0" width="107.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="963.3" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (28,577 samples, 9.10%)</title><rect x="960.3" y="195.0" width="107.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.3" y="206.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28,577 samples, 9.10%)</title><rect x="960.3" y="179.0" width="107.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.3" y="190.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/2068067262.compare (28,577 samples, 9.10%)</title><rect x="960.3" y="163.0" width="107.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.3" y="174.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28,577 samples, 9.10%)</title><rect x="960.3" y="147.0" width="107.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.3" y="158.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$77/1404537422.compare (28,577 samples, 9.10%)</title><rect x="960.3" y="131.0" width="107.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.3" y="142.0">java/util/Com..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (28,577 samples, 9.10%)</title><rect x="960.3" y="115.0" width="107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.3" y="126.0">java/util/Com..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow$$Lambda$76/1614006218.apply (28,577 samples, 9.10%)</title><rect x="960.3" y="99.0" width="107.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.3" y="110.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (28,577 samples, 9.10%)</title><rect x="960.3" y="83.0" width="107.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.3" y="94.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (28,577 samples, 9.10%)</title><rect x="960.3" y="67.0" width="107.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.3" y="78.0">java/nio/Dire..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (28,577 samples, 9.10%)</title><rect x="960.3" y="51.0" width="107.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.3" y="62.0">java/nio/Dire..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (28,577 samples, 9.10%)</title><rect x="960.3" y="35.0" width="107.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="963.3" y="46.0">java.nio.Dire..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table$$Lambda$70/394456195.apply (20,108 samples, 6.40%)</title><rect x="1067.7" y="339.0" width="75.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.7" y="350.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (20,108 samples, 6.40%)</title><rect x="1067.7" y="323.0" width="75.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.7" y="334.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (20,108 samples, 6.40%)</title><rect x="1067.7" y="307.0" width="75.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.7" y="318.0">java/nio..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (20,108 samples, 6.40%)</title><rect x="1067.7" y="291.0" width="75.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.7" y="302.0">java/nio..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (20,108 samples, 6.40%)</title><rect x="1067.7" y="275.0" width="75.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1070.7" y="286.0">java.nio..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5,680 samples, 1.81%)</title><rect x="1143.2" y="419.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.2" y="430.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5,680 samples, 1.81%)</title><rect x="1143.2" y="403.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.2" y="414.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO$$Lambda$74/530395260.apply (5,680 samples, 1.81%)</title><rect x="1143.2" y="387.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.2" y="398.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.lambda$iterator$0 (5,680 samples, 1.81%)</title><rect x="1143.2" y="371.0" width="21.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.2" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/Record.of (1,271 samples, 0.40%)</title><rect x="1143.2" y="355.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.2" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (1,271 samples, 0.40%)</title><rect x="1143.2" y="339.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1146.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getKey (2,228 samples, 0.71%)</title><rect x="1148.0" y="355.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,228 samples, 0.71%)</title><rect x="1148.0" y="339.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,228 samples, 0.71%)</title><rect x="1148.0" y="323.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.0" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,228 samples, 0.71%)</title><rect x="1148.0" y="307.0" width="8.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1151.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.getData (2,181 samples, 0.69%)</title><rect x="1156.4" y="355.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,181 samples, 0.69%)</title><rect x="1156.4" y="339.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,181 samples, 0.69%)</title><rect x="1156.4" y="323.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.4" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,181 samples, 0.69%)</title><rect x="1156.4" y="307.0" width="8.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1159.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/StorageSession.bufferToArray (6,768 samples, 2.16%)</title><rect x="1164.6" y="451.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.6" y="462.0">r..</text>
</g>
<g>
<title>byte[] (2,193 samples, 0.70%)</title><rect x="1164.6" y="435.0" width="8.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1167.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,575 samples, 1.46%)</title><rect x="1172.8" y="435.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.8" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,575 samples, 1.46%)</title><rect x="1172.8" y="419.0" width="17.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1175.8" y="430.0"></text>
</g>
</g>
</svg>
