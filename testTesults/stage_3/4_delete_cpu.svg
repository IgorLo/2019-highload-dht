<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2149"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2149"> </text>
<g id="frames">
<g>
<title>all (6,152 samples, 100.00%)</title><rect x="10.0" y="2115.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2126.0">all</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="10.6" y="2099.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.6" y="2110.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="11.0" y="2099.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.0" y="2110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="11.2" y="2083.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.2" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="11.2" y="2067.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="11.2" y="2051.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.2" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="11.9" y="2099.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.9" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="11.9" y="2083.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.9" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="12.1" y="2067.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.1" y="2078.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (64 samples, 1.04%)</title><rect x="12.5" y="2099.0" width="12.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.5" y="2110.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (59 samples, 0.96%)</title><rect x="12.9" y="2083.0" width="11.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.9" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (30 samples, 0.49%)</title><rect x="14.4" y="2067.0" width="5.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.4" y="2078.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (17 samples, 0.28%)</title><rect x="15.0" y="2051.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.0" y="2062.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.07%)</title><rect x="18.2" y="2051.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="18.2" y="2035.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="18.2" y="2019.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="21.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="18.4" y="2003.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="21.4" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="18.4" y="1987.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="21.4" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="18.4" y="1971.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="21.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="18.6" y="1955.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="21.6" y="1966.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="19.0" y="2051.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="22.0" y="2062.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="19.8" y="2051.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="22.8" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (20 samples, 0.33%)</title><rect x="20.2" y="2067.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="23.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="2051.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="26.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="2035.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="26.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="2019.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="26.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="2003.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="26.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="1987.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="26.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="1971.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="26.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="23.6" y="1955.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="26.6" y="1966.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.03%)</title><rect x="24.8" y="2099.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="27.8" y="2110.0"></text>
</g>
<g>
<title>[not_walkable_Java] (19 samples, 0.31%)</title><rect x="25.2" y="2099.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="28.2" y="2110.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.03%)</title><rect x="25.7" y="2083.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.7" y="2094.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (2 samples, 0.03%)</title><rect x="26.1" y="2083.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="29.1" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="26.5" y="2083.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.5" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="26.5" y="2067.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.5" y="2078.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="26.5" y="2051.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="29.5" y="2062.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (7 samples, 0.11%)</title><rect x="27.1" y="2083.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="30.1" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.10%)</title><rect x="27.1" y="2067.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.1" y="2078.0"></text>
</g>
<g>
<title>[unknown_Java] (110 samples, 1.79%)</title><rect x="29.0" y="2099.0" width="21.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="32.0" y="2110.0">[..</text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (4 samples, 0.07%)</title><rect x="41.6" y="2083.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="44.6" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="42.0" y="2067.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="45.0" y="2078.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="42.0" y="2051.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="45.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="42.4" y="2083.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.4" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="2067.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="45.4" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="2051.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="45.4" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="2035.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="45.4" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="2019.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="45.4" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="2003.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="45.4" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.4" y="1987.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="45.4" y="1998.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="43.0" y="2083.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="46.0" y="2094.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.13%)</title><rect x="43.4" y="2083.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.4" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="2067.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="47.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="2051.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="47.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="2035.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="47.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="2019.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="47.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="2003.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="47.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="1987.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="47.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.5" y="1971.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="47.5" y="1982.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (27 samples, 0.44%)</title><rect x="44.9" y="2083.0" width="5.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="47.9" y="2094.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="45.3" y="2067.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="48.3" y="2078.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="45.3" y="2051.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="48.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.37%)</title><rect x="45.7" y="2035.0" width="4.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="48.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="45.9" y="2019.0" width="4.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="48.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="45.9" y="2003.0" width="4.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="48.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="45.9" y="1987.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="48.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.34%)</title><rect x="46.1" y="1971.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="49.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.33%)</title><rect x="46.3" y="1955.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="49.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="49.5" y="1939.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="52.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="49.5" y="1923.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="52.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="49.5" y="1907.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="52.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="49.5" y="1891.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="52.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="49.5" y="1875.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="52.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="49.7" y="1859.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="52.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="49.7" y="1843.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="52.7" y="1854.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (37 samples, 0.60%)</title><rect x="50.3" y="2099.0" width="7.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="53.3" y="2110.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.54%)</title><rect x="51.0" y="2083.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="54.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.54%)</title><rect x="51.0" y="2067.0" width="6.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="54.0" y="2078.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.49%)</title><rect x="51.6" y="2051.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="54.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.46%)</title><rect x="52.0" y="2035.0" width="5.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="55.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="52.6" y="2019.0" width="4.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="55.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="53.2" y="2003.0" width="4.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="56.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.26%)</title><rect x="54.3" y="1987.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="57.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.20%)</title><rect x="55.1" y="1971.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="58.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="55.7" y="1955.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="58.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="56.8" y="1939.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="59.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="56.8" y="1923.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="59.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="57.0" y="1907.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="60.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="57.0" y="1891.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="60.0" y="1902.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,594 samples, 58.42%)</title><rect x="57.6" y="2099.0" width="689.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.6" y="2110.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,594 samples, 58.42%)</title><rect x="57.6" y="2083.0" width="689.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.6" y="2094.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,594 samples, 58.42%)</title><rect x="57.6" y="2067.0" width="689.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.6" y="2078.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.07%)</title><rect x="58.7" y="2051.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.07%)</title><rect x="58.7" y="2035.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.7" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (4 samples, 0.07%)</title><rect x="58.7" y="2019.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.7" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.07%)</title><rect x="58.7" y="2003.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.7" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.07%)</title><rect x="58.7" y="1987.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="58.7" y="1971.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.05%)</title><rect x="59.5" y="2051.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="59.5" y="2035.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (876 samples, 14.24%)</title><rect x="60.1" y="2051.0" width="168.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.1" y="2062.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (858 samples, 13.95%)</title><rect x="62.7" y="2035.0" width="164.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.7" y="2046.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (622 samples, 10.11%)</title><rect x="64.7" y="2019.0" width="119.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.7" y="2030.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (33 samples, 0.54%)</title><rect x="65.8" y="2003.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (28 samples, 0.46%)</title><rect x="66.8" y="1987.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.8" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (16 samples, 0.26%)</title><rect x="69.1" y="1971.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (10 samples, 0.16%)</title><rect x="69.1" y="1955.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (6 samples, 0.10%)</title><rect x="71.0" y="1955.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (41 samples, 0.67%)</title><rect x="72.1" y="2003.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.07%)</title><rect x="73.1" y="1987.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.07%)</title><rect x="73.1" y="1971.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.07%)</title><rect x="73.1" y="1955.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.1" y="1966.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.05%)</title><rect x="73.1" y="1939.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="76.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (30 samples, 0.49%)</title><rect x="74.3" y="1987.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (30 samples, 0.49%)</title><rect x="74.3" y="1971.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (9 samples, 0.15%)</title><rect x="76.7" y="1955.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.7" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (8 samples, 0.13%)</title><rect x="78.5" y="1955.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (8 samples, 0.13%)</title><rect x="78.5" y="1939.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (8 samples, 0.13%)</title><rect x="78.5" y="1923.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (38 samples, 0.62%)</title><rect x="80.0" y="2003.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 0.62%)</title><rect x="80.0" y="1987.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.54%)</title><rect x="80.6" y="1971.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.52%)</title><rect x="80.8" y="1955.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.52%)</title><rect x="80.8" y="1939.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.8" y="1950.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.10%)</title><rect x="80.8" y="1923.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="83.8" y="1934.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="81.5" y="1907.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="84.5" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.42%)</title><rect x="81.9" y="1923.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="84.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1907.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="85.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1891.0" width="4.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="85.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1875.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="85.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1859.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="85.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1843.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="85.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="82.7" y="1827.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="85.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.34%)</title><rect x="82.9" y="1811.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="85.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.31%)</title><rect x="83.3" y="1795.0" width="3.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="86.3" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="86.9" y="1971.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (503 samples, 8.18%)</title><rect x="87.5" y="2003.0" width="96.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.5" y="2014.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="87.5" y="1987.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (501 samples, 8.14%)</title><rect x="87.9" y="1987.0" width="96.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.9" y="1998.0">jdk/interna..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.10%)</title><rect x="89.4" y="1971.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="92.4" y="1982.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.05%)</title><rect x="90.8" y="1971.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="93.8" y="1982.0"></text>
</g>
<g>
<title>Unsafe_Park (246 samples, 4.00%)</title><rect x="91.5" y="1971.0" width="47.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="94.5" y="1982.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.07%)</title><rect x="94.0" y="1955.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="97.0" y="1966.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.07%)</title><rect x="94.8" y="1955.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="97.8" y="1966.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.08%)</title><rect x="95.5" y="1955.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.5" y="1966.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (61 samples, 0.99%)</title><rect x="96.5" y="1955.0" width="11.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="99.5" y="1966.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (15 samples, 0.24%)</title><rect x="102.6" y="1939.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.6" y="1950.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (10 samples, 0.16%)</title><rect x="103.6" y="1923.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="106.6" y="1934.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.20%)</title><rect x="105.5" y="1939.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.5" y="1950.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="107.8" y="1939.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.8" y="1950.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (11 samples, 0.18%)</title><rect x="108.4" y="1955.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="111.4" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.03%)</title><rect x="110.5" y="1955.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="113.5" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (113 samples, 1.84%)</title><rect x="110.9" y="1955.0" width="21.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="113.9" y="1966.0">_..</text>
</g>
<g>
<title>[unknown] (94 samples, 1.53%)</title><rect x="114.5" y="1939.0" width="18.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="117.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.53%)</title><rect x="114.5" y="1923.0" width="18.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="117.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.57%)</title><rect x="125.9" y="1907.0" width="6.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="128.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.49%)</title><rect x="126.8" y="1891.0" width="5.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="129.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="127.8" y="1875.0" width="4.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="130.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.24%)</title><rect x="129.7" y="1859.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="132.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="131.6" y="1843.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="134.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="132.2" y="1827.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="135.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="132.2" y="1811.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="135.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="132.2" y="1795.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="135.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="132.2" y="1779.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="135.2" y="1790.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.05%)</title><rect x="132.6" y="1955.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="135.6" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.07%)</title><rect x="133.1" y="1955.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="136.1" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="133.9" y="1955.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="136.9" y="1966.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (6 samples, 0.10%)</title><rect x="134.5" y="1955.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="137.5" y="1966.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (16 samples, 0.26%)</title><rect x="135.6" y="1955.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="138.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (229 samples, 3.72%)</title><rect x="138.7" y="1971.0" width="43.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="141.7" y="1982.0">[unk..</text>
</g>
<g>
<title>__pthread_cleanup_pop (2 samples, 0.03%)</title><rect x="138.7" y="1955.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="141.7" y="1966.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (4 samples, 0.07%)</title><rect x="139.1" y="1955.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="142.1" y="1966.0"></text>
</g>
<g>
<title>__pthread_cond_wait (186 samples, 3.02%)</title><rect x="139.9" y="1955.0" width="35.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="142.9" y="1966.0">__p..</text>
</g>
<g>
<title>[unknown] (128 samples, 2.08%)</title><rect x="151.0" y="1939.0" width="24.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="154.0" y="1950.0">[..</text>
</g>
<g>
<title>[unknown] (128 samples, 2.08%)</title><rect x="151.0" y="1923.0" width="24.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="154.0" y="1934.0">[..</text>
</g>
<g>
<title>[unknown] (107 samples, 1.74%)</title><rect x="155.0" y="1907.0" width="20.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="158.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.71%)</title><rect x="155.4" y="1891.0" width="20.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="158.4" y="1902.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.63%)</title><rect x="156.3" y="1875.0" width="19.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="159.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.50%)</title><rect x="157.9" y="1859.0" width="17.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="160.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.01%)</title><rect x="163.6" y="1843.0" width="11.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="166.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.70%)</title><rect x="167.3" y="1827.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="170.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.62%)</title><rect x="168.2" y="1811.0" width="7.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="171.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="174.0" y="1795.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="177.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="174.0" y="1779.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="177.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="174.0" y="1763.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="177.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="174.0" y="1747.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="177.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="174.0" y="1731.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="177.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="174.2" y="1715.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="177.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="174.2" y="1699.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="177.2" y="1710.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.18%)</title><rect x="175.5" y="1955.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="178.5" y="1966.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="177.6" y="1955.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="180.6" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (15 samples, 0.24%)</title><rect x="178.2" y="1955.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="181.2" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (7 samples, 0.11%)</title><rect x="181.1" y="1955.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="184.1" y="1966.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="182.6" y="1971.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="185.6" y="1982.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.07%)</title><rect x="183.0" y="1971.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="186.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (75 samples, 1.22%)</title><rect x="184.0" y="2019.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (75 samples, 1.22%)</title><rect x="184.0" y="2003.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (63 samples, 1.02%)</title><rect x="184.9" y="1987.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.9" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="189.3" y="1971.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.26%)</title><rect x="189.9" y="1971.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.15%)</title><rect x="189.9" y="1955.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.11%)</title><rect x="191.6" y="1955.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="192.6" y="1939.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (17 samples, 0.28%)</title><rect x="193.0" y="1971.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.07%)</title><rect x="196.2" y="1971.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.11%)</title><rect x="197.0" y="1987.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.11%)</title><rect x="197.0" y="1971.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.07%)</title><rect x="197.0" y="1955.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (3 samples, 0.05%)</title><rect x="197.8" y="1955.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (151 samples, 2.45%)</title><rect x="198.4" y="2019.0" width="28.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.4" y="2030.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (151 samples, 2.45%)</title><rect x="198.4" y="2003.0" width="28.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.4" y="2014.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (151 samples, 2.45%)</title><rect x="198.4" y="1987.0" width="28.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.4" y="1998.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (151 samples, 2.45%)</title><rect x="198.4" y="1971.0" width="28.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.4" y="1982.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (151 samples, 2.45%)</title><rect x="198.4" y="1955.0" width="28.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.4" y="1966.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (28 samples, 0.46%)</title><rect x="199.9" y="1939.0" width="5.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="202.9" y="1950.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="200.5" y="1923.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="203.5" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (5 samples, 0.08%)</title><rect x="201.0" y="1923.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="204.0" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.03%)</title><rect x="202.0" y="1923.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="205.0" y="1934.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.08%)</title><rect x="202.6" y="1923.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="205.6" y="1934.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.05%)</title><rect x="203.7" y="1923.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.7" y="1934.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.07%)</title><rect x="204.3" y="1923.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="207.3" y="1934.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (114 samples, 1.85%)</title><rect x="205.5" y="1939.0" width="21.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="208.5" y="1950.0">p..</text>
</g>
<g>
<title>[unknown] (106 samples, 1.72%)</title><rect x="207.0" y="1923.0" width="20.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="210.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.72%)</title><rect x="207.0" y="1907.0" width="20.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="210.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.59%)</title><rect x="208.5" y="1891.0" width="18.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="211.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.59%)</title><rect x="208.5" y="1875.0" width="18.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="211.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.58%)</title><rect x="208.7" y="1859.0" width="18.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="211.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.46%)</title><rect x="210.1" y="1843.0" width="17.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="213.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.33%)</title><rect x="211.6" y="1827.0" width="15.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="214.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.27%)</title><rect x="212.4" y="1811.0" width="14.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="215.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.03%)</title><rect x="227.3" y="2035.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.3" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.03%)</title><rect x="227.7" y="2035.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.7" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO$FlushingTask.run (56 samples, 0.91%)</title><rect x="228.3" y="2051.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.3" y="2062.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.flushAndLoad (56 samples, 0.91%)</title><rect x="228.3" y="2035.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.3" y="2046.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/SSTable.flush (56 samples, 0.91%)</title><rect x="228.3" y="2019.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.3" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.getData (2 samples, 0.03%)</title><rect x="229.4" y="2003.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.4" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (48 samples, 0.78%)</title><rect x="229.8" y="2003.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.8" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.05%)</title><rect x="229.8" y="1987.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.8" y="1998.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.05%)</title><rect x="229.8" y="1971.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.8" y="1982.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.05%)</title><rect x="229.8" y="1955.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.8" y="1966.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.05%)</title><rect x="229.8" y="1939.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.05%)</title><rect x="229.8" y="1923.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.8" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (45 samples, 0.73%)</title><rect x="230.4" y="1987.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.4" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (42 samples, 0.68%)</title><rect x="230.6" y="1971.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.6" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (42 samples, 0.68%)</title><rect x="230.6" y="1955.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.6" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (42 samples, 0.68%)</title><rect x="230.6" y="1939.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.63%)</title><rect x="231.2" y="1923.0" width="7.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.2" y="1934.0"></text>
</g>
<g>
<title>__write (39 samples, 0.63%)</title><rect x="231.2" y="1907.0" width="7.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="234.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.62%)</title><rect x="231.3" y="1891.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="234.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.62%)</title><rect x="231.3" y="1875.0" width="7.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="234.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.59%)</title><rect x="231.7" y="1859.0" width="6.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="234.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.59%)</title><rect x="231.7" y="1843.0" width="6.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="234.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.59%)</title><rect x="231.7" y="1827.0" width="6.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="234.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.55%)</title><rect x="232.1" y="1811.0" width="6.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="235.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.52%)</title><rect x="232.5" y="1795.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="235.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.52%)</title><rect x="232.5" y="1779.0" width="6.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="235.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.49%)</title><rect x="232.9" y="1763.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="235.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.46%)</title><rect x="233.3" y="1747.0" width="5.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="236.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.44%)</title><rect x="233.5" y="1731.0" width="5.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="236.5" y="1742.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.34%)</title><rect x="234.6" y="1715.0" width="4.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="237.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.26%)</title><rect x="235.6" y="1699.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="238.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.24%)</title><rect x="235.8" y="1683.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="238.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.23%)</title><rect x="235.9" y="1667.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="238.9" y="1678.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="236.1" y="1651.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="239.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.20%)</title><rect x="236.3" y="1635.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="239.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.16%)</title><rect x="236.7" y="1619.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="239.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="237.1" y="1603.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="240.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="237.1" y="1587.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="240.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="237.3" y="1571.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="240.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="237.5" y="1555.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="240.5" y="1566.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="237.7" y="1539.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="240.7" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.run (2,645 samples, 42.99%)</title><rect x="239.0" y="2051.0" width="507.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.0" y="2062.0">ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.run</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (2,645 samples, 42.99%)</title><rect x="239.0" y="2035.0" width="507.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.0" y="2046.0">ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,117 samples, 34.41%)</title><rect x="239.8" y="2019.0" width="406.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.8" y="2030.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (25 samples, 0.41%)</title><rect x="240.9" y="2003.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.15%)</title><rect x="244.0" y="1987.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.10%)</title><rect x="244.6" y="1971.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.10%)</title><rect x="244.6" y="1955.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.10%)</title><rect x="244.6" y="1939.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.10%)</title><rect x="244.6" y="1923.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.07%)</title><rect x="245.0" y="1907.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.0" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,001 samples, 32.53%)</title><rect x="245.7" y="2003.0" width="383.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.7" y="2014.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (83 samples, 1.35%)</title><rect x="245.7" y="1987.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.7" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (64 samples, 1.04%)</title><rect x="249.4" y="1971.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.4" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.07%)</title><rect x="249.8" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.8" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (18 samples, 0.29%)</title><rect x="250.5" y="1955.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.11%)</title><rect x="252.3" y="1939.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.3" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="253.2" y="1923.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="253.6" y="1939.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.6" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (40 samples, 0.65%)</title><rect x="254.0" y="1955.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.0" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (39 samples, 0.63%)</title><rect x="254.2" y="1939.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.21%)</title><rect x="258.6" y="1923.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (11 samples, 0.18%)</title><rect x="258.6" y="1907.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="260.7" y="1907.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.7" y="1918.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (3 samples, 0.05%)</title><rect x="261.1" y="1923.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,918 samples, 31.18%)</title><rect x="261.7" y="1987.0" width="367.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.7" y="1998.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,918 samples, 31.18%)</title><rect x="261.7" y="1971.0" width="367.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.7" y="1982.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,918 samples, 31.18%)</title><rect x="261.7" y="1955.0" width="367.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.7" y="1966.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,918 samples, 31.18%)</title><rect x="261.7" y="1939.0" width="367.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.7" y="1950.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.05%)</title><rect x="269.5" y="1923.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="272.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.64%)</title><rect x="270.1" y="1923.0" width="19.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="273.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.64%)</title><rect x="270.1" y="1907.0" width="19.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="273.1" y="1918.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (80 samples, 1.30%)</title><rect x="270.1" y="1891.0" width="15.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="273.1" y="1902.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.11%)</title><rect x="270.9" y="1875.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="273.9" y="1886.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.08%)</title><rect x="272.2" y="1875.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="275.2" y="1886.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (6 samples, 0.10%)</title><rect x="273.2" y="1875.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="276.2" y="1886.0"></text>
</g>
<g>
<title>__memmove_ssse3 (16 samples, 0.26%)</title><rect x="274.3" y="1875.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="277.3" y="1886.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (37 samples, 0.60%)</title><rect x="277.6" y="1875.0" width="7.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="280.6" y="1886.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.08%)</title><rect x="278.7" y="1859.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="281.7" y="1870.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.05%)</title><rect x="279.7" y="1859.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="282.7" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (6 samples, 0.10%)</title><rect x="280.3" y="1859.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="283.3" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (6 samples, 0.10%)</title><rect x="281.4" y="1859.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="284.4" y="1870.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (10 samples, 0.16%)</title><rect x="282.8" y="1859.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="285.8" y="1870.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.07%)</title><rect x="284.7" y="1875.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="287.7" y="1886.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="285.6" y="1891.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="288.6" y="1902.0"></text>
</g>
<g>
<title>__send (14 samples, 0.23%)</title><rect x="286.2" y="1891.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="289.2" y="1902.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="288.9" y="1891.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="291.9" y="1902.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="289.5" y="1923.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="292.5" y="1934.0"></text>
</g>
<g>
<title>__send (1,770 samples, 28.77%)</title><rect x="290.0" y="1923.0" width="339.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="293.0" y="1934.0">__send</text>
</g>
<g>
<title>[unknown] (1,745 samples, 28.36%)</title><rect x="294.8" y="1907.0" width="334.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="297.8" y="1918.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,745 samples, 28.36%)</title><rect x="294.8" y="1891.0" width="334.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="297.8" y="1902.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,710 samples, 27.80%)</title><rect x="301.5" y="1875.0" width="328.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="304.5" y="1886.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,707 samples, 27.75%)</title><rect x="302.1" y="1859.0" width="327.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="305.1" y="1870.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,690 samples, 27.47%)</title><rect x="305.4" y="1843.0" width="324.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="308.4" y="1854.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,682 samples, 27.34%)</title><rect x="306.9" y="1827.0" width="322.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="309.9" y="1838.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,658 samples, 26.95%)</title><rect x="311.5" y="1811.0" width="318.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="314.5" y="1822.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,646 samples, 26.76%)</title><rect x="313.8" y="1795.0" width="315.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="316.8" y="1806.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,567 samples, 25.47%)</title><rect x="329.0" y="1779.0" width="300.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="332.0" y="1790.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,489 samples, 24.20%)</title><rect x="343.9" y="1763.0" width="285.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="346.9" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,418 samples, 23.05%)</title><rect x="357.6" y="1747.0" width="271.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="360.6" y="1758.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,332 samples, 21.65%)</title><rect x="374.1" y="1731.0" width="255.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="377.1" y="1742.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,209 samples, 19.65%)</title><rect x="397.6" y="1715.0" width="231.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="400.6" y="1726.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,176 samples, 19.12%)</title><rect x="404.0" y="1699.0" width="225.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="407.0" y="1710.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,139 samples, 18.51%)</title><rect x="411.1" y="1683.0" width="218.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="414.1" y="1694.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,126 samples, 18.30%)</title><rect x="413.6" y="1667.0" width="215.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="416.6" y="1678.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,102 samples, 17.91%)</title><rect x="418.2" y="1651.0" width="211.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="421.2" y="1662.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,055 samples, 17.15%)</title><rect x="427.2" y="1635.0" width="202.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="430.2" y="1646.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,012 samples, 16.45%)</title><rect x="435.4" y="1619.0" width="194.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="438.4" y="1630.0">[unknown]</text>
</g>
<g>
<title>[unknown] (947 samples, 15.39%)</title><rect x="447.9" y="1603.0" width="181.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="450.9" y="1614.0">[unknown]</text>
</g>
<g>
<title>[unknown] (848 samples, 13.78%)</title><rect x="466.9" y="1587.0" width="162.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="469.9" y="1598.0">[unknown]</text>
</g>
<g>
<title>[unknown] (792 samples, 12.87%)</title><rect x="477.6" y="1571.0" width="151.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="480.6" y="1582.0">[unknown]</text>
</g>
<g>
<title>[unknown] (759 samples, 12.34%)</title><rect x="484.0" y="1555.0" width="145.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="487.0" y="1566.0">[unknown]</text>
</g>
<g>
<title>[unknown] (739 samples, 12.01%)</title><rect x="487.8" y="1539.0" width="141.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="490.8" y="1550.0">[unknown]</text>
</g>
<g>
<title>[unknown] (731 samples, 11.88%)</title><rect x="489.3" y="1523.0" width="140.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.3" y="1534.0">[unknown]</text>
</g>
<g>
<title>[unknown] (714 samples, 11.61%)</title><rect x="492.6" y="1507.0" width="136.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="495.6" y="1518.0">[unknown]</text>
</g>
<g>
<title>[unknown] (713 samples, 11.59%)</title><rect x="492.8" y="1491.0" width="136.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="495.8" y="1502.0">[unknown]</text>
</g>
<g>
<title>[unknown] (683 samples, 11.10%)</title><rect x="498.5" y="1475.0" width="131.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="501.5" y="1486.0">[unknown]</text>
</g>
<g>
<title>[unknown] (648 samples, 10.53%)</title><rect x="505.2" y="1459.0" width="124.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="508.2" y="1470.0">[unknown]</text>
</g>
<g>
<title>[unknown] (638 samples, 10.37%)</title><rect x="507.2" y="1443.0" width="122.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="510.2" y="1454.0">[unknown]</text>
</g>
<g>
<title>[unknown] (630 samples, 10.24%)</title><rect x="508.7" y="1427.0" width="120.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="511.7" y="1438.0">[unknown]</text>
</g>
<g>
<title>[unknown] (621 samples, 10.09%)</title><rect x="510.4" y="1411.0" width="119.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="513.4" y="1422.0">[unknown]</text>
</g>
<g>
<title>[unknown] (576 samples, 9.36%)</title><rect x="519.1" y="1395.0" width="110.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="522.1" y="1406.0">[unknown]</text>
</g>
<g>
<title>[unknown] (525 samples, 8.53%)</title><rect x="528.8" y="1379.0" width="100.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="531.8" y="1390.0">[unknown]</text>
</g>
<g>
<title>[unknown] (503 samples, 8.18%)</title><rect x="533.1" y="1363.0" width="96.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="536.1" y="1374.0">[unknown]</text>
</g>
<g>
<title>[unknown] (430 samples, 6.99%)</title><rect x="547.1" y="1347.0" width="82.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="550.1" y="1358.0">[unknown]</text>
</g>
<g>
<title>[unknown] (348 samples, 5.66%)</title><rect x="562.8" y="1331.0" width="66.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="565.8" y="1342.0">[unknown]</text>
</g>
<g>
<title>[unknown] (321 samples, 5.22%)</title><rect x="568.0" y="1315.0" width="61.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="571.0" y="1326.0">[unkno..</text>
</g>
<g>
<title>[unknown] (307 samples, 4.99%)</title><rect x="570.7" y="1299.0" width="58.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="573.7" y="1310.0">[unkno..</text>
</g>
<g>
<title>[unknown] (37 samples, 0.60%)</title><rect x="622.4" y="1283.0" width="7.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="625.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.37%)</title><rect x="625.1" y="1267.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="628.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.33%)</title><rect x="625.7" y="1251.0" width="3.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="628.7" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (76 samples, 1.24%)</title><rect x="629.5" y="2003.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.5" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (42 samples, 0.68%)</title><rect x="631.5" y="1987.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (31 samples, 0.50%)</title><rect x="633.6" y="1971.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="636.8" y="1955.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.8" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.15%)</title><rect x="637.2" y="1955.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.15%)</title><rect x="637.2" y="1939.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.10%)</title><rect x="637.8" y="1923.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.05%)</title><rect x="638.9" y="1955.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.39%)</title><rect x="639.5" y="1987.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.5" y="1998.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.10%)</title><rect x="640.1" y="1971.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="643.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="641.2" y="1971.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.2" y="1982.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="641.4" y="1955.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.4" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.08%)</title><rect x="641.8" y="1971.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.8" y="1982.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.11%)</title><rect x="642.8" y="1971.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="645.8" y="1982.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.10%)</title><rect x="643.0" y="1955.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="646.0" y="1966.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="643.5" y="1939.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="646.5" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.07%)</title><rect x="644.1" y="2003.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.1" y="2014.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (5 samples, 0.08%)</title><rect x="644.9" y="2003.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$81/1293871524.action (524 samples, 8.52%)</title><rect x="645.8" y="2019.0" width="100.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.8" y="2030.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$entity$2 (524 samples, 8.52%)</title><rect x="645.8" y="2003.0" width="100.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.8" y="2014.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.delete (524 samples, 8.52%)</title><rect x="645.8" y="1987.0" width="100.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.8" y="1998.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.remove (523 samples, 8.50%)</title><rect x="646.0" y="1971.0" width="100.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.0" y="1982.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.10%)</title><rect x="646.6" y="1955.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.6" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.remove (514 samples, 8.36%)</title><rect x="647.8" y="1955.0" width="98.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.8" y="1966.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (31 samples, 0.50%)</title><rect x="649.1" y="1939.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (31 samples, 0.50%)</title><rect x="649.1" y="1923.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (28 samples, 0.46%)</title><rect x="649.7" y="1907.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="651.2" y="1891.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.15%)</title><rect x="651.6" y="1891.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.15%)</title><rect x="651.6" y="1875.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (9 samples, 0.15%)</title><rect x="651.6" y="1859.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (5 samples, 0.08%)</title><rect x="653.3" y="1891.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (3 samples, 0.05%)</title><rect x="654.5" y="1891.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="654.7" y="1875.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.7" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="654.7" y="1859.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="654.7" y="1843.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.7" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (17 samples, 0.28%)</title><rect x="655.0" y="1939.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (17 samples, 0.28%)</title><rect x="655.0" y="1923.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.03%)</title><rect x="655.0" y="1907.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (15 samples, 0.24%)</title><rect x="655.4" y="1907.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.4" y="1918.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.13%)</title><rect x="656.8" y="1891.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="659.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (2 samples, 0.03%)</title><rect x="658.3" y="1939.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.3" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (2 samples, 0.03%)</title><rect x="658.3" y="1923.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="658.3" y="1907.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.3" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.remove (445 samples, 7.23%)</title><rect x="658.7" y="1939.0" width="85.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.7" y="1950.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (399 samples, 6.49%)</title><rect x="658.9" y="1923.0" width="76.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.9" y="1934.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (399 samples, 6.49%)</title><rect x="658.9" y="1907.0" width="76.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.9" y="1918.0">java/uti..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (20 samples, 0.33%)</title><rect x="671.7" y="1891.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (13 samples, 0.21%)</title><rect x="673.1" y="1875.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.1" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.23%)</title><rect x="675.6" y="1891.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (71 samples, 1.15%)</title><rect x="678.3" y="1891.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.3" y="1902.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="689.4" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.4" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (11 samples, 0.18%)</title><rect x="689.8" y="1875.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (4 samples, 0.07%)</title><rect x="691.9" y="1891.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (14 samples, 0.23%)</title><rect x="692.6" y="1891.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (20 samples, 0.33%)</title><rect x="695.3" y="1891.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="696.3" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="696.3" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.21%)</title><rect x="696.7" y="1875.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.16%)</title><rect x="697.2" y="1859.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.2" y="1870.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.13%)</title><rect x="697.6" y="1843.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.6" y="1854.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.10%)</title><rect x="697.8" y="1827.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.8" y="1838.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="698.2" y="1811.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.03%)</title><rect x="698.6" y="1811.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (188 samples, 3.06%)</title><rect x="699.2" y="1891.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.2" y="1902.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (175 samples, 2.84%)</title><rect x="701.7" y="1875.0" width="33.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.7" y="1886.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (160 samples, 2.60%)</title><rect x="704.5" y="1859.0" width="30.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.5" y="1870.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (94 samples, 1.53%)</title><rect x="707.2" y="1843.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.2" y="1854.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (43 samples, 0.70%)</title><rect x="713.0" y="1827.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.0" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (18 samples, 0.29%)</title><rect x="717.8" y="1811.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (16 samples, 0.26%)</title><rect x="721.2" y="1827.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.2" y="1838.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.08%)</title><rect x="724.3" y="1827.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="727.3" y="1838.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (52 samples, 0.85%)</title><rect x="725.3" y="1843.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="1854.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="734.6" y="1827.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.6" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.of (30 samples, 0.49%)</title><rect x="735.6" y="1923.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.6" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.&lt;init&gt; (30 samples, 0.49%)</title><rect x="735.6" y="1907.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.6" y="1918.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="738.3" y="1891.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="741.3" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="739.3" y="1891.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.3" y="1902.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.08%)</title><rect x="739.6" y="1891.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.6" y="1902.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="739.6" y="1875.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="742.6" y="1886.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="739.8" y="1859.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="742.8" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.setToFlush (4 samples, 0.07%)</title><rect x="740.6" y="1891.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.6" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Value.getData (13 samples, 0.21%)</title><rect x="741.4" y="1923.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.18%)</title><rect x="741.4" y="1907.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.4" y="1918.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.18%)</title><rect x="741.4" y="1891.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.4" y="1902.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.07%)</title><rect x="742.7" y="1875.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.7" y="1886.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="742.7" y="1859.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.7" y="1870.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="743.1" y="1843.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.1" y="1854.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="743.5" y="1907.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.5" y="1918.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="743.5" y="1891.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.5" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="743.5" y="1875.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.5" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="743.5" y="1859.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.5" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.setToFlush (12 samples, 0.20%)</title><rect x="744.0" y="1939.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.0" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.sizeInBytes (5 samples, 0.08%)</title><rect x="744.2" y="1923.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (4 samples, 0.07%)</title><rect x="744.4" y="1907.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.4" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/TableRow.getSizeOfFlushedRow (6 samples, 0.10%)</title><rect x="745.2" y="1923.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.2" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.10%)</title><rect x="745.2" y="1907.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.2" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$3 (3 samples, 0.05%)</title><rect x="746.3" y="2051.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,087 samples, 33.92%)</title><rect x="746.9" y="2099.0" width="400.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.9" y="2110.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.11%)</title><rect x="747.9" y="2083.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="750.9" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.03%)</title><rect x="747.9" y="2067.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="750.9" y="2078.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (3 samples, 0.05%)</title><rect x="748.3" y="2067.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="751.3" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (482 samples, 7.83%)</title><rect x="749.4" y="2083.0" width="92.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.4" y="2094.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (11 samples, 0.18%)</title><rect x="750.4" y="2067.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.4" y="2078.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.10%)</title><rect x="751.3" y="2051.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (466 samples, 7.57%)</title><rect x="752.5" y="2067.0" width="89.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.5" y="2078.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.15%)</title><rect x="756.1" y="2051.0" width="1.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="759.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (419 samples, 6.81%)</title><rect x="757.9" y="2051.0" width="80.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="760.9" y="2062.0">[unknown]</text>
</g>
<g>
<title>Metadata::is_klass() const volatile (14 samples, 0.23%)</title><rect x="757.9" y="2035.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="760.9" y="2046.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.23%)</title><rect x="757.9" y="2019.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="760.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.23%)</title><rect x="757.9" y="2003.0" width="2.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="760.9" y="2014.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.23%)</title><rect x="757.9" y="1987.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="760.9" y="1998.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="758.0" y="1971.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="761.0" y="1982.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.13%)</title><rect x="759.0" y="1971.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="762.0" y="1982.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.08%)</title><rect x="759.4" y="1955.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="762.4" y="1966.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="2035.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="763.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="2019.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="763.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="2003.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="763.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="1987.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="763.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="1971.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="760.5" y="1955.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1939.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="763.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1923.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1907.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="763.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1891.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="763.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1875.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1859.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="763.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1843.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1827.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1811.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1795.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="763.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1779.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1763.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="763.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1747.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.7" y="1758.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1731.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="763.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1715.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1699.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="763.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1683.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="763.7" y="1694.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1667.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="763.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1651.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1635.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="763.7" y="1646.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1619.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1603.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="763.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1587.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="763.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1571.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="763.7" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1555.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1539.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="763.7" y="1550.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1523.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1507.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="763.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1491.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1475.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="763.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1459.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="763.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1443.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="763.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1427.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1411.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="763.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1395.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1379.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="763.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1363.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="763.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1347.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="763.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1331.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1315.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.7" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1299.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="763.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1283.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="763.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1267.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="763.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1251.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1235.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="763.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1219.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1203.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="763.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1187.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="763.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1171.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="763.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1155.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="763.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1139.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="763.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1123.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="763.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1107.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="763.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1091.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="763.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1075.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1059.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1043.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="763.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1027.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="763.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="1011.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="763.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="995.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="763.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="979.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="763.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="963.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="763.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="947.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="931.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="915.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="763.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="899.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="883.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="763.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="867.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="763.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="851.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="763.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="835.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="763.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="819.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="763.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="803.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="763.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="787.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="771.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="755.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="763.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="739.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="763.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="723.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="707.0" width="1.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="763.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="691.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="675.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="659.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="643.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="763.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="627.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="763.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="611.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="595.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="763.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="579.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="763.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="563.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="763.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="547.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="531.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="763.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="515.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="763.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="499.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="763.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="483.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="763.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="467.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="763.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="451.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="763.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="435.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="419.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="403.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="387.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="763.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="371.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="355.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="763.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="339.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="763.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="323.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="763.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="307.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="763.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="291.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="275.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="259.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="763.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="243.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="763.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="227.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="763.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="211.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="195.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="763.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="179.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="763.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="163.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="147.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="763.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="131.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="115.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="763.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="99.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.7" y="110.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="83.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="763.7" y="94.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="760.7" y="67.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.7" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="760.7" y="51.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="763.7" y="62.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="760.7" y="35.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.7" y="46.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="761.5" y="51.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="764.5" y="62.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="761.5" y="35.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="764.5" y="46.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.11%)</title><rect x="761.9" y="2035.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="764.9" y="2046.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.10%)</title><rect x="763.2" y="2035.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="766.2" y="2046.0"></text>
</g>
<g>
<title>epoll_wait (385 samples, 6.26%)</title><rect x="764.4" y="2035.0" width="73.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="767.4" y="2046.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (359 samples, 5.84%)</title><rect x="769.4" y="2019.0" width="68.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="772.4" y="2030.0">[unknown]</text>
</g>
<g>
<title>[unknown] (359 samples, 5.84%)</title><rect x="769.4" y="2003.0" width="68.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="772.4" y="2014.0">[unknown]</text>
</g>
<g>
<title>[unknown] (333 samples, 5.41%)</title><rect x="774.4" y="1987.0" width="63.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="777.4" y="1998.0">[unknown]</text>
</g>
<g>
<title>[unknown] (332 samples, 5.40%)</title><rect x="774.5" y="1971.0" width="63.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="777.5" y="1982.0">[unknown]</text>
</g>
<g>
<title>[unknown] (324 samples, 5.27%)</title><rect x="776.1" y="1955.0" width="62.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.1" y="1966.0">[unkno..</text>
</g>
<g>
<title>[unknown] (283 samples, 4.60%)</title><rect x="783.9" y="1939.0" width="54.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="786.9" y="1950.0">[unkn..</text>
</g>
<g>
<title>[unknown] (204 samples, 3.32%)</title><rect x="799.1" y="1923.0" width="39.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="802.1" y="1934.0">[un..</text>
</g>
<g>
<title>[unknown] (154 samples, 2.50%)</title><rect x="808.7" y="1907.0" width="29.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="811.7" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (123 samples, 2.00%)</title><rect x="814.6" y="1891.0" width="23.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="817.6" y="1902.0">[..</text>
</g>
<g>
<title>[unknown] (82 samples, 1.33%)</title><rect x="822.5" y="1875.0" width="15.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="825.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.16%)</title><rect x="836.3" y="1859.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="839.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.7" y="1843.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="839.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.7" y="1827.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="839.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.7" y="1811.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="839.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.7" y="1795.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="839.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.7" y="1779.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="839.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="836.9" y="1763.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="839.9" y="1774.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.07%)</title><rect x="838.2" y="2051.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="841.2" y="2062.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.24%)</title><rect x="839.0" y="2051.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.0" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,592 samples, 25.88%)</title><rect x="841.9" y="2083.0" width="305.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.9" y="2094.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (9 samples, 0.15%)</title><rect x="845.1" y="2067.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="848.1" y="2078.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,555 samples, 25.28%)</title><rect x="846.9" y="2067.0" width="298.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.9" y="2078.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,142 samples, 18.56%)</title><rect x="847.4" y="2051.0" width="219.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.4" y="2062.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>I2C/C2I adapters (7 samples, 0.11%)</title><rect x="892.7" y="2035.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.7" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (12 samples, 0.20%)</title><rect x="894.0" y="2035.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="897.0" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (12 samples, 0.20%)</title><rect x="894.0" y="2019.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="897.0" y="2030.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (10 samples, 0.16%)</title><rect x="894.2" y="2003.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="897.2" y="2014.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (6 samples, 0.10%)</title><rect x="895.0" y="1987.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="898.0" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::loop_event(Method*, CompLevel, JavaThread*) (2 samples, 0.03%)</title><rect x="895.8" y="1971.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.8" y="1982.0"></text>
</g>
<g>
<title>SharedRuntime::OSR_migration_begin(JavaThread*) (2 samples, 0.03%)</title><rect x="896.3" y="2035.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="899.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="896.7" y="2035.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="899.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="896.7" y="2019.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="899.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="896.7" y="2003.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="899.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="897.1" y="1987.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="900.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="897.1" y="1971.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="900.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="897.1" y="1955.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="900.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="897.1" y="1939.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="900.1" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (696 samples, 11.31%)</title><rect x="897.9" y="2035.0" width="133.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.9" y="2046.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (691 samples, 11.23%)</title><rect x="898.8" y="2019.0" width="132.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.8" y="2030.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (651 samples, 10.58%)</title><rect x="899.4" y="2003.0" width="124.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.4" y="2014.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (64 samples, 1.04%)</title><rect x="900.6" y="1987.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (29 samples, 0.47%)</title><rect x="900.9" y="1971.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (29 samples, 0.47%)</title><rect x="900.9" y="1955.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.9" y="1966.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="905.4" y="1939.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="908.4" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.07%)</title><rect x="905.7" y="1939.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (9 samples, 0.15%)</title><rect x="906.5" y="1971.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.08%)</title><rect x="907.3" y="1955.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.05%)</title><rect x="907.7" y="1939.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.16%)</title><rect x="908.2" y="1971.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (5 samples, 0.08%)</title><rect x="908.2" y="1955.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="909.2" y="1955.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.2" y="1966.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="909.8" y="1939.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.8" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (14 samples, 0.23%)</title><rect x="910.2" y="1971.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.23%)</title><rect x="910.2" y="1955.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.23%)</title><rect x="910.2" y="1939.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.23%)</title><rect x="910.2" y="1923.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.2" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (581 samples, 9.44%)</title><rect x="912.8" y="1987.0" width="111.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.8" y="1998.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.07%)</title><rect x="913.6" y="1971.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.05%)</title><rect x="913.6" y="1955.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.15%)</title><rect x="914.4" y="1971.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="914.8" y="1955.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.8" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$81/1293871524.get$Lambda (6 samples, 0.10%)</title><rect x="914.9" y="1939.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.9" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$81/1293871524.&lt;init&gt; (2 samples, 0.03%)</title><rect x="915.7" y="1923.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.7" y="1934.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="916.1" y="1971.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.1" y="1982.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="916.1" y="1955.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.1" y="1966.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="916.1" y="1939.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.1" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="916.1" y="1923.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.1" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="916.1" y="1907.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.1" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="916.3" y="1891.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.3" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.executeAsync (560 samples, 9.10%)</title><rect x="916.9" y="1971.0" width="107.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="1982.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="916.9" y="1955.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="916.9" y="1939.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.9" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.get$Lambda (4 samples, 0.07%)</title><rect x="916.9" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$66/899689298.&lt;init&gt; (2 samples, 0.03%)</title><rect x="917.2" y="1907.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (556 samples, 9.04%)</title><rect x="917.6" y="1955.0" width="106.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.6" y="1966.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (553 samples, 8.99%)</title><rect x="918.2" y="1939.0" width="106.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.2" y="1950.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (9 samples, 0.15%)</title><rect x="918.4" y="1923.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (438 samples, 7.12%)</title><rect x="920.1" y="1923.0" width="84.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.1" y="1934.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.08%)</title><rect x="920.1" y="1907.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="920.1" y="1891.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.08%)</title><rect x="920.1" y="1875.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.07%)</title><rect x="920.1" y="1859.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.07%)</title><rect x="920.1" y="1843.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.07%)</title><rect x="920.1" y="1827.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.1" y="1838.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="920.1" y="1811.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="923.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1811.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="923.5" y="1822.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="920.5" y="1795.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="923.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1779.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="923.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1763.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="923.5" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1747.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="923.5" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1731.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="923.5" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1715.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="923.5" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="920.5" y="1699.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="923.5" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (433 samples, 7.04%)</title><rect x="921.1" y="1907.0" width="83.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.1" y="1918.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (433 samples, 7.04%)</title><rect x="921.1" y="1891.0" width="83.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.1" y="1902.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (433 samples, 7.04%)</title><rect x="921.1" y="1875.0" width="83.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.1" y="1886.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (433 samples, 7.04%)</title><rect x="921.1" y="1859.0" width="83.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.1" y="1870.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (433 samples, 7.04%)</title><rect x="921.1" y="1843.0" width="83.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.1" y="1854.0">jdk/inter..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.05%)</title><rect x="922.6" y="1827.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="925.6" y="1838.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.05%)</title><rect x="923.4" y="1827.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="926.4" y="1838.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.07%)</title><rect x="924.0" y="1827.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.0" y="1838.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.07%)</title><rect x="924.7" y="1827.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.7" y="1838.0"></text>
</g>
<g>
<title>Unsafe_Unpark (67 samples, 1.09%)</title><rect x="925.5" y="1827.0" width="12.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="928.5" y="1838.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="927.4" y="1811.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="930.4" y="1822.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.03%)</title><rect x="927.8" y="1811.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="930.8" y="1822.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (6 samples, 0.10%)</title><rect x="928.2" y="1811.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="931.2" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (8 samples, 0.13%)</title><rect x="929.3" y="1811.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.3" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.11%)</title><rect x="930.9" y="1811.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.9" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (5 samples, 0.08%)</title><rect x="932.2" y="1811.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="935.2" y="1822.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (16 samples, 0.26%)</title><rect x="933.2" y="1811.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="936.2" y="1822.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.08%)</title><rect x="936.2" y="1811.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="939.2" y="1822.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="937.2" y="1811.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.2" y="1822.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="937.6" y="1811.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="940.6" y="1822.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="938.3" y="1827.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="941.3" y="1838.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (337 samples, 5.48%)</title><rect x="939.5" y="1827.0" width="64.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="942.5" y="1838.0">pthread..</text>
</g>
<g>
<title>[unknown] (305 samples, 4.96%)</title><rect x="945.6" y="1811.0" width="58.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="948.6" y="1822.0">[unkno..</text>
</g>
<g>
<title>[unknown] (305 samples, 4.96%)</title><rect x="945.6" y="1795.0" width="58.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="948.6" y="1806.0">[unkno..</text>
</g>
<g>
<title>[unknown] (283 samples, 4.60%)</title><rect x="949.9" y="1779.0" width="54.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="952.9" y="1790.0">[unkn..</text>
</g>
<g>
<title>[unknown] (275 samples, 4.47%)</title><rect x="951.4" y="1763.0" width="52.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="954.4" y="1774.0">[unkn..</text>
</g>
<g>
<title>[unknown] (273 samples, 4.44%)</title><rect x="951.8" y="1747.0" width="52.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="954.8" y="1758.0">[unkn..</text>
</g>
<g>
<title>[unknown] (243 samples, 3.95%)</title><rect x="957.5" y="1731.0" width="46.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="960.5" y="1742.0">[unk..</text>
</g>
<g>
<title>[unknown] (213 samples, 3.46%)</title><rect x="963.3" y="1715.0" width="40.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="966.3" y="1726.0">[un..</text>
</g>
<g>
<title>[unknown] (204 samples, 3.32%)</title><rect x="965.0" y="1699.0" width="39.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="968.0" y="1710.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1003.8" y="1683.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1006.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1003.8" y="1667.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1006.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1003.8" y="1651.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1006.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1003.8" y="1635.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1006.8" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.24%)</title><rect x="1004.1" y="1923.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.24%)</title><rect x="1004.1" y="1907.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="1006.1" y="1891.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.07%)</title><rect x="1006.2" y="1875.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (4 samples, 0.07%)</title><rect x="1006.2" y="1859.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.07%)</title><rect x="1006.2" y="1843.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (4 samples, 0.07%)</title><rect x="1006.2" y="1827.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (84 samples, 1.37%)</title><rect x="1007.0" y="1923.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (80 samples, 1.30%)</title><rect x="1007.8" y="1907.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (49 samples, 0.80%)</title><rect x="1008.0" y="1891.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (24 samples, 0.39%)</title><rect x="1008.6" y="1875.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1008.7" y="1859.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (19 samples, 0.31%)</title><rect x="1009.5" y="1859.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (19 samples, 0.31%)</title><rect x="1009.5" y="1843.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.5" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (18 samples, 0.29%)</title><rect x="1013.2" y="1875.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (18 samples, 0.29%)</title><rect x="1013.2" y="1859.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (18 samples, 0.29%)</title><rect x="1013.2" y="1843.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (4 samples, 0.07%)</title><rect x="1016.6" y="1875.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.07%)</title><rect x="1016.6" y="1859.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1019.6" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="1016.6" y="1843.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.6" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (30 samples, 0.49%)</title><rect x="1017.4" y="1891.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (17 samples, 0.28%)</title><rect x="1019.9" y="1875.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.07%)</title><rect x="1021.4" y="1859.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.4" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.08%)</title><rect x="1022.2" y="1859.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.08%)</title><rect x="1022.2" y="1843.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="1023.1" y="1923.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="1023.1" y="1907.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="1023.1" y="1891.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1026.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="1023.5" y="1923.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.5" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.05%)</title><rect x="1024.5" y="2003.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.5" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.18%)</title><rect x="1025.0" y="2003.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.0" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.16%)</title><rect x="1025.2" y="1987.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.2" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.08%)</title><rect x="1025.4" y="1971.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.4" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.07%)</title><rect x="1026.4" y="1971.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1029.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.07%)</title><rect x="1026.4" y="1955.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="1026.8" y="1939.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.8" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.36%)</title><rect x="1027.2" y="2003.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.2" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.36%)</title><rect x="1027.2" y="1987.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.2" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.33%)</title><rect x="1027.5" y="1971.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1030.8" y="1955.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.8" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 1.04%)</title><rect x="1031.4" y="2035.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.4" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.13%)</title><rect x="1033.5" y="2019.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.5" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="1033.5" y="2003.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.5" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="1033.5" y="1987.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="1033.5" y="1971.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.10%)</title><rect x="1033.9" y="1971.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.9" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.55%)</title><rect x="1035.0" y="2019.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.55%)</title><rect x="1035.0" y="2003.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1041.2" y="1987.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.2" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1041.2" y="1971.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1041.2" y="1955.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.2" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.18%)</title><rect x="1041.5" y="2019.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.5" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (27 samples, 0.44%)</title><rect x="1043.7" y="2035.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.16%)</title><rect x="1044.0" y="2019.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.0" y="2030.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.16%)</title><rect x="1044.0" y="2003.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="1044.6" y="1987.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="1044.6" y="1971.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.03%)</title><rect x="1044.6" y="1955.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.08%)</title><rect x="1045.0" y="1987.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="1045.0" y="1971.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.05%)</title><rect x="1045.4" y="1971.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.4" y="1982.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (15 samples, 0.24%)</title><rect x="1046.0" y="2019.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (22 samples, 0.36%)</title><rect x="1048.8" y="2035.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.8" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.31%)</title><rect x="1053.0" y="2035.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.0" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.08%)</title><rect x="1053.4" y="2019.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.4" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.20%)</title><rect x="1054.4" y="2019.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.4" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.20%)</title><rect x="1054.4" y="2003.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.4" y="2014.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="1055.0" y="1987.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="1055.0" y="1971.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.05%)</title><rect x="1055.0" y="1955.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.10%)</title><rect x="1055.5" y="1987.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.10%)</title><rect x="1055.5" y="1971.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.10%)</title><rect x="1055.5" y="1955.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.5" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.83%)</title><rect x="1056.7" y="2035.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.7" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 0.78%)</title><rect x="1057.3" y="2019.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.39%)</title><rect x="1061.7" y="2003.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.7" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.29%)</title><rect x="1062.6" y="1987.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1065.7" y="1971.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.7" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (410 samples, 6.66%)</title><rect x="1066.5" y="2051.0" width="78.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.5" y="2062.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (407 samples, 6.62%)</title><rect x="1066.9" y="2035.0" width="78.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.9" y="2046.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="1072.2" y="2019.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1075.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.64%)</title><rect x="1072.6" y="2019.0" width="19.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1075.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.64%)</title><rect x="1072.6" y="2003.0" width="19.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1075.6" y="2014.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (87 samples, 1.41%)</title><rect x="1072.6" y="1987.0" width="16.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1075.6" y="1998.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="1074.0" y="1971.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.0" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="1074.7" y="1971.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.7" y="1982.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.05%)</title><rect x="1075.3" y="1971.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1078.3" y="1982.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.05%)</title><rect x="1075.9" y="1971.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1078.9" y="1982.0"></text>
</g>
<g>
<title>__memmove_ssse3 (21 samples, 0.34%)</title><rect x="1076.4" y="1971.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1079.4" y="1982.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.11%)</title><rect x="1080.5" y="1971.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1083.5" y="1982.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (37 samples, 0.60%)</title><rect x="1081.8" y="1971.0" width="7.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1084.8" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1083.5" y="1955.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.5" y="1966.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.07%)</title><rect x="1083.9" y="1955.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.9" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.05%)</title><rect x="1084.7" y="1955.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.7" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (11 samples, 0.18%)</title><rect x="1085.3" y="1955.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.3" y="1966.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.11%)</title><rect x="1087.6" y="1955.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1090.6" y="1966.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="1088.9" y="1971.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1091.9" y="1982.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.10%)</title><rect x="1089.3" y="1987.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1092.3" y="1998.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="1090.5" y="1987.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1093.5" y="1998.0"></text>
</g>
<g>
<title>recv (4 samples, 0.07%)</title><rect x="1091.2" y="1987.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1094.2" y="1998.0"></text>
</g>
<g>
<title>recv (276 samples, 4.49%)</title><rect x="1092.0" y="2019.0" width="52.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1095.0" y="2030.0">recv</text>
</g>
<g>
<title>[unknown] (261 samples, 4.24%)</title><rect x="1094.9" y="2003.0" width="50.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1097.9" y="2014.0">[unkn..</text>
</g>
<g>
<title>[unknown] (261 samples, 4.24%)</title><rect x="1094.9" y="1987.0" width="50.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1097.9" y="1998.0">[unkn..</text>
</g>
<g>
<title>[unknown] (239 samples, 3.88%)</title><rect x="1099.1" y="1971.0" width="45.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1102.1" y="1982.0">[unk..</text>
</g>
<g>
<title>[unknown] (237 samples, 3.85%)</title><rect x="1099.5" y="1955.0" width="45.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1102.5" y="1966.0">[unk..</text>
</g>
<g>
<title>[unknown] (233 samples, 3.79%)</title><rect x="1100.2" y="1939.0" width="44.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1103.2" y="1950.0">[unk..</text>
</g>
<g>
<title>[unknown] (222 samples, 3.61%)</title><rect x="1102.3" y="1923.0" width="42.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1105.3" y="1934.0">[unk..</text>
</g>
<g>
<title>[unknown] (208 samples, 3.38%)</title><rect x="1105.0" y="1907.0" width="39.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1108.0" y="1918.0">[un..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.84%)</title><rect x="1111.4" y="1891.0" width="33.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1114.4" y="1902.0">[u..</text>
</g>
<g>
<title>[unknown] (139 samples, 2.26%)</title><rect x="1118.3" y="1875.0" width="26.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1121.3" y="1886.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 1.46%)</title><rect x="1127.7" y="1859.0" width="17.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1130.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.09%)</title><rect x="1132.1" y="1843.0" width="12.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1135.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.62%)</title><rect x="1137.6" y="1827.0" width="7.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1140.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="1144.2" y="1811.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1147.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="1144.2" y="1795.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1147.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="1144.3" y="1779.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1147.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1144.5" y="1763.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1147.5" y="1774.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (11 samples, 0.18%)</title><rect x="1145.1" y="2067.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.1" y="2078.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.15%)</title><rect x="1145.5" y="2051.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1148.5" y="2062.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.11%)</title><rect x="1145.9" y="2035.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1148.9" y="2046.0"></text>
</g>
<g>
<title>start_thread (223 samples, 3.62%)</title><rect x="1147.2" y="2099.0" width="42.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1150.2" y="2110.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (223 samples, 3.62%)</title><rect x="1147.2" y="2083.0" width="42.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1150.2" y="2094.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (223 samples, 3.62%)</title><rect x="1147.2" y="2067.0" width="42.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.2" y="2078.0">Thre..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (5 samples, 0.08%)</title><rect x="1147.2" y="2051.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.2" y="2062.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (4 samples, 0.07%)</title><rect x="1147.2" y="2035.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.2" y="2046.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (3 samples, 0.05%)</title><rect x="1147.4" y="2019.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.4" y="2030.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (3 samples, 0.05%)</title><rect x="1147.4" y="2003.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.4" y="2014.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (2 samples, 0.03%)</title><rect x="1147.4" y="1987.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.4" y="1998.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.03%)</title><rect x="1147.4" y="1971.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.4" y="1982.0"></text>
</g>
<g>
<title>GangWorker::loop() (98 samples, 1.59%)</title><rect x="1148.2" y="2051.0" width="18.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.2" y="2062.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.07%)</title><rect x="1148.2" y="2035.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.2" y="2046.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.07%)</title><rect x="1148.2" y="2019.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.2" y="2030.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.07%)</title><rect x="1148.2" y="2003.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.2" y="2014.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (87 samples, 1.41%)</title><rect x="1149.0" y="2035.0" width="16.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.0" y="2046.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (69 samples, 1.12%)</title><rect x="1149.0" y="2019.0" width="13.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.0" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (62 samples, 1.01%)</title><rect x="1149.0" y="2003.0" width="11.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.0" y="2014.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (40 samples, 0.65%)</title><rect x="1153.2" y="1987.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.2" y="1998.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (34 samples, 0.55%)</title><rect x="1154.1" y="1971.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.1" y="1982.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.10%)</title><rect x="1159.5" y="1955.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.5" y="1966.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.07%)</title><rect x="1159.9" y="1939.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.9" y="1950.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.10%)</title><rect x="1160.8" y="2003.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1163.8" y="2014.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (15 samples, 0.24%)</title><rect x="1162.2" y="2019.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.2" y="2030.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (15 samples, 0.24%)</title><rect x="1162.2" y="2003.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.2" y="2014.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (15 samples, 0.24%)</title><rect x="1162.2" y="1987.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="1998.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (15 samples, 0.24%)</title><rect x="1162.2" y="1971.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.2" y="1982.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (15 samples, 0.24%)</title><rect x="1162.2" y="1955.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.2" y="1966.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (10 samples, 0.16%)</title><rect x="1162.2" y="1939.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.2" y="1950.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.10%)</title><rect x="1162.8" y="1923.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.8" y="1934.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.05%)</title><rect x="1163.3" y="1907.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.3" y="1918.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="1163.3" y="1891.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.3" y="1902.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.08%)</title><rect x="1164.1" y="1939.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.1" y="1950.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.05%)</title><rect x="1164.1" y="1923.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.1" y="1934.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1164.7" y="1923.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.7" y="1934.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.05%)</title><rect x="1165.1" y="2019.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.1" y="2030.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.05%)</title><rect x="1165.1" y="2003.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.1" y="2014.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.05%)</title><rect x="1165.1" y="1987.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.1" y="1998.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.05%)</title><rect x="1165.1" y="1971.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.1" y="1982.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (3 samples, 0.05%)</title><rect x="1165.1" y="1955.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.1" y="1966.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1165.3" y="1939.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.3" y="1950.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1165.3" y="1923.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.3" y="1934.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (3 samples, 0.05%)</title><rect x="1165.6" y="2035.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="2046.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1166.2" y="2035.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.2" y="2046.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.03%)</title><rect x="1166.2" y="2019.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.2" y="2030.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1166.2" y="2003.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.2" y="2014.0"></text>
</g>
<g>
<title>JavaThread::run() (108 samples, 1.76%)</title><rect x="1167.0" y="2051.0" width="20.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.0" y="2062.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (108 samples, 1.76%)</title><rect x="1167.0" y="2035.0" width="20.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.0" y="2046.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (108 samples, 1.76%)</title><rect x="1167.0" y="2019.0" width="20.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.0" y="2030.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (107 samples, 1.74%)</title><rect x="1167.0" y="2003.0" width="20.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.0" y="2014.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (103 samples, 1.67%)</title><rect x="1167.0" y="1987.0" width="19.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.0" y="1998.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (103 samples, 1.67%)</title><rect x="1167.0" y="1971.0" width="19.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.0" y="1982.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (61 samples, 0.99%)</title><rect x="1167.0" y="1955.0" width="11.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.0" y="1966.0"></text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.08%)</title><rect x="1167.0" y="1939.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.0" y="1950.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (5 samples, 0.08%)</title><rect x="1167.0" y="1923.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.0" y="1934.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (3 samples, 0.05%)</title><rect x="1167.4" y="1907.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.4" y="1918.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.03%)</title><rect x="1167.6" y="1891.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.6" y="1902.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.08%)</title><rect x="1167.9" y="1939.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.9" y="1950.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.07%)</title><rect x="1168.1" y="1923.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="1934.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="1168.5" y="1907.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.5" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (2 samples, 0.03%)</title><rect x="1168.9" y="1939.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.9" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (2 samples, 0.03%)</title><rect x="1168.9" y="1923.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.9" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (7 samples, 0.11%)</title><rect x="1169.3" y="1939.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.3" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.10%)</title><rect x="1169.5" y="1923.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.5" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1169.5" y="1907.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.5" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1170.2" y="1907.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.2" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (42 samples, 0.68%)</title><rect x="1170.6" y="1939.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.6" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.08%)</title><rect x="1170.8" y="1923.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.8" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 0.20%)</title><rect x="1171.8" y="1923.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.8" y="1934.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.03%)</title><rect x="1172.2" y="1907.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.2" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.05%)</title><rect x="1172.5" y="1907.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.5" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.07%)</title><rect x="1173.1" y="1907.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.1" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (6 samples, 0.10%)</title><rect x="1174.1" y="1923.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.1" y="1934.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.03%)</title><rect x="1174.8" y="1907.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.8" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.03%)</title><rect x="1175.2" y="1923.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (7 samples, 0.11%)</title><rect x="1175.6" y="1923.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.6" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.05%)</title><rect x="1176.4" y="1907.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="1918.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (3 samples, 0.05%)</title><rect x="1177.0" y="1923.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.0" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1177.1" y="1907.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.1" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.07%)</title><rect x="1177.7" y="1923.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.7" y="1934.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="1178.1" y="1907.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.1" y="1918.0"></text>
</g>
<g>
<title>Compile::Optimize() (33 samples, 0.54%)</title><rect x="1178.7" y="1955.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (22 samples, 0.36%)</title><rect x="1179.6" y="1939.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.6" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.18%)</title><rect x="1180.2" y="1923.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (9 samples, 0.15%)</title><rect x="1180.6" y="1907.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.6" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (7 samples, 0.11%)</title><rect x="1180.8" y="1891.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.8" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1181.0" y="1875.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.0" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.07%)</title><rect x="1181.4" y="1875.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.03%)</title><rect x="1182.3" y="1923.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.3" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (4 samples, 0.07%)</title><rect x="1182.7" y="1923.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.7" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.03%)</title><rect x="1183.5" y="1923.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.03%)</title><rect x="1183.5" y="1907.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.5" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.07%)</title><rect x="1184.1" y="1939.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.1" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.07%)</title><rect x="1184.1" y="1923.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.1" y="1934.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.13%)</title><rect x="1185.2" y="1955.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.2" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.13%)</title><rect x="1185.2" y="1939.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.2" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.13%)</title><rect x="1185.2" y="1923.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.13%)</title><rect x="1185.2" y="1907.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.2" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.13%)</title><rect x="1185.2" y="1891.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.13%)</title><rect x="1185.2" y="1875.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.11%)</title><rect x="1185.2" y="1859.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.11%)</title><rect x="1185.2" y="1843.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.2" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.10%)</title><rect x="1185.2" y="1827.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.10%)</title><rect x="1185.2" y="1811.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.2" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.10%)</title><rect x="1185.2" y="1795.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1185.4" y="1779.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.4" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1185.6" y="1763.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.6" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1185.6" y="1747.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1185.6" y="1731.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.6" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1185.6" y="1715.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1185.6" y="1699.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.6" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1185.6" y="1683.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.6" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1185.8" y="1667.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1185.8" y="1651.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.8" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1185.8" y="1635.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1185.8" y="1619.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1185.8" y="1603.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1185.8" y="1587.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1185.8" y="1571.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.8" y="1582.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1186.7" y="1987.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="1998.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1186.7" y="1971.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="1982.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.07%)</title><rect x="1186.7" y="1955.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="1966.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 0.07%)</title><rect x="1186.7" y="1939.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.7" y="1950.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.03%)</title><rect x="1186.7" y="1923.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="1934.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1187.7" y="2051.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="2062.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1187.7" y="2035.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="2046.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1187.7" y="2019.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="2030.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.03%)</title><rect x="1187.7" y="2003.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="2014.0"></text>
</g>
<g>
<title>WatcherThread::run() (10 samples, 0.16%)</title><rect x="1188.1" y="2051.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="2062.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (6 samples, 0.10%)</title><rect x="1188.1" y="2035.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="2046.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.07%)</title><rect x="1189.2" y="2035.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.2" y="2046.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.07%)</title><rect x="1189.2" y="2019.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="2030.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.07%)</title><rect x="1189.2" y="2003.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.2" y="2014.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1189.6" y="1987.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1192.6" y="1998.0"></text>
</g>
</g>
</svg>
