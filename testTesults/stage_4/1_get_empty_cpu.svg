<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (3,448 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.06%)</title><rect x="10.0" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="10.7" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="10.7" y="867.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="10.7" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="10.7" y="835.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="10.7" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.7" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="10.7" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="10.7" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.7" y="798.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="11.0" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="11.4" y="883.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.4" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.4" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.4" y="851.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="11.4" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="11.4" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="11.4" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.4" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.7" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="11.7" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.7" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="11.7" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="782.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="11.7" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.7" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="11.7" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.7" y="750.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="11.7" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="734.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="11.7" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="718.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.03%)</title><rect x="11.7" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.7" y="702.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.03%)</title><rect x="11.7" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="12.1" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.1" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="12.1" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="12.1" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="12.1" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="12.1" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="12.1" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (41 samples, 1.19%)</title><rect x="12.4" y="883.0" width="14.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="12.4" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (39 samples, 1.13%)</title><rect x="12.7" y="867.0" width="13.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.7" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="13.1" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.1" y="862.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="13.1" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.1" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (19 samples, 0.55%)</title><rect x="13.4" y="851.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.09%)</title><rect x="13.8" y="835.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="14.8" y="835.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="17.8" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.29%)</title><rect x="15.1" y="835.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="15.8" y="819.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="18.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="15.8" y="803.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="18.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="18.2" y="787.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="18.2" y="771.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="21.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="18.2" y="755.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.06%)</title><rect x="18.6" y="835.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="21.6" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="19.2" y="835.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.2" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (16 samples, 0.46%)</title><rect x="19.9" y="851.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.9" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="25.4" y="851.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="28.4" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="25.7" y="851.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="28.7" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="26.1" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.1" y="878.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.03%)</title><rect x="26.4" y="883.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="29.4" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.09%)</title><rect x="26.8" y="883.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="26.8" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="27.1" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.1" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="27.1" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.1" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="27.5" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.5" y="851.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="30.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.5" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="30.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.5" y="819.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="30.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="883.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="30.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="867.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="30.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="30.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="835.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="30.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="819.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="30.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="803.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="30.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="27.8" y="787.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="30.8" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (33 samples, 0.96%)</title><rect x="28.1" y="883.0" width="11.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="31.1" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.15%)</title><rect x="33.3" y="867.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.3" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.38%)</title><rect x="35.0" y="867.0" width="4.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="38.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="35.7" y="851.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="38.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="35.7" y="835.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="38.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="35.7" y="819.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="38.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="35.7" y="803.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="38.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="35.7" y="787.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="38.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="36.0" y="771.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="39.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="36.4" y="755.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="36.4" y="739.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="39.4" y="750.0"></text>
</g>
<g>
<title>__condvar_cancel_waiting (1 samples, 0.03%)</title><rect x="39.4" y="883.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="42.4" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (11 samples, 0.32%)</title><rect x="39.8" y="883.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="42.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="40.5" y="867.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="43.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="40.5" y="851.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="43.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="40.8" y="835.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="43.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="40.8" y="819.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="40.8" y="803.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="43.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="41.1" y="787.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="44.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="41.8" y="771.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="44.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="42.9" y="755.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="42.9" y="739.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="45.9" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="43.5" y="883.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="46.5" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="43.9" y="883.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="46.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,126 samples, 61.66%)</title><rect x="44.2" y="883.0" width="727.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.2" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,126 samples, 61.66%)</title><rect x="44.2" y="867.0" width="727.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,126 samples, 61.66%)</title><rect x="44.2" y="851.0" width="727.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.15%)</title><rect x="45.9" y="835.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (10 samples, 0.29%)</title><rect x="47.6" y="835.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.29%)</title><rect x="47.6" y="819.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.29%)</title><rect x="47.6" y="803.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$64/1422043020.run (4 samples, 0.12%)</title><rect x="49.7" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (515 samples, 14.94%)</title><rect x="51.1" y="835.0" width="176.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.1" y="846.0">java/util/concurrent/Th..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (513 samples, 14.88%)</title><rect x="51.8" y="819.0" width="175.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.8" y="830.0">java/util/concurrent/Li..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (386 samples, 11.19%)</title><rect x="51.8" y="803.0" width="132.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.8" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.09%)</title><rect x="56.2" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (25 samples, 0.73%)</title><rect x="57.2" y="787.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="771.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="68.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="755.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="68.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="739.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="68.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="723.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="68.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="707.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="68.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="691.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="68.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.4" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="68.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (45 samples, 1.31%)</title><rect x="65.8" y="787.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (45 samples, 1.31%)</title><rect x="65.8" y="771.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.90%)</title><rect x="70.6" y="755.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.90%)</title><rect x="70.6" y="739.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.09%)</title><rect x="71.3" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.75%)</title><rect x="72.3" y="723.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.26%)</title><rect x="72.3" y="707.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="75.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="72.6" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="75.6" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="73.3" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="76.3" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="74.0" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="77.0" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.06%)</title><rect x="74.3" y="691.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="77.3" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="75.0" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="78.0" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.49%)</title><rect x="75.4" y="707.0" width="5.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="78.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="76.0" y="691.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="79.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="76.0" y="675.0" width="5.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="79.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="76.4" y="659.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="79.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="76.4" y="643.0" width="4.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="79.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="76.4" y="627.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="79.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="77.1" y="611.0" width="4.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="80.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="77.8" y="595.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="80.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.26%)</title><rect x="78.1" y="579.0" width="3.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="81.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.06%)</title><rect x="81.2" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.06%)</title><rect x="81.2" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (297 samples, 8.61%)</title><rect x="81.9" y="787.0" width="101.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.9" y="798.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (295 samples, 8.56%)</title><rect x="82.6" y="771.0" width="100.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.6" y="782.0">jdk/internal..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="84.6" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="87.6" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (4 samples, 0.12%)</title><rect x="84.9" y="755.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="87.9" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (148 samples, 4.29%)</title><rect x="86.3" y="755.0" width="50.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="89.3" y="766.0">Unsaf..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="88.0" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.0" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.09%)</title><rect x="88.4" y="739.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="91.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="89.4" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="92.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (39 samples, 1.13%)</title><rect x="89.7" y="739.0" width="13.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="92.7" y="750.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.06%)</title><rect x="98.3" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="101.3" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.09%)</title><rect x="99.0" y="723.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="102.0" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.09%)</title><rect x="99.0" y="707.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="102.0" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.09%)</title><rect x="100.0" y="723.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="103.0" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.17%)</title><rect x="101.0" y="723.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="104.0" y="734.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.09%)</title><rect x="103.1" y="739.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="106.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="104.1" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (7 samples, 0.20%)</title><rect x="104.5" y="739.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.5" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (67 samples, 1.94%)</title><rect x="106.9" y="739.0" width="22.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="109.9" y="750.0">_..</text>
</g>
<g>
<title>[unknown] (55 samples, 1.60%)</title><rect x="111.0" y="723.0" width="18.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="114.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.60%)</title><rect x="111.0" y="707.0" width="18.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.70%)</title><rect x="121.6" y="691.0" width="8.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="124.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.70%)</title><rect x="121.6" y="675.0" width="8.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="124.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.61%)</title><rect x="122.6" y="659.0" width="7.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="125.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="126.0" y="643.0" width="3.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="129.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.17%)</title><rect x="127.7" y="627.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="130.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="128.8" y="611.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="131.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="128.8" y="595.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="131.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="129.1" y="579.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="132.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="129.4" y="563.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="132.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="129.4" y="547.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="132.4" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.15%)</title><rect x="129.8" y="739.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="132.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="131.1" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="134.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="131.1" y="707.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="134.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="131.1" y="691.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="134.1" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.09%)</title><rect x="131.5" y="739.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="134.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.09%)</title><rect x="132.5" y="739.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="135.5" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="133.5" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="136.5" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (9 samples, 0.26%)</title><rect x="133.9" y="739.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="136.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 3.83%)</title><rect x="137.0" y="755.0" width="45.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="140.0" y="766.0">[unk..</text>
</g>
<g>
<title>__pthread_cleanup_pop (2 samples, 0.06%)</title><rect x="137.0" y="739.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (103 samples, 2.99%)</title><rect x="137.7" y="739.0" width="35.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="140.7" y="750.0">__p..</text>
</g>
<g>
<title>[unknown] (63 samples, 1.83%)</title><rect x="151.3" y="723.0" width="21.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="154.3" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (63 samples, 1.83%)</title><rect x="151.3" y="707.0" width="21.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="154.3" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.51%)</title><rect x="155.1" y="691.0" width="17.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="158.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.45%)</title><rect x="155.8" y="675.0" width="17.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="158.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.36%)</title><rect x="156.8" y="659.0" width="16.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="159.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.25%)</title><rect x="158.2" y="643.0" width="14.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="161.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.90%)</title><rect x="162.3" y="627.0" width="10.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="165.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.67%)</title><rect x="165.0" y="611.0" width="7.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="168.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="166.1" y="595.0" width="6.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="169.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="579.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="175.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="175.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="547.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="175.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="531.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="175.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="515.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="175.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="499.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="175.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="172.6" y="483.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="175.6" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.12%)</title><rect x="172.9" y="739.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="175.9" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="174.3" y="739.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="177.3" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (16 samples, 0.46%)</title><rect x="175.0" y="739.0" width="5.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="178.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.15%)</title><rect x="180.4" y="739.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="183.4" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.06%)</title><rect x="182.1" y="755.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="185.1" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="182.8" y="755.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="183.5" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.15%)</title><rect x="183.9" y="803.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.20%)</title><rect x="185.6" y="803.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.20%)</title><rect x="185.6" y="787.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.20%)</title><rect x="185.6" y="771.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="187.3" y="755.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="190.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="187.3" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="190.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="187.3" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="190.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="187.6" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="187.6" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="187.6" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="187.6" y="707.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="190.6" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="187.6" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="190.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (115 samples, 3.34%)</title><rect x="188.0" y="803.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (115 samples, 3.34%)</title><rect x="188.0" y="787.0" width="39.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.0" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (115 samples, 3.34%)</title><rect x="188.0" y="771.0" width="39.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.0" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (87 samples, 2.52%)</title><rect x="197.5" y="755.0" width="29.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.5" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (85 samples, 2.47%)</title><rect x="198.2" y="739.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.2" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.15%)</title><rect x="198.9" y="723.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="201.9" y="734.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="198.9" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="201.9" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="199.3" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="202.3" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="199.6" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="202.6" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="199.9" y="707.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="202.9" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="200.3" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="203.3" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (78 samples, 2.26%)</title><rect x="200.6" y="723.0" width="26.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="203.6" y="734.0">p..</text>
</g>
<g>
<title>[unknown] (67 samples, 1.94%)</title><rect x="204.4" y="707.0" width="22.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="207.4" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (67 samples, 1.94%)</title><rect x="204.4" y="691.0" width="22.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="207.4" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (58 samples, 1.68%)</title><rect x="207.5" y="675.0" width="19.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="210.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.68%)</title><rect x="207.5" y="659.0" width="19.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="210.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.68%)</title><rect x="207.5" y="643.0" width="19.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="210.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.62%)</title><rect x="208.1" y="627.0" width="19.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="211.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.54%)</title><rect x="209.2" y="611.0" width="18.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="212.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.51%)</title><rect x="209.5" y="595.0" width="17.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="212.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="227.0" y="579.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="230.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="227.0" y="563.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="230.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="227.0" y="547.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="230.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="227.0" y="531.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="230.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="227.0" y="515.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="230.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$64/1422043020.run (1,591 samples, 46.14%)</title><rect x="227.3" y="835.0" width="544.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.3" y="846.0">ru/mail/polis/service/igorlo/AsyncService$$Lambda$64/1422043020.run</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$4 (1,591 samples, 46.14%)</title><rect x="227.3" y="819.0" width="544.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.3" y="830.0">ru/mail/polis/service/igorlo/AsyncService.lambda$executeAsync$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,422 samples, 41.24%)</title><rect x="227.3" y="803.0" width="486.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.3" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,355 samples, 39.30%)</title><rect x="228.7" y="787.0" width="463.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.7" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 1.22%)</title><rect x="229.4" y="771.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (25 samples, 0.73%)</title><rect x="235.2" y="755.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (25 samples, 0.73%)</title><rect x="235.2" y="739.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (25 samples, 0.73%)</title><rect x="235.2" y="723.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.12%)</title><rect x="242.4" y="707.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="245.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,311 samples, 38.02%)</title><rect x="243.7" y="771.0" width="448.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.7" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,311 samples, 38.02%)</title><rect x="243.7" y="755.0" width="448.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="245.1" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,306 samples, 37.88%)</title><rect x="245.5" y="739.0" width="446.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.5" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.09%)</title><rect x="246.8" y="723.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,299 samples, 37.67%)</title><rect x="247.8" y="723.0" width="444.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.8" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.09%)</title><rect x="253.0" y="707.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="256.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.48%)</title><rect x="254.0" y="707.0" width="17.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="257.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.48%)</title><rect x="254.0" y="691.0" width="17.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="257.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (42 samples, 1.22%)</title><rect x="254.0" y="675.0" width="14.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="257.0" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.15%)</title><rect x="255.7" y="659.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="258.7" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="257.4" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="260.4" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="257.8" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.8" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.23%)</title><rect x="258.1" y="659.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="261.1" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (18 samples, 0.52%)</title><rect x="260.9" y="659.0" width="6.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="263.9" y="670.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (8 samples, 0.23%)</title><rect x="262.2" y="643.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="265.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.06%)</title><rect x="265.0" y="643.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="268.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="265.6" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="268.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.09%)</title><rect x="266.0" y="643.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="269.0" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.12%)</title><rect x="267.0" y="659.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="270.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="268.4" y="675.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="271.4" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="268.7" y="675.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="271.7" y="686.0"></text>
</g>
<g>
<title>__send (7 samples, 0.20%)</title><rect x="269.1" y="675.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="272.1" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.12%)</title><rect x="271.5" y="707.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="274.5" y="718.0"></text>
</g>
<g>
<title>__send (1,226 samples, 35.56%)</title><rect x="272.8" y="707.0" width="419.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="275.8" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (1,212 samples, 35.15%)</title><rect x="277.6" y="691.0" width="414.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="280.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,212 samples, 35.15%)</title><rect x="277.6" y="675.0" width="414.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="280.6" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,188 samples, 34.45%)</title><rect x="285.8" y="659.0" width="406.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="288.8" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,186 samples, 34.40%)</title><rect x="286.5" y="643.0" width="405.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="289.5" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,171 samples, 33.96%)</title><rect x="291.7" y="627.0" width="400.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="294.7" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,166 samples, 33.82%)</title><rect x="293.4" y="611.0" width="399.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="296.4" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,152 samples, 33.41%)</title><rect x="298.2" y="595.0" width="394.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="301.2" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,141 samples, 33.09%)</title><rect x="301.9" y="579.0" width="390.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="304.9" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,068 samples, 30.97%)</title><rect x="326.9" y="563.0" width="365.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="329.9" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,017 samples, 29.50%)</title><rect x="344.4" y="547.0" width="348.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="347.4" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (963 samples, 27.93%)</title><rect x="362.8" y="531.0" width="329.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="365.8" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (921 samples, 26.71%)</title><rect x="377.2" y="515.0" width="315.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="380.2" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (835 samples, 24.22%)</title><rect x="406.6" y="499.0" width="285.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="409.6" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (815 samples, 23.64%)</title><rect x="413.5" y="483.0" width="278.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="416.5" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (779 samples, 22.59%)</title><rect x="425.8" y="467.0" width="266.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="428.8" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (767 samples, 22.24%)</title><rect x="429.9" y="451.0" width="262.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="432.9" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (750 samples, 21.75%)</title><rect x="435.7" y="435.0" width="256.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="438.7" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (722 samples, 20.94%)</title><rect x="445.3" y="419.0" width="247.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="448.3" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (686 samples, 19.90%)</title><rect x="457.6" y="403.0" width="234.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="460.6" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (643 samples, 18.65%)</title><rect x="472.3" y="387.0" width="220.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="475.3" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (550 samples, 15.95%)</title><rect x="504.2" y="371.0" width="188.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="507.2" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (511 samples, 14.82%)</title><rect x="517.5" y="355.0" width="174.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="520.5" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (485 samples, 14.07%)</title><rect x="526.4" y="339.0" width="166.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="529.4" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (467 samples, 13.54%)</title><rect x="532.6" y="323.0" width="159.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="535.6" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (453 samples, 13.14%)</title><rect x="537.4" y="307.0" width="155.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="540.4" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (446 samples, 12.94%)</title><rect x="539.8" y="291.0" width="152.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="542.8" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (440 samples, 12.76%)</title><rect x="541.8" y="275.0" width="150.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="544.8" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (426 samples, 12.35%)</title><rect x="546.6" y="259.0" width="145.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="549.6" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (412 samples, 11.95%)</title><rect x="551.4" y="243.0" width="141.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="554.4" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (402 samples, 11.66%)</title><rect x="554.8" y="227.0" width="137.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.8" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (393 samples, 11.40%)</title><rect x="557.9" y="211.0" width="134.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="560.9" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (377 samples, 10.93%)</title><rect x="563.4" y="195.0" width="129.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="566.4" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (355 samples, 10.30%)</title><rect x="570.9" y="179.0" width="121.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="573.9" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (320 samples, 9.28%)</title><rect x="582.9" y="163.0" width="109.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="585.9" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (294 samples, 8.53%)</title><rect x="591.8" y="147.0" width="100.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="594.8" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (247 samples, 7.16%)</title><rect x="607.9" y="131.0" width="84.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.9" y="142.0">[unknown]</text>
</g>
<g>
<title>[unknown] (200 samples, 5.80%)</title><rect x="624.0" y="115.0" width="68.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="627.0" y="126.0">[unknown]</text>
</g>
<g>
<title>[unknown] (189 samples, 5.48%)</title><rect x="627.7" y="99.0" width="64.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="630.7" y="110.0">[unknown]</text>
</g>
<g>
<title>[unknown] (182 samples, 5.28%)</title><rect x="630.1" y="83.0" width="62.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="633.1" y="94.0">[unkno..</text>
</g>
<g>
<title>[unknown] (20 samples, 0.58%)</title><rect x="685.6" y="67.0" width="6.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="688.6" y="78.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.49%)</title><rect x="686.6" y="51.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="689.6" y="62.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="688.6" y="35.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="691.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (63 samples, 1.83%)</title><rect x="692.4" y="787.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.4" y="798.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="706.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="706.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="706.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="707.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="706.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="691.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="706.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="703.4" y="675.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="706.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (26 samples, 0.75%)</title><rect x="703.7" y="771.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (26 samples, 0.75%)</title><rect x="703.7" y="755.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.7" y="766.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.17%)</title><rect x="707.8" y="739.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="710.8" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.23%)</title><rect x="709.9" y="739.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.12%)</title><rect x="709.9" y="723.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="712.9" y="734.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.12%)</title><rect x="711.2" y="723.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="714.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.09%)</title><rect x="711.6" y="707.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="712.6" y="771.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="715.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (1 samples, 0.03%)</title><rect x="713.6" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/454019155.action (169 samples, 4.90%)</title><rect x="714.0" y="803.0" width="57.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.0" y="814.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.lambda$entity$1 (169 samples, 4.90%)</title><rect x="714.0" y="787.0" width="57.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.0" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.get (169 samples, 4.90%)</title><rect x="714.0" y="771.0" width="57.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.0" y="782.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (169 samples, 4.90%)</title><rect x="714.0" y="755.0" width="57.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.0" y="766.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="717.7" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.12%)</title><rect x="718.1" y="739.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.12%)</title><rect x="718.1" y="723.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.1" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="719.1" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="722.1" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="719.1" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.1" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="719.1" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="722.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.&lt;init&gt; (5 samples, 0.15%)</title><rect x="719.4" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.4" y="750.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (4 samples, 0.12%)</title><rect x="719.8" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.8" y="734.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.12%)</title><rect x="719.8" y="707.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.12%)</title><rect x="719.8" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.12%)</title><rect x="719.8" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/LiteNoSuchElementExcecption.fillInStackTrace (4 samples, 0.12%)</title><rect x="719.8" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.iterator (148 samples, 4.29%)</title><rect x="721.1" y="739.0" width="50.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.1" y="750.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/PersistentDAO.rowsIterator (148 samples, 4.29%)</title><rect x="721.1" y="723.0" width="50.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.1" y="734.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (124 samples, 3.60%)</title><rect x="721.1" y="707.0" width="42.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.1" y="718.0">ru/m..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="721.1" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="721.1" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.06%)</title><rect x="721.5" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.06%)</title><rect x="721.5" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.03%)</title><rect x="721.8" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.29%)</title><rect x="722.2" y="691.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.2" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.29%)</title><rect x="722.2" y="675.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.23%)</title><rect x="722.9" y="659.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.23%)</title><rect x="722.9" y="643.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (7 samples, 0.20%)</title><rect x="722.9" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="725.3" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (5 samples, 0.15%)</title><rect x="725.6" y="691.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (5 samples, 0.15%)</title><rect x="725.6" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="727.0" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.26%)</title><rect x="727.3" y="691.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (9 samples, 0.26%)</title><rect x="727.3" y="675.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.09%)</title><rect x="729.4" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (1 samples, 0.03%)</title><rect x="729.4" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.06%)</title><rect x="729.7" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.06%)</title><rect x="729.7" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.06%)</title><rect x="729.7" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTablePool.iterator (97 samples, 2.81%)</title><rect x="730.4" y="691.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.4" y="702.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (20 samples, 0.58%)</title><rect x="730.4" y="675.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (16 samples, 0.46%)</title><rect x="731.8" y="659.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (16 samples, 0.46%)</title><rect x="731.8" y="643.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="736.5" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="736.5" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="736.9" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (11 samples, 0.32%)</title><rect x="737.2" y="675.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (10 samples, 0.29%)</title><rect x="737.6" y="659.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (10 samples, 0.29%)</title><rect x="737.6" y="643.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (10 samples, 0.29%)</title><rect x="737.6" y="627.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="740.7" y="611.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="743.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="740.7" y="595.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="743.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="740.7" y="579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="743.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.combineTables (43 samples, 1.25%)</title><rect x="741.0" y="675.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="742.7" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.32%)</title><rect x="743.1" y="659.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.5" y="643.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="749.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.5" y="627.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="749.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.5" y="611.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="749.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.23%)</title><rect x="746.8" y="659.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.20%)</title><rect x="747.2" y="643.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.20%)</title><rect x="747.2" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.20%)</title><rect x="747.2" y="611.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="747.2" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.17%)</title><rect x="747.5" y="595.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (1 samples, 0.03%)</title><rect x="749.6" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.06%)</title><rect x="749.9" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/MemoryTable.iterator (15 samples, 0.44%)</title><rect x="750.6" y="659.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.32%)</title><rect x="751.3" y="643.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.32%)</title><rect x="751.3" y="627.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.32%)</title><rect x="751.3" y="611.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.32%)</title><rect x="751.3" y="595.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.32%)</title><rect x="751.3" y="579.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (11 samples, 0.32%)</title><rect x="751.3" y="563.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="755.0" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="755.0" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="755.0" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (23 samples, 0.67%)</title><rect x="755.7" y="675.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 0.41%)</title><rect x="755.7" y="659.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.29%)</title><rect x="757.1" y="643.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="760.2" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="760.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.09%)</title><rect x="760.5" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.17%)</title><rect x="761.5" y="659.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/igorlo/Table.transformRows (24 samples, 0.70%)</title><rect x="763.6" y="707.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.09%)</title><rect x="763.6" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (3 samples, 0.09%)</title><rect x="763.6" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="763.9" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="764.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (12 samples, 0.35%)</title><rect x="764.6" y="691.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (11 samples, 0.32%)</title><rect x="765.0" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.29%)</title><rect x="765.3" y="659.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.29%)</title><rect x="765.3" y="643.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="627.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="771.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="611.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="771.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="595.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="771.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="579.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="771.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="563.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="771.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="547.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="771.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="768.4" y="531.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="771.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.26%)</title><rect x="768.7" y="691.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.26%)</title><rect x="768.7" y="675.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.17%)</title><rect x="769.7" y="659.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.7" y="670.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.06%)</title><rect x="771.1" y="643.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="774.1" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,212 samples, 35.15%)</title><rect x="771.8" y="883.0" width="414.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.8" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.15%)</title><rect x="774.5" y="867.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="777.5" y="878.0"></text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.03%)</title><rect x="774.9" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="777.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.06%)</title><rect x="775.2" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="778.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.03%)</title><rect x="775.9" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="778.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="776.2" y="867.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="779.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.03%)</title><rect x="777.3" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (325 samples, 9.43%)</title><rect x="777.6" y="867.0" width="111.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.6" y="878.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.12%)</title><rect x="780.0" y="851.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.12%)</title><rect x="780.0" y="835.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (314 samples, 9.11%)</title><rect x="781.4" y="851.0" width="107.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.4" y="862.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (8 samples, 0.23%)</title><rect x="785.8" y="835.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="788.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (282 samples, 8.18%)</title><rect x="788.6" y="835.0" width="96.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="791.6" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="788.6" y="819.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="791.6" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="788.6" y="803.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.6" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.09%)</title><rect x="789.3" y="803.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="792.3" y="814.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.09%)</title><rect x="790.3" y="803.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="793.3" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="791.0" y="787.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="794.0" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.09%)</title><rect x="791.3" y="819.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="794.3" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.09%)</title><rect x="792.3" y="819.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="795.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (268 samples, 7.77%)</title><rect x="793.4" y="819.0" width="91.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="796.4" y="830.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (238 samples, 6.90%)</title><rect x="803.6" y="803.0" width="81.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="806.6" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (238 samples, 6.90%)</title><rect x="803.6" y="787.0" width="81.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="806.6" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (213 samples, 6.18%)</title><rect x="812.2" y="771.0" width="72.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="815.2" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (211 samples, 6.12%)</title><rect x="812.9" y="755.0" width="72.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="815.9" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (209 samples, 6.06%)</title><rect x="813.5" y="739.0" width="71.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="816.5" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (181 samples, 5.25%)</title><rect x="823.1" y="723.0" width="62.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="826.1" y="734.0">[unkno..</text>
</g>
<g>
<title>[unknown] (133 samples, 3.86%)</title><rect x="839.6" y="707.0" width="45.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="842.6" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (96 samples, 2.78%)</title><rect x="852.2" y="691.0" width="32.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="855.2" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (78 samples, 2.26%)</title><rect x="858.4" y="675.0" width="26.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="861.4" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (46 samples, 1.33%)</title><rect x="869.3" y="659.0" width="15.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="872.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="883.7" y="643.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="886.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="883.7" y="627.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="886.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="883.7" y="611.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="886.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="883.7" y="595.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="886.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="884.0" y="579.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="887.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="884.0" y="563.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="887.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="884.0" y="547.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="887.0" y="558.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.15%)</title><rect x="885.1" y="835.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="888.1" y="846.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.17%)</title><rect x="886.8" y="835.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="889.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (865 samples, 25.09%)</title><rect x="888.8" y="867.0" width="296.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.8" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="892.9" y="851.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="895.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (846 samples, 24.54%)</title><rect x="894.0" y="851.0" width="289.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.0" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (562 samples, 16.30%)</title><rect x="894.0" y="835.0" width="192.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.0" y="846.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (470 samples, 13.63%)</title><rect x="899.1" y="819.0" width="160.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.1" y="830.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (470 samples, 13.63%)</title><rect x="899.1" y="803.0" width="160.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.1" y="814.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (423 samples, 12.27%)</title><rect x="903.9" y="787.0" width="144.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.9" y="798.0">RequestHandler0_en..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.58%)</title><rect x="903.9" y="771.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="905.6" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="905.6" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.12%)</title><rect x="906.3" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.12%)</title><rect x="906.3" y="739.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (4 samples, 0.12%)</title><rect x="906.3" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.3" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.06%)</title><rect x="907.7" y="755.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="910.7" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="908.3" y="755.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="911.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.15%)</title><rect x="909.0" y="755.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="910.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="910.1" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="910.1" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="910.7" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.entity (401 samples, 11.63%)</title><rect x="911.4" y="771.0" width="137.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.4" y="782.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.12%)</title><rect x="911.4" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.12%)</title><rect x="911.4" y="739.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.12%)</title><rect x="911.4" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="912.8" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="912.8" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService$$Lambda$62/454019155.get$Lambda (2 samples, 0.06%)</title><rect x="912.8" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.23%)</title><rect x="913.5" y="755.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.23%)</title><rect x="913.5" y="739.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/AsyncService.executeAsync (356 samples, 10.32%)</title><rect x="916.2" y="755.0" width="121.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.2" y="766.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (351 samples, 10.18%)</title><rect x="917.9" y="739.0" width="120.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.9" y="750.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (351 samples, 10.18%)</title><rect x="917.9" y="723.0" width="120.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.9" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (349 samples, 10.12%)</title><rect x="917.9" y="707.0" width="119.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.9" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (23 samples, 0.67%)</title><rect x="917.9" y="691.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (23 samples, 0.67%)</title><rect x="917.9" y="675.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (23 samples, 0.67%)</title><rect x="917.9" y="659.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="643.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="927.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="627.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="927.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="611.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="927.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="595.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="927.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="579.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="927.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="563.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="927.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="924.8" y="547.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="927.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.06%)</title><rect x="925.1" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="925.8" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="925.8" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="926.1" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="926.1" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="926.1" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="926.1" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="926.1" y="595.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.1" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="926.1" y="579.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="929.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (324 samples, 9.40%)</title><rect x="926.5" y="691.0" width="110.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.5" y="702.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (324 samples, 9.40%)</title><rect x="926.5" y="675.0" width="110.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.5" y="686.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (324 samples, 9.40%)</title><rect x="926.5" y="659.0" width="110.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.5" y="670.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (267 samples, 7.74%)</title><rect x="946.0" y="643.0" width="91.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.0" y="654.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (267 samples, 7.74%)</title><rect x="946.0" y="627.0" width="91.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.0" y="638.0">jdk/interna..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="947.4" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="950.4" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="947.7" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="950.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="948.0" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.0" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="948.7" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="951.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (52 samples, 1.51%)</title><rect x="949.1" y="611.0" width="17.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="952.1" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.06%)</title><rect x="950.8" y="595.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.8" y="606.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="951.5" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="954.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.09%)</title><rect x="951.8" y="595.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.8" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.09%)</title><rect x="952.8" y="595.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="955.8" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.09%)</title><rect x="953.9" y="595.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="956.9" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.17%)</title><rect x="954.9" y="595.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.9" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="956.9" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="959.9" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (16 samples, 0.46%)</title><rect x="957.3" y="595.0" width="5.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="962.8" y="595.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="965.8" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.06%)</title><rect x="963.1" y="595.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="966.1" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.12%)</title><rect x="963.8" y="595.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="966.8" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.15%)</title><rect x="965.2" y="595.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="968.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="966.9" y="611.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="969.9" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="967.6" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.6" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (203 samples, 5.89%)</title><rect x="967.9" y="611.0" width="69.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="970.9" y="622.0">pthread..</text>
</g>
<g>
<title>[unknown] (190 samples, 5.51%)</title><rect x="972.3" y="595.0" width="65.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="975.3" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (190 samples, 5.51%)</title><rect x="972.3" y="579.0" width="65.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="975.3" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (181 samples, 5.25%)</title><rect x="975.4" y="563.0" width="62.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="978.4" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (179 samples, 5.19%)</title><rect x="976.1" y="547.0" width="61.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="979.1" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (177 samples, 5.13%)</title><rect x="976.8" y="531.0" width="60.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="979.8" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (172 samples, 4.99%)</title><rect x="978.5" y="515.0" width="58.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="981.5" y="526.0">[unkno..</text>
</g>
<g>
<title>[unknown] (158 samples, 4.58%)</title><rect x="983.3" y="499.0" width="54.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="986.3" y="510.0">[unkn..</text>
</g>
<g>
<title>[unknown] (150 samples, 4.35%)</title><rect x="986.0" y="483.0" width="51.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="989.0" y="494.0">[unkn..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="467.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1039.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="451.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="435.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1039.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="419.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="403.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="387.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1039.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1036.0" y="371.0" width="1.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1039.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.06%)</title><rect x="1037.4" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="1037.4" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="1037.4" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.06%)</title><rect x="1037.4" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1037.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.7" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="1037.7" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HashingTopology.isMe (7 samples, 0.20%)</title><rect x="1038.1" y="755.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.20%)</title><rect x="1038.1" y="739.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HashingTopology.primaryFor (24 samples, 0.70%)</title><rect x="1040.4" y="755.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.35%)</title><rect x="1041.1" y="739.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.35%)</title><rect x="1041.1" y="723.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.03%)</title><rect x="1044.9" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/igorlo/HashingTopology.hashCode (10 samples, 0.29%)</title><rect x="1045.2" y="739.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (8 samples, 0.23%)</title><rect x="1045.9" y="723.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="1047.3" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.3" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1048.0" y="707.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1051.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.12%)</title><rect x="1048.7" y="787.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.46%)</title><rect x="1050.0" y="787.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.41%)</title><rect x="1050.7" y="771.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.32%)</title><rect x="1050.7" y="755.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.09%)</title><rect x="1054.5" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.09%)</title><rect x="1054.5" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.09%)</title><rect x="1054.5" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1055.2" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1058.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1055.2" y="691.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1058.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1055.2" y="675.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1058.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.38%)</title><rect x="1055.5" y="787.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.32%)</title><rect x="1055.5" y="771.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.32%)</title><rect x="1055.5" y="755.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.5" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.12%)</title><rect x="1057.2" y="739.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1060.2" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1058.6" y="739.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1061.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.06%)</title><rect x="1059.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (44 samples, 1.28%)</title><rect x="1060.0" y="819.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.0" y="830.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.09%)</title><rect x="1062.0" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1063.0" y="803.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1063.0" y="787.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1066.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1063.0" y="771.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1066.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20 samples, 0.58%)</title><rect x="1063.4" y="803.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.58%)</title><rect x="1063.4" y="787.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.58%)</title><rect x="1063.4" y="771.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.58%)</title><rect x="1063.4" y="755.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (14 samples, 0.41%)</title><rect x="1070.2" y="803.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (33 samples, 0.96%)</title><rect x="1075.0" y="819.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1078.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="1085.3" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="1085.3" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="1085.6" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="1086.3" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (283 samples, 8.21%)</title><rect x="1086.6" y="835.0" width="96.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.6" y="846.0">one/nio/net..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="819.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="803.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1092.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="787.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1092.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="771.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1092.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="755.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1092.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="739.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1092.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1089.4" y="723.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1092.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (273 samples, 7.92%)</title><rect x="1090.1" y="819.0" width="93.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.1" y="830.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.09%)</title><rect x="1095.5" y="803.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1098.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 2.03%)</title><rect x="1096.6" y="803.0" width="23.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1099.6" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (70 samples, 2.03%)</title><rect x="1096.6" y="787.0" width="23.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1099.6" y="798.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (53 samples, 1.54%)</title><rect x="1096.6" y="771.0" width="18.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1099.6" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.23%)</title><rect x="1097.6" y="755.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.6" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="1100.3" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="1101.4" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1104.4" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (15 samples, 0.44%)</title><rect x="1101.7" y="755.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1104.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="739.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1109.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1109.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="707.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1109.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="691.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1109.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="675.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1109.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="659.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1109.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.5" y="643.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1109.5" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="1106.8" y="755.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1109.8" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.49%)</title><rect x="1107.5" y="755.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.5" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.09%)</title><rect x="1108.9" y="739.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.9" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="1109.9" y="739.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.9" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.06%)</title><rect x="1110.6" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="1111.3" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1114.3" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.15%)</title><rect x="1111.6" y="739.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1114.6" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.12%)</title><rect x="1113.3" y="755.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1116.3" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="1114.7" y="771.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1117.7" y="782.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1115.4" y="771.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1118.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.17%)</title><rect x="1115.7" y="771.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>recv (8 samples, 0.23%)</title><rect x="1117.8" y="771.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1120.8" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="1120.5" y="803.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1123.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1120.9" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1123.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1120.9" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1123.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1120.9" y="755.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1123.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1120.9" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1123.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1120.9" y="723.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1123.9" y="734.0"></text>
</g>
<g>
<title>recv (182 samples, 5.28%)</title><rect x="1121.2" y="803.0" width="62.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1124.2" y="814.0">recv</text>
</g>
<g>
<title>[unknown] (163 samples, 4.73%)</title><rect x="1127.7" y="787.0" width="55.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.7" y="798.0">[unkn..</text>
</g>
<g>
<title>[unknown] (163 samples, 4.73%)</title><rect x="1127.7" y="771.0" width="55.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1130.7" y="782.0">[unkn..</text>
</g>
<g>
<title>[unknown] (148 samples, 4.29%)</title><rect x="1132.8" y="755.0" width="50.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1135.8" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (148 samples, 4.29%)</title><rect x="1132.8" y="739.0" width="50.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1135.8" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (144 samples, 4.18%)</title><rect x="1134.2" y="723.0" width="49.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1137.2" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (139 samples, 4.03%)</title><rect x="1135.9" y="707.0" width="47.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1138.9" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (128 samples, 3.71%)</title><rect x="1139.7" y="691.0" width="43.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1142.7" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (104 samples, 3.02%)</title><rect x="1147.9" y="675.0" width="35.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1150.9" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (85 samples, 2.47%)</title><rect x="1154.4" y="659.0" width="29.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1157.4" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (60 samples, 1.74%)</title><rect x="1163.0" y="643.0" width="20.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1166.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.99%)</title><rect x="1171.9" y="627.0" width="11.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1174.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.52%)</title><rect x="1177.3" y="611.0" width="6.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1180.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="1182.5" y="595.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1185.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1182.8" y="579.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1182.8" y="563.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1185.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1183.2" y="547.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1186.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1183.2" y="531.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1186.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1183.2" y="515.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1186.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1183.2" y="499.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1186.2" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.12%)</title><rect x="1183.5" y="851.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="1183.8" y="835.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1186.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1184.5" y="835.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1184.5" y="819.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1187.5" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.15%)</title><rect x="1184.9" y="867.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1184.9" y="851.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.12%)</title><rect x="1185.2" y="851.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1188.2" y="862.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.12%)</title><rect x="1185.2" y="835.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1188.2" y="846.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.29%)</title><rect x="1186.6" y="883.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.29%)</title><rect x="1186.6" y="867.0" width="3.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.29%)</title><rect x="1186.6" y="851.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.03%)</title><rect x="1186.6" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.03%)</title><rect x="1186.6" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.6" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.03%)</title><rect x="1186.6" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1186.6" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1186.6" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="1186.6" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.03%)</title><rect x="1186.6" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.06%)</title><rect x="1186.9" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.06%)</title><rect x="1186.9" y="819.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.9" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.06%)</title><rect x="1186.9" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.06%)</title><rect x="1186.9" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.9" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.06%)</title><rect x="1186.9" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.06%)</title><rect x="1186.9" y="755.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.06%)</title><rect x="1186.9" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.06%)</title><rect x="1186.9" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.03%)</title><rect x="1186.9" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.9" y="718.0"></text>
</g>
<g>
<title>jmpDirNode::oper_input_base() const (1 samples, 0.03%)</title><rect x="1187.3" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.03%)</title><rect x="1187.6" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (6 samples, 0.17%)</title><rect x="1187.9" y="835.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (4 samples, 0.12%)</title><rect x="1187.9" y="819.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.03%)</title><rect x="1188.3" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.3" y="814.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (2 samples, 0.06%)</title><rect x="1188.6" y="803.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (2 samples, 0.06%)</title><rect x="1188.6" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.03%)</title><rect x="1189.0" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.03%)</title><rect x="1189.3" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>Thread::muxRelease(long volatile*) (1 samples, 0.03%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
</g>
</svg>
